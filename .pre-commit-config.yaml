#
# This is the configuration file for the pre-commit framework.
# To use this you need to install it separately and activate it for your repository.
# To do so issue the following commands:
#
#     pip3 install pre-commit
#
# and in your repository
#
#     pre-commit install
#
# That's it. You're done.
#
default_stages:
    - commit
    - push
    - manual
repos:
    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v4.6.0
      hooks:
          - id: trailing-whitespace
          - id: check-merge-conflict
            types: [file]
          - id: check-yaml # pre-commit cannot parse utf-16 files
            exclude: |
                (?x)(
                    ^agents/wnx/test_files/config/check_mk_dev_malformed.yml|
                    ^agents/wnx/test_files/config/check_mk_dev_utf16.yml
                )
          - id: end-of-file-fixer
            exclude: .werks/.*
          - id: fix-encoding-pragma
            args: ["--remove"]
            exclude: |
                (?x)^(
                    ^agents/plugins/|
                    ^non-free/cmk-update-agent/|
                    ^tests/agent-plugin-unit/
                )
    - repo: https://github.com/gitleaks/gitleaks
      rev: v8.16.1
      hooks:
          - id: gitleaks
    - repo: local
      hooks:
          - id: check-cmk-namespace
            name: Check cmk namespace package
            language: script
            entry: scripts/check-cmk-namespace
            types: [file, python]
            require_serial: true
          - id: bandit
            name: Run bandit
            # -l level low -ll = level medium -lll level high
            entry: scripts/run-uvenv bandit --config bandit.yaml -ll
            language: script
            types: [file, python]
            require_serial: true
          - id: omd-python-modules
            name: Check Python modules in OMD
            entry: scripts/check-omd-python-modules
            language: script
            files: omd/packages/python3?-modules
            types: [file]
            require_serial: true
          - id: sphinx
            name: Sphinx Documentation
            entry: make -C doc/documentation html
            files: ^doc/documentation/.*(rst|puml)$
            pass_filenames: false
            language: script
            types: [file]
            require_serial: true
          - id: doctest
            name: Doctests
            entry: scripts/run-doctests
            language: script
            types: [file, python]
            verbose: true
            require_serial: true
          - id: ruff-lint
            name: Lint code with ruff
            entry: scripts/run-uvenv ruff check --fix
            language: script
            types: [file, python]
            require_serial: true
          - id: ruff-format
            name: Format code with ruff
            entry: scripts/run-uvenv ruff format
            language: script
            types: [file, python]
            require_serial: true
          - id: mypy
            name: Check types with mypy
            entry: scripts/run-mypy
            language: script
            types: [file, python]
            require_serial: true
          - id: licence
            name: Check licence headers
            entry: scripts/check-licence
            language: script
            types: [file, python]
            require_serial: true
          - id: absolute-imports
            name: Check absolute imports
            entry: scripts/check-absolute-imports.py
            language: script
            types: [file, python]
            require_serial: true
          - id: unittest
            name: unittests
            entry: scripts/run-unittests
            language: script
            types: [file, python]
            require_serial: true
            verbose: true
          - id: buildifier_format
            name: Format bazel files
            entry: scripts/run-buildifier
            language: script
            types: ["bazel", "file", "non-executable", "text"]
            verbose: true
            require_serial: true
          - id: buildifier_lint
            name: Lint bazel files
            entry: scripts/run-buildifier
            args: ["--lint=warn"]
            language: script
            types: ["bazel", "file", "non-executable", "text"]
            verbose: true
            require_serial: true
          - id: requirements-locking
            name: requirements locking
            entry: bazel test //:requirements_test
            pass_filenames: false
            language: system
            files: ^requirements.*\.txt$
            verbose: true
            require_serial: true
          - id: taplo
            name: format pyproject.toml
            entry: bazel run //bazel/tools:taplo_bin -- format pyproject.toml
            pass_filenames: false
            language: system
            verbose: true
            require_serial: true
