#
# This is the configuration file for the pre-commit framework.
# To use this you need to install it seperately and activate it for your repository.
# To do so issue the following commands:
#
#     pip3 install pre-commit
#
# and in your repository
#
#     pre-commit install
#
# That's it. You're done.
#
default_stages:
    - commit
    - push
    - manual
repos:
    - repo: https://github.com/charliermarsh/ruff-pre-commit
      rev: 'v0.4.4'
      hooks:
        - id: ruff
    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v4.6.0
      hooks:
          - id: trailing-whitespace
          - id: check-merge-conflict
            types: [file]
          - id: check-yaml
          - id: end-of-file-fixer
            exclude: .werks/.*
          - id: fix-encoding-pragma
            args: ["--remove"]
            exclude: |
                (?x)^(
                    ^agents/plugins/|
                    ^non-free/cmk-update-agent/|
                    ^tests/agent-plugin-unit/
                )
    - repo: local
      hooks:
          - id: check-cmk-namespace
            name: Check cmk namespace package
            language: script
            entry: scripts/check-cmk-namespace
            types: [file, python]
          - id: remove-stale-imports
            name: Remove stale imports
            language: script
            entry: scripts/run-autoflake
            types: [file, python]
          - id: isort
            name: Run isort
            entry: scripts/run-isort
            language: script
            types: [file, python]
          - id: black
            name: Run black
            entry: scripts/run-black
            language: script
            types: [file, python]
          - id: bandit
            name: Run bandit
            # -l level low -ll = level medium -lll level high
            entry: scripts/run-pipenv run bandit --config bandit.yaml -ll
            language: script
            types: [file, python]
          - id: omd-python-modules
            name: Check Python modules in OMD
            entry: scripts/check-omd-python-modules
            language: script
            files: omd/packages/python3?-modules
            types: [file]
          - id: sphinx
            name: Sphinx Documentation
            entry: scripts/run-pipenv run make -C doc/documentation html
            files: ^doc/documentation/.*(rst|puml)$
            pass_filenames: false
            language: script
            types: [file]
          - id: pylint
            name: Check pylint
            entry: scripts/check-pylint
            language: script
            types: [file, python]
          - id: doctest
            name: Doctests
            entry: scripts/run-doctests
            language: script
            types: [file, python]
            verbose: true
          - id: mypy
            name: Check types with mypy
            entry: scripts/run-mypy
            language: script
            types: [file, python]
          - id: licence
            name: Check licence headers
            entry: scripts/check-licence
            language: script
            types: [file, python]
          - id: absolute-imports
            name: Check absolute imports
            entry: scripts/check-absolute-imports.py
            language: script
            types: [file, python]
          - id: flake8
            name: Check flake8
            entry: scripts/check-flake8
            language: script
            types: [file, python]
            verbose: true
          - id: unittest
            name: unittests
            entry: scripts/run-unittests
            language: script
            types: [file, python]
            verbose: true
