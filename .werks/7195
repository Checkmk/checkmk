Title: Jira: Notification plugin
Level: 2
Component: notifications
Compatible: compat
Edition: cee
Version: 1.6.0b1
Date: 1551901386
Class: feature

Check_MK now supports integration with Jira.
You can create issues for Host an Service Problems and optional set a resolution on recovery notifications.

In Jira you have to add two custom fields to your project screen as described <a href="https://confluence.atlassian.com/adminjiraserver/adding-a-custom-field-938847222.html">here</a>.

In Check_MK, under "WATO - Notifications", create a new notification rule and select Jira.

Parameters to set:
LI:JIRA URL: The URL to your Jira environment
LI:User Name: Jira username
LI:Password: Jira password
LI:Project ID: The Project ID the issues should be created in
LI:Issue type ID: The issue type ID
LI:Host custom field ID: The first custom field ID you created in Jira
LI:Service custom field ID: The second custom field ID you created in Jira
LI:Monitoring URL: URL of your Check_MK environment to create hyperlinks back to Check_MK (eg. https://server/site)
LI:Priority ID: The priority ID (optional)
LI:Summary for host notifications: The summary the created host issue should use (optional)
LI:Summary for service notifications: The summary the created service issue shoud use (optional)
LI:Label: Label for Jira issues. If not set, 'monitoring' will be used. (optional)
LI:Activate resultion with following resolution transistion ID: If set, the created issue will be resolved with the configured resolution ID (optional)
LI:Set optional timeout for connections to JIRA: Timeout in seconds, default is 10 (optional)

You need different Jira IDs to open/resolve issues. There are different ways to get this IDs:
LI: <a href="https://confluence.atlassian.com/jirakb/how-to-get-project-id-from-the-jira-user-interface-827341414.html">Jira_support</a>
LI: Retrieve with the a script (example: project_id):

F+:example_script.py
#!/usr/bin/env python

import requests

USER = "JIRA_USERNAME"
PW = "JIRA_PASSWORD"
PROJECT_KEY = "JIRA_PROJECT_NAME"
JIRA_SERVER = "https://jira.server.your-domain.de"

sess = requests.Session()
sess.auth = (USER, PW)
resp = sess.get("%s/rest/api/2/project" % JIRA_SERVER, verify=False)

project_id = [item["id"] for item in resp.json() if item["key"] == PROJECT_KEY][0]
print(project_id)
F-:

For issuetype and priority ID use:

F+:example_script.py
resp = sess.get("%s/rest/api/2/issuetype" % JIRA_SERVER)
resp = sess.get("%s/rest/api/2/priority" % JIRA_SERVER)
F-:

More information about the Jira API can be found <a href "https://docs.atlassian.com/software/jira/docs/api/REST/7.12.0">here</a>.

CMK-1185
