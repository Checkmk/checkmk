# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2020             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# This is an example configuration for the mk_filestats plugin.
# To get an extensive elaboration on these values, run "mk_filestats.py --help"
[DEFAULT]
# This section is optional. You can use it to set default options,
# which are applied to all sections. In particular, you can
# override the hard coded default of "output: file_stats"
output: count_only

[aix agent files]
# The section name will be used as the item name by Check_MK
# get all files in agent dir
input_patterns: ~/git/check_mk/agents/
#   - "~" will be expanded (using os.path.expanduser)
#   - ommiting the last slash and/or adding an asterisk changes nothing
#   - we process anything that is matched by the above *globbing*
#     pattern. If it's a directory, recursively process all of
#     its content.
#
# filter for files ending in ".aix"
filter_regex: .*\.aix
#   - also available: filter_regex_inverse
#   - regex filters are applied first
#
# filter for files smaller than 1MB and at least one hour old
filter_size: <1048576
filter_age: >=3600
# choose the type of output aggregation:
output: file_stats
#  - display the full file stats (which is the default)
#  - also available: count_only, extremes_only

[$ection with funny characters %s &! (count files in ~)]
# get all files in my home directory
input_patterns: ~
# don't filter them at all
# these are a lot, just report the count
output: count_only

[log files]
input_patterns: "/path/with space/*.log" /var/log
# the globbing pattern /var/log/*.log would only match
# top level logfiles, we want all of them, so filter by regex
filter_regex: .*\.log
# only report oldest/newest/smallest/largest
output: extremes_only
