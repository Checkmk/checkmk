#!/usr/bin/ksh
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

export PATH=$PATH:/usr/sbin:/usr/bin:/usr/contrib/bin

export MK_LIBDIR="/usr/lib/check_mk_agent"
export MK_CONFDIR="/etc/check_mk"

# Optionally set a tempdir for all subsequent calls
#export TMPDIR=

# All executables in PLUGINSDIR will simply be executed and their
# ouput appended to the output of the agent. Plugins define their own
# sections and must output headers with '<<<' and '>>>'
PLUGINSDIR=$MK_LIBDIR/plugins

# All executables in LOCALDIR will by executabled and their
# output inserted into the section <<<local>>>. Please
# refer to online documentation for details about local checks.
LOCALDIR=$MK_LIBDIR/local

# close standard input (for security reasons) and stderr
if [ "$1" = -d ]
then
    set -xv
else
    exec </dev/null 2>/dev/null
fi


echo "<<<check_mk>>>"
echo "Version: 2.0.0i2"
echo "AgentOS: hpux"
echo "Hostname: $(hostname)"
echo "AgentDirectory: $MK_CONFDIR"
echo "DataDirectory: $MK_VARDIR"
echo "SpoolDirectory: $SPOOLDIR"
echo "PluginsDirectory: $PLUGINSDIR"
echo "LocalDirectory: $LOCALDIR"

# Filesystems. HP-UX does not provide a filesystem type. We assume
# modern systems with vxfs only here. The filesystem type is currently
# not used by the check anyway.
echo '<<<df>>>'
df -kP | sed 's/ / - /' | awk '/^(.*-.*)$/ { print $0 } /^([^-]+)$/ { printf $0 }' | grep -Ev "^/proc|^Filesystem|^/aha|:"

# Process table: HP-UX does not provide a resident size of processes.
# We send a 0 here for RSZ.
echo '<<<ps>>>'
UNIX95=yes ps -ef -o user,vsz,pcpu,args | sed -e 1d -e 's/ *\([^ ]*\) *\([^ ]*\) *\([^ ]*\) */(\1,\2,0,\3) /'


echo '<<<hpux_cpu>>>'
uptime
# machinfo is unsupported addon thus not in $PATH
/usr/contrib/bin/machinfo | grep -E 'logical proc|core' | tail -1

# Several machine performance counters
echo '<<<hpux_vmstat>>>'
vmstat -s

# Memory information
echo '<<<hpux_mem>>>'
machinfo | grep ^Memory
vmstat | sed -n 3p

# TCP connection states
echo '<<<tcp_conn_stats>>>'
netstat -f inet -n | awk ' /^tcp/ { c[$6]++; } END { for (x in c) { print x, c[x]; } }'

# Network interfaces
echo '<<<hpux_if>>>'
for nic in `nwmgr -g | sed -n '/^lan/s/\(^[^ ]* \).*/\1/p'`
do
    nwmgr -g --st mib -c $nic
done

# Logical Volume Manager
echo '<<<hpux_lvm:sep(58)>>>'
/sbin/vgdisplay -v -F

# Multipathing
echo '<<<hpux_multipath>>>'
scsimgr lun_map | egrep '^[[:space:]]*(LUN PATH|State|World Wide Identifier)'

echo '<<<hpux_serviceguard:sep(124)>>>'
if type cmviewcl >/dev/null 2>&1
then
    cmviewcl -v -f line | grep summary
fi

echo '<<<ntp>>>'
# remove heading, make first column space separated
ntpq -np | sed -e 1,2d -e 's/^\(.\)/\1 /' -e 's/^ /%/'


# Kernel tunnables
if type kcusage >/dev/null 2>&1
then
    echo '<<<hpux_tunables>>>'
    kcusage -l
fi


# State of FC HBAs
fcms_util=/opt/fcms/bin/fcdutil
echo '<<<hpux_hbahealth:sep(61)>>>'
for hba in /dev/fcd* ; do
    echo "$hba"
    $fcms_util $hba | grep -e "Driver state" -e "Topology" -e "Dump Available"\
                      -e "Code version" -e "Hardware Path" -e "Port World"
done

# Libelle Business Shadow
if type trd >/dev/null 2>&1
then
  echo '<<<libelle_business_shadow:sep(58)>>>'
  trd -s
fi


# Einbinden von lokalen Plugins, die eine eigene Sektion ausgeben
if cd $PLUGINSDIR
then
  for skript in $(ls)
  do
    if [ -x "$skript" ] ; then
        ./$skript
    fi
  done
fi


# Lokale Einzelchecks
echo '<<<local:sep(0)>>>'
if cd $LOCALDIR
then
  for skript in $(ls)
  do
    if [ -x "$skript" ] ; then
        ./$skript
    fi
  done
fi


# MK's Remote Plugin Executor
if [ -f "$MK_CONFDIR/mrpe.cfg" ]
then
    echo '<<<mrpe>>>'
    grep -Ev '^[[:space:]]*($|#)' "$MK_CONFDIR/mrpe.cfg" | \
    while read descr cmdline
    do
        PLUGIN=${cmdline%% *}
        OUTPUT=$(eval "$cmdline")
        echo "(${PLUGIN##*/}) $descr $? $OUTPUT" | tr \\n \\1
        echo
    done
fi
