#!/bin/bash
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# Run and *send* only once every 4 hours
INTERVAL=14400

FLAGFILE=$MK_VARDIR/mk_inventory.last.$REMOTE
NOW=$(date +%s)
UNTIL=$((NOW + INTERVAL + 600))

#check if flagfile exits
if [ -e "$FLAGFILE" ]; then
    LAST_RUN=$(cat $FLAGFILE)
else
    #First run of the script
    LAST_RUN=0
fi

if [ $(( NOW - LAST_RUN )) -ge $INTERVAL ]
then
    echo $NOW > $FLAGFILE

    # List of installed AIX packages
    if type lslpp >/dev/null; then
        echo "<<<aix_packages:sep(58):persist($UNTIL)>>>"
        lslpp -c -L
    fi

    if type oslevel > /dev/null; then
        # base level of the system
        echo "<<<aix_baselevel:persist($UNTIL)>>>"
        oslevel

        # list the known service packs on a system
        echo "<<<aix_service_packs:persist($UNTIL)>>>"
        oslevel -sq
    fi

    if type lparstat > /dev/null; then
        echo "<<<aix_lparstat_inventory:sep(0):persist($UNTIL)>>>"
        lparstat -i
    fi

    # If you run the prtconf command without any flags, it displays the system model, machine serial,
    # processor type, number of processors, processor clock speed, cpu type, total memory size, network information, filesystem
    # information, paging space information, and devices information.
    if type prtconf >/dev/null ; then
        echo "<<<prtconf:sep(58):persist($UNTIL)>>>"
        prtconf
    fi

    # Enhanced by Markus GÃ¤lli 
    # markus.gaelli@swisscom.com 
    # Swisscom (Schweiz) AG 
    # March 2020
    #
    # prtconf does not provide detailed information about volume groups.
    # The following command does though:
    # `(lsvg | lsvg -i -l -L  2>/dev/null)`
    # Please refer to https://www.ibm.com/support/knowledgecenter/ssw_aix_71/l_commands/lsvg.html
    # 
    # Note that `lsvg` itself just spits out the names of the volume groups.
    # lsvg -i in turn reads in names of volume groups from stdin.
    # 
    # The `l` parameter lists the following information for each logical volume within 
    # the group specified by the volumegroup parameter:
    # - LV
    # A logical volume within the volume group.
    # - Type
    # Logical volume type.
    # - LPs
    # Number of logical partitions in the logical volume.
    # - PPs
    # Number of physical partitions used by the logical volume.
    # - PVs
    # Number of physical volumes used by the logical volume.
    # - Logical volume state
    # State of the logical volume. Opened/stale indicates the logical volume is open but contains partitions that are not current. Opened/syncd indicates the logical volume is open and synchronized. Closed indicates the logical volume has not been opened.
    # - Mount point
    # File system mount point for the logical volume, if applicable.
    #
    # The `L` parameter specifies no waiting to obtain a lock on the Volume group.
    # Note : If the volume group is being changed, using the -L flag gives unreliable data.
    #
    # In principle we just want to export the result of this combined lsvg script.
    # 
    # But `lsvg -l` is made for human readability, not so much for check_mk:
    # It is yielding fixed width tables for results, where empty elements are
    # just replaced by empty spaces.
    # So far we only had this situation for "TYPE" which could be empty 
    # We leave this to the parser to handle, hence the separator 
    # is :sep(0) in order to get the raw lines.
    
    if type lsvg > /dev/null; then
        echo "<<<aix_lsvg_all:sep(0):persist($UNTIL)>>>"
        echo "[Volume_Groups_Active]"
        lsvg -o
        echo "[Volume_Groups_Details]"
        lsvg | lsvg -i -l -L 2>/dev/null
    fi
fi