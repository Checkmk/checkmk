#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Lists all domains configured in plesk
#
# <<<plesk_domains>>>
# <domain>

import sys
import MySQLdb

try:
    db = MySQLdb.connect(
        host='localhost',
        db='psa',
        user='admin',
        passwd=open('/etc/psa/.psa.shadow').read().strip(),
        charset='utf8',
    )
except MySQLdb.Error as e:  # pylint: disable=no-member
    sys.stderr.write("MySQL-Error %d: %s\n" % (e.args[0], e.args[1]))
    sys.exit(1)

cursor = db.cursor()
cursor.execute('SELECT name FROM domains')
sys.stdout.write('<<<plesk_domains>>>\n')
sys.stdout.write("%s\n" % '\n'.join([d[0] for d in cursor.fetchall()]))
cursor.close()
