module(
    name = "gazelle",
    # Updated by the Publish to BCR app.
    version = "0.45.0",
    repo_name = "bazel_gazelle",
)

bazel_dep(name = "bazel_features", version = "1.9.1")
bazel_dep(name = "bazel_skylib", version = "1.5.0")
bazel_dep(name = "protobuf", version = "3.19.6", repo_name = "com_google_protobuf")
bazel_dep(name = "rules_cc", version = "0.0.17")
bazel_dep(name = "rules_go", version = "0.53.0", repo_name = "io_bazel_rules_go")
bazel_dep(name = "rules_license", version = "1.0.0")
bazel_dep(name = "package_metadata", version = "0.0.5")
bazel_dep(name = "rules_proto", version = "4.0.0")
bazel_dep(name = "rules_shell", version = "0.2.0")

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")

# Known to exist since it is instantiated by rules_go itself.
use_repo(
    go_sdk,
    "go_host_compatible_sdk_label",
)

non_module_deps = use_extension("//internal/bzlmod:non_module_deps.bzl", "non_module_deps")
use_repo(
    non_module_deps,
    "bazel_gazelle_go_repository_cache",
    "bazel_gazelle_go_repository_tools",
    "bazel_gazelle_is_bazel_module",
)

go_deps = use_extension("//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_bazelbuild_buildtools",
    "com_github_bmatcuk_doublestar_v4",
    "com_github_fsnotify_fsnotify",
    "com_github_google_go_cmp",
    "com_github_pmezard_go_difflib",
    "org_golang_x_mod",
    "org_golang_x_sync",
    "org_golang_x_tools_go_vcs",
    # Referenced by `gazelle_binary`.
    "bazel_gazelle_go_repository_config",
    # Dependencies of rules_go that require special handling in go_deps.
    "com_github_golang_protobuf",
    "org_golang_google_protobuf",
)

bazel_dep(name = "bazel_skylib_gazelle_plugin", version = "1.4.1", dev_dependency = True)
bazel_dep(name = "stardoc", version = "0.6.2", dev_dependency = True, repo_name = "io_bazel_stardoc")

go_sdk_dev = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk", dev_dependency = True)
go_sdk_dev.download(version = "1.23.3")

# Used by compatibility tests, keep as low as possible.
go_sdk_dev.download(version = "1.22.9")

# Known to exist since it is instantiated by rules_go itself.
use_repo(
    go_sdk_dev,
    go_sdk = "go_default_sdk",
)
