From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Sven Panne <svenpanne@gmail.com>
Date: Fri, 2 Aug 2024 13:53:02 +0200
Subject: Make IWYU executable configurable


diff --git BUILD.bazel BUILD.bazel
index 5719fae..5325b13 100644
--- BUILD.bazel
+++ BUILD.bazel
@@ -2,6 +2,16 @@ load("@bazel_skylib//rules:common_settings.bzl", "string_list_flag")
 
 package(default_visibility = ["//visibility:public"])
 
+filegroup(
+    name = "iwyu_executable_default",
+    srcs = [],  # empty list: system IWYU
+)
+
+label_flag(
+    name = "iwyu_executable",
+    build_setting_default = ":iwyu_executable_default",
+)
+
 label_flag(
     name = "iwyu_mappings",
     build_setting_default = ":iwyu_mappings_default",
diff --git bazel/iwyu/BUILD.bazel bazel/iwyu/BUILD.bazel
index 403135e..582e205 100644
--- bazel/iwyu/BUILD.bazel
+++ bazel/iwyu/BUILD.bazel
@@ -3,9 +3,9 @@ package(default_visibility = ["//visibility:public"])
 sh_binary(
     name = "run_iwyu",
     srcs = ["run_iwyu.sh"],
-    data = [
-        "@iwyu_prebuilt_pkg//:bin/include-what-you-use",
-        "@iwyu_prebuilt_pkg//:include",
-    ],
+    # data = [
+    #     "@iwyu_prebuilt_pkg//:bin/include-what-you-use",
+    #     "@iwyu_prebuilt_pkg//:include",
+    # ],
     deps = ["@bazel_tools//tools/bash/runfiles"],
 )
diff --git bazel/iwyu/iwyu.bzl bazel/iwyu/iwyu.bzl
index 8a27f21..ec9b3fd 100644
--- bazel/iwyu/iwyu.bzl
+++ bazel/iwyu/iwyu.bzl
@@ -19,7 +19,7 @@ def _is_cpp_target(srcs):
 def _is_cuda_target(srcs):
     return any([src.extension in _CUDA_EXTENSIONS for src in srcs])
 
-def _run_iwyu(ctx, iwyu_executable, iwyu_mappings, iwyu_options, flags, target, infile):
+def _run_iwyu(ctx, wrapper, exe, iwyu_mappings, iwyu_options, flags, target, infile):
     compilation_context = target[CcInfo].compilation_context
     outfile = ctx.actions.declare_file(
         "{}.{}.iwyu.txt".format(target.label.name, infile.basename),
@@ -27,6 +27,13 @@ def _run_iwyu(ctx, iwyu_executable, iwyu_mappings, iwyu_options, flags, target,
 
     # add args specified by iwyu_options, the toolchain, on the command line and rule copts
     args = ctx.actions.args()
+
+    # this is consumed by the wrapper script
+    if len(exe.files.to_list()) == 0:
+        args.add("include-what-you-use")
+    else:
+        args.add(exe.files_to_run.executable)
+
     args.add(outfile)
 
     args.add_all(iwyu_options, before_each = "-Xiwyu")
@@ -59,7 +66,7 @@ def _run_iwyu(ctx, iwyu_executable, iwyu_mappings, iwyu_options, flags, target,
     args.add(infile)
 
     inputs = depset(
-        direct = [infile] + iwyu_mappings,
+        direct = [infile] + iwyu_mappings + ([exe.files_to_run.executable] if exe.files_to_run.executable else []),
         transitive = [compilation_context.headers],
     )
 
@@ -68,7 +75,7 @@ def _run_iwyu(ctx, iwyu_executable, iwyu_mappings, iwyu_options, flags, target,
         inputs = inputs,
         outputs = [outfile],
         arguments = [args],
-        executable = iwyu_executable,
+        executable = wrapper,
         # It seems no-sandbox was required for x-compilation support
         execution_requirements = {
             "no-sandbox": "1",
@@ -143,7 +150,8 @@ def _iwyu_aspect_impl(target, ctx):
     if len(srcs) == 0 or _is_cuda_target(srcs):
         return []
 
-    iwyu_executable = ctx.attr._iwyu_executable.files_to_run
+    wrapper = ctx.attr._iwyu_wrapper.files_to_run
+    exe = ctx.attr._iwyu_executable
     iwyu_mappings = ctx.attr._iwyu_mappings.files.to_list()
     iwyu_options = ctx.attr._iwyu_opts[BuildSettingInfo].value
 
@@ -157,7 +165,7 @@ def _iwyu_aspect_impl(target, ctx):
     all_flags = _safe_flags(toolchain_flags + rule_flags)
 
     outputs = [
-        _run_iwyu(ctx, iwyu_executable, iwyu_mappings, iwyu_options, all_flags, target, src)
+        _run_iwyu(ctx, wrapper, exe, iwyu_mappings, iwyu_options, all_flags, target, src)
         for src in srcs
     ]
     return [
@@ -172,7 +180,8 @@ iwyu_aspect = aspect(
         "_cc_toolchain": attr.label(
             default = Label("@bazel_tools//tools/cpp:current_cc_toolchain"),
         ),
-        "_iwyu_executable": attr.label(default = Label("//bazel/iwyu:run_iwyu")),
+        "_iwyu_wrapper": attr.label(default = Label("//bazel/iwyu:run_iwyu")),
+        "_iwyu_executable": attr.label(default = Label("//:iwyu_executable")),
         "_iwyu_mappings": attr.label(default = Label("//:iwyu_mappings")),
         "_iwyu_opts": attr.label(default = Label("//:iwyu_opts")),
     },
diff --git bazel/iwyu/run_iwyu.sh bazel/iwyu/run_iwyu.sh
index fa37761..2c887ae 100755
--- bazel/iwyu/run_iwyu.sh
+++ bazel/iwyu/run_iwyu.sh
@@ -25,12 +25,13 @@ set -euo pipefail
 readonly RED='\033[0;31m'
 readonly RESET='\033[0m'
 
-IWYU_BINARY="$(rlocation iwyu_prebuilt_pkg/bin/include-what-you-use)"
-
 function error() {
   (echo >&2 -e "${RED}[ERROR]${RESET} $*")
 }
 
+IWYU_BINARY="$1"
+shift
+
 OUTPUT="$1"
 shift
 
-- 
2.40.1

