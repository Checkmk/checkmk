#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

import argparse
import logging
import sys
from typing import NoReturn

try:
    import cmk.base.utils  # pylint: disable=cmk-module-layer-violation
    import cmk.fetchers.controller as controller  # pylint: disable=cmk-module-layer-violation
except ImportError as e:
    sys.stderr.write("Fetcher can be used only as site user.\n")
    sys.exit(1)

opt_debug = False

logger = logging.getLogger("cmk.base")
cmk.base.utils.register_sigint_handler()


class ArgumentParser(argparse.ArgumentParser):
    def error(self, message):
        # type: (str) -> NoReturn
        """fetcher output is always protocol compatible, even when arguments are bad"""

        sys.stdout.write(
            controller.make_failure_answer("\n" + message + '\n' + self.format_help(), "main"))
        self.exit(21)


def parse_arguments():
    # type: () -> argparse.Namespace
    parser = ArgumentParser()

    parser.add_argument(
        "--debug",
        action="store_true",
        help="Enable debug mode",
    )
    parser.add_argument("serial", type=str)
    parser.add_argument("host", type=str)
    parser.add_argument("timeout", type=int)

    return parser.parse_args()


def main():
    # type: () -> int

    try:
        args = parse_arguments()
        return controller.run(serial=args.serial, host=args.host, timeout=args.timeout)

    # NOTE: Yes, this is too common. But at this moment we have no chance to provide better method.
    except Exception as e:
        sys.stdout.write(controller.make_failure_answer(str(e), "main"))
        return 15


if __name__ == "__main__":
    sys.exit(main())
