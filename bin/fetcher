#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

import argparse
import logging
import sys
from typing import NoReturn

from cmk.utils.fetcher_crash_reporting import create_fetcher_crash_dump
from cmk.utils.type_defs import HostName

try:
    import cmk.base.utils  # pylint: disable=cmk-module-layer-violation
    import cmk.fetchers.controller as controller  # pylint: disable=cmk-module-layer-violation
except ImportError as e:
    sys.stderr.write("Fetcher can be used only as site user.\n")
    sys.exit(1)

opt_debug = False

logger = logging.getLogger("cmk.base")
cmk.base.utils.register_sigint_handler()


class ArgumentParser(argparse.ArgumentParser):
    def error(self, message: str) -> NoReturn:
        """fetcher output is always protocol compatible, even when arguments are bad"""

        sys.stdout.write(
            controller.make_failure_answer("\n" + message + '\n' + self.format_help(), "main"))
        self.exit(21)


def parse_arguments() -> argparse.Namespace:
    parser = ArgumentParser()

    parser.add_argument(
        "--debug",
        action="store_true",
        help="Enable debug mode",
    )

    return parser.parse_args()


def main() -> int:
    serial = ""
    host_name: HostName = ""
    try:
        args = parse_arguments()
        if args.debug:
            sys.stdout.write(
                "Debug mode is enabled")  # reserved for the future testing(out of Core)

        for line in sys.stdin:
            command = line.rstrip("\n")
            if command == "*":
                break
            serial, host, timeout = command.split(sep=";", maxsplit=2)
            controller.run(serial=serial, host_name=host_name, timeout=int(timeout))

        return 0

    # NOTE: Yes, this is too common. But at this moment we have no chance to provide better method.
    except Exception:
        # reporting to site
        result = create_fetcher_crash_dump(serial=serial, host=host)

        # reporting to check
        sys.stdout.write(controller.make_failure_answer(result, "main"))
        return 15


if __name__ == "__main__":
    sys.exit(main())
