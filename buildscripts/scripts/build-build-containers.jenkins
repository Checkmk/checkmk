def DISTRO_LIST_DEFAULT
def NODE = ''
withFolderProperties{
    DISTRO_LIST_DEFAULT = env.DISTRO_LIST
    NODE = env.BUILD_NODE
}

properties([
  buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '7', numToKeepStr: '14')),
  parameters([
    string(name: 'DISTROS', defaultValue: DISTRO_LIST_DEFAULT, description: 'List of targeted distros' )
   ])
])
def DISTRO_LIST = DISTROS.split(' ')
def DOCKER_BUILDS = [:]

currentBuild.description = 'Building for the following Distros:\n' + DISTRO_LIST
node (NODE) {
    docker.withRegistry(DOCKER_REGISTRY, 'nexus') {
        def COMMON_IMAGE = docker.image('ubuntu-18.04-common')
        COMMON_IMAGE.pull()
        COMMON_IMAGE.inside('-u 0:0 --ulimit nofile=1024:1024 -v /var/run/docker.sock:/var/run/docker.sock --cap-add=SYS_ADMIN') {
            def VERS_TAG
            def BRANCH
            def BRANCH_VERSION
            stage('checkout sources') {
                checkout(scm)
                // Load libraries
                str_mod = load 'buildscripts/scripts/lib/str_mod.groovy'
                versioning = load 'buildscripts/scripts/lib/versioning.groovy'

                // Image Version Tag
                VERS_TAG = versioning.get_docker_tag(scm)
                BRANCH = versioning.get_branch(scm)
                BRANCH_VERSION = versioning.get_branch_version()
            }

            DISTRO_LIST.each { DISTRO ->
                DOCKER_BUILDS[DISTRO] = {
                    def IMAGE
                    stage('build ' + DISTRO) {
                        dir('buildscripts/infrastructure/build-nodes') {
                            def DOCKER_REGISTRY_NOHTTP = str_mod.strip_protocol_from_url(DOCKER_REGISTRY)
                            withCredentials([usernamePassword(credentialsId: 'nexus', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                                IMAGE = docker.build(DISTRO + ':' + VERS_TAG, "--build-arg DOCKER_REGISTRY='$DOCKER_REGISTRY_NOHTTP' --build-arg NEXUS_ARCHIVES_URL='$NEXUS_ARCHIVES_URL' --build-arg DISTRO='$DISTRO' --build-arg NEXUS_USERNAME='$USERNAME' --build-arg NEXUS_PASSWORD='$PASSWORD' --build-arg ARTIFACT_STORAGE='$ARTIFACT_STORAGE' --build-arg VERS_TAG='$VERS_TAG' --build-arg BRANCH_VERSION='$BRANCH_VERSION' -f $DISTRO/Dockerfile .")
                            }
                        }
                    }

                    stage('upload ' + DISTRO) {
                        IMAGE.push()
                        IMAGE.push(BRANCH + '-latest')
                    }
                }
            }
            parallel DOCKER_BUILDS
        }
    }
}
