import java.text.SimpleDateFormat

currentBuild.description = '\nBuilding the CMK docker container\n'

properties([
  parameters([
    string(name: 'EDITION', defaultValue: 'enterprise', description: 'Edition: raw, enterprise or managed' ),
    string(name: 'VERSION', defaultValue: 'daily', description: 'Version: daily builds current git state of the branch. You also can specify a git tag here.' ),
    string(name: 'SET_LATEST_TAG', defaultValue: 'no', description: 'SET_LATEST_TAG: setting yes will push this docker container to the latest tag on docker hub.' )
  ])
])

def dateFormat = new SimpleDateFormat("yyyy.MM.dd")
def date = new Date()
def BRANCH = scm.branches[0].name.replaceAll("/","-")
def CMK_VERS = ''
if(BRANCH == 'master' && VERSION == 'daily') {
    CMK_VERS = dateFormat.format(date)
} else if (VERSION == 'daily') {
    CMK_VERS = BRANCH + '-' + dateFormat.format(date)
} else {
    CMK_VERS = VERSION
}

def PACKAGE_DIR = '/bauwelt/download'
def GPG_KEY_DIR = '/bauwelt/etc/.gnupg'
def RELEASE_KEY_DIR = '/bauwelt/git/release/release.key'

def ARCHIVE_DIR = ''
def DAILY_DATA = ''
if ((scm.branches[0].name == 'master' || scm.branches[0].name ==~ '[0-9]+\\.[0-9]+\\.[0-9]+') && JOB_BASE_NAME == 'nightly_cmk_container') {
    DAILY_DATA = '/var/jenkins_home/daily-data/' + scm.branches[0].name.replaceAll("/","-") + '/' + CMK_VERS
    ARCHIVE_DIR = '/bauwelt/download/' + CMK_VERS
} else {
    DAILY_DATA = '/var/jenkins_home/daily-data/testbuild/' + scm.branches[0].name.replaceAll("/","-") + '/' + CMK_VERS
    ARCHIVE_DIR = DAILY_DATA + '/download'
}


node {
    docker.withRegistry(DOCKER_REGISTRY, 'nexus') {
        IMAGE = 'ubuntu-18.04-common'
        docker.image(IMAGE).pull()
        docker.image(IMAGE).inside("-u 0:0 --ulimit nofile=1024:1024  -v ${PACKAGE_DIR}/${CMK_VERS}:${PACKAGE_DIR}/${CMK_VERS} -v ${DAILY_DATA}:${DAILY_DATA} -v /var/run/docker.sock:/var/run/docker.sock  -v ${GPG_KEY_DIR}:${GPG_KEY_DIR}:ro -v ${RELEASE_KEY_DIR}:${RELEASE_KEY_DIR} -v /root/.cmk-credentials:/root/.cmk-credentials --network ci_local-infra") {
            stage('Build Container') {
               sh """
                   cd ${DAILY_DATA}/git/
                   ./buildscripts/scripts/build-cmk-container.sh ${BRANCH} ${EDITION} ${CMK_VERS} ${SET_LATEST_TAG}
                """
                withCredentials([usernamePassword(credentialsId: '9d7aca31-0043-4cd0-abeb-26a249d68261', passwordVariable: 'GPG_PASSPHRASE', usernameVariable: 'GPG_USERNAME')]) {
                    sh """
                        cd ${PACKAGE_DIR}/${CMK_VERS}
                        rm -f HASHES
                        ${DAILY_DATA}/git/buildscripts/scripts/sign-packages.sh ${CMK_VERS}
                        rsync -av \
                            --exclude '*dbgsym*.deb' \
                            -e "ssh -o StrictHostKeyChecking=no \
                            -i ${RELEASE_KEY_DIR}" \
	                    ${PACKAGE_DIR}/${CMK_VERS} \
	                    bauwelt@mathias-kettner.de:${PACKAGE_DIR}
                    """
                }
            }
        }
    }
}
