# Describes stages for test-gerrit Job

# some thoughts about this file:
# - stages should abort early if semantical condition is not met
# - stages should be sorted by probability to fail * duration
# - `make` is not needed at this level (but make-target could still call validate_changes.py)
# - running inside docker should be optional
# - some variables are not needed
#
# WARNING
#
# ENV_VAR_LIST and SEC_VAR_LIST shall not contain elements with "#", see test-gerrit.groovy
#

VARIABLES:
    - NAME: PATCHSET_REVISION
      # Will be used if not provided by Jenkins
      SH: "git rev-parse HEAD"

    - NAME: BASE_COMMIT_ID
      # Can be provided directly instead of PATCHSET_REVISION in order to compare HEAD against
      # arbitrary refs like `origin/master`
      SH: "git rev-parse ${PATCHSET_REVISION}^"

    - NAME: CHANGED_FILES_REL
      SH: "git diff-tree --no-commit-id --name-only -r ${BASE_COMMIT_ID}..HEAD | sort"

    - NAME: CHANGED_FILES_REL_WITHOUT_DELETED_FILES
      SH: "git --no-pager diff --name-only --diff-filter=d ${BASE_COMMIT_ID}..HEAD | sort"

    - NAME: CHANGED_MAKEFILE
      SH: "echo '${CHANGED_FILES_REL}' | grep '^Makefile' || true"

    - NAME: CHANGED_REFERENCE_IMAGE
      SH: "echo '${CHANGED_FILES_REL}' | grep '^defines/dev-images/reference/Dockerfile' || true"

    - NAME: CHANGED_TESTS_MAKEFILE
      SH: "echo '${CHANGED_FILES_REL}' | grep '^tests/Makefile' || true"

    - NAME: CHANGED_OMDLIB_FILES
      SH: "git diff-tree --no-commit-id --name-only -r ${BASE_COMMIT_ID}..HEAD | grep '^omd/packages/omd/omdlib/\\|^cmk/utils/' || true"

    - NAME: CHANGED_OMDLIB_TESTS
      SH: "git diff-tree --no-commit-id --name-only -r ${BASE_COMMIT_ID}..HEAD | grep '^tests/unit/omdlib/' || true"

    - NAME: CHANGED_PYTHON_FILES
      SH: "git diff-tree --no-commit-id --name-only -r ${BASE_COMMIT_ID}..HEAD | xargs realpath | ${WORKSPACE}/scripts/find-python-files --filter"

    - NAME: CHANGED_SHELL_FILES
      SH: "git diff-tree --no-commit-id --name-only -r ${BASE_COMMIT_ID}..HEAD | xargs realpath | ${WORKSPACE}/scripts/find-shell-files --filter"

    - NAME: CHANGED_GROOVY_FILE
      SH: "echo '${CHANGED_FILES_REL}' | grep '\\.groovy$' || true"

    - NAME: CHANGED_PYPROJECT_TOML_FILE
      SH: "echo '${CHANGED_FILES_REL}' | grep '^pyproject.toml' || true"

    - NAME: CHANGED_PYTHON_REQUIREMENTS
      SH: "echo '${CHANGED_FILES_REL}' | grep 'requirements.txt\\|requirements.in\\|constraints.txt' || true"

    - NAME: CHANGED_BAZEL_MODULES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^MODULE.bazel' || true"

    - NAME: CHANGED_FIND_PYTHON_FILES_SCRIPT
      SH: "echo '${CHANGED_FILES_REL}' | grep '^scripts/find-python-files' || true"

    - NAME: CHANGED_RUN_MYPY_SCRIPT
      SH: "echo '${CHANGED_FILES_REL}' | grep '^scripts/run-mypy' || true"

    - NAME: CHANGED_RUN_UVENV_SCRIPT
      SH: "echo '${CHANGED_FILES_REL}' | grep '^scripts/run-uvenv' || true"

    - NAME: CHANGED_BAZEL_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '\\.bzl$\\|BUILD\\|WORKSPACE' || true"

    - NAME: CHANGED_CMK_BUILD_FILE
      SH: "echo '${CHANGED_FILES_REL}' | grep '^cmk/BUILD' || true"

    - NAME: CHANGED_AGENT_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^agents/' || true"
      REPLACE_NEWLINES: true

    - NAME: CHANGED_AGENT_PLUGINS
      SH: "echo '${CHANGED_FILES_REL}' | grep '^agents/plugins/' || true"
      REPLACE_NEWLINES: true

    - NAME: CHANGED_AGENT_PLUGINS_TESTS
      SH: "echo '${CHANGED_FILES_REL}' | grep '^tests/agent-plugin-unit/' || true"
      REPLACE_NEWLINES: true

    - NAME: CHANGED_CMC_PROTO_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^non-free/packages/cmc-protocols' || true"
      REPLACE_NEWLINES: true

    - NAME: CHANGED_SW_DOC_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep 'doc/documentation/' || true"
      REPLACE_NEWLINES: true

    - NAME: CHANGED_WERK_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^\\.werks/' || true"
      REPLACE_NEWLINES: true

    - NAME: CHANGED_WERK_FILES_WITHOUT_DELETED_WERKS
      SH: "echo '${CHANGED_FILES_REL_WITHOUT_DELETED_FILES}' | grep '^\\.werks/' || true"
      REPLACE_NEWLINES: true

    - NAME: CHANGED_WERK_CODE_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-werks\\|^cmk/utils/werks' || true"
      REPLACE_NEWLINES: true

    - NAME: CHANGED_CHECKMAN_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep 'checkman/' || true"
      REPLACE_NEWLINES: true

    - NAME: CHANGED_SEMGREP_RULE_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^tests/semgrep/rules' || true"

    ########## packages ########################################################

    - NAME: CHANGED_CHECK_CERT_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/check-cert/\\|^requirements/rust' || true"

    - NAME: CHANGED_CHECK_HTTP_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/check-http/\\|^requirements/rust' || true"

    - NAME: CHANGED_MK_SQL_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/mk-sql/\\|^requirements/rust' || true"

    - NAME: CHANGED_MK_ORACLE_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/mk-oracle/\\|^requirements/rust' || true"

    - NAME: CHANGED_CMC_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^non-free/packages/cmc/' || true"

    - NAME: CHANGED_CMK_AGENT_CTL_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-agent-ctl/\\|^requirements/rust' || true"

    - NAME: CHANGED_CMK_AGENT_RECEIVER_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-agent-receiver/' || true"

    - NAME: CHANGED_CMK_CCC_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-ccc/' || true"

    - NAME: CHANGED_CMK_CRYPTO_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-crypto/' || true"

    - NAME: CHANGED_CMK_MESSAGING_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-messaging/' || true"

    - NAME: CHANGED_CMK_MKNOTIFYD_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^non-free/packages/cmk-mknotifyd/' || true"

    - NAME: CHANGED_CMK_MKP_TOOL_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-mkp-tool/' || true"

    - NAME: CHANGED_CMK_EVENTS_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-events/' || true"

    - NAME: CHANGED_CMK_LIVESTATUS_CLIENT_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-livestatus-client/' || true"

    - NAME: CHANGED_CMK_OTEL_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^non-free/packages/cmk-otel-collector/' || true"

    - NAME: CHANGED_CMK_PLUGIN_APIS_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-plugin-apis/' || true"

    - NAME: CHANGED_CMK_RELAY_PROTOCOLS_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-relay-protocols/' || true"

    - NAME: CHANGED_CMK_WERKS_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-werks/' || true"

    - NAME: CHANGED_CMK_TRACE_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-trace/' || true"

    - NAME: CHANGED_CMK_UPDATE_AGENT_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^non-free/packages/cmk-update-agent/' || true"

    - NAME: CHANGED_LIVESTATUS_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/livestatus/' || true"

    - NAME: CHANGED_NEB_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/neb/' || true"

    - NAME: CHANGED_UNIXCAT_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/unixcat/' || true"

    - NAME: CHANGED_FRONTEND_VUE_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-frontend-vue/' || true"

    - NAME: CHANGED_SHARED_TYPING_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-shared-typing/' || true"

    - NAME: CHANGED_CMK_FRONTEND_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^packages/cmk-frontend/' || true"

    - NAME: CHANGED_PROBE_CORE_FILES
      SH: "echo '${CHANGED_FILES_REL}' | grep '^non-free/packages/cmk-relay-engine/' || true"

STAGES:
    - NAME: "Python Typing lib cmk"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES,CHANGED_PYTHON_REQUIREMENTS,CHANGED_TESTS_MAKEFILE,CHANGED_RUN_UVENV_SCRIPT,CHANGED_RUN_MYPY_SCRIPT,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_TRACE_FILES,CHANGED_CMK_CCC_FILES
      DIR: "tests"
      COMMAND: |
          set +e
          make --quiet test-mypy-cmk &> ${RESULTS}/mypy_cmk.txt
          make_rc=$?
          set -e
          cp ../bazel-bin/cmk/lib_cmk_repo_no_meraki.mypy_stdout ${RESULTS}/lib_cmk_repo_no_meraki.txt || :
          exit $make_rc
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Python files changed"
      RESULT_CHECK_TYPE: "MYPY"
      RESULT_CHECK_FILE_PATTERN: "results/lib_cmk_repo_no_meraki.txt"

    - NAME: "Python Typing Agent Cisco Meraki"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES,CHANGED_PYTHON_REQUIREMENTS,CHANGED_TESTS_MAKEFILE,CHANGED_RUN_UVENV_SCRIPT,CHANGED_RUN_MYPY_SCRIPT,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_TRACE_FILES,CHANGED_CMK_CCC_FILES
      DIR: "tests"
      ENV_VARS:
          MYPY_ADDOPTS: "--no-color-output --junit-xml ${RESULTS}/mypy_agent_cisco_meraki.xml --no-incremental"
      COMMAND: "make --quiet test-mypy-agent-cisco-meraki &> ${RESULTS}/mypy_agent_cisco_meraki.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Python files changed"
      RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/mypy_agent_cisco_meraki.xml"

    - NAME: "Python Typing not cmk"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES,CHANGED_PYTHON_REQUIREMENTS,CHANGED_TESTS_MAKEFILE,CHANGED_RUN_UVENV_SCRIPT,CHANGED_RUN_MYPY_SCRIPT,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_TRACE_FILES,CHANGED_CMK_CCC_FILES
      DIR: "tests"
      ENV_VARS:
          MYPY_ADDOPTS: "--no-color-output --junit-xml ${RESULTS}/mypy_not_cmk.xml --no-incremental"
      COMMAND: "make --quiet test-mypy-not-cmk &> ${RESULTS}/mypy_not_cmk.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Python files changed"
      RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/mypy_not_cmk.xml"
      JENKINS_TEST_RESULT_PATH: "testReport/mypy/mypy/"

    - NAME: "Python Format"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES,CHANGED_PYTHON_REQUIREMENTS,CHANGED_PYPROJECT_TOML_FILE,CHANGED_TESTS_MAKEFILE,CHANGED_RUN_UVENV_SCRIPT
      DIR: "tests"
      COMMAND: "make --quiet test-format-python &> ${RESULTS}/python-format.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Python files changed"
      # TODO: Fix the parser: the output contains unrelated C/C++ issues which make the check fail
      # RESULT_CHECK_TYPE: "GCC"
      RESULT_CHECK_FILE_PATTERN: "results/python-format.txt"

    - NAME: "Python Cyclic Dependencies"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_TESTS_MAKEFILE,CHANGED_PYTHON_REQUIREMENTS,CHANGED_CMK_WERKS_FILES,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES,CHANGED_CMK_TRACE_FILES,CHANGED_CMK_CCC_FILES
      DIR: "tests"
      COMMAND: "make test-cycles &> ${RESULTS}/py-import-cycles.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Python files changed"
      RESULT_CHECK_FILE_PATTERN: "results/py-import-cycles.txt"

    - NAME: "omdlib Unit Tests"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_OMDLIB_FILES,CHANGED_OMDLIB_TESTS,CHANGED_CMK_CCC_FILES,CHANGED_CMK_CRYPTO_FILES
      DIR: "tests"
      ENV_VARS:
          PYTEST_ADDOPTS: "--junitxml=${RESULTS}/python3-omdlib-junit.xml --color=no"
      COMMAND: "make --quiet test-unit-omdlib"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No omdlib files changed"
      RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/python3-omdlib-junit.xml"
      # Can't be more specific due to disjunct pytest.tests.unit.omdlib pytest.omd.packages.omd.omdlib
      JENKINS_TEST_RESULT_PATH: "testReport/"

    - NAME: "Python Doc Tests"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES,CHANGED_PYTHON_REQUIREMENTS,CHANGED_PYPROJECT_TOML_FILE,CHANGED_TESTS_MAKEFILE,CHANGED_RUN_UVENV_SCRIPT,CHANGED_CHECKMAN_FILES,CHANGED_CMK_BUILD_FILE,CHANGED_AGENT_FILES,CHANGED_CMK_TRACE_FILES,CHANGED_CMK_CCC_FILES
      DIR: "tests"
      COMMAND: "make test-doctest"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Python files changed"
      # TODO: Fix parsing of result files
      # RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/test-doctest.txt"

    - NAME: "Python Unit Tests"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES,CHANGED_PYTHON_REQUIREMENTS,CHANGED_PYPROJECT_TOML_FILE,CHANGED_TESTS_MAKEFILE,CHANGED_RUN_UVENV_SCRIPT,CHANGED_CHECKMAN_FILES,CHANGED_CMK_BUILD_FILE,CHANGED_AGENT_FILES,CHANGED_CMK_TRACE_FILES,CHANGED_CMK_CCC_FILES
      DIR: "tests"
      COMMAND: |
          set +e
          make test-unit
          make_rc=$?
          set -e
          ../buildscripts/scripts/bazel_test_post_archive_xunit.sh || :
          exit $make_rc
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Python files changed"
      RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/testlogs/tests/**/test.xml"
      # Can't be more specific since currently the test name equals the bazel target
      # eg //tests/unit:repo.tests.unit.checks
      JENKINS_TEST_RESULT_PATH: "testReport/"

    - NAME: "Python License Headers Test"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES
      DIR: "tests"
      ENV_VARS:
          PYTEST_ADDOPTS: "--junitxml=${RESULTS}/python3-license-headers-junit.xml --color=no"
          PYTHON_FILES: "${CHANGED_PYTHON_FILES}"
      COMMAND: "make test-license-headers"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Python files changed"
      RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/python3-license-headers-junit.xml"
      JENKINS_TEST_RESULT_PATH: "testReport/pytest.tests.code_quality/test_license_headers/"

    - NAME: "Python Requirements Test"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYTHON_REQUIREMENTS,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES
      DIR: "tests"
      ENV_VARS:
          PYTEST_ADDOPTS: "--junitxml=${RESULTS}/python3-requirements-junit.xml --color=no"
      COMMAND: "make test-requirements"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "Requirements files not changed"
      RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/python3-requirements-junit.xml"
      JENKINS_TEST_RESULT_PATH: "testReport/pytest.tests.code_quality/test_requirements/"

    - NAME: "Python only Py-Extensions"
      DIR: "tests"
      ENV_VARS:
          PYTEST_ADDOPTS: "--color=no"
      COMMAND: "make test-py-extensions &> ${RESULTS}/python-extensions.txt"
      BAZEL_LOCKS_AMOUNT: 1
      RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/python-extensions.txt"
      JENKINS_TEST_RESULT_PATH: "testReport/pytest.tests.code_quality/test_py_extensions/"

    - NAME: "Python File Content Test"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FILES_REL
      DIR: "tests"
      ENV_VARS:
          PYTEST_ADDOPTS: "--junitxml=${RESULTS}/python3-file-content-junit.xml --color=no"
      # ${CHANGED_FILES_REL} can be huge, so we use a file to transport the list
      # to the pytest command. This will be tidied up with CMK-17048
      COMMAND: |
          CHANGED_FILES_REL_FILE=$(mktemp)
          echo "${CHANGED_FILES_REL}" > $CHANGED_FILES_REL_FILE
          trap "rm -f $CHANGED_FILES_REL_FILE" EXIT
          make test-file-content
      TEXT_ON_SKIP: "No files changed"
      BAZEL_LOCKS_AMOUNT: 1
      RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/python3-file-content-junit.xml"
      JENKINS_TEST_RESULT_PATH: "testReport/pytest.tests.code_quality.file_content/"

    - NAME: "Python Werks Test"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_WERK_FILES
      DIR: "tests"
      GIT_FETCH_TAGS: true
      ENV_VARS:
          PYTEST_ADDOPTS: "--junitxml=${RESULTS}/python3-werks-junit.xml --color=no"
      COMMAND: "make test-werks"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Werk files changed"
      RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/python3-werks-junit.xml"
      JENKINS_TEST_RESULT_PATH: "testReport/pytest.tests.code_quality/test_werks/"

    - NAME: "Python Werks validate"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_WERK_FILES_WITHOUT_DELETED_WERKS,CHANGED_RUN_UVENV_SCRIPT
      DIR: ""
      ENV_VARS:
          CHANGED_WERK_FILES: "${CHANGED_WERK_FILES_WITHOUT_DELETED_WERKS}"
      COMMAND: "./scripts/run-uvenv python -m cmk.werks.validate &> ${RESULTS}/werk_validate.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Werk files changed"
      RESULT_CHECK_FILE_PATTERN: "results/werk_validate.txt"

    - NAME: "Python Werks Commands"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_WERK_CODE_FILES,CHANGED_RUN_UVENV_SCRIPT
      DIR: ""
      GIT_FETCH_NOTES: true
      BAZEL_LOCKS_AMOUNT: 1
      COMMAND: |
          scripts/run-uvenv python3 -m cmk.werks.utils collect cmk . --substitute-branches $(git symbolic-ref --short HEAD):HEAD &> ${RESULTS}/werk_commands.txt
          scripts/run-uvenv python3 -m cmk.utils.werks announce .werks $(make print-VERSION) --format md &>> ${RESULTS}/werk_commands.txt
          scripts/run-uvenv python3 -m cmk.utils.werks announce .werks $(make print-VERSION) --format txt &>> ${RESULTS}/werk_commands.txt
          scripts/run-uvenv python3 -m cmk.werks.utils precompile .werks precompiled.json &>> ${RESULTS}/werk_commands.txt
          scripts/run-uvenv python3 -m cmk.werks.utils changelog CHANGELOG precompiled.json &>> ${RESULTS}/werk_commands.txt
          scripts/run-uvenv python3 -m cmk.utils.werks mail . HEAD werk_mail --assume-no-notes-but=$(git log --before="$(date --date="4 weeks ago" --iso=seconds)" --format="%H" --max-count=1) &>> ${RESULTS}/werk_commands.txt
          scripts/run-uvenv werk list &>> ${RESULTS}/werk_commands.txt
      TEXT_ON_SKIP: "No Werk code files changed"
      RESULT_CHECK_FILE_PATTERN: "results/werk_commands.txt"

    - NAME: "Python ruff"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES,CHANGED_PYTHON_REQUIREMENTS,CHANGED_PYPROJECT_TOML_FILE,CHANGED_TESTS_MAKEFILE,CHANGED_RUN_UVENV_SCRIPT
      DIR: "tests"
      ENV_VARS:
          RUFF_OUTPUT_FORMAT: "pylint"
      COMMAND: "make test-ruff &> ${RESULTS}/ruff.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "Neither pyproject.toml nor Python files changed"
      RESULT_CHECK_TYPE: "PYLINT"
      RESULT_CHECK_FILE_PATTERN: "results/ruff.txt"

    - NAME: "Python pylint"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES,CHANGED_PYTHON_REQUIREMENTS,CHANGED_PYPROJECT_TOML_FILE,CHANGED_TESTS_MAKEFILE,CHANGED_RUN_UVENV_SCRIPT
      DIR: "tests"
      ENV_VARS:
          PYLINT_ARGS: "--output-format=parseable"
      COMMAND: "make test-pylint &> ${RESULTS}/pylint.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "Neither pyproject.toml nor Python files changed"
      RESULT_CHECK_TYPE: "PYLINT"
      RESULT_CHECK_FILE_PATTERN: "results/pylint.txt"

    - NAME: "Python Bandit"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FIND_PYTHON_FILES_SCRIPT,CHANGED_PYTHON_FILES,CHANGED_PYTHON_REQUIREMENTS,CHANGED_PYPROJECT_TOML_FILE,CHANGED_TESTS_MAKEFILE,CHANGED_RUN_UVENV_SCRIPT
      DIR: "tests"
      ENV_VARS:
          BANDIT_OUTPUT_ARGS: "-f xml -o ${RESULTS}/bandit_results.xml"
      COMMAND: "make test-bandit"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Python files changed"
      RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/bandit_results.xml"

    - NAME: "Python semgrep"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYTHON_FILES,CHANGED_PYTHON_REQUIREMENTS,CHANGED_PYPROJECT_TOML_FILE,CHANGED_TESTS_MAKEFILE,CHANGED_RUN_UVENV_SCRIPT,CHANGED_SEMGREP_RULE_FILES
      DIR: "tests"
      ENV_VARS:
          SEMGREP_OUTPUT_ARGS: "--junit-xml --junit-xml-output=${RESULTS}/semgrep_results.xml"
      COMMAND: "make test-semgrep"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Python files changed"
      RESULT_CHECK_TYPE: "JUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/semgrep_results.xml"
      # can't be more specific due to mangled test name, e.g.
      #  "semgrep%20results._home_jenkins_workspace_checkmk_master_cv_test-gerrit-single_19_checkout_cmk_plugins_collection_agent_based_systemd_units/"
      JENKINS_TEST_RESULT_PATH: "testReport/"

    - NAME: "Shell Format"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_SHELL_FILES
      DIR: "tests"
      COMMAND: "make --quiet test-format-shell &> ${RESULTS}/shell-format.txt"
      BAZEL_LOCKS_AMOUNT: 1
      RESULT_CHECK_FILE_PATTERN: "results/shell-format.txt"

    - NAME: "Shellcheck"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_SHELL_FILES
      DIR: "tests"
      COMMAND: "make test-shellcheck &> ${RESULTS}/shellcheck.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Shell files changed"
      RESULT_CHECK_TYPE: "SHELLCHECK"
      RESULT_CHECK_FILE_PATTERN: "results/shellcheck.txt"

    - NAME: "Shell Unit Tests"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_SHELL_FILES
      DIR: "tests"
      COMMAND: "make test-unit-shell &> ${RESULTS}/shell-unit.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Shell files changed"
      RESULT_CHECK_TYPE: "SHELLUNIT"
      RESULT_CHECK_FILE_PATTERN: "results/shell-unit.txt"

    - NAME: "Bazel Format"
      DIR: "tests"
      COMMAND: "make --quiet test-format-bazel &> ${RESULTS}/bazel-prettier.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Bazel files changed"
      RESULT_CHECK_TYPE: "BAZELFORMAT"
      RESULT_CHECK_FILE_PATTERN: "results/bazel-prettier.txt"

    - NAME: "Bazel Lint"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_BAZEL_FILES
      DIR: "tests"
      COMMAND: "make --quiet test-lint-bazel &> ${RESULTS}/bazel-lint.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Bazel files changed"
      RESULT_CHECK_TYPE: "BAZELLINT"
      RESULT_CHECK_FILE_PATTERN: "results/bazel-lint.txt"

    - NAME: "Groovy Lint"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_GROOVY_FILE
      DIR: "tests"
      ENV_VARS:
          GROOVYLINT_OUTPUT_ARGS: "-o ${RESULTS}/groovy-lint.xml"
      COMMAND: "make --quiet test-lint-groovy"
      TEXT_ON_SKIP: "No Groovy files changed"
      BAZEL_LOCKS_AMOUNT: 1
      RESULT_CHECK_TYPE: "GROOVY"
      RESULT_CHECK_FILE_PATTERN: "results/groovy-lint.xml"

    - NAME: "Agent Plugin Unit Tests"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_AGENT_PLUGINS,CHANGED_AGENT_PLUGINS_TESTS,CHANGED_TESTS_MAKEFILE
      DIR: "tests"
      COMMAND: "make test-agent-plugin > ${RESULTS}/agent-plugin-unit-junit.txt"
      TEXT_ON_SKIP: "No agent files changed"
      BAZEL_LOCKS_AMOUNT: 1
      RESULT_CHECK_FILE_PATTERN: "results/agent-plugin-unit-junit.txt"

    - NAME: "Software Documentation Generation"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_SW_DOC_FILES,CHANGED_MAKEFILE
      COMMAND: "make sw-documentation &> ${RESULTS}/sw-documentation.txt"
      TEXT_ON_SKIP: "No SW Documentation files changed"
      BAZEL_LOCKS_AMOUNT: 1
      RESULT_CHECK_FILE_PATTERN: "results/sw-documentation.txt"

    - NAME: "TOML Format"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_TESTS_MAKEFILE
      DIR: "tests"
      COMMAND: "make --quiet test-format-toml &> ${RESULTS}/toml-format.txt"
      BAZEL_LOCKS_AMOUNT: 1
      RESULT_CHECK_FILE_PATTERN: "results/toml-format.txt"

    - NAME: "Detect Merge Conflicts"
      DIR: ""
      COMMAND: "./scripts/check-merge-conflicts ${PATCHSET_REVISION} &> ${RESULTS}/merge-conflicts.txt"
      RESULT_CHECK_FILE_PATTERN: "results/merge-conflicts.txt"

    ########## packages ########################################################

    - NAME: "Package check-cert"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_CHECK_CERT_FILES
      DIR: "packages/check-cert"
      COMMAND: "./run --all &> ${RESULTS}/check-cert.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No check-cert files changed"
      RESULT_CHECK_FILE_PATTERN: "results/check-cert.txt"

    - NAME: "Package check-http"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_CHECK_HTTP_FILES
      DIR: "packages/check-http"
      COMMAND: "./run --all &> ${RESULTS}/check-http.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No check-http files changed"
      RESULT_CHECK_FILE_PATTERN: "results/check-http.txt"

    # NOTE: This has to come *before* the neb & cmc packages, as they depend on
    # livestatus. Their run scripts rebuild livestatus, "eating away" compiler
    # invocations, leading to IWYU/clang-tidy/... not being called on enough
    # files. The ordering is a bit ad hoc, perhaps we should keep the list of
    # steps here in dependency order.
    - NAME: "Package livestatus"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_LIVESTATUS_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/livestatus"
      COMMAND: "./run --all &> ${RESULTS}/livestatus.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No Livestatus files changed"
      RESULT_CHECK_TYPE: "GCC"
      RESULT_CHECK_FILE_PATTERN: "results/livestatus.txt"

    - NAME: "Package cmc"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_CMC_FILES,CHANGED_CMC_PROTO_FILES,CHANGED_LIVESTATUS_FILES
      DIR: "non-free/packages/cmc"
      COMMAND: "./run --all &> ${RESULTS}/cmc.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmc files changed"
      RESULT_CHECK_TYPE: "GCC"
      RESULT_CHECK_FILE_PATTERN: "results/cmc.txt"

    - NAME: "Package cmk-plugin-apis"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_PLUGIN_APIS_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-plugin-apis"
      BAZEL_LOCKS_AMOUNT: 1
      COMMAND: "./run --all &> ${RESULTS}/cmk-plugin-apis.txt"
      TEXT_ON_SKIP: "No cmk-plugin-apis files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-plugin-apis.txt"

    - NAME: "Package cmk-agent-ctl"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_CMK_AGENT_CTL_FILES
      DIR: "packages/cmk-agent-ctl"
      COMMAND: "./run --all &> ${RESULTS}/cmk-agent-ctl.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-agent-ctl files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-agent-ctl.txt"

    - NAME: "Package cmk-agent-receiver"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_AGENT_RECEIVER_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-agent-receiver"
      COMMAND: "./run --all &> ${RESULTS}/cmk-agent-receiver.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-agent-receiver files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-agent-receiver.txt"

    - NAME: "Package cmk-ccc"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_CCC_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-ccc"
      COMMAND: "./run --all &> ${RESULTS}/cmk-ccc.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-ccc files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-ccc.txt"

    - NAME: "Package cmk-crypto"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_CRYPTO_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-crypto"
      COMMAND: "./run --all &> ${RESULTS}/cmk-crypto.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-crypto files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-crypto.txt"

    - NAME: "Package cmk-events"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_EVENTS_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_CMK_CCC_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-mkp-tool"
      COMMAND: "./run --all &> ${RESULTS}/cmk-events.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-events files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-events.txt"

    - NAME: "Package cmk-livestatus-client"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_LIVESTATUS_CLIENT_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-livestatus-client"
      COMMAND: "./run --all &> ${RESULTS}/cmk-livestatus-client.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-livestatus-client files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-livestatus-client.txt"

    - NAME: "Package cmk-messaging"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_MESSAGING_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-messaging"
      COMMAND: "./run --all &> ${RESULTS}/cmk-messaging.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-messaging files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-messaging.txt"

    - NAME: "Package cmk-mknotifyd"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_MKNOTIFYD_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_CMK_CCC_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "non-free/packages/cmk-mknotifyd"
      COMMAND: "./run --all &> ${RESULTS}/cmk-mknotifyd.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-mknotifyd files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-mknotifyd.txt"

    - NAME: "Package cmk-mkp-tool"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_MKP_TOOL_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-mkp-tool"
      COMMAND: "./run --all &> ${RESULTS}/cmk-mkp-tool.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-mkp-tool files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-mkp-tool.txt"

    - NAME: "Package cmk-relay-protocols"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_RELAY_PROTOCOLS_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-relay-protocols"
      COMMAND: "./run --all &> ${RESULTS}/cmk-relay-protocols.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-relay-protocols files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-relay-protocols.txt"

    - NAME: "Package cmk-otel-collector"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_OTEL_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "non-free/packages/cmk-otel-collector"
      COMMAND: "./run --all &> ${RESULTS}/cmk-otel-collector.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-otel-collector files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-otel-collector.txt"

    - NAME: "Package cmk-werks"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_WERKS_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_CMK_CCC_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-werks"
      COMMAND: "./run --all &> ${RESULTS}/cmk-werks.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-werks package files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-werks.txt"

    - NAME: "Package cmk-trace"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_TRACE_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-trace"
      COMMAND: "./run --all &> ${RESULTS}/cmk-trace.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-trace package files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-trace.txt"

    - NAME: "Package cmk-update-agent"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_CMK_UPDATE_AGENT_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "non-free/packages/cmk-update-agent"
      COMMAND: "./run --all &> ${RESULTS}/cmk-update-agent.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-update-agent files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-update-agent.txt"

    - NAME: "Package cmk-frontend-vue"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_FRONTEND_VUE_FILES
      DIR: "packages/cmk-frontend-vue"
      COMMAND: "./run --all &> ${RESULTS}/cmk-frontend-vue.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-frontend-vue files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-frontend-vue.txt"

    - NAME: "Package cmk-shared-typing"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_SHARED_TYPING_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "packages/cmk-shared-typing"
      COMMAND: "./run --all &> ${RESULTS}/cmk-shared-typing.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-shared-typing files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-shared-typing.txt"

    - NAME: "Package mk-sql"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_MK_SQL_FILES
      SEC_VAR_LIST:
          - "CI_TEST_SQL_DB_ENDPOINT"
      DIR: "packages/mk-sql"
      COMMAND: "./run --all &> ${RESULTS}/mk-sql.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No mk-sql files changed"
      RESULT_CHECK_FILE_PATTERN: "results/mk-sql.txt"

    - NAME: "Package mk-oracle"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_MK_ORACLE_FILES
      SEC_VAR_LIST:
          - "CI_TEST_SQL_DB_ENDPOINT"
          - "CI_ORA2_DB_TEST"
      DIR: "packages/mk-oracle"
      COMMAND: "./run --all &> ${RESULTS}/mk-oracle.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No mk-oracle files changed"
      RESULT_CHECK_FILE_PATTERN: "results/mk-oracle.txt"

    - NAME: "Package neb"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_NEB_FILES,CHANGED_LIVESTATUS_FILES
      DIR: "packages/neb"
      COMMAND: "./run --all &> ${RESULTS}/neb.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No neb files changed"
      RESULT_CHECK_TYPE: "GCC"
      RESULT_CHECK_FILE_PATTERN: "results/neb.txt"

    - NAME: "Package unixcat"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_UNIXCAT_FILES
      DIR: "packages/unixcat"
      COMMAND: "./run --all &> ${RESULTS}/unixcat.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No unixcat files changed"
      RESULT_CHECK_TYPE: "GCC"
      RESULT_CHECK_FILE_PATTERN: "results/unixcat.txt"

    - NAME: "Package cmk-frontend"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_CMK_FRONTEND_FILES
      DIR: "packages/cmk-frontend"
      COMMAND: "./run --all &> ${RESULTS}/cmk-frontend.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-frontend files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-frontend.txt"

    - NAME: "Package cmk-relay-engine"
      ONLY_WHEN_NOT_EMPTY: CHANGED_REFERENCE_IMAGE,CHANGED_PYPROJECT_TOML_FILE,CHANGED_PROBE_CORE_FILES,CHANGED_SEMGREP_RULE_FILES,CHANGED_PYTHON_REQUIREMENTS
      DIR: "non-free/packages/cmk-relay-engine"
      COMMAND: "./run --all &> ${RESULTS}/cmk-relay-engine.txt"
      BAZEL_LOCKS_AMOUNT: 1
      TEXT_ON_SKIP: "No cmk-relay-engine files changed"
      RESULT_CHECK_FILE_PATTERN: "results/cmk-relay-engine.txt"

    - NAME: "Enforced package build"
      ONLY_WHEN_NOT_EMPTY: CHANGED_PYTHON_REQUIREMENTS,CHANGED_BAZEL_MODULES,CHANGED_BAZEL_FILES,CHANGED_MAKEFILE
      DIR: ""
      COMMAND: "scripts/run-uvenv ci-artifacts --credentials url_env=JENKINS_URL,username_env=JENKINS_USERNAME,password_env=JENKINS_PASSWORD --log-level info validate checkmk/master/builders/build-cmk-distro-package --params=DISTRO=ubuntu-24.04,VERSION=daily,EDITION=enterprise,CUSTOM_GIT_REF=${PATCHSET_REVISION}"
      TEXT_ON_SKIP: "No package dependencies changed"
