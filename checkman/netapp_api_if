title: NetApp Filer: State of Network Interfaces
agents: netapp
catalog: hw/storagehw/netapp
license: GPL
distribution: check_mk
description:
 This check monitors the operational status, link speed, traffic, packet
 counts, discards and errors of network interfaces of a NetApp Filer.
 Currently, only the ethernet and virtual interfaces are checked. For virtual
 interfaces, the check raises a WARN if the speed differs among the members of
 the virtual interface.

 Depending on the check parameters, this check can go WARN or CRIT when the
 port status changes (i.e. is down), when the link speed changes (e.g. a
 port expected to be set to 1 GBit/s operates only at 100 MBit/s), when the
 absolute or procentual traffic of a port exceeds certain levels or if the
 rate of errors or discards exceeds configurable limits.

 This check supports averaging the in- and outgoing traffic over a configurable
 time range by using an exponentially weighted moving average - just as Linux
 does for the CPU load averages. The averaging can be configured on a per-host
 and per-interface base. Interfaces with averaging turned on yield two additional
 performance values: the averaged in- and outgoing traffic in bytes. If you have
 configured traffic levels, then those levels are applied to the averaged values.

item:
 There are three allowed ways to specify an interface: its index (depends on the order
 of the data reported by the agent), which simply enumerates the interfaces starting
 from 1, its description and its alias. Note that it might be a good idea to configure
 checkmk to discover the interfaces using the description in the service name, since
 the index can change over time (rule "Network interface and switch port discovery").

inventory:
 One service is created for each interface that fulfills configurable conditions
 (rule "Network interface and switch port discovery").
 By default, these are interfaces which are currently found {up} and are of type 6, 32,
 62, 117, 127, 128, 129, 180, 181, 182, 205 or 229.

 {Grouping:} In some situations, you do not want to monitor a single
 interface but a group of interfaces that together form a pool.
 This check supports such pools by defining groups. The data of all members is
 accumulated and put together in a single grouped interface service.
