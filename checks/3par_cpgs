#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.threepar import *  # pylint: disable=wildcard-import,unused-wildcard-import
from cmk.base.check_legacy_includes.df import *  # pylint: disable=wildcard-import,unused-wildcard-import
from cmk.base.check_legacy_includes.size_trend import *  # pylint: disable=wildcard-import,unused-wildcard-import


def count_3par_vvs(line):
    return line['numFPVVs'] + line['numTDVVs'] + line['numTPVVs']


def inventory_3par_cpgs(parsed):
    for entry in parsed.get('members', {}):
        if "name" in entry and count_3par_vvs(entry) > 0:
            yield (entry['name'], {})


def check_3par_cpgs(item, params, parsed):
    states = {
        1: (0, "Normal"),
        2: (1, "Degraded"),
        3: (2, "Failed"),
    }

    for entry in parsed.get('members', {}):
        if entry.get('name') == item:
            state, state_readable = states[entry['state']]
            yield state, "%s, %s VVs" % (state_readable, count_3par_vvs(entry))


check_info['3par_cpgs'] = {
    'parse_function': parse_3par,
    'inventory_function': inventory_3par_cpgs,
    'check_function': check_3par_cpgs,
    'service_description': "CPG %s",
}


def inventory_3par_cpgs_usage(parsed):
    for entry in parsed.get('members', {}):
        if count_3par_vvs(entry) > 0:
            for fs in ["SAUsage", "SDUsage", "UsrUsage"]:
                yield ("%s %s" % (entry['name'], fs), {})


def check_3par_cpgs_usage(item, params, parsed):
    for entry in parsed.get('members', {}):
        for fs in ["SAUsage", "SDUsage", "UsrUsage"]:
            if "%s %s" % (entry.get('name'), fs) == item:
                total = entry[fs]['totalMiB']
                free = entry[fs]['totalMiB'] - entry[fs]['usedMiB']
                yield df_check_filesystem_list(item, params, [(item, total, free, 0)])


check_info['3par_cpgs.usage'] = {
    'inventory_function': inventory_3par_cpgs_usage,
    'check_function': check_3par_cpgs_usage,
    'service_description': "CPG %s",
    'has_perfdata': True,
    'group': "threepar_cpgs",
    'default_levels_variable': "filesystem_default_levels",
}
