#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.temperature import *  # pylint: disable=wildcard-import,unused-wildcard-import
factory_settings["apc_symmetra_ext_temp_default_levels"] = {"levels": (30, 35)}


def inventory_apc_symmetra_ext_temp(info):
    for index, status, _temp, _temp_unit in info:
        if status == "2":
            yield index, {}


def check_apc_symmetra_ext_temp(item, params, info):
    for index, _status, temp, temp_unit in info:
        if item == index:
            unit = "f" if temp_unit == "2" else "c"
            return check_temperature(int(temp),
                                     params,
                                     "apc_symmetra_ext_temp_%s" % item,
                                     dev_unit=unit)

    return 3, "Sensor not found in SNMP data"


check_info["apc_symmetra_ext_temp"] = {
    'check_function': check_apc_symmetra_ext_temp,
    'inventory_function': inventory_apc_symmetra_ext_temp,
    'service_description': 'Temperature External %s',
    'has_perfdata': True,
    'snmp_info': ('.1.3.6.1.4.1.318.1.1.10.2.3.2.1', [1, 3, 4, 5]),
    'snmp_scan_function': lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.318.1.3"),
    'group': 'temperature',
    'default_levels_variable': 'apc_symmetra_ext_temp_default_levels'
}
