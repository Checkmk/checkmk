#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# snmpwalk -On -v1 -c public 192.168.1.47 SNMPv2-SMI::enterprises.318.1.1.10.4.2.3.1.3
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.3.0.1 = STRING: "Temp Sensor MM:1"
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.3.0.2 = STRING: "Temp Sensor MM:2"
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.3.0.3 = STRING: "Temp Sensor MM:3"
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.3.3.1 = STRING: "Temp Sensor TH03:1"
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.3.3.2 = STRING: "Temp Sensor TH03:2"
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.3.5.1 = STRING: "Temp Sensor TH05:1"
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.3.7.2 = STRING: "Temp Sensor TH07:2"
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.3.7.5 = STRING: "Temp Sensor TH07:5"
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.3.7.6 = STRING: "Temp Sensor TH07:6"
# nagios01:~/APC # snmpwalk -On -v1 -c public 192.168.1.47 SNMPv2-SMI::enterprises.318.1.1.10.4.2.3.1.5
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.5.0.1 = INTEGER: 18
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.5.0.2 = INTEGER: 18
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.5.0.3 = INTEGER: 19
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.5.3.1 = INTEGER: 18
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.5.3.2 = INTEGER: 19
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.5.5.1 = INTEGER: 18
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.5.7.2 = INTEGER: 26
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.5.7.5 = INTEGER: 19
# .1.3.6.1.4.1.318.1.1.10.4.2.3.1.5.7.6 = INTEGER: 18

factory_settings["apc_temp_default_levels"] = {"levels": (25, 30)}


def inventory_apc_temp(info):
    for name, _temp in info:
        yield name, {}


def check_apc_temp(item, params, info):
    for name, temp in info:
        if name == item:
            return check_temperature(int(temp), params, "apc_temp_%s" % item)

    return 3, "Sensor not found in SNMP data"


check_info["apc_symmetra_temp"] = {
    'check_function': check_apc_temp,
    'inventory_function': inventory_apc_temp,
    'service_description': 'Temperature %s',
    'has_perfdata': True,
    'snmp_info': ('.1.3.6.1.4.1.318.1.1.10.4.2.3.1', ['3', '5']),
    'snmp_scan_function': lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.318.1.3"),
    'group': 'temperature',
    'includes': ['temperature.include'],
    'default_levels_variable': 'apc_temp_default_levels'
}
