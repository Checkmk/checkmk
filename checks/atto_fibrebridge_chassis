#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.temperature import *  # pylint: disable=wildcard-import,unused-wildcard-import


def parse_atto_fibrebridge_chassis(info):
    parsed = {}

    min_operating_temp = int(info[0][0])
    max_operating_temp = int(info[0][1])
    chassis_temp = int(info[0][2])

    parsed["temperature"] = {
        "dev_levels": (max_operating_temp, max_operating_temp),
        "dev_levels_lower": (min_operating_temp, min_operating_temp),
        "reading": chassis_temp,
    }

    parsed["throughput_status"] = info[0][3]

    return parsed


#.
#   .--Temperature---------------------------------------------------------.
#   |     _____                                   _                        |
#   |    |_   _|__ _ __ ___  _ __   ___ _ __ __ _| |_ _   _ _ __ ___       |
#   |      | |/ _ \ '_ ` _ \| '_ \ / _ \ '__/ _` | __| | | | '__/ _ \      |
#   |      | |  __/ | | | | | |_) |  __/ | | (_| | |_| |_| | | |  __/      |
#   |      |_|\___|_| |_| |_| .__/ \___|_|  \__,_|\__|\__,_|_|  \___|      |
#   |                       |_|                                            |
#   '----------------------------------------------------------------------'


def inventory_atto_fibrebridge_chassis_temp(parsed):
    return [("Chassis", {})]


def check_atto_fibrebridge_chassis_temp(item, params, parsed):
    return check_temperature(params=params,
                             unique_name="atto_fibrebridge_chassis_temp",
                             **parsed["temperature"])


check_info["atto_fibrebridge_chassis.temp"] = {
    "inventory_function": inventory_atto_fibrebridge_chassis_temp,
    "check_function": check_atto_fibrebridge_chassis_temp,
    "service_description": "Temperature %s",
    "group": "temperature",
    "has_perfdata": True,
}

#.
#   .--Throughput Status - Main Check--------------------------------------.
#   |       _____ _                           _                 _          |
#   |      |_   _| |__  _ __ ___  _   _  __ _| |__  _ __  _   _| |_        |
#   |        | | | '_ \| '__/ _ \| | | |/ _` | '_ \| '_ \| | | | __|       |
#   |        | | | | | | | | (_) | |_| | (_| | | | | |_) | |_| | |_        |
#   |        |_| |_| |_|_|  \___/ \__,_|\__, |_| |_| .__/ \__,_|\__|       |
#   |                                   |___/      |_|                     |
#   '----------------------------------------------------------------------'


def inventory_atto_fibrebridge_chassis(parsed):
    return [(None, None)]


def check_atto_fibrebridge_chassis(_no_item, _no_params, parsed):
    throughput_status = parsed["throughput_status"]
    if throughput_status == "1":
        return 0, "Normal"
    elif throughput_status == "2":
        return 1, "Warning"


check_info["atto_fibrebridge_chassis"] = {
    "parse_function": parse_atto_fibrebridge_chassis,
    "inventory_function": inventory_atto_fibrebridge_chassis,
    "check_function": check_atto_fibrebridge_chassis,
    "service_description": "Throughput Status",
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.4547"),
    "snmp_info": (
        ".1.3.6.1.4.1.4547.2.3.2",
        [
            "4",  # minimumOperatingTemp
            "5",  # maximumOperatingTemp
            "8",  # chassisTemperature
            "11",  # chassisThroughputStatus
        ]),
}
