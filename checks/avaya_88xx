#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.temperature import *  # pylint: disable=wildcard-import,unused-wildcard-import


def parse_avaya_88xx(info):
    parsed = {"fanstate": [], "temp": []}
    for line in info:
        parsed["fanstate"].append(line[0])
        parsed["temp"].append(line[1])

    return parsed


def inventory_avaya_88xx_fan(parsed):
    for idx, _state in enumerate(parsed["fanstate"]):
        yield str(idx), None


def check_avaya_88xx_fan(item, _no_params, parsed):
    fans = parsed["fanstate"]
    if len(fans) < int(item):
        return

    map_fan_state = {
        "1": ("Reported Unknown", 3),
        "2": ("Running", 0),
        "3": ("Down", 2),
    }
    text, state = map_fan_state.get(fans[int(item)], (None, None))
    if not text:
        return

    return state, text


factory_settings["avaya_88xx_default_levels"] = {
    "levels": (55, 60),
}


def inventory_avaya_88xx(parsed):
    sensors = parsed["temp"]
    for idx, temp in enumerate(sensors):
        if temp:
            yield str(idx), {}


def check_avaya_88xx(item, params, parsed):
    sensors = parsed["temp"]
    if len(sensors) < int(item):
        return

    reading = sensors[int(item)]
    if reading:
        return check_temperature(int(reading), params, "avaya_88xx_%s" % item)


check_info["avaya_88xx"] = {
    'parse_function': parse_avaya_88xx,
    'check_function': check_avaya_88xx,
    'inventory_function': inventory_avaya_88xx,
    'service_description': 'Temperature Fan %s',
    'default_levels_variable': "avaya_88xx_default_levels",
    'has_perfdata': True,
    'group': 'temperature',
    # RAPID-CITY MIB
    'snmp_info':
        (".1.3.6.1.4.1.2272.1.4.7.1.1", [2, 3]),  # rcChasFanOperStatus, rcChasFanAmbientTemperature
    'snmp_scan_function': lambda oid: ".1.3.6.1.4.1.2272" in oid(".1.3.6.1.2.1.1.2.0"),
}

check_info["avaya_88xx.fan"] = {
    'check_function': check_avaya_88xx_fan,
    'inventory_function': inventory_avaya_88xx_fan,
    'service_description': 'Fan %s Status',
}
