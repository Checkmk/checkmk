#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def parse_aws_elbv2_target_groups_lambda(info):
    metrics = _extract_aws_metrics_by_labels(['RequestCount', 'LambdaUserError'], parse_aws(info))
    return metrics


@get_parsed_item_data
def check_aws_application_elb_target_groups_lambda(item, params, data):

    rate_id = 'aws_elbv2_http_target_group_' + item

    request_count = data.get('RequestCount')
    if request_count is not None:
        request_rate, result = check_aws_request_rate(request_count, '%s.requests' % rate_id)
        yield result
    else:
        request_rate = 0

    lambda_errors = data.get('LambdaUserError')
    if lambda_errors is None:
        lambda_errors = 0  # CloudWatch only reports LambdaUserError if the value is nonzero

    for result in check_aws_error_rate(lambda_errors, request_rate,
                                       '%s.lambda_user_error' % rate_id,
                                       'aws_lambda_users_errors_rate',
                                       'aws_lambda_users_errors_perc',
                                       params.get('levels_lambda', {}), "Lambda user errors"):
        yield result


check_info['aws_elbv2_application_target_groups_lambda'] = {
    'parse_function': parse_aws_elbv2_target_groups_lambda,
    'inventory_function': discover(lambda k, v: 'RequestCount' in v),
    'check_function': check_aws_application_elb_target_groups_lambda,
    'service_description': 'AWS/ApplicationELB Lambda %s',
    'includes': ['aws.include'],
    'group': 'aws_elbv2_target_errors',
    'has_perfdata': True,
}
