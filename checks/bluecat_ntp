#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

factory_settings["bluecat_ntp"] = {
    "oper_states": {
        "warning": [2, 3, 4],
        "critical": [5],
    },
    "stratum": (8, 10),
}


def inventory_bluecat_ntp(info):
    if len(info) > 0 and info[0][0] != 'NULL':
        return [(None, None)]


def check_bluecat_ntp(item, params, info):
    oper_state, sys_leap, stratum = map(int, info[0])
    oper_states = {
        1: "running normally",
        2: "not running",
        3: "currently starting",
        4: "currently stopping",
        5: "fault"
    }

    state = 0
    if oper_state in params['oper_states']['warning']:
        state = 1
    elif oper_state in params['oper_states']['critical']:
        state = 2
    yield state, "Process is %s" % oper_states[oper_state]

    sys_leap_states = {0: 'no Warning', 1: 'add second', 10: 'subtract second', 11: 'Alarm'}
    state = 0
    if sys_leap == 11:
        state = 2
    elif sys_leap in [1, 10]:
        state = 1
    yield state, "Sys Leap: %s" % sys_leap_states[sys_leap]

    warn, crit = params['stratum']
    state = 0
    if stratum >= crit:
        state = 2
    elif stratum >= warn:
        state = 1
    yield state, "Stratum: %s" % stratum


check_info["bluecat_ntp"] = {
    "check_function": check_bluecat_ntp,
    "inventory_function": inventory_bluecat_ntp,
    "service_description": "NTP",
    "default_levels_variable": "bluecat_ntp",
    "group": "bluecat_ntp",
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.13315"),
    "snmp_info": (
        ".1.3.6.1.4.1.13315.3.1.4.2",
        [
            '1.1',  # bcnNtpSerOperState
            '2.1',  # bcnNtpSysLeap
            '2.2',  # bcnNtpSysStratum
        ])
}
