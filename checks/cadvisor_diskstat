#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2019             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
import json


def parse_cadvisor_diskstat(info):
    diskstat_info = json.loads(info[0][0])
    diskstat_mapping = {
        "disk_utilisation": "utilization",
        "disk_write_operation": "write_ios",
        "disk_read_operation": "read_ios",
        "disk_write_throughput": "write_throughput",
        "disk_read_throughput": "read_throughput",
    }
    parsed = {}
    for diskstat_name, diskstat_entries in diskstat_info.iteritems():
        if len(diskstat_entries) != 1:
            continue
        try:
            parsed[diskstat_mapping[diskstat_name]] = float(diskstat_entries[0]["value"])
        except KeyError:
            continue
    return {"Summary": parsed}


def check_cadvisor_diskstat(item, params, parsed):
    return check_diskstat_dict(item, params, parsed)


check_info["cadvisor_diskstat"] = {
    'parse_function': parse_cadvisor_diskstat,
    'inventory_function': discover(),
    'check_function': check_cadvisor_diskstat,
    'service_description': 'Disk IO %s',
    'has_perfdata': True,
    'group': 'diskstat',
    'includes': ["diskstat.include"],
}
