#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def check_icmp_arguments(params):
    args = []

    min_successful_pings = params.get("min_pings", 0)
    if min_successful_pings:
        args += ["-m", "%d" % min_successful_pings]

    rta = 200, 500
    loss = 80, 100
    for key, value in params.items():
        if key == "timeout":
            args += ["-t", value]
        elif key == "packets":
            args += ["-n", value]
        elif key == "rta":
            rta = value
        elif key == "loss":
            loss = value
    args += ["-w", "%.2f,%d%%" % (rta[0], loss[0])]
    args += ["-c", "%.2f,%d%%" % (rta[1], loss[1])]

    target = params.get("address", "address")

    if target == "address":
        if is_ipv6_primary(host_name()):
            args.append('-6')
        args.append("$HOSTADDRESS$")

    elif target == "alias":
        if is_ipv6_primary(host_name()):
            args.append('-6')
        args.append("$HOSTALIAS$")

    elif target == "all_ipv4addresses":
        args += ["$HOST_ADDRESSES_4$", "$HOST_ADDRESS_4$"]

    elif target == "all_ipv6addresses":
        args += ["-6", "$HOST_ADDRESSES_6$", "$HOST_ADDRESS_6$"]

    elif target == "additional_ipv4addresses":
        args.append("$HOST_ADDRESSES_4$")

    elif target == "additional_ipv6addresses":
        args += ["-6", "$HOST_ADDRESSES_6$"]

    elif target[0] == "indexed_ipv4address":
        args.append("$HOST_ADDRESS_4_%s$" % target[1])

    elif target[0] == "indexed_ipv6address":
        args.append("$HOST_ADDRESS_6_%s$" % target[1])

    else:  # custom
        args.append(target[1])

    return args


def check_icmp_description(params):
    if "description" in params:
        return params["description"]

    description = "PING"
    target = params.get("address", "address")
    if target[0] == "indexed_ipv4address":
        description += " IPv4/%s" % target[1]
    elif target[0] == "indexed_ipv6address":
        description += " IPv6/%s" % target[1]
    return description


active_check_info['icmp'] = {
    "command_line": 'check_icmp $ARG1$',
    "argument_function": check_icmp_arguments,
    "service_description": check_icmp_description,
    "has_perfdata": True,
}
