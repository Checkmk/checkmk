#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def check_ldap_arguments(params):

    _name, basedn, settings = params
    args = []

    if "hostname" in settings:
        args += ["-H", settings["hostname"]]
    else:
        args += ["-H", "$HOSTADDRESS$"]

    args += ["-b", basedn]

    if "response_time" in settings:
        warn, crit = settings["response_time"]
        args += ["-w", "%f" % warn / 1000.0, "-c", "%f" % crit / 1000.0]

    if "timeout" in settings:
        args += ["-t", settings["timeout"]]

    if "attribute" in settings:
        args += ["-a", settings["attribute"]]

    if "authentication" in settings:
        binddn, password = settings["authentication"]
        args += ["-D", binddn, "-P", password]

    if "port" in settings:
        args += ["-p", settings["port"]]

    if "version" in settings:
        versions = {
            "v2": "-2",
            "v3": "-3",
            "v3tls": "-3 -T",
        }
        args.append(versions[settings["version"]])

    if settings.get("ssl"):
        args.append("--ssl")

    return args


def check_ldap_desc(params):
    if params[0].startswith("^"):
        return params[0][1:]
    return "LDAP %s" % params[0]


active_check_info["ldap"] = {
    "command_line": "$USER1$/check_ldap $ARG1$",
    "argument_function": check_ldap_arguments,
    "service_description": check_ldap_desc,
    "has_perfdata": True,
}
