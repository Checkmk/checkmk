#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def check_mail_arguments(params):
    """
    >>> for a in check_mail_arguments({
    ...     'service_description': 'Email',
    ...     'fetch': (
    ...       'IMAP', {
    ...         'server': 'imap.gmx.com',
    ...         'ssl': (True, None),
    ...         'auth': ('me@gmx.de', ('password', 'p4ssw0rd'))}),
    ...     'forward': {'facility': 2, 'application': None, 'host': 'me.too@tribe29.com',
    ...     'cleanup': True}}):
    ...   print(a)
    --fetch-protocol=IMAP
    --fetch-server=imap.gmx.com
    --fetch-tls
    --fetch-username=me@gmx.de
    --fetch-password=p4ssw0rd
    --forward-ec
    --forward-facility=2
    --forward-host=me.too@tribe29.com
    --cleanup=delete
    """

    fetch_proto, fetch_params = params["fetch"]

    args = []
    args.append(f"--fetch-protocol={fetch_proto}")
    args.append(f"--fetch-server={fetch_params.get('server', '$HOSTADDRESS$')}")

    fetch_use_ssl, fetch_port = fetch_params["ssl"]
    if fetch_use_ssl:
        args.append("--fetch-tls")

    if fetch_port is not None:
        args.append(f"--fetch-port={fetch_port}")

    username, password = fetch_params["auth"]
    args.append(f"--fetch-username={username}")
    args.append(passwordstore_get_cmdline("--fetch-password=%s", password))

    if "connect_timeout" in params:
        args.append(f"--connect-timeout={params['connect_timeout']}")

    if "forward" in params:
        forward = params["forward"]
        args.append("--forward-ec")
        if forward.get("method"):
            args.append(f"--forward-method={forward['method']}")

        if forward.get("match_subject"):
            args.append(f"--match-subject={forward['match_subject']}")

        # int - can be 0
        if "facility" in forward:
            args.append(f"--forward-facility={forward['facility']}")

        if forward.get("host"):
            args.append(f"--forward-host={forward['host']}")

        if forward.get("application"):
            args.append(f"--forward-app={forward['application']}")

        # int - can be 0
        if "body_limit" in forward:
            args.append(f"--body-limit={forward['body_limit']}")

        if isinstance(forward.get('cleanup'), bool):  # can never be False
            args.append("--cleanup=delete")
        elif isinstance(forward.get('cleanup'), str):
            move_to_subfolder = forward['cleanup']
            args.append(f"--cleanup={move_to_subfolder}")

    return args


active_check_info["mail"] = {
    "command_line": "check_mail $ARG1$",
    "argument_function": check_mail_arguments,
    "service_description": lambda params: params["service_description"],
    "has_perfdata": True,
}
