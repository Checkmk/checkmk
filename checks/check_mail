#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def check_mail_arguments(params):
    args = []

    fetch_proto, fetch_params = params["fetch"]
    args.append("--fetch-protocol=%s" % fetch_proto)

    if "server" in fetch_params:
        args.append("--fetch-server=%s" % fetch_params["server"])
    else:
        args.append("--fetch-server=$HOSTADDRESS$")

    fetch_use_ssl, fetch_port = fetch_params["ssl"]
    if fetch_use_ssl:
        args.append("--fetch-tls")
    if fetch_port is not None:
        args.append("--fetch-port=%d" % fetch_port)

    username, password = fetch_params["auth"]
    args.append("--fetch-username=%s" % username)
    args.append(passwordstore_get_cmdline("--fetch-password=%s", password))

    if "connect_timeout" in params:
        args.append("--connect-timeout=%d" % params["connect_timeout"])

    if "forward" in params:
        forward = params["forward"]
        args += ["--forward-ec"]
        if "method" in forward:
            args.append("--forward-method=%s" % forward["method"])

        if "match_subject" in forward:
            args.append("--match-subject=%s" % forward["match_subject"])

        if "facility" in forward:
            args.append("--forward-facility=%d" % forward["facility"])

        if "host" in forward:
            args.append("--forward-host=%s" % forward["host"])

        if "application" in forward:
            args.append("--forward-app=%s" % forward["application"])

        if "body_limit" in forward:
            args.append("--body-limit=%d" % forward["body_limit"])

        if "cleanup" in forward:
            if forward["cleanup"] is True:
                args.append("--cleanup=delete")
            else:
                args.append("--cleanup=%s" % forward["cleanup"])

    return args


active_check_info["mail"] = {
    "command_line": "check_mail $ARG1$",
    "argument_function": check_mail_arguments,
    "service_description": lambda params: params["service_description"],
    "has_perfdata": True,
}
