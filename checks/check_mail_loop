#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def check_mail_loop_arguments(params):
    args = []

    if "smtp_server" in params:
        args.append("--smtp-server=%s" % params["smtp_server"])
    else:
        args.append("--smtp-server=$HOSTADDRESS$")

    if "imap_tls" in params:
        args.append("--imap-tls")

    if "smtp_tls" in params:
        args.append("--smtp-tls")

    if "smtp_port" in params:
        args.append("--smtp-port=%d" % params["smtp_port"])

    if "smtp_auth" in params:
        username, password = params["smtp_auth"]
        args.append("--smtp-username=%s" % username)
        args.append(passwordstore_get_cmdline("--smtp-password=%s", password))

    fetch_proto, fetch_params = params["fetch"]
    args.append("--fetch-protocol=%s" % fetch_proto)

    if "server" in fetch_params:
        args.append("--fetch-server=%s" % fetch_params["server"])
    else:
        args.append("--fetch-server=$HOSTADDRESS$")

    fetch_use_ssl, fetch_port = fetch_params["ssl"]
    if fetch_use_ssl:
        args.append("--fetch-ssl")
    if fetch_port is not None:
        args.append("--fetch-port=%d" % fetch_port)

    username, password = fetch_params["auth"]
    args.append("--fetch-username=%s" % username)
    args.append(passwordstore_get_cmdline("--fetch-password=%s", password))

    args.append("--mail-from=%s" % params["mail_from"])
    args.append("--mail-to=%s" % params["mail_to"])

    if "connect_timeout" in params:
        args.append("--connect-timeout=%d" % params["connect_timeout"])

    if "delete_messages" in params:
        args.append("--delete-messages")

    args.append("--status-suffix=%s" % (host_name() + "-" + params["item"]))

    if "duration" in params:
        warning, critical = params["duration"]
        args.append("--warning=%d" % warning)
        args.append("--critical=%d" % critical)

    if "subject" in params:
        args.append("--subject=%s" % params["subject"])

    return args


active_check_info["mail_loop"] = {
    "command_line": "$USER1$/check_mail_loop $ARG1$",
    "argument_function": check_mail_loop_arguments,
    "service_description": lambda params: "Mail Loop %s" % params["item"],
    "has_perfdata": True,
}
