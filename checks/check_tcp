#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def check_tcp_arguments(params):
    port, settings = params
    args = []

    args += ["-p", port]

    if "response_time" in settings:
        warn, crit = settings["response_time"]
        args += ["-w", "%f" % warn / 1000.0]
        args += ["-c", "%f" % crit / 1000.0]

    if "timeout" in settings:
        args += ["-t", settings["timeout"]]

    if "refuse_state" in settings:
        args += ["-r", settings["refuse_state"]]

    if settings.get("escape_send_string"):
        args.append("--escape")

    if "send_string" in settings:
        args += ["-s", settings["send_string"]]

    if "expect" in settings:
        for s in settings["expect"]:
            args += ["-e", s]

    if settings.get("expect_all"):
        args.append("-A")

    if settings.get("jail"):
        args.append("--jail")

    if "mismatch_state" in settings:
        args += ["-M", settings["mismatch_state"]]

    if "delay" in settings:
        args += ["-d", settings["delay"]]

    if "maxbytes" in settings:
        args += ["-m", settings["maxbytes"]]

    if settings.get("ssl"):
        args.append("--ssl")

    if "cert_days" in settings:
        # legacy behavior
        if isinstance(settings["cert_days"], int):
            args += ["-D", settings["cert_days"]]
        else:
            warn, crit = settings["cert_days"]
            args += ["-D", "%d,%d" % (warn, crit)]

    if "quit_string" in settings:
        args += ["-q", settings["quit_string"]]

    if "hostname" in settings:
        args += ["-H", settings["hostname"]]
    else:
        args += ["-H", "'$HOSTADDRESS$'"]

    return args


active_check_info["tcp"] = {
    "command_line": "$USER1$/check_tcp $ARG1$",
    "argument_function": check_tcp_arguments,
    "service_description": lambda args: args[1].get("svc_description", "TCP Port %d" % args[0]),
    "has_perfdata": True,
}
