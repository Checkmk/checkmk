#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.checkpoint import *  # pylint: disable=wildcard-import,unused-wildcard-import
from cmk.base.check_legacy_includes.temperature import *  # pylint: disable=wildcard-import,unused-wildcard-import
factory_settings['checkpoint_temp_default_levels'] = {"levels": (50, 60)}


def format_item_checkpoint_temp(name):
    return name.upper().replace(" TEMP", "")


def inventory_checkpoint_temp(info):
    for name, _value, _unit, _dev_status in info:
        yield format_item_checkpoint_temp(name), {}


def check_checkpoint_temp(item, params, info):
    for name, value, unit, dev_status in info:
        if format_item_checkpoint_temp(name) == item:
            unit = unit.replace("degree", "").strip().lower()
            state, state_readable = checkpoint_sensorstatus_to_nagios[dev_status]

            if value == "":
                return state, "Status: %s" % state_readable

            return check_temperature(float(value),
                                     params,
                                     "checkpoint_temp_%s" % item,
                                     dev_unit=unit,
                                     dev_status=state,
                                     dev_status_name=state_readable)


check_info['checkpoint_temp'] = {
    'check_function': check_checkpoint_temp,
    'inventory_function': inventory_checkpoint_temp,
    'service_description': "Temperature %s",
    'has_perfdata': True,
    'group': 'temperature',
    'snmp_scan_function': scan_checkpoint,
    'snmp_info': (
        '.1.3.6.1.4.1.2620.1.6.7.8.1.1',
        [
            2,  # tempertureSensorName
            3,  # tempertureSensorValue
            4,  # tempertureSensorUnit
            6  # tempertureSensorStatus
        ]),
    'default_levels_variable': 'checkpoint_temp_default_levels'
}
