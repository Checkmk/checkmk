#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# License: GNU General Public License v2
#
# Author: thl-cmk[at]outlook[dot]com
# URL   : https://thl-cmk.hopto.org
# Date  : 2020-04-27
# monitor Cisco ASA VPN Session counters
#
# this check replaces the original cisco_svcsesions and my cisco_asa_cras package
# if you use this check please remove the cisco_asa_cras package (if installed)
# and disable the cisco_asa_svcsessions check
#
# sample snmpwalk
#
# .1.3.6.1.4.1.9.9.392.1.1.1.0 = INTEGER: 150
# .1.3.6.1.4.1.9.9.392.1.3.26.0 = Gauge32: 0
# .1.3.6.1.4.1.9.9.392.1.3.27.0 = Counter32: 0
# .1.3.6.1.4.1.9.9.392.1.3.28.0 = Gauge32: 0
# .1.3.6.1.4.1.9.9.392.1.3.29.0 = Gauge32: 13
# .1.3.6.1.4.1.9.9.392.1.3.30.0 = Counter32: 73624
# .1.3.6.1.4.1.9.9.392.1.3.31.0 = Gauge32: 13
# .1.3.6.1.4.1.9.9.392.1.3.32.0 = Gauge32: 0
# .1.3.6.1.4.1.9.9.392.1.3.33.0 = Counter32: 0
# .1.3.6.1.4.1.9.9.392.1.3.34.0 = Gauge32: 0
# .1.3.6.1.4.1.9.9.392.1.3.35.0 = Gauge32: 28
# .1.3.6.1.4.1.9.9.392.1.3.36.0 = Counter32: 1590
# .1.3.6.1.4.1.9.9.392.1.3.37.0 = Gauge32: 37
# .1.3.6.1.4.1.9.9.392.1.3.38.0 = Gauge32: 0
# .1.3.6.1.4.1.9.9.392.1.3.39.0 = Counter32: 0
# .1.3.6.1.4.1.9.9.392.1.3.40.0 = Gauge32: 0
#
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasMaxSessionsSupportable.0 = INTEGER: 150 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasIPSecNumSessions.0 = Gauge32: 0 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasIPSecCumulateSessions.0 = Counter32: 0 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasIPSecPeakConcurrentSessions.0 = Gauge32: 0 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasL2LNumSessions.0 = Gauge32: 13 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasL2LCumulateSessions.0 = Counter32: 73624 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasL2LPeakConcurrentSessions.0 = Gauge32: 13 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasLBNumSessions.0 = Gauge32: 0 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasLBCumulateSessions.0 = Counter32: 0 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasLBPeakConcurrentSessions.0 = Gauge32: 0 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasSVCNumSessions.0 = Gauge32: 28 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasSVCCumulateSessions.0 = Counter32: 1590 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasSVCPeakConcurrentSessions.0 = Gauge32: 37 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasWebvpnNumSessions.0 = Gauge32: 0 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasWebvpnCumulateSessions.0 = Counter32: 0 Sessions
# CISCO-REMOTE-ACCESS-MONITOR-MIB::crasWebvpnPeakConcurrentSessions.0 = Gauge32: 0 Sessions
#
# sample info
# [[u'0', u'0', u'0', u'13', u'73624', u'13', u'28', u'1590', u'37', u'0', u'0', u'0', u'150']]
#

factory_settings['cisco_asa_vpnsessions_defaults'] = {
    'WarnCrit': (10, 100),
}


def parse_cisco_asa_vpnsessions(info):

    IPSecNumSessions, IPSecCumulateSessions, IPSecPeakSessions, L2LNumSessions, L2LCumulateSessions, \
    L2LPeakSessions, SVCNumSessions, SVCCumulateSessions, SVCPeakSessions, WebvpnNumSessions, \
    WebvpnCumulateSessions, WebvpnPeakSessions, MaxSessionsSupportable = info[0]

    IPSecNumSessions = int(IPSecNumSessions)
    IPSecCumulateSessions = int(IPSecCumulateSessions)
    IPSecPeakSessions = int(IPSecPeakSessions)
    L2LNumSessions = int(L2LNumSessions)
    L2LCumulateSessions = int(L2LCumulateSessions)
    L2LPeakSessions = int(L2LPeakSessions)
    SVCNumSessions = int(SVCNumSessions)
    SVCCumulateSessions = int(SVCCumulateSessions)
    SVCPeakSessions = int(SVCPeakSessions)
    WebvpnNumSessions = int(WebvpnNumSessions)
    WebvpnCumulateSessions = int(WebvpnCumulateSessions)
    WebvpnPeakSessions = int(WebvpnPeakSessions)
    MaxSessionsSupportable = int(MaxSessionsSupportable)
    SumNumSessions = IPSecNumSessions + L2LNumSessions + SVCNumSessions + WebvpnNumSessions
    SumCumulateSessions = IPSecCumulateSessions + L2LCumulateSessions + SVCCumulateSessions + WebvpnCumulateSessions

    parsed = {         # current,      peak,            cumulative,          system max
        'AnyConnect': (SVCNumSessions, SVCPeakSessions, SVCCumulateSessions, MaxSessionsSupportable),
        'Clientless': (WebvpnNumSessions, WebvpnPeakSessions, WebvpnCumulateSessions, MaxSessionsSupportable),
        'IPSec RA': (IPSecNumSessions, IPSecPeakSessions, IPSecCumulateSessions, MaxSessionsSupportable),
        'IPSec L2L': (L2LNumSessions, L2LPeakSessions, L2LCumulateSessions, MaxSessionsSupportable),
        'Summary': (SumNumSessions, 0, SumCumulateSessions, MaxSessionsSupportable),
    }

    return parsed


def inventory_cisco_asa_vpnsessions(parsed):
    for key in parsed.keys():
        yield key, {}


def check_cisco_asa_vpnsessions(item, params, parsed):

    warn, crit = params['WarnCrit']
    current, peak, cumulative, sysmax = parsed[item]
    VPNType = str(item).lower().replace(' ', '')

    if not VPNType == 'summary':
        infotext = '%d/%d/%d/%d (current/peak/system max./cumulative)' % (current, peak, sysmax, cumulative)
        perfdata = [
            ('%s_current' % VPNType, current, warn, crit, 0, sysmax),
            ('%s_peak' % VPNType, peak, None, None, peak + 10),
        ]
    else:
        infotext = '%d/%d/%d (current/system max./cumulative)' % (current, sysmax, cumulative)
        perfdata = [
            ('%s_current' % VPNType, current, warn, crit, 0, sysmax),
        ]

    if current >= crit:
        yield 2, 'current >= %d' % crit
    elif current >= warn:
        yield 1, 'current >= %d' % warn

    yield 0, infotext, perfdata


check_info['cisco_asa_vpnsessions'] = {
    'check_function'         : check_cisco_asa_vpnsessions,
    'inventory_function'     : inventory_cisco_asa_vpnsessions,
    'service_description'    : 'VPN Sessions %s',
    'has_perfdata'           : True,
    'default_levels_variable': 'cisco_asa_vpnsessions_defaults',
    'parse_function'         : parse_cisco_asa_vpnsessions,
    'group'                  : 'cisco_asa_vpnsessions',
    'snmp_scan_function'     : lambda oid: oid('.1.3.6.1.2.1.1.1.0').lower().startswith('cisco adaptive security')\
                                        or oid('.1.3.6.1.2.1.1.1.0').lower().startswith('cisco firepower threat defense'),
    'snmp_info'              : ('.1.3.6.1.4.1.9.9.392.1', ['3.26',  # crasIPSecNumSessions
                                                           '3.27',  # crasIPSecCumulateSessions
                                                           '3.28',  # crasIPSecPeakConcurrentSessions
                                                           '3.29',  # crasL2LNumSessions
                                                           '3.30',  # crasL2LCumulateSessions
                                                           '3.31',  # crasL2LPeakConcurrentSessions
                                                           '3.35',  # crasSVCNumSessions
                                                           '3.36',  # crasSVCCumulateSessions
                                                           '3.37',  # crasSVCPeakConcurrentSessions
                                                           '3.38',  # crasWebvpnNumSessions
                                                           '3.39',  # crasWebvpnCumulateSessions
                                                           '3.40',  # crasWebvpnPeakConcurrentSessions
                                                           '1.1',   # crasMaxSessionsSupportable
                                                       ]),
}
