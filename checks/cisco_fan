#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

cisco_fan_state_mapping = {
    '1': (0, 'normal'),
    '2': (1, 'warning'),
    '3': (2, 'critical'),
    '4': (2, 'shutdown'),
    '5': (3, 'not present'),
    '6': (2, 'not functioning'),
}


def inventory_cisco_fan(info):
    return [(cisco_sensor_item(line[0], line[-1]), None)
            for line in info
            if line[1] in ['1', '2', '3', '4', '6']]


def check_cisco_fan(item, params, info):
    for statustext, dev_state, oid_end in info:
        if cisco_sensor_item(statustext, oid_end) == item:
            state, state_readable = cisco_fan_state_mapping.get(dev_state,
                                                                (3, 'unknown[%s]' % dev_state))
            yield state, 'Status: %s' % state_readable


check_info["cisco_fan"] = {
    'check_function': check_cisco_fan,
    'inventory_function': inventory_cisco_fan,
    'service_description': 'FAN %s',
    'snmp_info': ('.1.3.6.1.4.1.9.9.13.1.4.1', ['2', '3', OID_END]),
    'snmp_scan_function': lambda oid: "cisco" in oid(".1.3.6.1.2.1.1.1.0").lower(),
    "includes": ['cisco_sensor_item.include'],
}
