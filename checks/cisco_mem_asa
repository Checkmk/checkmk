#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# The reason for this check is a problem on ASA devices
# See: http://www.cisco.com/c/en/us/support/docs/security/asa-5500-x-series-next-generation-firewalls/116423-troubleshoot-asa-snmp.html


def parse_cisco_mem_asa(info):
    return [info[0][0], info[1][0]]


check_info["cisco_mem_asa"] = {
    "parse_function"        : parse_cisco_mem_asa,
    "inventory_function"    : inventory_cisco_mem,
    "check_function"        : check_cisco_mem,
    "service_description"   : "Memory %s",
    "has_perfdata"          : True,
    "group"                 : "cisco_mem",
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.1.0").lower().startswith("cisco adaptive security") \
                                          and not scan_cisco_mem_asa64(oid),
    "snmp_info"             : [( ".1.3.6.1.4.1.9.9.48.1.1.1", [ "2.1", "5.1", "6.1" , "7.1" ]),
                               ( ".1.3.6.1.4.1.9.9.48.1.1.1", [ "2.6", "5.6", "6.6" , "7.6" ])],
    "default_levels_variable": "cisco_mem_default_levels",
    "includes"              : ['mem.include', 'size_trend.include', 'cisco_mem.include'],
}
