#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def inventory_cisco_wlc(info):
    return [(name, {}) for _node, name, _status in info]


def check_cisco_wlc(item, params, info):
    map_states = {
        "1": (0, "online"),
        "2": (2, "critical"),
        "3": (1, "warning"),
    }

    for node, name, status in info:
        if name == item:
            if node is None:
                nodeinfo = ''
            else:
                nodeinfo = ' (connected to %s)' % node

            state, state_readable = map_states.get(status, ("3", "unknown[%s]" % status))
            return state, "Accesspoint: %s%s" % (state_readable, nodeinfo)

    infotext = "Accesspoint not found"
    # Special treatment if this device is missing
    if params:
        for ap_name, ap_state in params.get("ap_name", []):
            if item.startswith(ap_name):
                return ap_state, infotext

    return 2, infotext


check_info["cisco_wlc"] = {
    "check_function": check_cisco_wlc,
    "inventory_function": inventory_cisco_wlc,
    "group": "cisco_wlc",
    "service_description": "AP %s",
    "node_info": True,
    "snmp_scan_function": lambda oid: oid('.1.3.6.1.2.1.1.2.0') in [
        ".1.3.6.1.4.1.14179.1.1.4.3",
        ".1.3.6.1.4.1.9.1.1069",
        ".1.3.6.1.4.1.9.1.1615",
        ".1.3.6.1.4.1.9.1.1645",
        ".1.3.6.1.4.1.9.1.1631",
        ".1.3.6.1.4.1.9.1.1279",
        ".1.3.6.1.4.1.9.1.1293",
        ".1.3.6.1.4.1.9.1.2170",
        ".1.3.6.1.4.1.9.1.2171",
        ".1.3.6.1.4.1.9.1.2371",
        ".1.3.6.1.4.1.9.1.2250",
        ".1.3.6.1.4.1.9.1.2427",
    ],
    "snmp_info": (".1.3.6.1.4.1.14179.2.2.1.1", [
        "3",
        "6",
    ]),
}
