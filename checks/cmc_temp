#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# [[[u'26', u'26']], [[u'45', u'15', u'45', u'15']]]

factory_settings["cmc_temp_default_levels"] = {
    "levels": (45, 50),
}


def inventory_cmc_temp(info):
    # There are always two sensors
    return [("1", {}), ("2", {})]


def check_cmc_temp(item, params, info):
    offset = int(item) - 1
    current_temp = int(info[0][0][offset])
    dev_high, dev_low = map(int, info[1][0][offset * 2:][:2])
    return check_temperature(current_temp,
                             params,
                             "cmc_temp_%s" % item,
                             dev_levels=(dev_high, dev_high),
                             dev_levels_lower=(dev_low, dev_low))


check_info['cmc_temp'] = {
    "inventory_function": inventory_cmc_temp,
    "check_function": check_cmc_temp,
    "has_perfdata": True,
    "group": "temperature",
    "includes": ["temperature.include"],
    "default_levels_variable": "cmc_temp_default_levels",
    "service_description": "Temperature Sensor %s",
    "snmp_scan_function": lambda oid: ".1.3.6.1.4.1.2606.1" in oid(".1.3.6.1.2.1.1.2.0"),
    #  valueTemperature1,  valueTemperature2
    "snmp_info": [
        (".1.3.6.1.4.1.2606.1.1", [1, 2]),
        # setpointHighTemperature1, setpointLowTemperature1, setpointHighTemperature2, setpointLowTemperature2
        (".1.3.6.1.4.1.2606.1.4", [4, 5, 6, 7])
    ]
}
