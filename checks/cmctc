#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.cmctc import *  # pylint: disable=wildcard-import,unused-wildcard-import
from cmk.base.check_legacy_includes.temperature import *  # pylint: disable=wildcard-import,unused-wildcard-import
# Table columns:
# 0: index
# 1: sensor type (10 = temperature)
# 2: sensor state (4 = ok)
# 3: current value (temperature)
# 4: critical level
# 5: warn low level
# 6: warn level
# 7: description


def inventory_cmctc_temp(info):
    for line in info:
        if saveint(line[1]) == 10:
            yield line[0], None


def check_cmctc_temp(item, params, info):
    for line in info:  # , value1, value2 in info:
        if line[0] != item:
            continue

        status, current, crit, low, warn = map(int, line[2:7])

        return check_temperature(
            current,
            params,
            "cmctc_temp_%s" % item,
            dev_levels=(warn, crit),
            dev_levels_lower=(low, float("-inf")),  # no lower critical level specified
            dev_status=cmctc_translate_status(status),
            dev_status_name="Unit: %s" % cmctc_translate_status_text(status))


check_info['cmctc.temp'] = {
    "check_function": check_cmctc_temp,
    "inventory_function": inventory_cmctc_temp,
    "has_perfdata": True,
    "service_description": "Temperature %s",
    "group": "temperature",
    "snmp_scan_function": cmctc_snmp_scan_function,
    "snmp_info": (
        # Base to all IO units
        ".1.3.6.1.4.1.2606.4.2",
        # Each of the up to 4 units has its own subtree
        ["3", "4", "5", "6"],
        [
            # sensors index (1-4)
            "5.2.1.1",
            # sensor type (10 = temperature)
            "5.2.1.2",
            # unit status: notAvail(1), lost(2), changed(3), ok(4), off(5), on(6), warning(7), tooLow(8), tooHigh(9)
            "5.2.1.4",
            # current value
            "5.2.1.5",
            # high value (used for critical state)
            "5.2.1.6",
            # low value (used for warning, if temp falls below this value)
            "5.2.1.7",
            # warn value (used for warning state)
            "5.2.1.8",
            # description (configured by user via admin interface)
            "7.2.1.2",
        ]),
}
