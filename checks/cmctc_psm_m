#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.cmctc import *  # pylint: disable=wildcard-import,unused-wildcard-import
# Table columns:
# 0: index
# 1: sensor type (30 = Power PSM,)
# 2: sensor state (4 = ok)
# 3: current value (Ampere)
# 4: critical level
# 5: warn low level
# 6: warn level
# 7: description

cmctc_pcm_m_sensor_types = {
    72: "kW",
    73: "kW",
    74: "hz",
    75: "V",
    77: "A",
    79: "kW",
    80: "kW",
}
check_config_variables.append("cmctc_pcm_m_sensor_types")


def inventory_cmctc_psm_m(info):
    return [(line[7] + " " + line[0], None)
            for line in info
            if saveint(line[1]) in cmctc_pcm_m_sensor_types]


def check_cmctc_psm_m(item, no_params, info):
    for line in info:
        if line[7] + " " + line[0] != item:
            continue
        sensor_type = saveint(line[1])
        unit = cmctc_pcm_m_sensor_types[sensor_type]
        current_val = saveint(line[3]) / 10
        output = "%s at %d%s " % (line[7], current_val, unit)
        perf = [(unit, current_val, "", "", "", "")]
        if int(line[2]) == 4:
            return (0, output, perf)
        return (2, output, perf)

    return (3, "Item no found in SNMP tree")


check_info["cmctc_psm_m"] = {
    'check_function': check_cmctc_psm_m,
    'inventory_function': inventory_cmctc_psm_m,
    'service_description': 'CMC %s',
    'has_perfdata': True,
    'snmp_info': (
        # Base to all IO units
        ".1.3.6.1.4.1.2606.4.2",
        # Each of the up to 4 units has its own subtree
        ["3", "4", "5", "6"],
        [
            # sensors index (1-4)
            "5.2.1.1",
            # sensor type (10 = temperature)
            "5.2.1.2",
            # unit status: notAvail(1), lost(2), changed(3), ok(4), off(5), on(6), warning(7), tooLow(8), tooHigh(9)
            "5.2.1.4",
            # current value
            "5.2.1.5",
            # high value (used for critical state)
            "5.2.1.6",
            # low value (used for warning, if temp falls below this value)
            "5.2.1.7",
            # warn value (used for warning state)
            "5.2.1.8",
            #Port Desct
            "5.2.1.3",
        ]),
    'snmp_scan_function': cmctc_snmp_scan_function,
}
