#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def parse_couchbase_nodes_operations(info):
    parsed = {}
    for line in info:
        if len(line) < 2:
            continue
        raw_value, node = line[0], ' '.join(line[1:])
        try:
            parsed[node] = float(raw_value)
        except ValueError:
            continue
    total = sum(parsed.values())
    parsed[None] = total
    return parsed


@get_parsed_item_data
def check_couchbase_nodes_operations(_item, params, operations):
    return check_levels(operations, 'op_s', params.get('ops'), unit="/s")


check_info['couchbase_nodes_operations'] = {
    'parse_function': parse_couchbase_nodes_operations,
    'inventory_function': discover(lambda k, _v: k is not None),
    'check_function': check_couchbase_nodes_operations,
    'service_description': 'Couchbase %s Operations',
    'includes': ['couchbase.include'],
    'group': 'couchbase_ops',
    'has_perfdata': True,
}

check_info['couchbase_nodes_operations.total'] = {
    'inventory_function': discover(lambda k, _v: k is None),
    'check_function': check_couchbase_nodes_operations,
    'service_description': 'Couchbase Total Operations',
    'group': 'couchbase_ops_nodes',
    'has_perfdata': True
}
