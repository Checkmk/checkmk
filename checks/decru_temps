#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.temperature import *  # pylint: disable=wildcard-import,unused-wildcard-import


def inventory_decru_temps(info):
    for name, rawtemp in info:
        rawtemp = int(fahrenheit_to_celsius(rawtemp))
        # device doesn't provide warning/critical levels
        # instead, this uses the temperature at inventory-time +4/+8
        yield name, {"levels": (rawtemp + 4, rawtemp + 8)}


def check_decru_temps(item, params, info):
    for name, rawtemp in info:
        if name == item:
            temp = fahrenheit_to_celsius(int(rawtemp))
            return check_temperature(temp, params, "decru_temps_%s" % item)


check_info["decru_temps"] = {
    'check_function': check_decru_temps,
    'inventory_function': inventory_decru_temps,
    'service_description': 'Temperature %s',
    'has_perfdata': True,
    'snmp_info': ('.1.3.6.1.4.1.12962.1.2.4.1', [2, 3]),
    'snmp_scan_function': lambda oid: "datafort" in oid('.1.3.6.1.2.1.1.1.0').lower(),
    'group': 'temperature',
}
