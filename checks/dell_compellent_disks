#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# example output
# .1.3.6.1.4.1.674.11000.2000.500.1.2.14.1.2.1 1
# .1.3.6.1.4.1.674.11000.2000.500.1.2.14.1.2.2 2
# .1.3.6.1.4.1.674.11000.2000.500.1.2.14.1.3.1 1
# .1.3.6.1.4.1.674.11000.2000.500.1.2.14.1.3.2 1
# .1.3.6.1.4.1.674.11000.2000.500.1.2.14.1.5.1 1
# .1.3.6.1.4.1.674.11000.2000.500.1.2.14.1.5.2 1
# .1.3.6.1.4.1.674.11000.2000.500.1.2.14.1.6.1 ""
# .1.3.6.1.4.1.674.11000.2000.500.1.2.14.1.6.2 ""
# .1.3.6.1.4.1.674.11000.2000.500.1.2.14.1.11.1 1
# .1.3.6.1.4.1.674.11000.2000.500.1.2.14.1.11.2 1

dell_compellent_disks_health_map = {
    "1": (0, "healthy"),
    "0": (2, "not healthy"),
}


def inventory_dell_compellent_disks(info):
    for elem in info:
        yield (elem, None)


def parse_dell_compellent_disks(info):
    # Need to be compatible with shared inventory function
    parsed = {}
    disk_info, disk_serials = info
    for idx, (number, status, health, health_message, enclosure) in enumerate(disk_info):
        inst_data = [status, health, health_message, enclosure]
        try:
            inst_data.append(disk_serials[idx])
        except IndexError:
            inst_data.append(None)
        parsed.setdefault(number, inst_data)
    return parsed


def check_dell_compellent_disks(item, _no_params, parsed):
    data = parsed.get(item)
    if data is None:
        return

    dev_state, health, health_message, enclosure, serial = data
    state, state_readable = dell_compellent_dev_state_map(dev_state)
    yield state, "Status: %s" % state_readable

    yield 0, "Location: Enclosure %s" % enclosure
    if serial is not None:
        yield 0, "Serial number: %s" % serial

    if health_message:
        health_state, health_state_readable = dell_compellent_disks_health_map.get(
            health, (3, 'unknown[%s]' % health))
        yield health_state, "Health: %s, Reason: %s" % (health_state_readable, health_message)


check_info['dell_compellent_disks'] = {
    'parse_function': parse_dell_compellent_disks,
    'inventory_function': inventory_dell_compellent_disks,
    'check_function': check_dell_compellent_disks,
    'service_description': 'Disk %s',
    'snmp_info': [
        (
            '.1.3.6.1.4.1.674.11000.2000.500.1.2.14.1',
            [
                "2",  # DELL-STORAGE-SC-MIB::scDiskNbr
                "3",  # DELL-STORAGE-SC-MIB::scDiskStatus
                "5",  # DELL-STORAGE-SC-MIB::scDiskHealthy
                "6",  # DELL-STORAGE-SC-MIB::scDiskStatusMsg
                "11",  # DELL-STORAGE-SC-MIB::scDiskEnclosure
            ]),
        (
            '.1.3.6.1.4.1.674.11000.2000.500.1.2.45.1',
            [
                "3",  # DELL-STORAGE-SC-MIB::scDiskConfigSerial
            ]),
    ],
    'snmp_scan_function': lambda oid: oid(".1.3.6.1.4.1.674.11000.2000.500.1.2.1.0"),
    'includes': ["dell_compellent.include"],
}
