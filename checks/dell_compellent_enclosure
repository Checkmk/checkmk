#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# example output
# .1.3.6.1.4.1.674.11000.2000.500.1.2.15.1.2.1 1
# .1.3.6.1.4.1.674.11000.2000.500.1.2.15.1.3.1 1
# .1.3.6.1.4.1.674.11000.2000.500.1.2.15.1.5.1 ""
# .1.3.6.1.4.1.674.11000.2000.500.1.2.15.1.6.1 "SAS_EBOD_6G"
# .1.3.6.1.4.1.674.11000.2000.500.1.2.15.1.7.1 "EN-SC4020"
# .1.3.6.1.4.1.674.11000.2000.500.1.2.15.1.9.1 "34QLD67"


def check_dell_compellent_enclosure(item, params, info):
    for number, status, status_message, enc_type, model, serial in info:
        if number == item:
            state, state_readable = dell_compellent_dev_state_map(status)
            yield state, "Status: %s" % state_readable
            yield 0, "Model: %s, Type: %s, Service-Tag: %s" % (model, enc_type, serial)

            if status_message:
                yield state, "State Message: %s" % status_message


check_info['dell_compellent_enclosure'] = {
    'inventory_function': inventory_dell_compellent,
    'check_function': check_dell_compellent_enclosure,
    'service_description': 'Enclosure %s',
    'snmp_info': (
        '.1.3.6.1.4.1.674.11000.2000.500.1.2.15.1',
        [
            2,  # DELL-STORAGE-SC-MIB::scEnclNbr
            3,  # DELL-STORAGE-SC-MIB::scEnclStatus
            5,  # DELL-STORAGE-SC-MIB::scEnclStatusDescr
            6,  # DELL-STORAGE-SC-MIB::scEnclType
            7,  # DELL-STORAGE-SC-MIB::scEnclModel
            9,  # DELL-STORAGE-SC-MIB::scEnclServiceTag
        ]),
    'snmp_scan_function': lambda oid: oid(".1.3.6.1.4.1.674.11000.2000.500.1.2.1.0"),
    'includes': ["dell_compellent.include"]
}
