#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
import cmk.base.plugins.agent_based.utils.docker as docker

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables from the check-context which are necessary for
# resolving legacy discovery results such as [("SUMMARY", "diskstat_default_levels")]. Furthermore,
# it might also remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.cpu_util import *  # pylint: disable=wildcard-import,unused-wildcard-import


def discover_docker_container_cpu(section):
    if section:
        return [(None, {})]
    return None


def parse_docker_container_cpu(info):
    parsed = {}
    try:
        raw = docker.parse(info).data
        # https://github.com/moby/moby/blob/646072ed6524f159c214f830f0049369db5a9441/docs/api/v1.41.yaml#L6125-L6127
        if (online_cpus := raw.get("online_cpus")) is not None:
            num_cpus = online_cpus
        elif (percpu_usage_len := len(raw["cpu_usage"].get("percpu_usage", []))) != 0:
            num_cpus = percpu_usage_len
        else:
            return {}
        parsed["num_cpus"] = num_cpus
        parsed["system_ticks"] = raw["system_cpu_usage"]
        parsed["container_ticks"] = raw["cpu_usage"]["total_usage"]
        return parsed
    except docker.AgentOutputMalformatted:
        # if agent is run inside docker container, output format differs
        for line in info:
            if line[0] == "cpu":
                parsed["system_ticks"] = sum(map(int, line[1:]))
            else:
                parsed[line[0]] = int(line[1])
        if "user" in parsed and "system" in parsed:
            parsed["container_ticks"] = parsed["user"] + parsed["system"]
        return parsed


# Migration NOTE: Create a separate section, but a common check plugin for
# tplink_cpu, hr_cpu, cisco_nexus_cpu, bintec_cpu, winperf_processor,
# lxc_container_cpu, docker_container_cpu.
# Migration via cmk/update_config.py!
check_info["docker_container_cpu"] = {
    "parse_function": parse_docker_container_cpu,
    "inventory_function": discover_docker_container_cpu,
    "check_function": check_cpu_util_linux_container,
    "service_description": "CPU utilization",
    "has_perfdata": True,
    "group": "cpu_utilization_os",
}
