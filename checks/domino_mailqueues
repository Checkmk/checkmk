#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

factory_settings["domino_mailqueues_defaults"] = {"queue_length": (300, 350)}

MAILQUEUES_LABEL = (
    ("lnDeadMail", "Dead mails"),
    ("lnWaitingMail", "Waiting mails"),
    ("lnMailHold", "Mails on hold"),
    ("lnMailTotalPending", "Total pending mails"),
    ("InMailWaitingforDNS", "Mails waiting for DNS"),
)


def parse_domino_mailqueues(info):
    return {
        item: (label, int(raw_value))
        for (item, label), raw_value in zip(MAILQUEUES_LABEL, info[0])
    }


@get_parsed_item_data
def check_domino_mailqueues(_item, params, data):
    label, value = data
    yield check_levels(
        value,
        'mails',
        params.get("queue_length"),
        infoname=label,
        human_readable_func=lambda d: "%d" % int(d),
    )


check_info["domino_mailqueues"] = {
    "parse_function": parse_domino_mailqueues,
    "inventory_function": discover(),
    "check_function": check_domino_mailqueues,
    "service_description": "Domino Queue %s",
    "has_perfdata": True,
    "default_levels_variable": "domino_mailqueues_defaults",
    "snmp_scan_function": scan_domino,
    "snmp_info": (
        ".1.3.6.1.4.1.334.72.1.1.4",
        [
            '1',  # lnDeadMail
            '6',  # lnWaitingMail
            '21',  # lnMailHold
            '31',  # lnMailTotalPending
            '34',  # InMailWaitingforDNS
        ]),
    "includes": ["domino.include"],
    "group": "domino_mailqueues",
}
