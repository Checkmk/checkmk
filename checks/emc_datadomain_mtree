#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def inventory_emc_datadomain_mtree(info):
    for line in info:
        yield line[0], None


def check_emc_datadomain_mtree(item, _no_params, info):
    state_table = {
        "0": ("unknown", 3),
        "1": ("deleted", 2),
        "2": ("read-only", 1),
        "3": ("read-write", 0),
        "4": ("replication destination", 0),
        "5": ("retention lock enabled", 0),
        "6": ("retention lock disabled", 0),
    }
    for line in info:
        if item == line[0]:
            dev_precomp = line[1]
            dev_state = line[2]
            dev_state_str, dev_state_rc = state_table.get(dev_state,
                                                          ("invalid code %s" % dev_state, 3))
            precompiled = int(float(dev_precomp) * 1024 * 1024 * 1024)
            perfdata = [('precompiled', precompiled)]
            infotext = "Status: %s, Precomiled: %s" % (dev_state_str,
                                                       get_bytes_human_readable(precompiled))
            return dev_state_rc, infotext, perfdata


check_info["emc_datadomain_mtree"] = {
    "check_function": check_emc_datadomain_mtree,
    "inventory_function": inventory_emc_datadomain_mtree,
    "service_description": "MTree %s",
    "has_perfdata": True,
    "snmp_info": (
        ".1.3.6.1.4.1.19746.1.15.2.1.1",
        [
            2,  # MtreeListName
            3,  # MtreeListPreComGi
            4,  # MtreeListStatus
        ]),
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.1.0").startswith("Data Domain OS")
}
