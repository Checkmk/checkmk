#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def parse_emc_ecs_cpu_util(info):
    if not info:
        return {}

    parsed = {}
    error, raw_cpu_user, raw_cpu_nice, raw_cpu_system, raw_cpu_idle, \
    raw_io_send, raw_io_received = info[0]

    raw_cpu_ticks = [raw_cpu_user, raw_cpu_nice, raw_cpu_system, raw_cpu_idle]

    try:
        parsed = {
            'error': error,
            'raw_cpu_ticks': [int(v) for v in raw_cpu_ticks],
            'raw_io_send': int(raw_io_send),
            'raw_io_received': int(raw_io_received),
        }
    except ValueError:
        pass
    return parsed


def check_emc_ecs_cpu_util(items, params, entry):
    now = time.time()
    error = entry['error']
    if error != 'systemStats':
        yield 1, 'Error: %s' % error

    # calculate the rate for every value
    cpu_ticks = cpu_info(['cpu'] + entry['raw_cpu_ticks'])
    rates = []
    for key, val in list(cpu_ticks._asdict().items())[1:]:
        rates.append(get_rate(key, now, val))

    cpu_rates = cpu_info(['cpu'] + rates)
    for result in check_cpu_util_unix(cpu_rates, params):
        yield result

    perfdata = [('read_blocks', get_rate('io_received', now, entry['raw_io_received']), None, None),
                ('write_blocks', get_rate('io_send', now, entry['raw_io_send']), None, None)]
    yield 0, '', perfdata


check_info["emc_ecs_cpu_util"] = {
    "parse_function": parse_emc_ecs_cpu_util,
    "inventory_function": discover_single,
    "check_function": check_emc_ecs_cpu_util,
    "service_description": "CPU utilization",
    "snmp_info": (
        ".1.3.6.1.4.1.2021.11",
        [
            "2",  # ssErrorName
            "50",  # ssCpuRawUser
            "51",  # ssCpuRawNice
            "52",  # ssCpuRawSystem
            "53",  # ssCpuRawIdle
            "57",  # ssIORawSent
            "58",  # ssIORawReceived
        ]),
    "has_perfdata": True,
    "group": "cpu_iowait",
    "includes": ["cpu_util.include"],
}
