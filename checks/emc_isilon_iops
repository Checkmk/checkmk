#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def parse_emc_isilon_iops(info):
    parsed = {}
    for name, iops_str in info:
        try:
            parsed[name] = int(iops_str)
        except ValueError:
            pass
    return parsed


@get_parsed_item_data
def check_emc_isilon_iops(_item, _no_params, iops):
    return check_levels(
        iops,
        "iops",
        None,
        infoname="Disk operations per second",
        human_readable_func=lambda d: "%d" % d,
    )


check_info["emc_isilon_iops"] = {
    "parse_function": parse_emc_isilon_iops,
    "inventory_function": discover(),
    "check_function": check_emc_isilon_iops,
    "service_description": "Disk %s IO",
    "has_perfdata": True,
    "snmp_info": (
        ".1.3.6.1.4.1.12124.2.2.52.1",
        [
            2,  # diskPerfDeviceName
            3,  # diskPerfOpsPerSecond
        ]),
    "snmp_scan_function": lambda oid: "isilon" in oid(".1.3.6.1.2.1.1.1.0").lower(),
}
