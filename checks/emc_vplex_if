#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

factory_settings['if_default_levels'] = IF_CHECK_DEFAULT_PARAMETERS


@network_interface_scan_registry.register
def snmp_scan_function_emc_vplex_if(oid):
    return oid(".1.3.6.1.2.1.1.1.0") == "" and oid(".1.3.6.1.4.1.1139.21.2.2.8.1.*")


def parse_emc_vplex_if(info):
    directors = {}
    for director, ip in info[0]:
        directors[ip] = {"name": director}

    nics = []
    for idx, frontend_info in enumerate(info[1] + info[2]):
        _index, description, readbytes, writebytes, if_ip = frontend_info
        if_ip = if_ip.rsplit(".", 1)[0]

        nic = [0] * 20
        nic[0] = str(idx + 1)  # Index
        nic[1] = description  # Description
        nic[2] = ""
        #nic[3]  = 0                                    # Speed
        nic[4] = "1"  # Status
        # IN
        nic[5] = readbytes  # inoctets
        #nic[6]  = 0                                    # inucast
        #nic[7]  = 0                                    # inmcast
        #nic[8]  = 0                                    # ibcast
        #nic[9]  = 0                                    # indiscards
        #nic[10] = 0                                    # inerrors
        # OUT
        nic[11] = writebytes  # outoctets
        #nic[12] = 0                                    # outucast
        #nic[13] = 0                                    # outmcast
        #nic[14] = 0                                    # outbcast
        #nic[15] = 0                                    # outdiscards
        #nic[16] = 0                                    # outspeed
        #nic[17] = 0                                    # outqlen
        nic[18] = "%s %s" % (directors[if_ip]["name"], description)  # Alias
        #nic[19] = 0                                    # MAC
        nics.append(nic)

    return nics


def inventory_emc_vplex_if(parsed):
    return inventory_if_common(parsed)


def check_emc_vplex_if(item, params, parsed):
    return check_if_common(item, params, parsed)


check_info["emc_vplex_if"] = {
    "parse_function": parse_emc_vplex_if,
    "check_function": check_emc_vplex_if,
    "inventory_function": inventory_emc_vplex_if,
    "service_description": 'Interface %s',
    'snmp_scan_function': snmp_scan_function_emc_vplex_if,
    "snmp_info": [
        (
            ".1.3.6.1.4.1.1139.21.2.2",
            [
                "1.1.3",  # vplexDirectorName
                OID_END
            ]),
        (
            ".1.3.6.1.4.1.1139.21.2.2.5.1",
            [
                1,  # vplexDirectorFEPortIndex
                2,  # vplexDirectorFEPortName
                9,  # vplexDirectorFEPortBytesRead
                10,  # vplexDirectorFEPortBytesWrite
                OID_END
            ]),
        (
            ".1.3.6.1.4.1.1139.21.2.2.7.1",
            [
                1,  # vplexDirectorBEPortIndex
                2,  # vplexDirectorBEPortName
                9,  # vplexDirectorBEPortBytesRead
                10,  # vplexDirectorBEPortBytesWrite
                OID_END
            ]),
    ],
    "has_perfdata": True,
    "default_levels_variable": "if_default_levels",
    "group": "if",
    "includes": ["if.include"],
}
