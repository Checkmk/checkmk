#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Agent / MIB output
# see: 1.3.6.1.4.1.3375.2.1.3.2.1.2 (Chassis fans)
# F5-BIGIP-SYSTEM-MIB::sysChassisFanEntry
# see: 1.3.6.1.4.1.3375.2.1.3.1.1 (CPU & CPU fans)
# sysCpuGroup

f5_bigip_fans_default_levels = (2000, 500)


def f5_bigip_fans_genitem(fanid):
    fanid = int(fanid)
    if fanid < 10:
        fantype = "Processor"
    elif fanid >= 100:
        fantype = "Chassis"
    else:
        fantype = "Unknown"
    return "%s %d" % (fantype, fanid)


def inventory_f5_bigip_fans(info):
    inventory = []
    for line in info:
        for fanentry in line:
            if fanentry[0] == '0':
                continue
            inventory.append((f5_bigip_fans_genitem(fanentry[0]), "f5_bigip_fans_default_levels"))

    return inventory


def check_f5_bigip_fans(item, _no_params, info):
    for line in info:
        for fanentry in line:
            if f5_bigip_fans_genitem(fanentry[0]) == item:
                speed = int(fanentry[1])
                warn, crit = f5_bigip_fans_default_levels
                msgtxt = "speed is %d rpm" % speed
                if speed > warn:
                    return (0, msgtxt)
                elif speed < crit:
                    return (2, msgtxt)
                elif speed < warn:
                    return (1, msgtxt)
                return (3, "could not detect speed")

    return (3, "item not found in SNMP output")


# Get ID and Speed from the CPU and chassis fan tables

check_info["f5_bigip_fans"] = {
    'check_function': check_f5_bigip_fans,
    'inventory_function': inventory_f5_bigip_fans,
    'service_description': 'FAN %s',
    'snmp_info': [('.1.3.6.1.4.1.3375.2.1.3.2.1.2.1', [1, 3]),
                  ('.1.3.6.1.4.1.3375.2.1.3.1.2.1', [1, 3])],
    'snmp_scan_function': lambda oid: '.1.3.6.1.4.1.3375.2' in oid(".1.3.6.1.2.1.1.2.0") and
                          "big-ip" in oid(".1.3.6.1.4.1.3375.2.1.4.1.0").lower(),
}
