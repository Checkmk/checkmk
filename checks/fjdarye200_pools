#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.df import *  # pylint: disable=wildcard-import,unused-wildcard-import
from cmk.base.check_legacy_includes.size_trend import *  # pylint: disable=wildcard-import,unused-wildcard-import
PoolEntry = collections.namedtuple(
    "EternusProvisioningPool",
    ["capacity", "usage", "available"],
)


def parse_fjdarye200_pools(info):
    parsed = {}
    for pool_id, capacity, usage in info:
        try:
            # input unit in MB
            parsed[str(pool_id)] = PoolEntry(
                capacity=int(capacity),
                usage=int(usage),
                available=int(capacity) - int(usage),
            )
        except ValueError:
            pass
    return parsed


@get_parsed_item_data
def check_fjdarye200_pools(item, params, entry):
    return df_check_filesystem_single(
        item,
        entry.capacity,
        entry.available,
        0,
        None,
        None,
        params,
    )


check_info["fjdarye200_pools"] = {
    "parse_function": parse_fjdarye200_pools,
    "inventory_function": discover(),
    "check_function": check_fjdarye200_pools,
    "service_description": "Thin Provisioning Pool %s",
    "snmp_info": (
        ".1.3.6.1.4.1.211.1.21.1.150.14.5.2.1",
        [
            "1",  # fjdaryMgtTpPoolNumber
            "3",  # fjdaryMgtTpPoolTotalCapacity
            "4",  # fjdaryMgtTpPoolUsedCapacity
        ]),
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.211.1.21.1.150",
    "default_levels_variable": "filesystem_default_levels",
    "group": "filesystem",
    "has_perfdata": True,
}
