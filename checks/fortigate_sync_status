#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_fortigate_sync_status(info):
    return [(None, None)] if len(info) > 1 else []


def check_fortigate_sync_status(_no_item, _no_params, info):
    map_statuses = {"0": (2, "unsynchronized"), "1": (0, "synchronized")}

    for name, dev_status in info:
        status, status_readable = map_statuses[dev_status]
        yield status, "%s: %s" % (name, status_readable)


check_info["fortigate_sync_status"] = {
    "check_function": check_fortigate_sync_status,
    "inventory_function": inventory_fortigate_sync_status,
    "service_description": "Sync Status",
    "snmp_scan_function": lambda oid: (oid(".1.3.6.1.2.1.1.2.0").startswith(
        ".1.3.6.1.4.1.12356.101.1") and oid(".1.3.6.1.4.1.12356.101.13.2.1.1.12.1") is not None),
    "snmp_info":
        (".1.3.6.1.4.1.12356.101.13.2.1.1", ["11", "12"]),  # fgHaStatsHostname, fgHaStatsSyncStatus
}
