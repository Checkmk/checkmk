#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

factory_settings['fsc_fans_default_levels'] = {
    'lower': (2000, 1000),
}


def parse_fsc_fans(info):
    parsed = {}
    for fan_name, rpm_str in info:
        try:
            rpm = int(rpm_str)
        except ValueError:
            continue
        parsed.setdefault(fan_name, rpm)
    return parsed


def inventory_fsc_fans(parsed):
    return [(fan_name, {}) for fan_name in parsed]


@get_parsed_item_data
def check_fsc_fans(item, params, data):
    if isinstance(params, tuple):
        params = {'lower': params}
    return check_fan(data, params)


check_info["fsc_fans"] = {
    'parse_function': parse_fsc_fans,
    'inventory_function': inventory_fsc_fans,
    'check_function': check_fsc_fans,
    'service_description': 'FSC %s',
    'snmp_info': ('.1.3.6.1.4.1.231.2.10.2.2.5.2.2.1', [16, 8]),
    'snmp_scan_function': is_fsc_fans_prefer_sc2,
    'has_perfdata': True,
    'group': "hw_fans",
    'includes': ['fan.include', 'fsc.include'],
    'default_levels_variable': 'fsc_fans_default_levels',
}
