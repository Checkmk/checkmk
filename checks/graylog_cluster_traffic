#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2019             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<graylog_cluster_traffic>>>
# {"to": "2019-09-20T12:00:00.000Z", "output": {"2019-09-17T03:00:00.000Z":
# 6511247, "2019-09-18T14:00:00.000Z": 176026381, "2019-09-08T08:00:00.000Z":
# 5879007, "2019-09-15T17:00:00.000Z": 6125353, "2019-09-19T00:00:00.000Z":
# 171947147, "2019-09-04T21:00:00.000Z": 3898949, "2019-09-09T04:00:00.000Z":
# 7305970, "2019-09-07T02:00:00.000Z": 5892132, "2019-09-15T13:00:00.000Z":
# 5918729, "2019-09-17T01:00:00.000Z": 6204003, "2019-09-03T20:00:00.000Z":
# 3491202, "2019-09-17T06:00:00.000Z": 12998748, "2019-09-12T22:00:00.000Z":
# 10281903, "2019-09-06T12:00:00.000Z": 11985705, "2019-09-05T16:00:00.000Z":
# 6598880, "2019-09-13T21:00:00.000Z": 6335781, "2019-09-18T08:00:00.000Z":
# 177931813, "2019-09-15T22:00:00.000Z": 6131828, "2019-09-18T10:00:00.000Z":
# 178435781, "2019-09-15T02:00:00.000Z": 5913174, "2019-09-18T12:00:00.000Z":
# 180571316, "2019-09-17T09:00:00.000Z": 17555409, "2019-09-16T09:00:00.000Z":
# 15022425, "2019-09-10T21:00:00.000Z": 7688443}}

import calendar
import json


def check_graylog_cluster_traffic(no_item, params, parsed):
    if parsed is None:
        return

    for key, infotext in [
        ("input", "Input"),
        ("output", "Output"),
        ("decoded", "Decoded"),
    ]:

        traffic_value = parsed.get(key, []).get(parsed["to"])
        if traffic_value is not None:

            yield check_levels(traffic_value,
                               "graylog_%s" % key,
                               params.get(key),
                               infoname=infotext,
                               human_readable_func=get_bytes_human_readable)

    last_updated = parsed.get("to")
    if last_updated is not None:
        local_timestamp = calendar.timegm(time.strptime(last_updated, '%Y-%m-%dT%H:%M:%S.%fZ'))

        yield 0, "Last updated: %s" % get_timestamp_human_readable(local_timestamp)


check_info["graylog_cluster_traffic"] = {
    "parse_function": parse_graylog_agent_data,
    "check_function": check_graylog_cluster_traffic,
    "inventory_function": discover_single,
    "service_description": "Graylog Cluster Traffic",
    "has_perfdata": True,
    "group": "graylog_cluster_traffic",
    "includes": ["graylog.include"],
}
