#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.hitachi_hnas import *  # pylint: disable=wildcard-import,unused-wildcard-import
hitachi_hnas_bossock_default_levels = (250, 350)


def inventory_hitachi_hnas_bossock(info):
    for clusternode, _fibers in info:
        yield clusternode, 'hitachi_hnas_bossock_default_levels'


def check_hitachi_hnas_bossock(item, params, info):
    for clusternode, fibers in info:
        if clusternode == item:
            warn, crit = params
            infotext = "%s running (levels %d/%d)" % (fibers, warn, crit)

            if int(fibers) >= crit:
                state = 2
            elif int(fibers) >= warn:
                state = 1
            else:
                state = 0

            perfdata = [("fibers", fibers, warn, crit)]

            return state, infotext, perfdata


check_info["hitachi_hnas_bossock"] = {
    "check_function": check_hitachi_hnas_bossock,
    "inventory_function": inventory_hitachi_hnas_bossock,
    "service_description": "Bossock Fibers on Node %s",
    "has_perfdata": True,
    "group": "bossock_fibers",
    "snmp_info": (
        ".1.3.6.1.4.1.11096.6.1.1.6.7.4.1",
        [
            1,  # clusterNodeStatsCnID
            2,  # runningBossockFibers
        ]),
    "snmp_scan_function": hitachin_hnas_scan_function,
}
