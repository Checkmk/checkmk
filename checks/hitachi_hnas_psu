#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.hitachi_hnas import *  # pylint: disable=wildcard-import,unused-wildcard-import


def inventory_hitachi_hnas_psu(info):
    inventory = []
    for clusternode, id_, _status in info:
        inventory.append((clusternode + "." + id_, None))
    return inventory


def check_hitachi_hnas_psu(item, _no_params, info):
    statusmap = (
        ("", 3),  # 0
        ("ok", 0),  # 1
        ("failed", 2),  # 2
        ("notFitted", 1),  # 3
        ("unknown", 3),  # 4
    )

    for clusternode, id_, status in info:
        if clusternode + "." + id_ == item:
            status = int(status)
            if status == 0 or status >= len(statusmap):
                return 3, "PNode %s PSU %s reports unidentified status %s" % (clusternode, id_,
                                                                              status)
            return statusmap[status][1], "PNode %s PSU %s reports status %s" % (
                clusternode, id_, statusmap[status][0])

    return 3, "SNMP did not report a status of this PSU"


check_info["hitachi_hnas_psu"] = {
    "check_function": check_hitachi_hnas_psu,
    "inventory_function": inventory_hitachi_hnas_psu,
    "service_description": "PSU %s",
    "snmp_info": (".1.3.6.1.4.1.11096.6.1.1.1.2.1.13.1", [1, 2, 3]),
    # ClusterNode, ID, Status
    "snmp_scan_function": hitachin_hnas_scan_function,
}
