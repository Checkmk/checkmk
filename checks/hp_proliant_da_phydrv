#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.hp_proliant import *  # pylint: disable=wildcard-import,unused-wildcard-import
hp_proliant_da_phydrv_condition_status2nagios = {
    'other': 3,
    'ok': 0,
    'degraded': 2,
    'failed': 2,
}
hp_proliant_da_phydrv_condition = {
    0: 'n/a',
    1: 'other',
    2: 'ok',
    3: 'degraded',
    4: 'failed',
}

hp_proliant_da_phydrv_status = {
    1: 'other',
    2: 'ok',
    3: 'failed',
    4: 'predictive failure',
    5: 'erasing',
    6: 'erase done',
    7: 'erase queued',
    8: 'SSD wear out',
    9: 'not authenticated',
}

hp_proliant_da_phydrv_smart_status = {
    1: 'other',
    2: 'ok',
    3: 'replace drive',
    4: 'replace drive SSD wear out',
}


def inventory_hp_proliant_da_phydrv(info):
    return [(line[0] + '/' + line[1], None) for line in info]


def check_hp_proliant_da_phydrv(item, _no_params, info):
    for line in info:
        # First condition is for legacy discovered services
        if line[1] == item or (line[0] + '/' + line[1]) == item:
            _cntlr_index, _index, bay, status, ref_hours, size, condition, \
                bus_number, smart_status, _model, _serial, _ty, _fw = line

            snmp_status = hp_proliant_da_phydrv_status[int(status)]

            condition = hp_proliant_da_phydrv_condition[int(condition)]
            status = hp_proliant_da_phydrv_condition_status2nagios[condition]

            return (
                status, 'Bay: %s, Bus number: %s, Status: %s, '
                'Smart status: %s, Ref hours: %s, Size: %sMB, Condition: %s' %
                (bay, bus_number, snmp_status,
                 hp_proliant_da_phydrv_smart_status[int(smart_status)], ref_hours, size, condition))


check_info["hp_proliant_da_phydrv"] = {
    'inventory_function': inventory_hp_proliant_da_phydrv,
    'check_function': check_hp_proliant_da_phydrv,
    'service_description': 'HW Phydrv %s',
    # If something changes here please adopt the related inventory plugin
    'snmp_info': (
        ".1.3.6.1.4.1.232.3.2.5.1.1",
        [
            "1",  # CPQIDA-MIB::cpqDaPhyDrvCntlrIndex
            "2",  # CPQIDA-MIB::cpqDaPhyDrvIndex
            "5",  # CPQIDA-MIB::cpqDaPhyDrvBay
            "6",  # CPQIDA-MIB::cpqDaPhyDrvStatus
            "9",  # CPQIDA-MIB::cpqDaPhyDrvRefHours
            "45",  # CPQIDA-MIB::cpqDaPhyDrvSize
            "37",  # CPQIDA-MIB::cpqDaPhyDrvCondition
            "50",  # CPQIDA-MIB::cpqDaPhyDrvBusNumber
            "57",  # CPQIDA-MIB::cpqDaPhyDrvSmartStatus
            "3",  # CPQIDA-MIB::cpqDaPhyDrvModel
            "51",  # CPQIDA-MIB::cpqDaPhyDrvSerialNum
            "60",  # CPQIDA-MIB::pqDaPhyDrvType
            "4",  # CPQIDA-MIB::cpqDaPhyDrvFWRev
        ]),
    'snmp_scan_function': hp_proliant_scan_function,
}
