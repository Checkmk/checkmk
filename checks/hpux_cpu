#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<hpux_cpu>>>
#  2:23pm  up 196 days,  4:47,  5 users,  load average: 0.05, 0.04, 0.04
#      8 logical processors (2 per socket)

cpuload_default_levels = (5.0, 10.0)


def inventory_hpux_cpu_load(info):
    if len(info) >= 1 and 'load' in info[0]:
        return [(None, "cpuload_default_levels")]


def check_hpux_cpu_load(item, params, info):
    load = [float(l.strip(',')) for l in info[0][-3:]]
    # Assuming 1 cpu when none can be found in the agent output
    try:
        num_cpus = int(info[1][0])
    except Exception:
        num_cpus = 1

    return check_cpu_load_generic(params, load, num_cpus)


check_info["hpux_cpu"] = {
    'check_function': check_hpux_cpu_load,
    'inventory_function': inventory_hpux_cpu_load,
    'service_description': 'CPU load',
    'has_perfdata': True,
    "group": "cpu_load",
    "includes": ["cpu_load.include"],
}
