#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

## Name    Mtu    Network        Address        Ipkts   Ierrs  Opkts Oerrs Coll
# <<<hpux_if>>>
#
# ***          lan0 64 bit MIB statistics:
# Interface Name               = lan0
# PPA Number                   = 0
# Description                  = lan0 HP PCI-X 1000Base-T Release PHNE_36238 B.11.31.0709.02
# Interface Type               = 1000Base-T
# MTU Size                     = 1500
# Speed                        = 1 Gbps
# Station Address              = 0x001A4B067700
# Administration Status        = UP
# Operation Status             = UP
# Last Change                  = Tue Jul 13 10:36:24 2010
# Inbound Octets               = 30886837904
# Inbound Unicast Packets      = 25436296
# Inbound Multicast Packets    = 0
# Inbound Broadcast Packets    = 357491069
# Inbound Discards             = 0
# Inbound Errors               = 0
# Inbound Unknown Protocols    = 357491069
# Outbound Octets              = 3510268106
# Outbound Unicast Packets     = 25436308
# Outbound Multicast Packets   = 0
# Outbound Broadcast Packets   = 0
# Outbound Discards            = 0
# Outbound Errors              = 0
# Counter Discontinuity Time   = Tue Jul 13 10:36:24 2010
# Physical Promiscuous Mode    = FALSE
# Physical Connector Present   = TRUE
# Interface Alias              =
# Link Up/Down Trap Enable     = Enabled

factory_settings['if_default_levels'] = IF_CHECK_DEFAULT_PARAMETERS


def hpux_convert_to_if64(info):
    nics = []
    for line in info:
        if '***' in line:
            nic = ['0'] * 20
            nics.append(nic)
            nic[2] = '6'  # fake port type Ethernet
        elif '=' in line:
            line_txt = " ".join(line)
            left, right = line_txt.split("=")
            left = left.strip()
            right = right.strip()
            if left == "PPA Number":
                nic[0] = right
            elif left == "Speed":
                nic[3] = hpux_parse_speed(right)
            elif left == "Inbound Octets":
                nic[5] = right
            elif left == "Inbound Unicast Packets":
                nic[6] = right
            elif left == "Inbound Multicast Packets":
                nic[7] = right
            elif left == "Inbound Broadcast Packets":
                nic[8] = right
            elif left == "Inbound Discards":
                nic[9] = right
            elif left == "Inbound Errors":
                nic[10] = right
            elif left == "Outbound Octets":
                nic[11] = right
            elif left == "Outbound Unicast Packets":
                nic[12] = right
            elif left == "Outbound Multicast Packets":
                nic[13] = right
            elif left == "Outbound Broadcast Packets":
                nic[14] = right
            elif left == "Outbound Discards":
                nic[15] = right
            elif left == "Outbound Errors":
                nic[16] = right
            elif left == "Operation Status":
                nic[4] = hpux_parse_operstatus(right)
            elif left == "Interface Name":
                nic[1] = right
                nic[18] = right
            elif left == "Station Address":
                h = right[2:]
                nic[19] = "".join([chr(int(x + y, 16)) for (x, y) in zip(h[::2], h[1::2])])
    return nics


def hpux_parse_speed(speed):
    parts = speed.split()
    if parts[1] == "Gbps":
        mult = 1000 * 1000 * 1000
    else:
        mult = 1000 * 1000
    return float(parts[0]) * mult


def hpux_parse_operstatus(txt):
    if txt.lower() == "up":
        return '1'
    return '2'


def inventory_hpux_if(info):
    return inventory_if_common(hpux_convert_to_if64(info))


def check_hpux_if(item, params, info):
    return check_if_common(item, params, hpux_convert_to_if64(info))


check_includes['hpux_if'] = ["if.include"]

check_info["hpux_if"] = {
    'check_function': check_hpux_if,
    'inventory_function': inventory_hpux_if,
    'service_description': 'NIC %s',
    'has_perfdata': True,
    'group': 'if',
    'default_levels_variable': 'if_default_levels',
}
