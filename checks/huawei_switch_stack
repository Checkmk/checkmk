#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2019             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

huawei_switch_stack_unknown_role = "unknown"


def parse_huawei_switch_stack(info):
    stack_role_names = {
        "1": "master",
        "2": "standby",
        "3": "slave",
    }

    stack_enabled_info, stack_role_info = info
    if not stack_enabled_info or stack_enabled_info[0][0] != '1':
        return {}

    parsed = {}
    for line in stack_role_info:
        member_number = line[0]
        stack_role = stack_role_names.get(line[1], huawei_switch_stack_unknown_role)
        parsed[member_number] = stack_role

    return parsed


def inventory_huawei_switch_stack(parsed):
    for item, role in parsed.items():
        yield (item, {'expected_role': role})


@get_parsed_item_data
def check_huawei_switch_stack(item, params, item_data):
    if item_data == huawei_switch_stack_unknown_role:
        return 2, item_data

    if item_data == params['expected_role']:
        return 0, item_data

    return 2, "Unexpected role: %s (Expected: %s)" % (item_data, params['expected_role'])


check_info['huawei_switch_stack'] = {
    'parse_function': parse_huawei_switch_stack,
    'inventory_function': inventory_huawei_switch_stack,
    'check_function': check_huawei_switch_stack,
    'service_description': 'Stack role %s',
    'snmp_info': [
        ('.1.3.6.1.4.1.2011.5.25.183.1', ["5"]),  # hwStackIsStackDevice
        (
            '.1.3.6.1.4.1.2011.5.25.183.1.20.1',
            [OID_END, "3"],  # hwMemberStackRole
        ),
    ],
    'snmp_scan_function': huawei_switch_scan_function,
    'includes': ['huawei_switch.include'],
}
