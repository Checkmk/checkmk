#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2016             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def check_infoblox_dns_stats(_no_item, _no_params, info):
    successes, referrals, nxrrset, nxdomain, \
        recursion, failures = map(int, info[0])

    return check_infoblox_statistics(
        "dns",
        [("successes", successes, "Since DNS process started", "successful responses"),
         ("referrals", referrals, "Since DNS process started", "referrals"),
         ("recursion", recursion, "Since DNS process started", "queries received using recursion"),
         ("failures", failures, "Since DNS process started", "queries failed"),
         ("nxrrset", nxrrset, "Queries", "for non-existent records"),
         ("nxdomain", nxdomain, "Queries", "for non-existent domain")])


check_info['infoblox_dns_stats'] = {
    'inventory_function': inventory_infoblox_statistics,
    'check_function': check_infoblox_dns_stats,
    'service_description': 'DNS statistics',
    'snmp_info': (
        ".1.3.6.1.4.1.7779.3.1.1.3.1.1.1",
        [
            "2",  # IB-DNSONE::ibBindZoneSuccess
            "3",  # IB-DNSONE::ibBindZoneReferral
            "4",  # IB-DNSONE::ibBindZoneNxRRset
            "5",  # IB-DNSONE::ibBindZoneNxDomain
            "6",  # IB-DNSONE::ibBindZoneRecursion
            "7",  # IB-DNSONE::ibBindZoneFailure
        ]),
    'snmp_scan_function': scan_infoblox,
    'has_perfdata': True,
    'includes': ["infoblox.include"],
}
