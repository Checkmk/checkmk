#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# <<<jenkins_instance>>>
# {"quietingDown": false, "nodeDescription": "the master Jenkins node",
# "numExecutors": 0, "mode": "NORMAL", "_class": "hudson.model.Hudson",
# "useSecurity": true}

import json

MAP_INSTANCE_STATE = {
    True: "yes",
    False: "no",
    "NORMAL": "normal",
    "EXCLUSIVE": "exclusive",
    None: "N/A",
}


def parse_jenkins_instance(info):
    parsed = {}

    for line in info:
        parsed.update(json.loads(line[0]))

    return parsed


def inventory_jenkins_instance(parsed):
    yield None, {}


def check_jenkins_instance(_no_item, _no_params, parsed):
    if not parsed:
        return

    inst_desc = parsed.get("nodeDescription")
    if inst_desc is not None:
        yield 0, "Description: %s" % inst_desc.title()

    for key, value, infotext in [("quietingDown", False, "Quieting Down"),
                                 ("useSecurity", True, "Security used")]:

        state = 0
        parsed_data = parsed.get(key)

        if parsed_data is not None and parsed_data != value:
            state = 1
        elif parsed_data is None:
            state = 3

        yield state, "%s: %s" % (infotext, MAP_INSTANCE_STATE[parsed_data])


check_info["jenkins_instance"] = {
    "parse_function": parse_jenkins_instance,
    "check_function": check_jenkins_instance,
    "inventory_function": inventory_jenkins_instance,
    "service_description": "Jenkins Instance",
}
