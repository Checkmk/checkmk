#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.cpu_util import *  # pylint: disable=wildcard-import,unused-wildcard-import
# Default settings for warn/crit values
factory_settings['juniper_cpu_default'] = {'levels': (80.0, 90.0)}


def parse_juniper_cpu_util(info):
    parsed = {}
    for raw_name, raw_util in info:
        name = raw_name.replace('@ ', '') \
                       .replace('/*', '') \
                       .strip()
        if raw_util == "":
            continue
        parsed[name] = int(raw_util)
    return parsed


def inventory_juniper_cpu_util(parsed):
    for descr, util in parsed.items():
        if util > 0:
            # JUNIPER-MIB::jnxOperatingCPU
            # The CPU utilization in percentage of this
            # subject. Zero if unavailable or inapplicable.
            yield descr, {}


@get_parsed_item_data
def check_juniper_cpu_util(item, params, util):
    if not params:
        params = {'levels': (80.0, 90.0)}

    return check_cpu_util(util, params.get('levels'))


check_info['juniper_cpu_util'] = {
    'parse_function': parse_juniper_cpu_util,
    'check_function': check_juniper_cpu_util,
    'inventory_function': inventory_juniper_cpu_util,
    'group': 'juniper_cpu_util',
    'service_description': "CPU utilization %s",
    'has_perfdata': True,
    'snmp_scan_function': lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.2636.1.1.1"
                                                                          ),
    'snmp_info': (
        ".1.3.6.1.4.1.2636.3.1.13.1",
        [
            5,  # jnxOperatingDescr
            8,  # jnxOperatingCPU
        ]),
    'default_levels_variable': 'juniper_cpu_default',
}
