#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.juniper_mem import *  # pylint: disable=wildcard-import,unused-wildcard-import
# .1.3.6.1.4.1.2636.3.1.13.1.5.9.1.0.0 Routing Engine 0 --> JUNIPER-MIB::jnxOperatingDescr.9.1.0.0
# .1.3.6.1.4.1.2636.3.1.13.1.5.9.2.0.0 Routing Engine 1 --> JUNIPER-MIB::jnxOperatingDescr.9.2.0.0
# .1.3.6.1.4.1.2636.3.1.13.1.11.9.1.0.0 37 --> JUNIPER-MIB::jnxOperatingBuffer.9.1.0.0
# .1.3.6.1.4.1.2636.3.1.13.1.11.9.2.0.0 36 --> JUNIPER-MIB::jnxOperatingBuffer.9.2.0.0


def inventory_juniper_mem(info):
    return [(line[0], "juniper_mem_default_levels") for line in info]


def check_juniper_mem(item, params, info):
    for descr, memory_str in info:
        if descr == item:
            memory_percent = float(memory_str)
            infotext = "%s%% used" % memory_str
            warn, crit = params
            if memory_percent >= crit:
                state = 2
            elif memory_percent >= warn:
                state = 1
            else:
                state = 0

            if state > 0:
                infotext += " (warn/crit at %.1f%%/%.1f%%)" % (warn, crit)

            return state, infotext, [("mem_used_percent", memory_percent, warn, crit, 0, 100.0)]


check_info['juniper_mem'] = {
    'inventory_function': inventory_juniper_mem,
    'check_function': check_juniper_mem,
    'service_description': 'Memory %s',
    'snmp_scan_function': lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.2636.1.1.1"
                                                                          ),
    'snmp_info': (
        ".1.3.6.1.4.1.2636.3.1.13.1",
        [
            "5.9",  # jnxOperatingDescr
            "11.9",  # jnxOperatingBuffer
        ]),
    'group': 'juniper_mem_modules',
    'has_perfdata': True,
}
