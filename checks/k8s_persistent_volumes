#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.k8s import *  # pylint: disable=wildcard-import,unused-wildcard-import


@discover
def inventory_k8s_persistent_volumes(_pv, status):
    return status.get('status', {}).get('phase', '') == 'Bound'


@get_parsed_item_data
def check_k8s_persistent_volumes(item, _no_params, pv):
    state = 0
    phase = pv['status']['phase']
    if phase != 'Bound':
        state = 2
    yield state, 'Status: %s' % phase

    access = pv['access']
    if access:
        yield 0, 'Access modes: %s' % ', '.join(access)

    capacity = pv['capacity']
    if capacity:
        yield 0, 'Capacity: %s' % get_bytes_human_readable(capacity)


check_info['k8s_persistent_volumes'] = {
    'parse_function': parse_k8s,
    'inventory_function': inventory_k8s_persistent_volumes,
    'check_function': check_k8s_persistent_volumes,
    'service_description': 'PV %s',
}
