#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.k8s import *  # pylint: disable=wildcard-import,unused-wildcard-import


def discover_k8s_service_port(parsed):
    if parsed:
        for item in parsed:
            yield (item, {})


def k8s_check_value(value, expected, infotext_template):
    state = 0
    infotext = infotext_template % value
    if expected is not None and value != expected:
        state = 2
        infotext += ' (expected %s)' % expected
    return state, infotext


@get_parsed_item_data
def check_k8s_service_port(item, params, parsed):
    yield k8s_check_value(
        parsed['port'],
        params.get('port'),
        'Port: %s',
    )
    yield k8s_check_value(
        parsed['target_port'],
        params.get('target_port'),
        'Target port: %s',
    )

    if parsed['node_port']:
        yield k8s_check_value(
            parsed['node_port'],
            params.get('node_port'),
            'Node port: %s',
        )

    yield k8s_check_value(
        parsed['protocol'],
        params.get('protocol'),
        'Protocol: %s',
    )


check_info['k8s_service_port'] = {
    # section is already migrated
    'inventory_function': discover_k8s_service_port,
    'check_function': check_k8s_service_port,
    'service_description': 'Port %s',
    'group': 'k8s_port',
}
