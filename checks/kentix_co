#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
#
# 2017 comNET GmbH, Bjoern Mueller

# Default levels from http://www.detectcarbonmonoxide.com/co-health-risks/

factory_settings["kentix_co"] = {
    "levels_ppm": (10, 25),
}


def inventory_kentix_co(info):
    if info:
        yield None, {}


def check_kentix_co(item, params, info):
    warn, crit = params["levels_ppm"]
    value = info[0][0].split('.', 3)[-1]
    infotext = 'CO value at %s ppm (parts per million)' % value
    value = int(value)
    perfdata = [('parts_per_million', value, warn, crit)]
    if value >= crit:
        yield 2, infotext, perfdata
    elif value >= warn:
        yield 1, infotext, perfdata
    else:
        yield 0, infotext, perfdata


check_info["kentix_co"] = {
    'inventory_function': inventory_kentix_co,
    'check_function': check_kentix_co,
    'default_levels_variable': 'kentix_co',
    'service_description': 'Carbon Monoxide',
    'has_perfdata': True,
    'snmp_info': (
        '.1.3.6.1.4.1.37954',
        ['2.1.4', '3.1.3'],
        [
            '1',  # coValue
        ]),
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.332.11.6"),
    'group': 'carbon_monoxide',
}
