#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_kentix_temp(info):
    if info[0][0].startswith('2.1.1'):
        return [('LAN', {})]
    return [('Rack', {})]


def check_kentix_temp(item, params, info):
    info[0][0] = info[0][0].split('.', 3)[-1]
    value, lower_warn, upper_warn, _alarm, _text = info[0]
    temp = float(value) / 10

    return check_temperature(temp,
                             params,
                             "kentix_temp_%s" % item,
                             dev_levels=(float(upper_warn), float(upper_warn)),
                             dev_levels_lower=(float(lower_warn), float(lower_warn)))


check_info["kentix_temp"] = {
    'check_function': check_kentix_temp,
    'inventory_function': inventory_kentix_temp,
    'service_description': 'Temperature %s',
    'has_perfdata': True,
    'snmp_info': (
        '.1.3.6.1.4.1.37954',
        ['2.1.1', '3.1.1'],
        [
            '1',  # temperatureValue
            '2',  # temperatureMin
            '3',  # temperatureMax
            '4',  # temperatureAlarm, not used here
            '5',  # temperatureAlarmtext
        ]),
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.332.11.6"),
    "group": "temperature",
    "includes": ["temperature.include"],
}
