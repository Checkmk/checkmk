#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Check has been developed using a Emerson Network Power Rack PDU Card
# Agent App Firmware Version  4.840.0
# Agent Boot Firmware Version 4.540.3
# FDM Version 1209
# GDD Version 45585

# Example info data:
# [[['Rack PDU Card', '4.840.0', '535055G103T2010JUN240295']], [['1', '1', '.1.3.6.1.4.1.476.1.42.4.8.2.2', 'Emerson Network Power', '1']]]

lgp_info_devices = {
    '.1.3.6.1.4.1.476.1.42.4.8.2.1': 'lgpMPX',
    '.1.3.6.1.4.1.476.1.42.4.8.2.2': 'lgpMPH',
}


def inventory_lgp_info(info):
    if info and info[0] and info[0][0]:
        return [(None, None)]


def check_lgp_info(item, params, info):
    if info and info[0] and info[0][0]:
        agent_info = info[0][0]

        device_output = ''
        if len(info) > 1:
            devices = []
            for id_, manufacturer, unit_number in info[1]:
                id_ = lgp_info_devices.get(id_, id_)
                devices.append('ID: %s, Manufacturer: %s, Unit-Number: %s' %
                               (id_, manufacturer, unit_number))
            device_output = '\n'.join(devices)

        return (0, 'Model: %s, Firmware: %s, S/N: %s\n%s' % tuple(agent_info + [device_output]))

check_info["lgp_info"] = {
    'check_function':          check_lgp_info,
    'inventory_function':      inventory_lgp_info,
    'service_description':     'Liebert Info',
    'snmp_info':               [('.1.3.6.1.4.1.476.1.42.2.1', [
                                    '2.0', # LIEBERT-GP-AGENT-MIB::lgpAgentIdentModel.0
                                    '3.0', # LIEBERT-GP-AGENT-MIB::lgpAgentIdentFirmwareVersion.0
                                    '4.0', # LIEBERT-GP-AGENT-MIB::lgpAgentIdentSerialNumber.0
                                ]),
                                ('.1.3.6.1.4.1.476.1.42.2.4.2.1', [
                                    '2', # LIEBERT-GP-AGENT-MIB::lgpAgentDeviceId.1
                                    '3', # LIEBERT-GP-AGENT-MIB::lgpAgentDeviceManufacturer.1
                                    '6', # LIEBERT-GP-AGENT-MIB::lgpAgentDeviceUnitNumber.1
                               ])],
    'snmp_scan_function':      lambda oid: oid('.1.3.6.1.2.1.1.2.0') == \
                                                          '.1.3.6.1.4.1.476.1.42',
}
