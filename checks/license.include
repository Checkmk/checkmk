#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def license_check_levels(total, in_use, params):
    if params is False:
        warn = None
        crit = None
    elif not params:
        warn = total
        crit = total
    elif isinstance(params[0], int):
        warn = max(0, total - params[0])
        crit = max(0, total - params[1])
    else:
        warn = total * (1 - params[0] / 100)
        crit = total * (1 - params[1] / 100)

    perfdata = [("licenses", in_use, warn, crit, 0, total)]
    if in_use <= total:
        infotext = "used %d out of %d licenses" % (in_use, total)
    else:
        infotext = "used %d licenses, but you have only %d" % (in_use, total)

    if crit is not None and in_use >= crit:
        status = 2
    elif warn is not None and in_use >= warn:
        status = 1
    else:
        status = 0

    if status:
        infotext += " (warn/crit at %d/%d)" % (warn, crit)

    return status, infotext, perfdata
