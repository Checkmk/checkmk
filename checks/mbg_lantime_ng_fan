#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | "_ \ / _ \/ __| |/ /   | |\/| | " /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_mbg_lantime_ng_fan(info):
    for line in info:
        #do not discover fan state "not available" (0)
        if line[1] == "0":
            continue
        yield line[0], None


def check_mbg_lantime_ng_fan(item, _no_params, info):
    fan_states = {
        "1": (0, "on"),
        "2": (2, "off"),
    }
    fan_errors = {
        "0": (0, "not available"),
        "1": (0, "no"),
        "2": (2, "yes"),
    }
    for line in info:
        index, fan_status, fan_error = line
        if index == item:
            fan_state, fan_state_name = fan_states[fan_status]
            error_state, error_name = fan_errors[fan_error]
            infotext = "%s, errors: %s" % (fan_state_name, error_name)
            state = max(fan_state, error_state)
            return state, infotext


check_info["mbg_lantime_ng_fan"] = {
    "check_function": check_mbg_lantime_ng_fan,
    "inventory_function": inventory_mbg_lantime_ng_fan,
    "service_description": "Fan %s",
    "snmp_info": (
        ".1.3.6.1.4.1.5597.30.0.5.1.2.1",
        [
            1,  # mgbLtNgSysFanIndex
            2,  # mgbLtNgSysFanStatus
            3,  # mgbLtNgSysFanError
        ]),
    "snmp_scan_function": snmp_scan_mbg_lantime_ng_hw,
    "includes": ["mbg_lantime.include"],
}
