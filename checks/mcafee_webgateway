#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2016             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# -- Statistics
# .1.3.6.1.4.1.1230.2.7.2.1.2.0 200 --> MCAFEE-MWG-MIB::stMalwareDetected.0
# .1.3.6.1.4.1.1230.2.7.2.1.5.0 4394370 --> MCAFEE-MWG-MIB::stConnectionsBlocked.0


def parse_mcaffee_webgateway(info):
    parsed = []
    for index, key, label in ((0, 'infections', 'Infections'), (1, 'connections_blocked',
                                                                'Connections blocked')):
        try:
            parsed.append((key, int(info[0][index]), label))
        except (IndexError, ValueError):
            pass
    return parsed


def check_mcafee_webgateway(_no_item, params, parsed):
    now = time.time()
    for key, value, label in parsed:
        rate = get_rate("check_mcafee_webgateway.%s" % key, now, value)
        yield check_levels(rate,
                           '%s_rate' % key,
                           params.get(key),
                           human_readable_func=lambda f: "%.1f/s" % f,
                           infoname=label)


check_info['mcafee_webgateway'] = {
    'parse_function': parse_mcaffee_webgateway,
    'inventory_function': inventory_mcafee_gateway_generic,
    'check_function': check_mcafee_webgateway,
    'service_description': 'Web gateway statistics',
    'snmp_info': (
        '.1.3.6.1.4.1.1230.2.7.2.1',
        [
            "2",  # MCAFEE-MWG-MIB::stMalwareDetected
            "5",  # MCAFEE-MWG-MIB::stConnectionsBlocked
        ]),
    'snmp_scan_function': scan_mcafee_webgateway,
    'has_perfdata': True,
    'includes': ['mcafee_gateway.include'],
    'group': 'mcafee_web_gateway',
}
