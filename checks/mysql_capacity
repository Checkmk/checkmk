#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.mysql import *  # pylint: disable=wildcard-import,unused-wildcard-import
# <<<mysql_capacity>>>
# greendb 163840  1428160512
# hirn    16384   238026752
# information_schema  9216    0
# mysql   650067  0
# performance_schema  0   0
# wa-confluence   15499264    13805551616

# new: can have instance headers (can be empty), e.g.:
# <<<mysql_capacity>>>
# [[]]
# information_schema      147456  0
# mysql   665902  292
# performance_schema      0       0
# test 409255936       54525952


@mysql_parse_per_item
def parse_mysql_capacity(info):
    data = {}
    for line in info:
        dbname, size, avail = " ".join(line[:-2]), line[-2], line[-1]
        try:
            data[dbname] = (int(size), int(avail))
        except ValueError:
            data[dbname] = (size, avail)

    return data


@discover
def inventory_mysql_size(instance, data):
    for dbname, values in data.items():
        if dbname not in ("information_schema", "mysql", "performance_schema") \
            and 'NULL' not in values:
            yield "%s:%s" % (instance, dbname)


def check_mysql_size(item, params, parsed):
    if ":" not in item:
        # support items discovered before 1.2.7
        instance, dbname = "mysql", item
    else:
        instance, dbname = item.split(':')

    size, _avail = parsed.get(instance, {}).get(dbname, (None, None))
    if not isinstance(size, int):
        return

    # size and avail are given as bytes
    yield check_levels(size,
                       'database_size',
                       params,
                       human_readable_func=get_bytes_human_readable,
                       infoname="Size")


check_info['mysql_capacity'] = {
    "parse_function": parse_mysql_capacity,
    "inventory_function": inventory_mysql_size,
    "check_function": check_mysql_size,
    "service_description": "MySQL DB Size %s",
    "has_perfdata": True,
    "group": "mysql_db_size",
}
