#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<netapp_api_aggr:sep(9)>>>
# aggregation aggr0_root_n1       size-available 940666880        size-total 1793064960
# aggregation aggr0_root_n2       size-available 940556288        size-total 1793064960
# aggregation aggr1_n1    size-available 2915315712       size-total 9437184000
# aggregation aggr1_n2    size-available 2936561664       size-total 9437184000


def inventory_netapp_api_aggr(parsed):
    for name, aggr in parsed.iteritems():
        if "size-total" in aggr and "size-available" in aggr:
            yield name, {}


@get_parsed_item_data
def check_netapp_api_aggr(item, params, aggr):
    if not ("size-total" in aggr and "size-available" in aggr):
        return
    mega = 1024.0 * 1024.0
    size_total = int(aggr.get("size-total")) / mega
    size_avail = int(aggr.get("size-available")) / mega
    return df_check_filesystem_list(item, params, [(item, size_total, size_avail, 0)])


check_info["netapp_api_aggr"] = {
    'check_function': check_netapp_api_aggr,
    'parse_function': netapp_api_parse_lines,
    'inventory_function': inventory_netapp_api_aggr,
    'service_description': 'Aggregation %s',
    'group': 'filesystem',
    'has_perfdata': True,
    'includes': ["size_trend.include", "df.include", "netapp_api.include"],
    'default_levels_variable': 'filesystem_default_levels',
}
