#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<netapp_api_protocol:sep(9)>>>
# protocol nfs nfsv3_write_ops 0   instance_name nfs   nfsv3_read_ops 0
# protocol nfsv4   instance_name nfsv4 nfsv4_read_ops 0    nfsv4_write_ops 0
# protocol iscsi   instance_name iscsi iscsi_read_ops 0    iscsi_write_ops 0
# protocol cifs    instance_name cifs  cifs_read_ops 0 cifs_write_ops 0
# protocol fcp instance_name fcp   fcp_write_ops 0 fcp_read_ops 0


def inventory_netapp_api_protocol(parsed):
    for values in parsed.values():
        if len(values) > 2:  # only create checks for protocols with infos
            yield values["protocol"], None


def check_netapp_api_protocol(item, _no_params, parsed):
    counter_data = parsed.get(item)
    if not counter_data:
        return

    now = time.time()
    for key, value in counter_data.items():
        for what in ["read", "write"]:
            if key.endswith("%s_ops" % what):
                per_sec = get_rate(key, now, int(value))
                yield 0, "%s OPs: %s" % (what.title(), per_sec), [("%s_%s_ios" % (item, what),
                                                                   per_sec)]


check_info["netapp_api_protocol"] = {
    'parse_function': netapp_api_parse_lines,
    'check_function': check_netapp_api_protocol,
    'inventory_function': inventory_netapp_api_protocol,
    'service_description': 'Protocol %s',
    'has_perfdata': True,
    'includes': ["netapp_api.include"]
}
