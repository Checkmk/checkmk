#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# .1.3.6.1.4.1.4526.10.43.1.7.1.3.1.0 2 --> FASTPATH-BOXSERVICES-PRIVATE-MIB::boxServicesPowSupplyItemState.1.0
# .1.3.6.1.4.1.4526.10.43.1.7.1.3.1.1 1 --> FASTPATH-BOXSERVICES-PRIVATE-MIB::boxServicesPowSupplyItemState.1.1
# .1.3.6.1.4.1.4526.10.43.1.7.1.3.2.0 2 --> FASTPATH-BOXSERVICES-PRIVATE-MIB::boxServicesPowSupplyItemState.2.0
# .1.3.6.1.4.1.4526.10.43.1.7.1.3.2.1 1 --> FASTPATH-BOXSERVICES-PRIVATE-MIB::boxServicesPowSupplyItemState.2.1


def parse_netgear_powersupplies(info):
    parsed = {}
    for oid_end, sstate in info:
        parsed.setdefault("%s" % oid_end.replace(".", "/"), sstate)
    return parsed


def inventory_netgear_powersupplies(parsed):
    return [
        (sensorname, {}) for sensorname, sensorinfo in parsed.items() if sensorinfo not in ["1"]
    ]


def check_netgear_powersupplies(item, params, parsed):
    map_states = {
        "1": (1, "not present"),
        "2": (0, "operational"),
        "3": (2, "failed"),
    }
    if item in parsed:
        state, state_readable = map_states[parsed[item]]
        return state, "Status: %s" % state_readable


check_info['netgear_powersupplies'] = {
    'parse_function': parse_netgear_powersupplies,
    'inventory_function': inventory_netgear_powersupplies,
    'check_function': check_netgear_powersupplies,
    'service_description': 'Power Supply %s',
    'snmp_info': (
        '.1.3.6.1.4.1.4526.10.43.1.7.1',
        [
            OID_END,
            "3",  # FASTPATH-BOXSERVICES-PRIVATE-MIB::boxServicesPowSupplyItemState
        ]),
    'snmp_scan_function': lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.4526.100"),
}
