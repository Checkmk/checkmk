#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.mem import *  # pylint: disable=wildcard-import,unused-wildcard-import
#
# Example Output:
# .1.3.6.1.4.1.5951.4.1.1.41.2.0  13
# .1.3.6.1.4.1.5951.4.1.1.41.4.0  7902

netscaler_mem_default_levels = (80.0, 90.0)


def inventory_netscaler_mem(info):
    if info:
        return [(None, 'netscaler_mem_default_levels')]


def check_netscaler_mem(_no_item, params, info):
    used_mem_perc, total_mem_mb = map(float, info[0])
    total_mem = total_mem_mb * 1024 * 1024
    used_mem = used_mem_perc / 100.0 * total_mem

    yield check_memory_element(
        "Usage",
        used_mem,
        total_mem,
        ('perc_used', params),
        metric_name="mem_used",
    )


check_info["netscaler_mem"] = {
    "check_function": check_netscaler_mem,
    "inventory_function": inventory_netscaler_mem,
    "service_description": "Memory",
    "has_perfdata": True,
    "group": "netscaler_mem",
    "snmp_info": (
        ".1.3.6.1.4.1.5951.4.1.1.41",
        [  # nsResourceGroup
            2,  # resMemUsage
            4,  # memSizeMB
        ]),
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.5951.1"),
}
