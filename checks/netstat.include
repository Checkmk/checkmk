#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Item is a user defined identifier of the connection.
# Example for params:
# {
#    "proto"       : "UDP",
#    "local_ip"    : "10.1.1.99",
#    "remote_port" : 5665,
#    "state"       : "ESTABLISHED",
# }
# Other keys: local_port, remote_ip. Missing entries do not care.


def check_netstat_generic(item, params, connections):
    found = 0
    for proto, (local_ip, local_port), (remote_ip, remote_port), connstate in connections:
        # Beware: port numbers are strings here.
        match = True
        for k, v in [
            ("local_ip", local_ip),
            ("local_port", local_port),
            ("remote_ip", remote_ip),
            ("remote_port", remote_port),
            ("proto", proto),
            ("state", connstate),
        ]:
            if k in params and str(params[k]) != v:
                match = False
                break
        if match:
            found += 1

    warn_lower, crit_lower = params.get("min_states", (None, None))
    warn_upper, crit_upper = params.get("max_states", (None, None))
    yield check_levels(found,
                       "connections", (warn_upper, crit_upper, warn_lower, crit_lower),
                       infoname="Matching entries found",
                       human_readable_func=lambda x: "%d" % x)
