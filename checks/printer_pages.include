#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# perfometer shows 'pages_total'
# checks' parse_function's output:
# { 'KEY1' : PAGES VALUE1, 'KEY2' : PAGES VALUE2, ... }


# Scan functions for some special printers that have their own MIBS
def scan_ricoh_printer(oid):
    raise NotImplementedError("already migrated")


def scan_canon_printer(oid):
    return "canon" in oid(".1.3.6.1.2.1.1.1.0").lower() \
           and oid(".1.3.6.1.4.1.1602.1.1.1.1.0") is not None \
           and oid(".1.3.6.1.4.1.1602.1.11.1.3.1.4.301") is not None


def scan_generic_printer(oid):
    return oid(".1.3.6.1.2.1.43.10.2.1.4.1.1") is not None \
           and not scan_ricoh_printer(oid) \
           and not scan_canon_printer(oid)


printer_pages_types = {
    'pages_total': 'total prints',
    'pages_color': 'color',
    'pages_bw': 'b/w',
    'pages_a4': 'A4',
    'pages_a3': 'A3',
    'pages_color_a4': 'color A4',
    'pages_bw_a4': 'b/w A4',
    'pages_color_a3': 'color A3',
    'pages_bw_a3': 'b/w A3',
}


def inventory_printer_pages_types(parsed):
    return [(None, None)]


def check_printer_pages_types(_no_item, _no_params, parsed):
    if 'pages_total' not in parsed:
        pages = sum(parsed.values())
        yield 0, 'total prints: %d' % (pages), [('pages_total', pages)]

    for pages_type, pages in sorted(parsed.items()):
        if pages_type in printer_pages_types:
            infotext = printer_pages_types[pages_type]
            yield 0, "%s: %d" % (infotext, pages), [(pages_type, pages)]
