#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# <<<prism_containers:sep(9)>>>
# name    usage   capacity
# DS01_NFS_Nutanix_B2B_Intern_SAS_Contrainer      2518694292480   38575532134515

factory_settings['prism_container_default_levels'] = {
    'levels': (80.0, 90.0),  # in percent, defaults based on df checks
}


def inventory_prism_container(parsed):
    for row in parsed:
        yield row['name'], {}


def check_prism_container(item, params, parsed):
    for row in parsed:
        if row['name'] == item:
            usage, capacity = map(int, (row['usage'], row['capacity']))

            warn, crit = params['levels']
            if isinstance(warn, float):
                warn, crit = [x * capacity for x in (warn, crit)]

            if usage >= crit:
                status = 2
            elif usage >= warn:
                status = 1
            else:
                status = 0

            if status != 0:
                warntxt = " (warn/crit at %s/%s)" %\
                    (get_bytes_human_readable(warn), get_bytes_human_readable(crit))
            else:
                warntxt = ""

            return status, "%s of %s used%s" %\
                (get_bytes_human_readable(usage),
                 get_bytes_human_readable(capacity),
                 warntxt), [('fs_used', usage, warn, crit, 0, capacity)]


check_info['prism_containers'] = {
    'check_function': check_prism_container,
    'inventory_function': inventory_prism_container,
    'parse_function': parse_prism,
    'group': "prism_container",
    'has_perfdata': True,
    'service_description': "Container %s",
    'includes': ["prism.include"],
    'default_levels_variable': 'prism_container_default_levels'
}
