#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.proxmox import *  # pylint: disable=wildcard-import,unused-wildcard-import
factory_settings["proxmox_node_info"] = {
    "required_node_status": None,
    "required_subscription_status": None,
}


def discovery_proxmox_node_info(parsed):
    return [(None, None)]


def check_proxmox_node_info(item, params, parsed):
    node_status = parsed.get("status", "n/a")
    subs_status = parsed.get("subscription", {}).get("status", "n/a")
    proxmox_version = parsed.get("proxmox_version", {}).get("version", "n/a")
    req_node_status = params.get("required_node_status")
    req_subs_status = params.get("required_subscription_status")

    yield (
        0 if not req_node_status or node_status.lower() == req_node_status.lower() else 1,
        "Status: %r%s" %
        (node_status, "" if req_node_status is None else " (required: %r)" % req_node_status),
    )
    yield (
        0 if not req_subs_status or subs_status.lower() == req_subs_status.lower() else 1,
        "Subscription: %r%s" %
        (subs_status, "" if req_subs_status is None else " (required: %r)" % req_subs_status),
    )
    yield (
        0,
        "Version: %r" % proxmox_version,
    )
    yield (
        0,
        "Hosted VMs: %r * 'lxc', %r * 'qemu'" %
        (len(parsed.get("lxc", [])), len(parsed.get("qemu", []))),
    )


check_info["proxmox_node_info"] = {
    "parse_function": parse_proxmox,
    "inventory_function": discovery_proxmox_node_info,
    "check_function": check_proxmox_node_info,
    "service_description": "Proxmox Node Info",
    "default_levels_variable": "proxmox_node_info",
    "group": "proxmox_node_info",
}
