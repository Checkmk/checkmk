#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from cmk.base.check_legacy_includes.proxmox import *  # pylint: disable=wildcard-import,unused-wildcard-import


def discovery_proxmox_vm_info(parsed):
    return [(None, {})]


def check_proxmox_vm_info(_item, params, parsed):
    params = params or {}
    vm_status = parsed.get("status", "n/a")
    req_vm_status = params.get("required_vm_status")
    yield (
        0,
        "VM ID: %s" % str(parsed.get("vmid")),
    )
    yield (
        0 if not req_vm_status or vm_status.lower() == req_vm_status.lower() else 1,
        "Status: %s%s" %
        (str(vm_status), "" if req_vm_status is None else " (required: %s)" % str(req_vm_status)),
    )
    yield (
        0,
        "Type: %s" % str(parsed.get("type")),
    )
    yield (
        0,
        "Host: %s" % str(parsed.get("node")),
    )


check_info["proxmox_vm_info"] = {
    "parse_function": parse_proxmox,
    "inventory_function": discovery_proxmox_vm_info,
    "check_function": check_proxmox_vm_info,
    "service_description": "Proxmox VM Info",
    "group": "proxmox_vm_info",
}
