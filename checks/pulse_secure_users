#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

Node = collections.namedtuple('Node', ('name', 'users'))


def parse_pulse_secure_users(info):

    nodes = []
    total_users = 0

    for node, users_str in info:
        try:
            users = int(users_str)
            nodes.append(Node(name=node, users=users))
            total_users += users
        except ValueError:
            pass

    parsed = {}
    if len(nodes) > 0:
        parsed["nodes"] = nodes
        parsed["total_users"] = total_users

    return parsed


def check_pulse_secure_users(item, params, parsed):

    if not parsed:
        return None

    info_name = "Pulse Secure users"
    long_output = ""

    # clustered
    if parsed["nodes"][0].name is not None:

        info_name += " across cluster"
        long_output += "\nNumber of users per node:\n"

        for node in parsed["nodes"]:
            long_output += "%s: %s\n" % (node.name, node.users)

    yield check_levels(parsed["total_users"],
                       "current_users",
                       params.get("upper_number_of_users"),
                       infoname=info_name,
                       human_readable_func=int)

    if long_output:
        yield 0, long_output


check_info["pulse_secure_users"] = {
    "parse_function": parse_pulse_secure_users,
    "inventory_function": discover_single,
    "check_function": check_pulse_secure_users,
    "service_description": "Pulse Secure users",
    "has_perfdata": True,
    "snmp_info": (
        ".1.3.6.1.4.1.12532",
        [
            "2",  # signedInWebUsers
        ]),
    "snmp_scan_function": scan_pulse_secure,
    "group": "pulse_secure_users",
    "node_info": True,
    "includes": ["pulse_secure.include"],
}
