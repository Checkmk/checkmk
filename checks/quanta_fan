#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2019             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# .1.3.6.1.4.1.7244.1.2.1.3.3.1.1.1 1
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.1.2 2
# ...
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.2.1 3
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.2.2 3
# ...
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.3.1 Fan_SYS0_1
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.3.2 Fan_SYS0_2
# ...
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.4.1 100
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.4.2 9400
# ...
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.6.1 -99
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.6.2 -99
# ...
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.7.1 -99
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.7.2 -99
# ...
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.8.1 -99
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.8.2 -99
# ...
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.9.1 500
# .1.3.6.1.4.1.7244.1.2.1.3.3.1.9.2 500


@get_parsed_item_data
def check_quanta_fan(item, params, entry):
    yield entry.status[0], 'Status: %s' % entry.status[1]

    if entry.value in (-99, None):
        return

    levels = {
        'upper': params.get('upper', entry.upper_levels),
        'lower': params.get('lower', entry.lower_levels),
    }

    yield check_fan(entry.value, levels)

check_info['quanta_fan'] = {
        'inventory_function': discover(),
        'parse_function': parse_quanta,
        'check_function': check_quanta_fan,
        'service_description': 'Fan %s',
        'includes': ['quanta.include', 'fan.include'],
        'group': 'hw_fans',
        'has_perfdata': True,
        # these is no good oid identifier for quanta devices, thats why the first oid is used here
        'snmp_scan_function' : lambda oid: oid('.1.3.6.1.2.1.1.2.0').startswith('.1.3.6.1.4.1.8072.3.2.10')and \
                                    ( oid('.1.3.6.1.4.1.7244.1.2.1.1.1.0') is not None),
        'snmp_info': [
          (
              '.1.3.6.1.4.1.7244.1.2.1.3.3.1',
              [
                1, # fanDeviceInfoIndex
                2, # fanDeviceInfoStatus
                3, # fanDeviceInfoLocationName
                4, # fanDeviceReading
                6, # fanDeviceUpperCriticalThreshold
                7, # fanDeviceUpperNonCriticalThreshold
                8, # fanDeviceLowerNonCriticalThreshold
                9, # fanDeviceLowerCriticalThreshold
            ]),
      ]
    }
