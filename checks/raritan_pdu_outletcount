#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inventory_raritan_pdu_outletcount(info):
    if info and info[0]:
        yield None, None


def check_raritan_pdu_outletcount(item, params, info):
    try:
        yield check_levels(int(info[0][0]),
                           "outletcount",
                           params,
                           human_readable_func=lambda f: "%.f" % f)
    except IndexError:
        pass


check_info['raritan_pdu_outletcount'] = {
    "inventory_function"  : inventory_raritan_pdu_outletcount,
    "check_function"      : check_raritan_pdu_outletcount,
    "service_description" : "Outlet Count",
    "group"               : "plug_count",
    "has_perfdata"        : True,
    "snmp_info"           : (".1.3.6.1.4.1.13742.6.3.2.2.1.4", ["1"]),  # outletCount
    "snmp_scan_function"  : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.13742.6") and \
                                      (oid(".1.3.6.1.4.1.13742.6.3.2.1.1.3.1").startswith("PX2-2") or \
                                      oid(".1.3.6.1.4.1.13742.6.3.2.1.1.3.1").startswith("PX3"))
}
