#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

ruckus_spot_ap_bands = {
    "1": "2.4 GHz",
    "2": "5 GHz",
}

factory_settings["ruckus_spot_ap"] = {}


def parse_ruckus_spot_ap(info):
    import json

    data = json.loads(info[0][0])
    bands = {}
    for band_info in data:
        band_id = str(band_info["band"])
        bands.setdefault(band_id, [])
        for ap_dict in band_info.get("access_points"):
            bands[band_id].append([ap_dict["name"], ap_dict["status"]])

    return bands


def inventory_ruckus_spot_ap(parsed):
    for band in parsed:
        if band in ruckus_spot_ap_bands:
            yield ruckus_spot_ap_bands[band], {}


def check_ruckus_spot_ap(item, params, parsed):
    inverse_map = {v: k for k, v in ruckus_spot_ap_bands.items()}
    band = parsed.get(inverse_map.get(item))
    if not band:
        return

    dev_count = len(band)
    yield 0, f"Devices: {dev_count}", [("ap_devices_total", dev_count)]

    for what, ap_state, key in [
        ("drifted", 2, "levels_drifted"),
        ("not responding", 0, "levels_not_responding"),
    ]:
        problems = len([x for x in band if x[1] == ap_state])

        # make this notice_only upon migration
        state, text, metric = check_levels(
            problems,
            "ap_devices_%s" % what.replace(" ", "_"),
            params.get(key),
            human_readable_func=lambda x: str(int(x)),
            infoname=what.capitalize(),
        )
        yield 0, "", metric
        if problems or state:
            yield state, text


check_info["ruckus_spot_ap"] = {
    "parse_function": parse_ruckus_spot_ap,
    "inventory_function": inventory_ruckus_spot_ap,
    "check_function": check_ruckus_spot_ap,
    "service_description": "Ruckus Spot Access Points %s",
    "default_levels_variable": "ruckus_spot_ap",
    "group": "ruckus_ap",
    "has_perfdata": True,
}
