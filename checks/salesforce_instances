#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def parse_salesforce(info):
    import json

    pre_parsed = []
    for line in info:
        pre_parsed.append(json.loads(" ".join(line)))

    parsed = {}
    for entry in pre_parsed:
        if entry.get("key"):
            parsed.setdefault(entry.get("key"), entry)
    return parsed


def inventory_salesforce_instances(parsed):
    for instance, attrs in parsed.items():
        if attrs.get("isActive"):
            yield instance, {}


def check_salesforce_instances(item, params, parsed):
    map_states = {
        "OK": (0, "OK"),
        "MAJOR_INCIDENT_CORE": (2, "major incident core"),
        "MINOR_INCIDENT_CORE": (1, "minor incident core"),
        "MAINTENANCE_CORE": (0, "maintenance core"),
        "INFORMATIONAL_CORE": (0, "informational core"),
        "MAJOR_INCIDENT_NONCORE": (2, "major incident noncore"),
        "MINOR_INCIDENT_NONCORE": (1, "minor incident noncore"),
        "MAINTENANCE_NONCORE": (0, "maintenance noncore"),
        "INFORMATIONAL_NONCORE": (0, "informational noncore"),
    }

    if item in parsed:
        data = parsed[item]
        status = data.get("status")
        state, state_readable = map_states.get(status, (3, "unknown[%s]" % status))
        yield state, "Status: %s" % state_readable

        for key, title in [
            ("environment", "Environment"),
            ("releaseNumber", "Release Number"),
            ("releaseVersion", "Release Version"),
        ]:
            if data.get(key):
                yield 0, "%s: %s" % (title, data[key])


check_info['salesforce_instances'] = {
    'parse_function': parse_salesforce,
    'inventory_function': inventory_salesforce_instances,
    'check_function': check_salesforce_instances,
    'service_description': 'Salesforce Instance %s',
}
