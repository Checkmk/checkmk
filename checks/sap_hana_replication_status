#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def parse_sap_hana_replication_status(info):
    parsed = {}
    for sid_instance, lines in parse_sap_hana(info).items():
        inst = {}
        for line in lines:
            if line[0] == "mode:":
                inst["mode"] = line[1]
            elif line[0] == "systemReplicationStatus:":
                inst["sys_repl_status"] = line[1]
        if inst:
            parsed.setdefault(sid_instance, inst)
    return parsed


SAP_HANA_REPL_STATUS_MAP = {
    "0": (3, "unknown status from replication script"),
    "10": (2, "no system replication"),
    "11": (2, "error"),
    "12": (2, "unknown"),
    "13": (1, "initializing"),
    "14": (0, "syncing"),
    "15": (0, "active"),
}


def inventory_sap_hana_replication_status(parsed):
    for sid_instance, data in parsed.items():
        if data["sys_repl_status"] != "10" and data.get("mode", "").lower() == "primary":
            yield sid_instance, {}


@get_parsed_item_data
def check_sap_hana_replication_status(item, params, data):
    sys_repl_status = data["sys_repl_status"]
    state, state_readable = SAP_HANA_REPL_STATUS_MAP.get(sys_repl_status,
                                                         (3, "unknown[%s]" % sys_repl_status))
    yield state, "System replication: %s" % state_readable

    yield 0, "Mode: %s" % data["mode"]


check_info['sap_hana_replication_status'] = {
    'parse_function': parse_sap_hana_replication_status,
    'inventory_function': inventory_sap_hana_replication_status,
    'check_function': check_sap_hana_replication_status,
    'service_description': 'SAP HANA Replication Status %s',
    'includes': ['sap_hana.include'],
}
