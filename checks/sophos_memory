#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def parse_sophos_memory(info):
    try:
        memory_capacity, memory_percent_usage = info[0]
        memory_capacity = int(memory_capacity) >> 10
        memory_percent_usage = int(memory_percent_usage)
        memory_usage = memory_capacity / 100 * memory_percent_usage
        return (memory_capacity, memory_usage, memory_percent_usage)
    except (ValueError, IndexError):
        return None


def check_sophos_memory(_item, params, parsed):
    memory_capacity, memory_usage, memory_percent_usage = parsed

    yield check_levels(
        memory_percent_usage,
        "memory_util",
        params.get("memory_levels", (None, None)),
        infoname="Usage",
        human_readable_func=get_percent_human_readable,
    )

    yield 0, "(%d GB of %d GB)" % (memory_usage, memory_capacity)

check_info['sophos_memory'] = {
    "parse_function": parse_sophos_memory,
    "inventory_function": lambda parsed: [(None, {})] if parsed is not None else None,
    "check_function": check_sophos_memory,
    "service_description": "Memory",
    "group": "sophos_memory",
    "snmp_info": (".1.3.6.1.4.1.21067.2.1.2.4", [
        1,  # XG-FIREWALL-MIB::memoryCapacity
        2,  # XG-FIREWALL-MIB::memoryPercentUsage
        ]),
    "snmp_scan_function": lambda oid: '.1.3.6.1.4.1.21067.2' in oid(".1.3.6.1.2.1.1.2.0"),
}
