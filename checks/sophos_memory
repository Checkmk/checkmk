#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2019             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def parse_sophos_memory(info):
    try:
        return int(info[0][0])
    except (ValueError, IndexError):
        return None


def check_sophos_memory(item, params, parsed):
    return check_levels(
        parsed,
        "memory percentage usage",  # FIXME: CMK-3584
        params.get("memory_levels", (None, None)),
        infoname="Usage",
        human_readable_func=get_percent_human_readable,
    )


check_info['sophos_memory'] = {
    "parse_function": parse_sophos_memory,
    "inventory_function": lambda parsed: [(None, {})] if parsed is not None else None,
    "check_function": check_sophos_memory,
    "service_description": "Memory",
    "group": "sophos_memory",
    "snmp_info": (".1.3.6.1.4.1.21067.2.1.2.4", [2]),
    "snmp_scan_function": lambda oid: '.1.3.6.1.4.1.21067.2' in oid(".1.3.6.1.2.1.1.2.0"),
}
