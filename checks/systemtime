#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

systemtime_default_values = (30, 60)
factory_settings['systemtime_default_levels'] = {'levels': (30, 60)}


def parse_systemtime(info):
    parsed = {}
    for idx, key in enumerate(['foreign_systemtime', 'our_systemtime']):
        try:
            parsed[key] = float(info[0][idx])
        except IndexError:
            return parsed
    return parsed


def check_systemtime(item, params, parsed):
    if not parsed:
        return

    systemtime = parsed['foreign_systemtime']
    if 'our_systemtime' in parsed:
        offset = systemtime - parsed['our_systemtime']
    else:
        try:
            systemtime += get_agent_data_time()
        except (NameError, TypeError):
            pass
        offset = systemtime - time.time()

    warn, crit = params if isinstance(params, tuple) else params['levels']
    yield check_levels(
        offset,
        "offset",
        (warn, crit, -warn, -crit),
        human_readable_func=get_age_human_readable,
        infoname="Offset",
    )


check_info["systemtime"] = {
    'parse_function': parse_systemtime,
    'check_function': check_systemtime,
    'inventory_function': discover_single,
    'service_description': 'System Time',
    'has_perfdata': True,
    'group': 'systemtime',
    'default_levels_variable': 'systemtime_default_levels',
}
