#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# parsed = {
#     "ESTABLISHED" : 6,
#     "BOUND"       : 17,
#     "SYN_SENT"    : 1,
#     "LISTEN"      : 10,
# }

tcp_conn_stats_default_levels = {}

map_counter_keys = {
    1: "ESTABLISHED",  # connection up and passing data
    2: "SYN_SENT",  # session has been requested by us; waiting for reply from remote endpoint
    3: "SYN_RECV",  # session has been requested by a remote endpoint for a socket on which we were listening
    4: "FIN_WAIT1",  # our socket has closed; we are in the process of tearing down the connection
    5: "FIN_WAIT2",  # the connection has been closed; our socket is waiting for the remote endpoint to shut down
    6: "TIME_WAIT",  # socket is waiting after closing for any packets left on the network
    7: "CLOSED",  # socket is not being used (FIXME. What does mean?)
    8: "CLOSE_WAIT",  # remote endpoint has shut down; the kernel is waiting for the application to close the socket
    9: "LAST_ACK",  # our socket is closed; remote endpoint has also shut down; we are waiting for a final acknowledgement
    10: "LISTEN",  # represents waiting for a connection request from any remote TCP and port
    11: "CLOSING",  # our socket is shut down; remote endpoint is shut down; not all data has been sent
}


def empty_stats():
    # we require all states from map_counter_keys due to the omit_zero_metrics option
    # concerning the perfdata
    return {value: 0 for value in map_counter_keys.values()}


def inventory_tcp_connections(parsed):
    if any(value != 0 for value in parsed.values()):
        return [(None, 'tcp_conn_stats_default_levels')]


def check_tcp_connections(item, params, parsed):
    if not parsed:
        yield 0, "Currently no TCP connections"
        return

    perfdata = []
    for tcp_state, tcp_count in sorted(parsed.items()):
        warn, crit = params.get(tcp_state, (None, None))

        # We must append all states (regardless of their value --> even if 0) to the perfdata list
        # due to metrics which has the option omit_zero_metrics
        perfdata.append((tcp_state, tcp_count, warn, crit))

        if tcp_count <= 0:
            continue

        infotext = "%s: %s" % (tcp_state, tcp_count)
        state = 0
        if crit is not None and tcp_count >= crit:
            state = 2
        elif warn is not None and tcp_count >= warn:
            state = 1
        if state:
            infotext += " (warn/crit at %d/%d)" % (warn, crit)
        yield state, infotext
    yield 0, '', perfdata
