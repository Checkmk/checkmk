#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2019             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# <<<ucs_bladecenter_faultinst:sep(9)>>>
# faultInst   Dn sys/chassis-2/bl...ault-F1256 Descr Local disk 2 missing on server 2/3    Severity info
# faultInst   Dn sys/chassis-2/bl...ault-F1256 Descr Local disk 1 missing on server 2/3    Severity info
# faultInst   Dn sys/chassis-1/bl...ault-F1256 Descr Local disk 2 missing on server 1/3    Severity info

factory_settings["ucs_bladecenter_faultinst_default_levels"] = {
    "critical": 2,
    "major": 1,
    "warning": 1,
    "minor": 1,
    "info": 0,
    "condition": 0,
    "cleared": 0,
    "show_only": ["critical", "major", "warning", "minor", "info", "condition", "cleared"]
}


def check_ucs_bladecenter_faultinst(_no_item, params, parsed):
    out_sev = ("critical", "major", "warning", "minor", "info", "condition", "cleared")
    data = parsed.get('faultInst', {})
    show_states = params.get('show_only', [])
    if not data:
        yield 0, "No fault instances found"
        return

    sev = {}
    for _key, values in data.items():
        entry_sev = values.get("Severity").lower()
        sev.setdefault(entry_sev, [])
        sev[entry_sev].append(values.get('Descr', 'No Describtion'))
    long_txt = ''
    no_output = True
    for severity in out_sev:
        if sev.get(severity) and severity in show_states:
            no_output = False
            long_txt += '\n' + severity + ' Instances:\n'
            for msgs in sev[severity]:
                long_txt += severity + ' --> ' + msgs + '\n'
            long_txt += '\n'
            txt = severity + ": " + str(len(sev[severity]))
            txt = str(len(sev[severity])) + " " + severity + " Instances"
            if params[severity] > 0:
                txt += " (see Long-Output for details)"
            yield params[severity], txt
    if no_output:
        yield 0, "No fault instances found (filtered)"
    else:
        yield 0, long_txt


check_info["ucs_bladecenter_faultinst"] = {
    'parse_function': ucs_bladecenter_convert_info,
    'inventory_function': discover_single,
    'check_function': check_ucs_bladecenter_faultinst,
    'service_description': 'Fault Instances',
    "group": "ucs_bladecenter_faultinst",
    'default_levels_variable': 'ucs_bladecenter_faultinst_default_levels',
    'includes': ['ucs_bladecenter.include'],
}
