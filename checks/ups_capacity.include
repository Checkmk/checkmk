#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def check_ups_capacity(item, params, info):
    # To support inventories with the old version
    if isinstance(params, tuple):  # old format with 2 params in tuple
        warn, crit = params
        cap_warn, cap_crit = (95, 90)
    elif isinstance(params, dict):  # new dict format
        warn, crit = params.get('battime', (0, 0))
        cap_warn, cap_crit = params.get('capacity', (95, 90))
    else:
        warn, crit = (0, 0)
        cap_warn, cap_crit = (95, 90)

    time_on_bat, minutes_left, percent_fuel = info[0]

    # Check time left on battery
    if minutes_left:
        minutes_left = int(minutes_left)
        state = 0
        infotext = "%d min left on battery" % minutes_left

        if minutes_left <= crit:
            state = 2
        elif minutes_left < warn:
            state = 1

        if state:
            infotext += " (warn/crit below %d min/%d min)" % (warn, crit)

        yield state, infotext, [('capacity', minutes_left, warn, crit)]

    # Check percentual capacity
    if percent_fuel:
        percent_fuel = int(percent_fuel)
        infotext = "capacity: %d%%" % percent_fuel
        state = 0

        if percent_fuel <= cap_crit:
            state = 2
        elif percent_fuel < cap_warn:
            state = 1

        if state:
            infotext += " (warn/crit below %d%%/%d%%)" % (cap_warn, cap_crit)

        yield state, infotext, [('percent', percent_fuel, cap_warn, cap_crit)]

    # Output time on battery
    if time_on_bat and int(time_on_bat) > 0:
        yield 0, "On battery for %d min" % int(time_on_bat)
