#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

factory_settings["ups_eaton_enviroment_default"] = {
    "temp": (40, 50),
    "remote_temp": (40, 50),
    "humidity": (65, 80),
}


def inventory_ups_eaton_enviroment(info):
    if len(info) > 0:
        return [(None, {})]


def check_ups_eaton_enviroment(item, params, info):
    wert = list(map(saveint, info[0]))
    i = 0
    state = 0
    messages = []
    perfdata = []
    for sensor, sensor_name, unit in [("temp", "Temperature", u"°C"),
                                      ("remote_temp", "Remote-Temperature", u"°C"),
                                      ("humidity", "Humidity", "%")]:

        warn, crit = params.get(sensor)
        perfdata.append((sensor, wert[i], warn, crit))
        text = "%s: %d%s (warn/crit at %d%s/%d%s)" % \
               (sensor_name, wert[i],unit,  warn, unit, crit, unit)

        if wert[i] >= crit:
            state = 2
            text += "(!!)"
        elif wert[i] >= warn:
            state = max(state, 1)
            text += "(!)"

        i += 1
        messages.append(text)

    return (state, ", ".join(messages), perfdata)


check_info['ups_eaton_enviroment'] = {
    "default_levels_variable" : "ups_eaton_enviroment_default",
    "inventory_function"      : inventory_ups_eaton_enviroment,
    "check_function"          : check_ups_eaton_enviroment,
    "service_description"     : "Enviroment",
    "has_perfdata"            : True,
    "group"                   : "eaton_enviroment",
    "snmp_info"               : ( ".1.3.6.1.4.1.534.1.6", [1,5,6 ] ),
    "snmp_scan_function"      : lambda oid: oid(".1.3.6.1.2.1.1.2.0") in \
                                     [".1.3.6.1.4.1.705.1.2",
                                      ".1.3.6.1.4.1.534.1",
                                      ".1.3.6.1.4.1.705.1"],
}
