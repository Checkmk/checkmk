#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

ups_out_load_default_levels = (85, 90)  # warning / critical


def check_ups_out_load(item, params, info):
    warn, crit = params
    for idx, _raw_voltage, raw_load in info:
        if idx == item:
            power = int(raw_load) if raw_load else 0
            perfdata = [("out_load", power, warn, crit, 100)]
            infotext = "load: %d (warn/crit at %d/%d) " % (power, warn, crit)

            if power >= crit:
                return (2, infotext, perfdata)
            if power >= warn:
                return (1, infotext, perfdata)
            return (0, infotext, perfdata)

    return (3, "Phase %s not found in SNMP output" % item)


check_info['ups_out_load'] = {
    "inventory_function": lambda info: discovery_ups_generic(info, "ups_out_load_default_levels"),
    "check_function": check_ups_out_load,
    "service_description": "OUT load phase %s",
    "has_perfdata": True,
    "snmp_info": (".1.3.6.1.2.1.33.1.4.4.1", [0, 2, 5]),
    "snmp_scan_function": ups_generic_scan_function,
    "includes": ["ups_generic.include"],
}
