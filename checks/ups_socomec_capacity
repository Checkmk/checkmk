#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# upsBatteryStatus              1.3.6.1.4.1.4555.1.1.1.1.2.1
# upsSecondsOnBattery           1.3.6.1.4.1.4555.1.1.1.1.2.2
# upsEstimatedMinutesRemaining  1.3.6.1.4.1.4555.1.1.1.1.2.3
# upsEstimatedChargeRemaining   1.3.6.1.4.1.4555.1.1.1.1.2.4
# upsBatteryVoltage             1.3.6.1.4.1.4555.1.1.1.1.2.5
# upsBatteryTemperature         1.3.6.1.4.1.4555.1.1.1.1.2.6

factory_settings["ups_capacity_default_levels"] = {'battime': (0, 0), 'capacity': (95, 90)}


def inventory_ups_socomec_capacity(info):
    if len(info) > 0:
        return [(None, {})]


def check_ups_socomec_capacity(item, params, info):
    # To support inventories with the old version
    # TODO This needs to be reworked. Defaults should not be coded into a check in such a fashion.
    if isinstance(params, tuple):  # old format with 2 params in tuple
        warn, crit = params
        cap_warn, cap_crit = (95, 90)
    elif isinstance(params, dict):  # new dict format
        warn, crit = params.get('battime', (0, 0))
        cap_warn, cap_crit = params.get('capacity', (95, 90))
    else:
        warn, crit = (0, 0)
        cap_warn, cap_crit = (95, 90)

    time_on_bat, minutes_left, percent_fuel = map(int, info[0])

    # Check time left on battery
    if minutes_left != -1:
        levelsinfo = ""
        if minutes_left <= crit:
            state = 2
            levelsinfo = " (crit at %d min)" % cap_crit
        elif minutes_left < warn:
            state = 1
            levelsinfo = " (warn at %d min)" % cap_warn
        else:
            state = 0
        yield state, "%d min left on battery" % minutes_left + levelsinfo, [
            ('capacity', minutes_left, warn, crit)
        ]

    # Check percentual capacity
    levelsinfo = ""
    if percent_fuel <= cap_crit:
        state = 2
        levelsinfo = " (crit at %d%%)" % cap_crit
    elif percent_fuel < cap_warn:
        state = 1
        levelsinfo = " (warn at %d%%)" % cap_warn
    else:
        state = 0
    yield state, "capacity: %d%%" % percent_fuel + levelsinfo, [('percent', percent_fuel, cap_warn,
                                                                 cap_crit)]

    # Output time on battery
    if time_on_bat > 0:
        yield 0, "On battery for %d min" % time_on_bat


check_info["ups_socomec_capacity"] = {
    "check_function": check_ups_socomec_capacity,
    "inventory_function": inventory_ups_socomec_capacity,
    "default_levels_variable": 'ups_capacity_default_levels',
    "service_description": "Battery capacity",
    "has_perfdata": True,
    "group": "ups_capacity",
    "snmp_info": (".1.3.6.1.4.1.4555.1.1.1.1.2", [2, 3, 4]),
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.4555.1.1.1",
}
