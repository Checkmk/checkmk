#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

factory_settings["socomec_outphase_default_levels"] = {
    "voltage": (210, 200),
    "output_load": (80, 90),
}


def parse_ups_socomec_outphase(info):
    parsed = {}
    for index, rawvolt, rawcurr, rawload in info:
        parsed["Phase " + index] = {
            "voltage": (int(rawvolt) // 10, None),  # The actual precision does not appear to
            "current": (int(rawcurr) // 10, None),  # go beyond degrees, thus we drop the trailing 0
            "output_load": (int(rawload), None),
        }
    return parsed


def check_ups_socomec_outphase(item, params, parsed):
    if not item.startswith("Phase"):
        # fix item names discovered before 1.2.7
        item = "Phase %s" % item
    return check_elphase(item, params, parsed)


check_info['ups_socomec_outphase'] = {
    "parse_function": parse_ups_socomec_outphase,
    "inventory_function": inventory_elphase,
    "check_function": check_ups_socomec_outphase,
    "default_levels_variable": "socomec_outphase_default_levels",
    "service_description": "Output %s",
    "has_perfdata": True,
    "group": "ups_outphase",
    "includes": ['elphase.include'],
    # Phase Index, Voltage/dV, Current/dA, Load/%
    "snmp_info": (".1.3.6.1.4.1.4555.1.1.1.1.4.4.1", ['1', '2', '3', '4']),
    "snmp_scan_function": lambda oid: oid(".1.3.6.1.2.1.1.2.0") == ".1.3.6.1.4.1.4555.1.1.1",
}
