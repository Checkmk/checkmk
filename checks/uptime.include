#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def parse_snmp_uptime(ticks):
    if len(ticks) < 3:
        return 0

    try:
        return int(ticks[:-2])
    except Exception:
        pass

    try:
        days, h, m, s = ticks.split(":")
        return (int(days) * 86400) + (int(h) * 3600) + (int(m) * 60) + int(float(s))
    except Exception:
        pass

    return 0


# Example for params:
# {
#    "min" : ( 7200, 3600 ),            # Minimum required uptime (warn, crit)
#    "max" : ( 86400 * 7, 86400 * 14),  # Maximum required uptime (warn, crit)
# }

from datetime import timedelta


def check_uptime_seconds(params, uptime_sec):

    if params is None:  # legacy: support older versions of parameters
        params = {}

    params = params.get("max", (None, None)) + params.get("min", (None, None))
    return check_levels(uptime_sec,
                        "uptime",
                        params,
                        human_readable_func=lambda x: timedelta(seconds=int(x)),
                        infoname="Up since %s, uptime" %
                        time.strftime("%c", time.localtime(time.time() - uptime_sec)))


#   .--snmp----------------------------------------------------------------.
#   |                                                                      |
#   |                      ___ _ __  _ __ ___  _ __                        |
#   |                     / __| '_ \| '_ ` _ \| '_ \                       |
#   |                     \__ \ | | | | | | | | |_) |                      |
#   |                     |___/_| |_|_| |_| |_| .__/                       |
#   |                                         |_|                          |
#   '----------------------------------------------------------------------'

# On Linux appliances: .1.3.6.1.2.1.1.3.0    means uptime of snmpd
#                      .1.3.6.1.2.1.25.1.1.0 means system uptime
snmp_uptime_info = (
    '.1.3.6.1.2.1',
    [
        '1.3',  # DISMAN-EVENT-MIB::sysUpTime
        '25.1.1',  # HOST-RESOURCES-MIB::hrSystemUptime
    ])


def snmp_scan_uptime(oid):
    return oid(".1.3.6.1.2.1.1.1.0") is not None


def parse_uptime_info(info):
    value = info[0][1] if info[0][1] else info[0][0]
    return parse_snmp_uptime(value)


def inventory_snmp_uptime(info):
    if len(info) > 0 and len(info[0]) >= 1 and parse_uptime_info(info) > 0:
        return [(None, {})]


def check_snmp_uptime(checktype, params, info):
    uptime = parse_uptime_info(info)
    return check_uptime_seconds(params, uptime)
