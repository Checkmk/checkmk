#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2014             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def vbox_guest_make_dict(info):
    # output differs in version 6.x so we need to deal with empty values for
    # /VirtualBox/GuestInfo/OS/ServicePack
    return dict([(l[1].split('/', 2)[2].rstrip(','), l[3]) if len(l) == 4 else
                 (l[1].split('/', 2)[2].rstrip(','), "") for l in info])


def check_vbox_guest(_no_item, _no_params, info):
    if len(info) == 1 and info[0][0] == "ERROR":
        return (3, "Error running VBoxControl guestproperty enumerate")
    try:
        d = vbox_guest_make_dict(info)
    except:
        d = {}

    if len(d) == 0:
        return (2, "No guest additions installed")

    version = d.get('GuestAdd/Version')
    revision = d.get('GuestAdd/Revision')
    if not version or not version[0].isdigit():
        return (3, "No guest addition version available")
    infotext = "version: %s, revision: %s" % (version, revision)

    host_version = d['HostInfo/VBoxVer']
    host_revision = d['HostInfo/VBoxRev']
    if (host_version, host_revision) != (version, revision):
        return (1, infotext + ", Host has %s/%s" % (host_version, host_revision))
    return (0, infotext)


def inventory_vbox_guest(info):
    if len(info) > 0:
        return [(None, None)]


check_info["vbox_guest"] = {
    'check_function': check_vbox_guest,
    'inventory_function': inventory_vbox_guest,
    'service_description': 'VBox Guest Additions',
    'group': 'vm_state',
}
