#!/usr/bin/env python3
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from collections.abc import Sequence
from typing import Any

import cmk.utils.version as cmk_version
from cmk.utils.type_defs import UserId

from cmk.gui.i18n import _l
from cmk.gui.type_defs import (
    PainterParameters,
    PainterSpec,
    SorterSpec,
    ViewName,
    ViewSpec,
    VisualLinkSpec,
)

builtin_views: dict[ViewName, ViewSpec] = {}

# Painters used in list of services views
service_view_painters = [
    PainterSpec(name="service_state"),
    PainterSpec(
        name="service_description",
        link_spec=VisualLinkSpec(type_name="views", name="service"),
    ),
    PainterSpec(name="service_icons"),
    PainterSpec(name="svc_plugin_output"),
    PainterSpec(name="svc_state_age"),
    PainterSpec(name="svc_check_age"),
    PainterSpec(name="perfometer"),
]


# Same as list of services, but extended by the hostname
host_service_view_painters = service_view_painters[:]
host_service_view_painters.insert(
    1,
    PainterSpec(
        name="host",
        link_spec=VisualLinkSpec(type_name="views", name="host"),
    ),
)

host_view_painters = [
    PainterSpec(name="host_state"),
    PainterSpec(
        name="host",
        link_spec=VisualLinkSpec(type_name="views", name="host"),
        tooltip="host_addresses",
    ),
    PainterSpec(name="host_icons"),
    PainterSpec(
        name="num_services_ok",
        link_spec=VisualLinkSpec(type_name="views", name="host_ok"),
    ),
    PainterSpec(
        name="num_services_warn",
        link_spec=VisualLinkSpec(type_name="views", name="host_warn"),
    ),
    PainterSpec(
        name="num_services_unknown",
        link_spec=VisualLinkSpec(type_name="views", name="host_unknown"),
    ),
    PainterSpec(
        name="num_services_crit",
        link_spec=VisualLinkSpec(type_name="views", name="host_crit"),
    ),
    PainterSpec(
        name="num_services_pending",
        link_spec=VisualLinkSpec(type_name="views", name="host_pending"),
    ),
]

builtin_views.update(
    {
        "allhosts": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "hosts",
            "description": _l(
                "Overall state of all hosts, with counts of services in the various states."
            ),
            "group_painters": [PainterSpec(name="sitealias")],
            "hidden": False,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "allhosts",
            "num_columns": 3,
            "owner": UserId.builtin(),
            "painters": host_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("All hosts"),
            "topic": "overview",
            "sort_index": 20,
            "icon": "folder",
            "user_sortable": True,
            "single_infos": [],
            "context": {"siteopt": {}, "hostregex": {}},
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "unmonitored_services": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "service_discovery",
            "description": _l("Services not being monitored due to configuration."),
            "context": {
                "discovery_state": {
                    "discovery_state_ignored": "on",
                    "discovery_state_unmonitored": "on",
                    "discovery_state_vanished": "on",
                    "discovery_state_var0": "on",
                    "discovery_state_var1": "",
                    "discovery_state_var2": "on",
                }
            },
            "group_painters": [
                PainterSpec(name="sitealias"),
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": False,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "unmonitored_services",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_discovery_service"),
                PainterSpec(name="service_discovery_check"),
                PainterSpec(name="service_discovery_state"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("Unmonitored services"),
            "topic": "analyze",
            "sort_index": 60,
            "icon": {"icon": "services", "emblem": "warning"},
            "single_infos": [],
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "pending_discovery": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "service_discovery",
            "description": _l("Differences to currently monitored services on a host."),
            "context": {
                "discovery_state": {
                    "discovery_state_var0": "",
                    "discovery_state_var1": "on",
                    "discovery_state_var2": "on",
                }
            },
            "group_painters": [
                PainterSpec(name="sitealias"),
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": False,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "pending_discovery",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_discovery_service"),
                PainterSpec(name="service_discovery_check"),
                PainterSpec(name="service_discovery_state"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("Pending service discovery"),
            "topic": "analyze",
            "sort_index": 50,
            "icon": {"icon": "service_discovery", "emblem": "pending"},
            "single_infos": [],
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "allservices": {
            "browser_reload": 90,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All services grouped by hosts."),
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "allservices",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("All services"),
            "icon": "services",
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "service_in_notification_period": {"is_service_in_notification_period": "-1"},
                "service_in_service_period": {},
                "optservicegroup": {"optservice_group": ""},
                "servicegroups": {},
                "service_notifications_enabled": {"is_service_notifications_enabled": "-1"},
                "host_in_notification_period": {"is_host_in_notification_period": "-1"},
                "in_downtime": {"is_in_downtime": "-1"},
                "service_scheduled_downtime_depth": {"is_service_scheduled_downtime_depth": "-1"},
                "service_acknowledged": {"is_service_acknowledged": "-1"},
                "hostregex": {"host_regex": ""},
                "service_active_checks_enabled": {"is_service_active_checks_enabled": "-1"},
                "serviceregex": {"service_regex": ""},
                "check_command": {"check_command": ""},
                "svcstate": {},
                "opthostgroup": {"opthost_group": ""},
                "output": {"service_output": ""},
                "service_is_flapping": {"is_service_is_flapping": "-1"},
                "siteopt": {},
                "service_labels": {},
                "host_labels": {},
            },
            "link_from": {},
            "topic": "",
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "service_check_durations": {
            "browser_reload": 90,
            "column_headers": "pergroup",
            "context": {
                "service_active_checks_enabled": {"is_service_active_checks_enabled": "1"},
            },
            "datasource": "services",
            "description": _l(
                "All services ordered by their service check durations, grouped by their sites.\n"
            ),
            "force_checkboxes": False,
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                )
            ],
            "hidden": False,
            "hidebutton": False,
            "layout": "table",
            "mobile": False,
            "mustsearch": False,
            "name": "service_check_durations",
            "num_columns": 1,
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="service_icons"),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
                PainterSpec(name="svc_check_duration"),
                PainterSpec(name="svc_check_command"),
            ],
            "play_sounds": False,
            "public": True,
            "single_infos": [],
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="svc_check_duration", negate=True),
            ],
            "user_sortable": True,
            "title": _l("Service check durations"),
            "topic": "history",
            "sort_index": 70,
            "is_show_more": True,
            "icon": "service_duration",
            "owner": UserId.builtin(),
            "link_from": {},
            "add_context_to_title": True,
        },
        "comments": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "comments",
            "description": _l("All host- and service comments"),
            "group_painters": [PainterSpec(name="comment_what")],
            "hidden": False,
            "hidebutton": False,
            "icon": "comment",
            "layout": "table",
            "mustsearch": False,
            "name": "comments",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="comment_author"),
                PainterSpec(name="comment_time"),
                PainterSpec(name="comment_expires"),
                PainterSpec(name="comment_entry_type"),
                PainterSpec(name="comment_comment"),
                PainterSpec(name="host"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="comment_id"),
            ],
            "public": True,
            "sorters": [
                SorterSpec(sorter="comment_type", negate=False),
                SorterSpec(sorter="comment_author", negate=False),
            ],
            "title": _l("Comments"),
            "topic": "overview",
            "sort_index": 85,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "hostregex": {"host_regex": ""},
                "comment_entry_time": {},
                "serviceregex": {"service_regex": ""},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "comments_of_host": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "comments",
            "description": _l("Linkable view showing all comments of a specific host"),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "icon": "comment",
            "layout": "table",
            "mustsearch": False,
            "name": "comments_of_host",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="comment_author"),
                PainterSpec(name="comment_comment"),
                PainterSpec(name="comment_time"),
                PainterSpec(name="comment_expires"),
                PainterSpec(name="comment_entry_type"),
            ],
            "public": True,
            "sorters": [],
            "title": _l("Comments of host"),
            "topic": "monitoring",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {"siteopt": {}, "service": {"service": ""}},
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "comments_of_service": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "comments",
            "description": _l("Linkable view showing all comments of a specific service"),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "icon": "comment",
            "layout": "table",
            "mustsearch": False,
            "name": "comments_of_service",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="comment_author"),
                PainterSpec(name="comment_comment"),
                PainterSpec(name="comment_time"),
                PainterSpec(name="comment_expires"),
                PainterSpec(name="comment_entry_type"),
            ],
            "public": True,
            "sorters": [],
            "title": _l("Comments of service"),
            "topic": "monitoring",
            "user_sortable": True,
            "single_infos": ["service", "host"],
            "context": {"siteopt": {}},
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "downtimes": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "downtimes",
            "description": _l("All host- and service-downtimes"),
            "group_painters": [PainterSpec(name="downtime_what")],
            "hidden": False,
            "hidebutton": False,
            "icon": "downtime",
            "layout": "table",
            "mustsearch": False,
            "name": "downtimes",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="downtime_origin"),
                PainterSpec(name="downtime_author"),
                PainterSpec(name="downtime_entry_time"),
                PainterSpec(name="downtime_start_time"),
                PainterSpec(name="downtime_end_time"),
                PainterSpec(name="downtime_fixed"),
                PainterSpec(name="downtime_duration"),
                PainterSpec(name="downtime_recurring"),
                PainterSpec(name="downtime_comment"),
            ],
            "public": True,
            "sorters": [
                SorterSpec(sorter="downtime_what", negate=False),
                SorterSpec(sorter="downtime_start_time", negate=False),
            ],
            "title": _l("Scheduled downtimes"),
            "topic": "overview",
            "sort_index": 80,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "service_scheduled_downtime_depth": {"is_service_scheduled_downtime_depth": "-1"},
                "hostregex": {"host_regex": ""},
                "downtime_entry_time": {},
                "serviceregex": {"service_regex": ""},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "downtime_history": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log_events",
            "description": _l("All historic scheduled downtimes of hosts and services"),
            "group_painters": [PainterSpec(name="log_what")],
            "hidden": False,
            "hidebutton": False,
            "icon": "downtime",
            "layout": "table",
            "mustsearch": False,
            "num_columns": 1,
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host_dt_hist"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="svc_dt_hist"),
                ),
                PainterSpec(name="log_state_info"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_what", negate=True),
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Downtime history"),
            "topic": "history",
            "sort_index": 30,
            "owner": UserId.builtin(),
            "name": "downtime_history",
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "log_type": {"log_type": "DOWNTIME ALERT"},
                "logtime": {"logtime_from": "60", "logtime_from_range": "86400"},
                "hostregex": {},
                "serviceregex": {},
                "log_state_info": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "api_downtimes": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "downtimes",
            "description": _l("All host- and service-downtimes (including ids)"),
            "group_painters": [PainterSpec(name="downtime_what")],
            "hidden": True,
            "hidebutton": False,
            "icon": "downtime",
            "layout": "table",
            "mustsearch": False,
            "name": "api_downtimes",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="downtime_origin"),
                PainterSpec(name="downtime_author"),
                PainterSpec(name="downtime_entry_time"),
                PainterSpec(name="downtime_start_time"),
                PainterSpec(name="downtime_end_time"),
                PainterSpec(name="downtime_fixed"),
                PainterSpec(name="downtime_duration"),
                PainterSpec(name="downtime_recurring"),
                PainterSpec(name="downtime_comment"),
                PainterSpec(name="downtime_id"),
            ],
            "public": True,
            "sorters": [
                SorterSpec(sorter="downtime_what", negate=False),
                SorterSpec(sorter="downtime_start_time", negate=False),
            ],
            "title": _l("Downtimes"),
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "service_scheduled_downtime_depth": {"is_service_scheduled_downtime_depth": "-1"},
                "hostregex": {"host_regex": ""},
                "serviceregex": {"service_regex": ""},
                "downtime_id": {},
            },
            "link_from": {},
            "topic": "",
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "downtimes_of_host": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "downtimes",
            "description": _l("Lists all host downtimes."),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "icon": "downtime",
            "layout": "table",
            "mustsearch": False,
            "name": "downtimes_of_host",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="downtime_origin"),
                PainterSpec(name="downtime_author"),
                PainterSpec(name="downtime_entry_time"),
                PainterSpec(name="downtime_start_time"),
                PainterSpec(name="downtime_end_time"),
                PainterSpec(name="downtime_fixed"),
                PainterSpec(name="downtime_duration"),
                PainterSpec(name="downtime_recurring"),
                PainterSpec(name="downtime_comment"),
            ],
            "public": True,
            "sorters": [],
            "title": _l("Downtimes of host"),
            "topic": "history",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {"siteopt": {}},
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "downtimes_of_service": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "downtimes",
            "description": _l("Lists all downtimes for services."),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "icon": "downtime",
            "layout": "table",
            "mustsearch": False,
            "name": "downtimes_of_service",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="downtime_origin"),
                PainterSpec(name="downtime_author"),
                PainterSpec(name="downtime_entry_time"),
                PainterSpec(name="downtime_start_time"),
                PainterSpec(name="downtime_end_time"),
                PainterSpec(name="downtime_fixed"),
                PainterSpec(name="downtime_duration"),
                PainterSpec(name="downtime_recurring"),
                PainterSpec(name="downtime_comment"),
            ],
            "public": True,
            "sorters": [],
            "title": _l("Downtimes of service"),
            "topic": "monitoring",
            "user_sortable": True,
            "single_infos": ["service", "host"],
            "context": {"siteopt": {}},
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "host": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l(
                "All services of a given host. The host and site must be set via HTML variables."
            ),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": False,
            "icon": "services",
            "layout": "boxed",
            "mustsearch": False,
            "name": "host",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Services of Host"),
            "topic": "monitoring",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {"siteopt": {}, "svcstate": {}, "serviceregex": {}},
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "host_export": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l(
                "All services of a given host. The host and site must be set via HTTP variables."
            ),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "icon": "services",
            "layout": "boxed",
            "mustsearch": False,
            "num_columns": 1,
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="svc_perf_data"),
                PainterSpec(name="svc_check_command"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="svcdescr", negate=False)],
            "title": _l("Services of Host"),
            "owner": UserId.builtin(),
            "name": "host_export",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {"siteopt": {}, "svcstate": {}, "serviceregex": {}},
            "link_from": {},
            "topic": "",
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hosts": {
            "browser_reload": 30,
            "column_headers": "off",
            "datasource": "services",
            "description": _l("All services of hosts which match a name"),
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "boxed",
            "mustsearch": False,
            "name": "hosts",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Services of Hosts"),
            "user_sortable": True,
            "single_infos": [],
            "context": {"hostregex": {"host_regex": ""}, "svcstate": {}, "siteopt": {}},
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "host_ok": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All services of a given host that are in state OK"),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "host_ok",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="svcdescr", negate=False)],
            "title": _l("OK Services of host"),
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "svcstate": {"st0": "on", "st1": "", "st2": "", "st3": "", "stp": ""},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "host_warn": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All services of a given host that are in state WARN"),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "host_warn",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="svcdescr", negate=False)],
            "title": _l("WARN Services of host"),
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "svcstate": {"st0": "", "st1": "on", "st2": "", "st3": "", "stp": ""},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "host_crit": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All services of a given host that are in state CRIT"),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "host_crit",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="svcdescr", negate=False)],
            "title": _l("CRIT Services of host"),
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "svcstate": {"st0": "", "st1": "", "st2": "on", "st3": "", "stp": ""},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "host_unknown": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All services of a given host that are in state UNKNOWN"),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "host_unknown",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="svcdescr", negate=False)],
            "title": _l("UNKNOWN Services of host"),
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "svcstate": {"st0": "", "st1": "", "st2": "", "st3": "on", "stp": ""},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "host_pending": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All services of a given host that are PENDING"),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "host_pending",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="svcdescr", negate=False)],
            "title": _l("PENDING Services of host"),
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "svcstate": {"st0": "", "st1": "", "st2": "", "st3": "", "stp": "on"},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "problemsofhost": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l(
                "All problem services of a given host. The host and site must be set via HTTP variables."
            ),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "problemsofhost",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="svcdescr", negate=False)],
            "title": _l("Problems of host"),
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "svcstate": {"st0": "", "st1": "on", "st2": "on", "st3": "on", "stp": ""},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroup": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "hosts",
            "description": _l(
                "Lists members of a host group with the number of services in the different states."
            ),
            "group_painters": [
                PainterSpec(name="site_icon"),
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "boxed",
            "mustsearch": False,
            "name": "hostgroup",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": host_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("Host group"),
            "user_sortable": True,
            "single_infos": ["hostgroup"],
            "context": {},
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroup_up": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "context": {
                "hoststate": {
                    "hoststate_filled": "1",
                    "hst0": "on",
                    "hst1": "",
                    "hst2": "",
                    "hstp": "",
                }
            },
            "datasource": "hosts",
            "description": _l(
                "Lists up members of a host group with the number of services in the different states."
            ),
            "group_painters": [
                PainterSpec(name="site_icon"),
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "boxed",
            "mustsearch": False,
            "name": "hostgroup_up",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": host_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("Host group of up hosts"),
            "single_infos": ["hostgroup"],
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroup_down": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "context": {
                "hoststate": {
                    "hoststate_filled": "1",
                    "hst0": "",
                    "hst1": "on",
                    "hst2": "",
                    "hstp": "",
                }
            },
            "datasource": "hosts",
            "description": _l(
                "Lists down members of a host group with the number of services in the different states."
            ),
            "group_painters": [
                PainterSpec(name="site_icon"),
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "boxed",
            "mustsearch": False,
            "name": "hostgroup_down",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": host_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("Host group of down hosts"),
            "single_infos": ["hostgroup"],
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroup_unreach": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "context": {
                "hoststate": {
                    "hoststate_filled": "1",
                    "hst0": "",
                    "hst1": "",
                    "hst2": "on",
                    "hstp": "",
                }
            },
            "datasource": "hosts",
            "description": _l(
                "Lists members of an unreachable host group with the number of services in the different states."
            ),
            "group_painters": [
                PainterSpec(name="site_icon"),
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "boxed",
            "mustsearch": False,
            "name": "hostgroup_unreach",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": host_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("Host group of unreachable hosts"),
            "single_infos": ["hostgroup"],
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroup_pend": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "context": {
                "hoststate": {
                    "hoststate_filled": "1",
                    "hst0": "",
                    "hst1": "",
                    "hst2": "",
                    "hstp": "on",
                }
            },
            "datasource": "hosts",
            "description": _l(
                "Lists members of a pending host group with the number of services in the different states."
            ),
            "group_painters": [
                PainterSpec(name="site_icon"),
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "boxed",
            "mustsearch": False,
            "name": "hostgroup_pend",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": host_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("Host group of pending"),
            "single_infos": ["hostgroup"],
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroupservices": {
            "browser_reload": 90,
            "column_headers": "off",
            "datasource": "services",
            "description": _l("All services of a certain host group"),
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "hostgroupservices",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Services of host group"),
            "user_sortable": True,
            "single_infos": ["hostgroup"],
            "context": {
                "service_in_notification_period": {"is_service_in_notification_period": "-1"},
                "optservicegroup": {"optservice_group": "", "neg_optservice_group": ""},
                "service_notifications_enabled": {"is_service_notifications_enabled": "-1"},
                "host_in_notification_period": {"is_host_in_notification_period": "-1"},
                "service_scheduled_downtime_depth": {"is_service_scheduled_downtime_depth": "-1"},
                "service_acknowledged": {"is_service_acknowledged": "-1"},
                "hostregex": {"host_regex": ""},
                "service_active_checks_enabled": {"is_service_active_checks_enabled": "-1"},
                "serviceregex": {"service_regex": ""},
                "check_command": {"check_command": ""},
                "svcstate": {},
                "in_downtime": {"is_in_downtime": "-1"},
                "output": {"service_output": ""},
                "service_is_flapping": {"is_service_is_flapping": "-1"},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroupservices_ok": {
            "browser_reload": 60,
            "column_headers": "off",
            "datasource": "services",
            "description": _l("All ok services of a certain host group"),
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "hostgroupservices_ok",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("OK services of host group"),
            "user_sortable": True,
            "single_infos": ["hostgroup"],
            "context": {
                "service_in_notification_period": {"is_service_in_notification_period": "-1"},
                "optservicegroup": {"optservice_group": "", "neg_optservice_group": ""},
                "service_notifications_enabled": {"is_service_notifications_enabled": "-1"},
                "host_in_notification_period": {"is_host_in_notification_period": "-1"},
                "service_scheduled_downtime_depth": {"is_service_scheduled_downtime_depth": "-1"},
                "service_acknowledged": {"is_service_acknowledged": "-1"},
                "hostregex": {"host_regex": ""},
                "service_active_checks_enabled": {"is_service_active_checks_enabled": "-1"},
                "serviceregex": {"service_regex": ""},
                "check_command": {"check_command": ""},
                "svcstate": {"st0": "on"},
                "in_downtime": {"is_in_downtime": "-1"},
                "output": {"service_output": ""},
                "service_is_flapping": {"is_service_is_flapping": "-1"},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroupservices_warn": {
            "browser_reload": 60,
            "column_headers": "off",
            "datasource": "services",
            "description": _l("All warn services of a certain host group"),
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "hostgroupservices_warn",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("WARN services of host group"),
            "user_sortable": True,
            "single_infos": ["hostgroup"],
            "context": {
                "service_in_notification_period": {"is_service_in_notification_period": "-1"},
                "optservicegroup": {"optservice_group": "", "neg_optservice_group": ""},
                "service_notifications_enabled": {"is_service_notifications_enabled": "-1"},
                "host_in_notification_period": {"is_host_in_notification_period": "-1"},
                "service_scheduled_downtime_depth": {"is_service_scheduled_downtime_depth": "-1"},
                "service_acknowledged": {"is_service_acknowledged": "-1"},
                "hostregex": {"host_regex": ""},
                "service_active_checks_enabled": {"is_service_active_checks_enabled": "-1"},
                "serviceregex": {"service_regex": ""},
                "check_command": {"check_command": ""},
                "svcstate": {"st1": "on"},
                "in_downtime": {"is_in_downtime": "-1"},
                "output": {"service_output": ""},
                "service_is_flapping": {"is_service_is_flapping": "-1"},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroupservices_crit": {
            "browser_reload": 60,
            "column_headers": "off",
            "datasource": "services",
            "description": _l("All crit services of a certain host group"),
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "hostgroupservices_crit",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("CRIT services of host group"),
            "user_sortable": True,
            "single_infos": ["hostgroup"],
            "context": {
                "service_in_notification_period": {"is_service_in_notification_period": "-1"},
                "optservicegroup": {"optservice_group": "", "neg_optservice_group": ""},
                "service_notifications_enabled": {"is_service_notifications_enabled": "-1"},
                "host_in_notification_period": {"is_host_in_notification_period": "-1"},
                "service_scheduled_downtime_depth": {"is_service_scheduled_downtime_depth": "-1"},
                "service_acknowledged": {"is_service_acknowledged": "-1"},
                "hostregex": {"host_regex": ""},
                "service_active_checks_enabled": {"is_service_active_checks_enabled": "-1"},
                "serviceregex": {"service_regex": ""},
                "check_command": {"check_command": ""},
                "svcstate": {"st2": "on"},
                "in_downtime": {"is_in_downtime": "-1"},
                "output": {"service_output": ""},
                "service_is_flapping": {"is_service_is_flapping": "-1"},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroupservices_unknwn": {
            "browser_reload": 60,
            "column_headers": "off",
            "datasource": "services",
            "description": _l("All unknown services of a certain host group"),
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "hostgroupservices_unknwn",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("UNKNOWN services of host group"),
            "user_sortable": True,
            "single_infos": ["hostgroup"],
            "context": {
                "service_in_notification_period": {"is_service_in_notification_period": "-1"},
                "optservicegroup": {"optservice_group": "", "neg_optservice_group": ""},
                "service_notifications_enabled": {"is_service_notifications_enabled": "-1"},
                "host_in_notification_period": {"is_host_in_notification_period": "-1"},
                "service_scheduled_downtime_depth": {"is_service_scheduled_downtime_depth": "-1"},
                "service_acknowledged": {"is_service_acknowledged": "-1"},
                "hostregex": {"host_regex": ""},
                "service_active_checks_enabled": {"is_service_active_checks_enabled": "-1"},
                "serviceregex": {"service_regex": ""},
                "check_command": {"check_command": ""},
                "svcstate": {"st3": "on"},
                "in_downtime": {"is_in_downtime": "-1"},
                "output": {"service_output": ""},
                "service_is_flapping": {"is_service_is_flapping": "-1"},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroupservices_pend": {
            "browser_reload": 60,
            "column_headers": "off",
            "datasource": "services",
            "description": _l("All pending services of a certain host group"),
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "hostgroupservices_pend",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("PEND services of host group"),
            "user_sortable": True,
            "single_infos": ["hostgroup"],
            "context": {
                "service_in_notification_period": {"is_service_in_notification_period": "-1"},
                "optservicegroup": {"optservice_group": "", "neg_optservice_group": ""},
                "service_notifications_enabled": {"is_service_notifications_enabled": "-1"},
                "host_in_notification_period": {"is_host_in_notification_period": "-1"},
                "service_scheduled_downtime_depth": {"is_service_scheduled_downtime_depth": "-1"},
                "service_acknowledged": {"is_service_acknowledged": "-1"},
                "hostregex": {"host_regex": ""},
                "service_active_checks_enabled": {"is_service_active_checks_enabled": "-1"},
                "serviceregex": {"service_regex": ""},
                "check_command": {"check_command": ""},
                "svcstate": {"stp": "on"},
                "in_downtime": {"is_in_downtime": "-1"},
                "output": {"service_output": ""},
                "service_is_flapping": {"is_service_is_flapping": "-1"},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostgroups": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "merged_hostgroups",
            "description": _l(
                "A short overview over all host groups, without an explicity listing of the actual hosts"
            ),
            "group_painters": [],
            "hidden": False,
            "hidebutton": False,
            "layout": "boxed",
            "mustsearch": False,
            "name": "hostgroups",
            "num_columns": 3,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(
                    name="hg_name",
                    link_spec=VisualLinkSpec(type_name="views", name="hostgroup"),
                ),
                PainterSpec(name="hg_alias"),
                PainterSpec(
                    name="hg_num_hosts_up",
                    link_spec=VisualLinkSpec(type_name="views", name="hostgroup_up"),
                ),
                PainterSpec(
                    name="hg_num_hosts_down",
                    link_spec=VisualLinkSpec(type_name="views", name="hostgroup_down"),
                ),
                PainterSpec(
                    name="hg_num_hosts_unreach",
                    link_spec=VisualLinkSpec(type_name="views", name="hostgroup_unreach"),
                ),
                PainterSpec(
                    name="hg_num_hosts_pending",
                    link_spec=VisualLinkSpec(type_name="views", name="hostgroup_pend"),
                ),
                PainterSpec(
                    name="hg_num_services_ok",
                    link_spec=VisualLinkSpec(type_name="views", name="hostgroupservices_ok"),
                ),
                PainterSpec(
                    name="hg_num_services_warn",
                    link_spec=VisualLinkSpec(type_name="views", name="hostgroupservices_warn"),
                ),
                PainterSpec(
                    name="hg_num_services_crit",
                    link_spec=VisualLinkSpec(type_name="views", name="hostgroupservices_crit"),
                ),
                PainterSpec(
                    name="hg_num_services_unknown",
                    link_spec=VisualLinkSpec(type_name="views", name="hostgroupservices_unknwn"),
                ),
                PainterSpec(
                    name="hg_num_services_pending",
                    link_spec=VisualLinkSpec(type_name="views", name="hostgroupservices_pend"),
                ),
            ],
            "public": True,
            "sorters": [],
            "title": _l("Host groups"),
            "topic": "overview",
            "icon": "hostgroups",
            "sort_index": 60,
            "user_sortable": True,
            "single_infos": [],
            "context": {"hostgroupnameregex": {}, "hostgroupvisibility": {}},
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "hostproblems": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "hosts",
            "description": _l(
                "A complete list of all host problems with a search form for selecting handled and unhandled"
            ),
            "group_painters": [PainterSpec(name="host_state")],
            "hidden": False,
            "hidebutton": False,
            "layout": "boxed",
            "mustsearch": False,
            "name": "hostproblems",
            "num_columns": 3,
            "owner": UserId.builtin(),
            "painters": host_view_painters,
            "play_sounds": True,
            "public": True,
            "sorters": [],
            "title": _l("Host problems"),
            "topic": "problems",
            "icon": "host_problems",
            "sort_index": 20,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "host_scheduled_downtime_depth": {"is_host_scheduled_downtime_depth": "0"},
                "host_in_notification_period": {"is_host_in_notification_period": "-1"},
                "hoststate": {"hst0": "", "hst1": "on", "hst2": "on", "hstp": ""},
                "hostregex": {"host_regex": ""},
                "opthostgroup": {"opthost_group": ""},
                "host_acknowledged": {"is_host_acknowledged": "-1"},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "hoststatus": {
            "num_columns": 1,
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "hosts",
            "description": _l("Shows details of a host."),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "icon": "status",
            "layout": "dataset",
            "mustsearch": False,
            "name": "hoststatus",
            "owner": UserId.builtin(),
            "painters": [
                # 1. Identification and icons
                PainterSpec(name="sitealias"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
                PainterSpec(name="host_addresses"),
                PainterSpec(name="alias"),
                PainterSpec(name="host_labels"),
                PainterSpec(name="host_icons"),
                # 2. State and metrics
                PainterSpec(name="host_state"),
                PainterSpec(name="host_plugin_output"),
                PainterSpec(name="host_pnpgraph"),
                PainterSpec(name="host_perf_data"),
                PainterSpec(name="host_in_downtime"),
                # 2b. Serivce statistics
                PainterSpec(name="num_services"),
                PainterSpec(
                    name="num_services_ok",
                    link_spec=VisualLinkSpec(type_name="views", name="host_ok"),
                ),
                PainterSpec(
                    name="num_services_warn",
                    link_spec=VisualLinkSpec(type_name="views", name="host_warn"),
                ),
                PainterSpec(
                    name="num_services_crit",
                    link_spec=VisualLinkSpec(type_name="views", name="host_crit"),
                ),
                PainterSpec(
                    name="num_services_unknown",
                    link_spec=VisualLinkSpec(type_name="views", name="host_unknown"),
                ),
                PainterSpec(
                    name="num_services_pending",
                    link_spec=VisualLinkSpec(type_name="views", name="host_pending"),
                ),
                # 3. Runtime data, timestamps
                PainterSpec(name="host_attempt"),
                PainterSpec(name="host_state_age"),
                PainterSpec(name="host_check_age"),
                PainterSpec(name="host_next_check"),
                PainterSpec(name="host_check_latency"),
                PainterSpec(name="host_check_duration"),
                # 4. Notification
                PainterSpec(name="host_notifper"),
                PainterSpec(name="host_in_notifper"),
                PainterSpec(name="host_notification_number"),
                PainterSpec(name="host_last_notification"),
                PainterSpec(name="host_next_notification"),
                PainterSpec(name="host_notification_postponement_reason"),
                # 5. Configuration
                PainterSpec(name="host_parents"),
                PainterSpec(name="host_childs"),
                PainterSpec(name="host_check_interval"),
                PainterSpec(name="host_contact_groups"),
                PainterSpec(name="host_contacts"),
                PainterSpec(name="host_group_memberlist"),
                PainterSpec(name="host_servicelevel"),
                PainterSpec(name="host_check_command"),
                PainterSpec(name="host_custom_vars"),
                PainterSpec(name="host_custom_notes"),
            ],
            "public": True,
            "sorters": [],
            "title": _l("Status of Host"),
            "topic": "monitoring",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {"siteopt": {}},
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "pendingsvc": {
            "browser_reload": 30,
            "column_headers": "off",
            "datasource": "services",
            "description": _l("Lists all services in state PENDING."),
            "group_painters": [
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                )
            ],
            "hidden": False,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "pendingsvc",
            "num_columns": 5,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                )
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [],
            "title": _l("Pending services"),
            "topic": "analyze",
            "icon": {"icon": "services", "emblem": "pending"},
            "sort_index": 50,
            "is_show_more": True,
            "user_sortable": True,
            "single_infos": [],
            "context": {"svcstate": {"st0": "", "st1": "", "st2": "", "st3": "", "stp": "on"}},
            "link_from": {},
            "add_context_to_title": True,
        },
        "searchhost": {
            "browser_reload": 60,
            "column_headers": "pergroup",
            "datasource": "hosts",
            "description": _l("A form for searching hosts using flexible filters"),
            "group_painters": [PainterSpec(name="sitealias")],
            "hidden": False,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": True,
            "name": "searchhost",
            "num_columns": 3,
            "owner": UserId.builtin(),
            "painters": host_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [],
            "title": _l("Host search"),
            "topic": "overview",
            "sort_index": 30,
            "icon": {"icon": "folder", "emblem": "search"},
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "hostregex": {},
                "hostalias": {},
                "host_address": {},
                "host_labels": {},
                "host_tags": {},
                "siteopt": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "searchsvc": {
            "browser_reload": 60,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l(
                "Almost all available filters, used for searching services and maybe doing actions"
            ),
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": False,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": True,
            "name": "searchsvc",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Service search"),
            "topic": "overview",
            "icon": {"icon": "services", "emblem": "search"},
            "sort_index": 40,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "hostregex": {"host_regex": ""},
                "hostalias": {},
                "host_address": {},
                "host_labels": {},
                "host_tags": {},
                "siteopt": {},
                "serviceregex": {"service_regex": ""},
                "output": {"service_output": ""},
                "service_labels": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "service": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("Status of a single service, to be used for linking"),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "layout": "dataset",
            "mustsearch": False,
            "name": "service",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                # 1. Identification and icons
                PainterSpec(name="sitealias"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="servicedesc"),
                ),
                PainterSpec(name="service_labels"),
                PainterSpec(name="service_icons"),
                # 2. State and metrics
                PainterSpec(name="service_state"),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="svc_long_plugin_output"),
                PainterSpec(name="perfometer"),
                PainterSpec(name="svc_pnpgraph"),
                PainterSpec(name="svc_metrics"),
                PainterSpec(name="svc_in_downtime"),
                # 3. Runtime data, timestamps
                PainterSpec(name="svc_attempt"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
                PainterSpec(name="svc_check_cache_info"),
                PainterSpec(name="svc_next_check"),
                PainterSpec(name="svc_last_time_ok"),
                PainterSpec(name="svc_check_latency"),
                PainterSpec(name="svc_check_duration"),
                # 4. Notifications
                PainterSpec(name="svc_notifper"),
                PainterSpec(name="svc_in_notifper"),
                PainterSpec(name="svc_notification_number"),
                PainterSpec(name="svc_last_notification"),
                PainterSpec(name="svc_next_notification"),
                PainterSpec(name="svc_notification_postponement_reason"),
                # 5. Configuration
                PainterSpec(name="svc_check_interval"),
                PainterSpec(name="svc_contact_groups"),
                PainterSpec(name="svc_contacts"),
                PainterSpec(name="svc_group_memberlist"),
                PainterSpec(name="svc_servicelevel"),
                PainterSpec(name="svc_check_command"),
                PainterSpec(name="svc_perf_data"),
                PainterSpec(name="svc_custom_vars"),
                PainterSpec(name="check_manpage"),
                PainterSpec(name="svc_custom_notes"),
            ],
            "public": True,
            "sorters": [],
            "title": _l("Service"),
            "user_sortable": True,
            "single_infos": ["service", "host"],
            "context": {"siteopt": {}},
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "servicedesc": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All services with a certain description"),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "layout": "table",
            "icon": "status",
            "mustsearch": False,
            "name": "servicedesc",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(name="service_icons"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="perfometer"),
            ],
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "user_sortable": True,
            "title": _l("All services with this description"),
            "single_infos": ["service"],
            "context": {"hostregex": {}, "svcstate": {}, "opthostgroup": {}},
            "link_from": {},
            "topic": "",
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "servicegroup": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("Services of a service group"),
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "servicegroup",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Service group"),
            "user_sortable": True,
            "single_infos": ["servicegroup"],
            "context": {},
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "sitehosts": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "hosts",
            "description": _l("Link view showing all hosts of one site"),
            "group_painters": [
                PainterSpec(name="site_icon"),
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitesvcs"),
                ),
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "sitehosts",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": host_view_painters,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("All hosts of site"),
            "user_sortable": True,
            "single_infos": [],
            "context": {"site": {}},
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "svcgroups": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "merged_servicegroups",
            "description": _l(
                "A short overview over all service groups, without explicity listing of the actual hosts and services"
            ),
            "group_painters": [],
            "hidden": False,
            "hidebutton": False,
            "layout": "boxed",
            "mustsearch": False,
            "name": "svcgroups",
            "num_columns": 3,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(
                    name="sg_name",
                    link_spec=VisualLinkSpec(type_name="views", name="servicegroup"),
                ),
                PainterSpec(name="sg_alias"),
                PainterSpec(name="sg_num_services_ok"),
                PainterSpec(name="sg_num_services_warn"),
                PainterSpec(name="sg_num_services_crit"),
                PainterSpec(name="sg_num_services_unknown"),
                PainterSpec(name="sg_num_services_pending"),
            ],
            "public": True,
            "sorters": [],
            "title": _l("Service groups"),
            "topic": "overview",
            "icon": "servicegroups",
            "sort_index": 70,
            "user_sortable": True,
            "single_infos": [],
            "context": {"servicegroupnameregex": {}},
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "svcproblems": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All problems of services not currently in a downtime."),
            "group_painters": [],
            "hidden": False,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "svcproblems",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": host_service_view_painters,
            "play_sounds": True,
            "public": True,
            "sorters": [
                SorterSpec(sorter="svcstate", negate=True),
                SorterSpec(sorter="stateage", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Service problems"),
            "topic": "problems",
            "icon": "svc_problems",
            "sort_index": 30,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "in_downtime": {"is_in_downtime": "0"},
                "service_in_notification_period": {},
                "service_acknowledged": {},
                "svcstate": {"st0": "", "st1": "on", "st2": "on", "st3": "on", "stp": ""},
                "svchardstate": {},
                "serviceregex": {},
                "host_labels": {},
                "host_tags": {},
                "host_auxtags": {},
                "hoststate": {"hst0": "on", "hst1": "", "hst2": "", "hstp": "on"},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "searchpnp": {
            "browser_reload": 90,
            "column_headers": "off",
            "datasource": "services",
            "description": _l("Search for services and display their graphs"),
            "group_painters": [
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
            ],
            "hidden": False,
            "hidebutton": False,
            "icon": {"icon": "service_graph", "emblem": "search"},
            "layout": "boxed_graph",
            "mustsearch": True,
            "name": "searchpnp",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [PainterSpec(name="service_graphs")],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Search time graphs"),
            "topic": "history",
            "sort_index": 50,
            "is_show_more": True,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "service_process_performance_data": {"is_service_process_performance_data": "1"},
                "has_performance_data": {"is_has_performance_data": "1"},
                "hostregex": {},
                "hostalias": {},
                "host_address": {},
                "host_labels": {},
                "host_tags": {},
                "siteopt": {},
                "serviceregex": {},
                "output": {},
                "service_labels": {},
            },
            "link_from": {},
            "add_context_to_title": True,
        },
        "hostpnp": {
            "browser_reload": 90,
            "column_headers": "off",
            "datasource": "services",
            "description": _l("All graphs for a certain host."),
            "group_painters": [
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                )
            ],
            "hidden": True,
            "hidebutton": False,
            "icon": "service_graph",
            "layout": "boxed_graph",
            "mustsearch": False,
            "name": "hostpnp",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [PainterSpec(name="host_graphs")],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Service graphs of host"),
            "topic": "history",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "service_process_performance_data": {"is_service_process_performance_data": "1"},
                "has_performance_data": {"is_has_performance_data": "1"},
                "svcstate": {"st0": "on", "st1": "on", "st2": "on", "st3": "on", "stp": ""},
                "serviceregex": {},
                "check_command": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "recentsvc": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("Service whose state changed in the last 60 minutes"),
            "group_painters": [],
            "hidden": False,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "recentsvc",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": host_service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="stateage", negate=True)],
            "title": _l("Recently changed services"),
            "topic": "history",
            "sort_index": 80,
            "icon": {"icon": "services", "emblem": "warning"},
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "svc_last_state_change": {
                    "svc_last_state_change_from": "1",
                    "svc_last_state_change_from_range": "3600",
                },
                "svcstate": {"st0": "on", "st1": "on", "st2": "on", "st3": "on", "stp": ""},
                "siteopt": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "uncheckedsvc": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l(
                "Services that have not been checked for too long according to their configured check intervals."
            ),
            "group_painters": [
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                )
            ],
            "hidden": False,
            "hidebutton": False,
            "icon": "stale",
            "layout": "table",
            "mobile": False,
            "mustsearch": False,
            "name": "uncheckedsvc",
            "num_columns": 1,
            "painters": service_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "user_sortable": True,
            "title": _l("Stale services"),
            "topic": "problems",
            "sort_index": 40,
            "is_show_more": True,
            "owner": UserId.builtin(),
            "single_infos": [],
            "context": {
                "service_staleness": {"is_service_staleness": "1"},
                "service_scheduled_downtime_depth": {"is_service_scheduled_downtime_depth": "0"},
                "host_scheduled_downtime_depth": {"is_host_scheduled_downtime_depth": "0"},
                "hoststate": {"hst0": "on", "hst1": "on", "hst2": "on", "hstp": "on"},
            },
            "link_from": {},
            "add_context_to_title": True,
        },
        "stale_hosts": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "hosts",
            "description": _l("Hosts that have not been checked for too long."),
            "group_painters": [PainterSpec(name="sitealias")],
            "hidden": True,
            "hidebutton": False,
            "icon": None,
            "layout": "boxed",
            "mobile": False,
            "mustsearch": False,
            "name": "stale_hosts",
            "num_columns": 1,
            "painters": host_view_painters,
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="host_name", negate=False),
            ],
            "title": _l("Stale hosts"),
            "topic": "problems",
            "user_sortable": True,
            "owner": UserId.builtin(),
            "single_infos": [],
            "context": {
                "host_staleness": {"is_host_staleness": "1"},
                "host_scheduled_downtime_depth": {"is_host_scheduled_downtime_depth": "0"},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "events": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log_events",
            "description": _l("All historic events of hosts or services (alerts, downtimes, etc.)"),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": False,
            "hidebutton": False,
            "icon": "event",
            "layout": "table",
            "mustsearch": False,
            "name": "events",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_type"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hostsvcevents"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="svcevents"),
                ),
                PainterSpec(name="log_state_info"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Host & service events"),
            "topic": "history",
            "sort_index": 10,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "siteopt": {},
                "hostregex": {"host_regex": ""},
                "serviceregex": {"service_regex": ""},
                "logtime": {"logtime_from": "7", "logtime_from_range": "86400"},
                "log_plugin_output": {"log_plugin_output": ""},
                "log_state": {},
                "log_class": {},
                "log_notification_phase": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "hostevents": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log_host_events",
            "description": _l(
                "All historic events concerning the state of a certain host (without services)"
            ),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": True,
            "hidebutton": False,
            "icon": "history",
            "layout": "table",
            "mustsearch": False,
            "name": "hostevents",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_type"),
                PainterSpec(name="log_state_info"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Events of host"),
            "topic": "history",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "logtime": {"logtime_from": "7", "logtime_from_range": "86400"},
                "log_state": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "host_dt_hist": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log_events",
            "description": _l("All historic scheduled downtimes of a certain host"),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "icon": "downtime",
            "layout": "table",
            "mustsearch": False,
            "num_columns": 1,
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_state_info"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Historic downtimes of host"),
            "topic": "history",
            "is_show_more": True,
            "owner": UserId.builtin(),
            "name": "host_dt_hist",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "log_type": {"log_type": "HOST DOWNTIME ALERT"},
                "logtime": {"logtime_from": "60", "logtime_from_range": "86400"},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
        },
        "svcevents": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log_events",
            "description": _l("All historic events concerning the state of a certain service"),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": True,
            "hidebutton": False,
            "icon": "history",
            "layout": "table",
            "mustsearch": False,
            "name": "svcevents",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_type"),
                PainterSpec(name="log_state_info"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Events of service"),
            "topic": "history",
            "user_sortable": True,
            "single_infos": ["service", "host"],
            "context": {
                "siteopt": {},
                "logtime": {"logtime_from": "7", "logtime_from_range": "86400"},
                "log_state": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "svc_dt_hist": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log_events",
            "description": _l("All historic scheduled downtimes of a certain service"),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "icon": "downtime",
            "layout": "table",
            "mustsearch": False,
            "num_columns": 1,
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_state_info"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Historic downtimes of service"),
            "topic": "history",
            "owner": UserId.builtin(),
            "name": "svc_dt_hist",
            "user_sortable": True,
            "single_infos": ["service", "host"],
            "context": {
                "siteopt": {},
                "log_type": {"log_type": "(HOST|SERVICE) DOWNTIME ALERT"},
                "logtime": {"logtime_from": "60", "logtime_from_range": "86400"},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostsvcevents": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log_events",
            "description": _l(
                "All historic events concerning the state of a certain host (including services)"
            ),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": True,
            "hidebutton": False,
            "icon": "history",
            "layout": "table",
            "mustsearch": False,
            "name": "hostsvcevents",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_type"),
                PainterSpec(name="host"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="svcevents"),
                ),
                PainterSpec(name="log_state_info"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Events of host & services"),
            "topic": "history",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "logtime": {"logtime_from": "7", "logtime_from_range": "86400"},
                "log_state": {},
                "log_class": {},
                "log_notification_phase": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "logfile": {
            "browser_reload": 0,
            "column_headers": "off",
            "datasource": "log",
            "description": _l("Displays entries from the logfile of the monitoring core."),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": False,
            "hidebutton": False,
            "icon": {"icon": "event", "emblem": "search"},
            "layout": "table",
            "mustsearch": True,
            "name": "logfile",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_type"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hostsvcevents"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="svcevents"),
                ),
                PainterSpec(name="log_state_info"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Search history"),
            "topic": "history",
            "sort_index": 40,
            "is_show_more": True,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "optservicegroup": {"optservice_group": "", "neg_optservice_group": ""},
                "siteopt": {"site": ""},
                "log_class": {
                    "logclass0": "on",
                    "logclass1": "on",
                    "logclass2": "on",
                    "logclass3": "on",
                    "logclass4": "",
                    "logclass5": "on",
                    "logclass6": "",
                    "logclass8": "on",
                },
                "log_notification_phase": {},
                "hostregex": {"host_regex": ""},
                "serviceregex": {"service_regex": ""},
                "opthostgroup": {"opthost_group": "", "neg_opthost_group": ""},
                "logtime": {"logtime_from": "7", "logtime_from_range": "86400"},
                "log_state": {},
            },
            "link_from": {},
            "add_context_to_title": True,
        },
        "sitesvcs_ok": {
            "browser_reload": 60,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All OK services of a given site."),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "sitesvcs_ok",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="perfometer"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("OK Services of Site"),
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "siteopt": {},
                "optservicegroup": {},
                "hostregex": {},
                "serviceregex": {},
                "svcstate": {"st0": "on"},
                "opthostgroup": {},
                "host_check_command": {},
                "output": {},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "sitesvcs_warn": {
            "browser_reload": 60,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All WARN services of a given site."),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "sitesvcs_warn",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="perfometer"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("WARN Services of Site"),
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "siteopt": {},
                "optservicegroup": {},
                "hostregex": {},
                "serviceregex": {},
                "svcstate": {"st1": "on"},
                "opthostgroup": {},
                "host_check_command": {},
                "output": {},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "sitesvcs_crit": {
            "browser_reload": 60,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All CRIT services of a given site."),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "sitesvcs_crit",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="perfometer"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("CRIT Services of Site"),
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "siteopt": {},
                "optservicegroup": {},
                "hostregex": {},
                "serviceregex": {},
                "svcstate": {"st2": "on"},
                "opthostgroup": {},
                "host_check_command": {},
                "output": {},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "sitesvcs_unknwn": {
            "browser_reload": 60,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All UNKNOWN services of a given site."),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "sitesvcs_unknwn",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="perfometer"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("UNKNOWN Services of Site"),
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "siteopt": {},
                "optservicegroup": {},
                "hostregex": {},
                "serviceregex": {},
                "svcstate": {"st3": "on"},
                "opthostgroup": {},
                "host_check_command": {},
                "output": {},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "sitesvcs_pend": {
            "browser_reload": 60,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All pending services of a given site."),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "sitesvcs_pend",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="perfometer"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Pending Services of Site"),
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "siteopt": {},
                "optservicegroup": {},
                "hostregex": {},
                "serviceregex": {},
                "svcstate": {"stp": "on"},
                "opthostgroup": {},
                "host_check_command": {},
                "output": {},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "sitesvcs": {
            "browser_reload": 60,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("All services of a given site."),
            "group_painters": [
                PainterSpec(
                    name="host_with_state",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                )
            ],
            "hidden": True,
            "hidebutton": True,
            "layout": "boxed",
            "mustsearch": False,
            "name": "sitesvcs",
            "num_columns": 2,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
                PainterSpec(name="service_icons"),
                PainterSpec(name="perfometer"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Services of Site"),
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "siteopt": {},
                "optservicegroup": {},
                "hostregex": {},
                "serviceregex": {},
                "svcstate": {},
                "opthostgroup": {},
                "host_check_command": {},
                "output": {},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "alertstats": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "alert_stats",
            "description": _l("Shows number of alerts grouped for each service."),
            "group_painters": [],
            "hidden": False,
            "hidebutton": False,
            "layout": "boxed",
            "mustsearch": False,
            "name": "alertstats",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hostsvcevents"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="svcevents"),
                ),
                PainterSpec(name="alert_stats_problem"),
                PainterSpec(name="alert_stats_crit"),
                PainterSpec(name="alert_stats_unknown"),
                PainterSpec(name="alert_stats_warn"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="alerts_crit", negate=True),
                SorterSpec(sorter="alerts_unknown", negate=True),
                SorterSpec(sorter="alerts_warn", negate=True),
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Alert Statistics"),
            "topic": "problems",
            "sort_index": 50,
            "icon": "alerts",
            "is_show_more": True,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "optservicegroup": {"optservice_group": "", "neg_optservice_group": ""},
                "siteopt": {"site": ""},
                "hostregex": {"host_regex": ""},
                "serviceregex": {"service_regex": ""},
                "check_command": {"check_command": ""},
                "log_plugin_output": {"log_plugin_output": ""},
                "opthostgroup": {"opthost_group": "", "neg_opthost_group": ""},
                "host_check_command": {"host_check_command": ""},
                "logtime": {"logtime_from": "31", "logtime_from_range": "86400"},
                "log_state": {},
            },
            "link_from": {},
            "add_context_to_title": True,
        },
        # Special views for NagStaMon
        "nagstamon_hosts": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "hosts",
            "description": _l("The view is intended for NagStaMon as web service."),
            "group_painters": [PainterSpec(name="host_state")],
            "hidden": True,
            "hidebutton": True,
            "layout": "table",
            "mustsearch": False,
            "name": "nagstamon_hosts",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                ),
                PainterSpec(name="host_icons"),
                PainterSpec(name="host_check_age"),
                PainterSpec(name="host_state_age"),
                PainterSpec(name="host_attempt"),
                PainterSpec(name="host_state"),
                PainterSpec(name="host_plugin_output"),
                PainterSpec(name="host_in_downtime"),
                PainterSpec(name="host_acknowledged"),
                PainterSpec(name="host_address"),
                PainterSpec(name="host_in_downtime"),
                PainterSpec(name="host_acknowledged"),
                PainterSpec(name="sitename_plain"),
                PainterSpec(name="host_flapping"),
                PainterSpec(name="host_is_active"),
                PainterSpec(name="host_notifications_enabled"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [],
            "title": _l("Host problems for NagStaMon"),
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "host_scheduled_downtime_depth": {},
                "host_active_checks_enabled": {},
                "hoststate": {},
                "host_acknowledged": {},
                "host_notifications_enabled": {},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "nagstamon_svc": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l("This view is intended for usage as web service for NagStaMon."),
            "group_painters": [PainterSpec(name="service_state")],
            "hidden": True,
            "hidebutton": True,
            "layout": "table",
            "mustsearch": False,
            "name": "nagstamon_svc",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="service_icons"),
                PainterSpec(name="service_state"),
                PainterSpec(name="svc_check_age"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_attempt"),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="svc_flapping"),
                PainterSpec(name="svc_notifications_enabled"),
                PainterSpec(name="svc_is_active"),
                PainterSpec(name="svc_in_downtime"),
                PainterSpec(name="svc_acknowledged"),
                PainterSpec(name="sitename_plain"),
                PainterSpec(name="host_address"),
                PainterSpec(name="svc_check_command"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="svcstate", negate=True),
                SorterSpec(sorter="stateage", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Service problems for NagStaMon"),
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "service_in_notification_period": {},
                "service_notifications_enabled": {},
                "hoststate": {},
                "service_acknowledged": {},
                "service_active_checks_enabled": {},
                "host_notifications_enabled": {},
                "svcstate": {"st0": "", "st1": "on", "st2": "on", "st3": "on", "stp": ""},
                "in_downtime": {},
            },
            "link_from": {},
            "topic": "",
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "perf_matrix": {
            "browser_reload": 60,
            "column_headers": "pergroup",
            "context": {
                "serviceregex": {"service_regex": ""},
                "service_in_notification_period": {},
                "service_notifications_enabled": {},
                "hoststate": {},
                "service_acknowledged": {},
                "service_active_checks_enabled": {},
                "host_notifications_enabled": {},
                "svcstate": {},
                "in_downtime": {},
                "has_performance_data": {"is_has_performance_data": "1"},
            },
            "datasource": "servicesbyhostgroup",
            "description": _l(
                "A Matrix of Performance data values from all hosts in a certain host group"
            ),
            "group_painters": [
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                )
            ],
            "hidden": True,
            "hidebutton": False,
            "icon": "matrix",
            "layout": "matrix",
            "num_columns": 12,
            "painters": [
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="perfometer"),
            ],
            "single_infos": ["hostgroup"],
            "sorters": [
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Matrix of Performance Data"),
            "user_sortable": True,
            "owner": UserId.builtin(),
            "public": True,
            "name": "perf_matrix",
            "link_from": {},
            "topic": "",
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "perf_matrix_search": {
            "browser_reload": 60,
            "column_headers": "pergroup",
            "context": {
                "hostregex": {},
                "host_address": {},
                "serviceregex": {},
                "output": {},
                "siteopt": {},
                "host_labels": {},
                "host_tags": {},
                "hostalias": {},
                "has_performance_data": {"is_has_performance_data": "1"},
                "service_labels": {},
            },
            "datasource": "services",
            "description": _l("A Matrix of performance data values, grouped by hosts and services"),
            "group_painters": [
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                )
            ],
            "hidden": False,
            "hidebutton": False,
            "icon": "performance_data",
            "layout": "matrix",
            "num_columns": 12,
            "painters": [
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="perfometer"),
            ],
            "single_infos": [],
            "sorters": [
                SorterSpec(sorter="site_host", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "user_sortable": True,
            "mustsearch": True,
            "title": _l("Search performance data"),
            "topic": "history",
            "sort_index": 60,
            "owner": UserId.builtin(),
            "public": True,
            "name": "perf_matrix_search",
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        #
        #    ____            _
        #   | __ ) _   _ ___(_)_ __   ___  ___ ___
        #   |  _ \| | | / __| | '_ \ / _ \/ __/ __|
        #   | |_) | |_| \__ \ | | | |  __/\__ \__ \
        #   |____/ \__,_|___/_|_| |_|\___||___/___/
        #
        #    ___       _       _ _ _
        #   |_ _|_ __ | |_ ___| | (_) __ _  ___ _ __   ___ ___
        #    | || '_ \| __/ _ \ | | |/ _` |/ _ \ '_ \ / __/ _ \
        #    | || | | | ||  __/ | | | (_| |  __/ | | | (_|  __/
        #   |___|_| |_|\__\___|_|_|_|\__, |\___|_| |_|\___\___|
        #                            |___/
        #
        # All Aggregations
        "aggr_all": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "bi_aggregations",
            "description": _l("Displays all BI aggregations."),
            "group_painters": [
                PainterSpec(
                    name="aggr_group",
                    link_spec=VisualLinkSpec(type_name="views", name="aggr_group"),
                )
            ],
            "hidden": False,
            "hidebutton": False,
            "icon": "aggr",
            "layout": "table",
            "mustsearch": False,
            "name": "aggr_all",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_icons"),
                PainterSpec(name="aggr_state"),
                PainterSpec(name="aggr_treestate"),
                PainterSpec(name="aggr_hosts"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="aggr_group", negate=False),
                SorterSpec(sorter="aggr_name", negate=False),
            ],
            "title": _l("All Aggregations"),
            "topic": "bi",
            "sort_index": 10,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "aggr_group": {},
                "aggr_group_tree": {},
                "aggr_hosts": {},
                "aggr_name_regex": {"aggr_name_regex": ""},
                "aggr_state": {
                    "birs-1": "on",
                    "birs0": "on",
                    "birs1": "on",
                    "birs2": "on",
                    "birs3": "on",
                },
                "aggr_output": {"aggr_output": ""},
                "aggr_assumed_state": {
                    "bias0": "on",
                    "bias1": "on",
                    "bias2": "on",
                    "bias3": "on",
                    "biasn": "on",
                },
                "aggr_effective_state": {
                    "bies-1": "on",
                    "bies0": "on",
                    "bies1": "on",
                    "bies2": "on",
                    "bies3": "on",
                },
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        # All aggregations of a certain group
        "aggr_group": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "bi_aggregations",
            "description": _l("Displays all aggregations of a certain group."),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "icon": "aggr",
            "layout": "table",
            "mustsearch": False,
            "name": "aggr_group",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_icons"),
                PainterSpec(name="aggr_state"),
                PainterSpec(name="aggr_treestate"),
                PainterSpec(name="aggr_hosts"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="aggr_name", negate=False)],
            "title": _l("Aggregation group"),
            "topic": "bi",
            "user_sortable": True,
            "single_infos": ["aggr_group"],
            "context": {
                "aggr_hosts": {},
                "aggr_name_regex": {"aggr_name_regex": ""},
                "aggr_state": {
                    "birs-1": "on",
                    "birs0": "on",
                    "birs1": "on",
                    "birs2": "on",
                    "birs3": "on",
                },
                "aggr_output": {"aggr_output": ""},
                "aggr_assumed_state": {
                    "bias0": "on",
                    "bias1": "on",
                    "bias2": "on",
                    "bias3": "on",
                    "biasn": "on",
                },
                "aggr_effective_state": {
                    "bies-1": "on",
                    "bies0": "on",
                    "bies1": "on",
                    "bies2": "on",
                    "bies3": "on",
                },
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        # All host-only aggregations
        "aggr_singlehosts": {
            "browser_reload": 0,
            "column_headers": "off",
            "datasource": "bi_host_aggregations",
            "description": _l("Lists all aggregations which only rely on information of one host."),
            "group_painters": [
                PainterSpec(
                    name="aggr_group",
                    link_spec=VisualLinkSpec(type_name="views", name="aggr_group"),
                )
            ],
            "hidden": False,
            "hidebutton": True,
            "icon": "aggr_single",
            "layout": "table",
            "mustsearch": False,
            "name": "aggr_singlehosts",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_icons"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="aggr_host"),
                ),
                PainterSpec(name="host_icons"),
                PainterSpec(name="aggr_treestate"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="aggr_group", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("Single host aggregations"),
            "topic": "bi",
            "sort_index": 40,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "host_scheduled_downtime_depth": {"is_host_scheduled_downtime_depth": "-1"},
                "aggr_name_regex": {"aggr_name_regex": ""},
                "aggr_group": {"aggr_group": ""},
                "aggr_state": {
                    "birs-1": "on",
                    "birs0": "on",
                    "birs1": "on",
                    "birs2": "on",
                    "birs3": "on",
                },
                "host_in_notification_period": {"is_host_in_notification_period": "-1"},
                "aggr_output": {"aggr_output": ""},
                "hoststate": {},
                "siteopt": {"site": ""},
                "aggr_assumed_state": {
                    "bias0": "on",
                    "bias1": "on",
                    "bias2": "on",
                    "bias3": "on",
                    "biasn": "on",
                },
                "hostregex": {"host_regex": ""},
                "opthostgroup": {"opthost_group": "", "neg_opthost_group": ""},
                "aggr_effective_state": {
                    "bies-1": "on",
                    "bies0": "on",
                    "bies1": "on",
                    "bies2": "on",
                    "bies3": "on",
                },
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        # Aggregations that bear the name of a host
        "aggr_hostnameaggrs": {
            "browser_reload": 0,
            "column_headers": "off",
            "datasource": "bi_hostname_aggregations",
            "description": _l("Host related aggregations"),
            "group_painters": [
                PainterSpec(
                    name="aggr_group",
                    link_spec=VisualLinkSpec(type_name="views", name="aggr_group"),
                )
            ],
            "hidden": False,
            "hidebutton": True,
            "icon": "aggr",
            "layout": "table",
            "mustsearch": False,
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_icons"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="aggr_host"),
                ),
                PainterSpec(name="host_icons"),
                PainterSpec(name="aggr_treestate"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="aggr_group", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("Hostname aggregations"),
            "topic": "bi",
            "sort_index": 20,
            "name": "aggr_hostnameaggrs",
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "host_scheduled_downtime_depth": {"is_host_scheduled_downtime_depth": "-1"},
                "aggr_name_regex": {"aggr_name_regex": ""},
                "aggr_group": {"aggr_group": ""},
                "aggr_state": {
                    "birs-1": "on",
                    "birs0": "on",
                    "birs1": "on",
                    "birs2": "on",
                    "birs3": "on",
                },
                "host_in_notification_period": {"is_host_in_notification_period": "-1"},
                "aggr_output": {"aggr_output": ""},
                "hoststate": {},
                "siteopt": {"site": ""},
                "aggr_assumed_state": {
                    "bias0": "on",
                    "bias1": "on",
                    "bias2": "on",
                    "bias3": "on",
                    "biasn": "on",
                },
                "hostregex": {"host_regex": ""},
                "opthostgroup": {"opthost_group": "", "neg_opthost_group": ""},
                "aggr_effective_state": {
                    "bies-1": "on",
                    "bies0": "on",
                    "bies1": "on",
                    "bies2": "on",
                    "bies3": "on",
                },
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        # Single-Host Aggregations of a host
        "aggr_singlehost": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "bi_host_aggregations",
            "description": _l("A single host related aggregation"),
            "group_painters": [PainterSpec(name="aggr_name")],
            "hidden": True,
            "hidebutton": False,
            "icon": "aggr",
            "layout": "table",
            "mustsearch": False,
            "name": "aggr_singlehost",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_icons"),
                PainterSpec(name="aggr_state"),
                PainterSpec(name="aggr_treestate"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="aggr_name", negate=False)],
            "title": _l("Single-Host Aggregations of Host"),
            "topic": "bi",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {"siteopt": {}},
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        # All aggregations affected by a certain host
        "aggr_host": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "bi_aggregations",
            "description": _l("All aggregations the given host is part of"),
            "group_painters": [
                PainterSpec(
                    name="aggr_group",
                    link_spec=VisualLinkSpec(type_name="views", name="aggr_group"),
                )
            ],
            "hidden": True,
            "hidebutton": False,
            "icon": "aggr",
            "layout": "table",
            "mustsearch": False,
            "name": "aggr_host",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_icons"),
                PainterSpec(name="aggr_state"),
                PainterSpec(name="aggr_treestate"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="aggr_name", negate=False)],
            "title": _l("Aggregations Affected by Host"),
            "topic": "bi",
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "aggr_group": {},
                "aggr_name_regex": {"aggr_name_regex": ""},
                "aggr_state": {
                    "birs-1": "on",
                    "birs0": "on",
                    "birs1": "on",
                    "birs2": "on",
                    "birs3": "on",
                },
                "aggr_output": {"aggr_output": ""},
                "aggr_assumed_state": {
                    "bias-1": "on",
                    "bias0": "on",
                    "bias1": "on",
                    "bias2": "on",
                    "bias3": "on",
                    "biasn": "on",
                },
                "aggr_effective_state": {
                    "bies-1": "on",
                    "bies0": "on",
                    "bies1": "on",
                    "bies2": "on",
                    "bies3": "on",
                },
                "aggr_hosts": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        # All aggregations affected by a certain service (one one site/host!)
        "aggr_service": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "bi_aggregations",
            "description": _l("All aggregations affected by a certain service"),
            "group_painters": [
                PainterSpec(
                    name="aggr_group",
                    link_spec=VisualLinkSpec(type_name="views", name="aggr_group"),
                )
            ],
            "hidden": True,
            "hidebutton": False,
            "icon": "aggr",
            "layout": "table",
            "mustsearch": False,
            "name": "aggr_service",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_icons"),
                PainterSpec(name="aggr_state"),
                PainterSpec(name="aggr_treestate"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [SorterSpec(sorter="aggr_name", negate=False)],
            "title": _l("Aggregations Affected by Service"),
            "topic": "bi",
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "aggr_group": {},
                "aggr_name_regex": {"aggr_name_regex": ""},
                "aggr_state": {
                    "birs-1": "on",
                    "birs0": "on",
                    "birs1": "on",
                    "birs2": "on",
                    "birs3": "on",
                },
                "aggr_output": {"aggr_output": ""},
                "aggr_assumed_state": {
                    "bias-1": "on",
                    "bias0": "on",
                    "bias1": "on",
                    "bias2": "on",
                    "bias3": "on",
                    "biasn": "on",
                },
                "aggr_effective_state": {
                    "bies-1": "on",
                    "bies0": "on",
                    "bies1": "on",
                    "bies2": "on",
                    "bies3": "on",
                },
                "aggr_service": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        # All Aggregations that have (real) problems
        "aggr_problems": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "bi_aggregations",
            "description": _l(
                "All aggregations that have a non-OK state (honoring state assumptions)"
            ),
            "group_painters": [
                PainterSpec(
                    name="aggr_group",
                    link_spec=VisualLinkSpec(type_name="views", name="aggr_group"),
                )
            ],
            "hidden": False,
            "hidebutton": False,
            "icon": "aggr",
            "layout": "table",
            "mustsearch": False,
            "name": "aggr_problems",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_icons"),
                PainterSpec(name="aggr_state"),
                PainterSpec(name="aggr_treestate"),
                PainterSpec(name="aggr_hosts"),
            ],
            "play_sounds": True,
            "public": True,
            "sorters": [
                SorterSpec(sorter="aggr_group", negate=False),
                SorterSpec(sorter="aggr_name", negate=False),
            ],
            "title": _l("Problem aggregations"),
            "topic": "bi",
            "sort_index": 30,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "aggr_group": {},
                "aggr_hosts": {},
                "aggr_name_regex": {"aggr_name_regex": ""},
                "aggr_state": {
                    "birs-1": "",
                    "birs0": "",
                    "birs1": "on",
                    "birs2": "on",
                    "birs3": "on",
                },
                "aggr_output": {"aggr_output": ""},
                "aggr_assumed_state": {
                    "bias-1": "",
                    "bias0": "on",
                    "bias1": "on",
                    "bias2": "on",
                    "bias3": "on",
                    "biasn": "on",
                },
                "aggr_effective_state": {
                    "bies-1": "",
                    "bies0": "on",
                    "bies1": "on",
                    "bies2": "on",
                    "bies3": "on",
                },
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        # All single-host aggregations with problems
        "aggr_hostproblems": {
            "browser_reload": 0,
            "column_headers": "off",
            "datasource": "bi_host_aggregations",
            "description": _l(
                "All single-host aggregations that are in non-OK state (honoring state assumptions)"
            ),
            "group_painters": [
                PainterSpec(
                    name="aggr_group",
                    link_spec=VisualLinkSpec(type_name="views", name="aggr_group"),
                )
            ],
            "hidden": False,
            "hidebutton": True,
            "icon": "aggr_single_problem",
            "layout": "table",
            "mustsearch": False,
            "name": "aggr_hostproblems",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_icons"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="aggr_host"),
                ),
                PainterSpec(name="host_icons"),
                PainterSpec(name="aggr_treestate"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="aggr_group", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("Single host problems"),
            "topic": "bi",
            "sort_index": 50,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "host_scheduled_downtime_depth": {"is_host_scheduled_downtime_depth": "-1"},
                "aggr_name_regex": {"aggr_name_regex": ""},
                "aggr_group": {"aggr_group": "Hosts"},
                "aggr_state": {
                    "birs-1": "on",
                    "birs0": "on",
                    "birs1": "on",
                    "birs2": "on",
                    "birs3": "on",
                },
                "host_in_notification_period": {"is_host_in_notification_period": "-1"},
                "aggr_output": {"aggr_output": ""},
                "hoststate": {},
                "siteopt": {"site": ""},
                "aggr_assumed_state": {
                    "bias-1": "on",
                    "bias0": "on",
                    "bias1": "on",
                    "bias2": "on",
                    "bias3": "on",
                    "biasn": "on",
                },
                "hostregex": {"host_regex": ""},
                "opthostgroup": {"opthost_group": "", "neg_opthost_group": ""},
                "aggr_effective_state": {
                    "bies-1": "on",
                    "bies0": "on",
                    "bies1": "on",
                    "bies2": "on",
                    "bies3": "on",
                },
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        # Shows a single aggregation which has to be set via aggr_name=<Name>
        "aggr_single": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "bi_aggregations",
            "description": _l("Shows a single aggregation."),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "icon": "aggr",
            "layout": "table",
            "mobile": False,
            "mustsearch": False,
            "name": "aggr_single",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_icons"),
                PainterSpec(name="aggr_state"),
                PainterSpec(name="aggr_treestate"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [],
            "title": _l("Single Aggregation"),
            "topic": "bi",
            "user_sortable": True,
            "single_infos": ["aggr"],
            "context": {},
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        # Shows minimal information about a multiple aggregation
        # Use together with output_format=python for API calls
        "aggr_all_api": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "bi_aggregations",
            "description": _l(
                "List of all aggregations, containing the name of aggregations and state information"
            ),
            "group_painters": [],
            "hidden": True,
            "hidebutton": True,
            "icon": "aggr",
            "layout": "table",
            "mobile": False,
            "mustsearch": False,
            "name": "aggr_all_api",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_group"),
                PainterSpec(name="aggr_name"),
                PainterSpec(name="aggr_state_num"),
                PainterSpec(name="aggr_output"),
                PainterSpec(name="aggr_treestate"),
                PainterSpec(name="aggr_in_downtime"),
                PainterSpec(name="aggr_acknowledged"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [],
            "title": _l("List of all Aggregations for simple API calls"),
            "topic": "bi",
            "user_sortable": True,
            "single_infos": [],
            "context": {},
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        # Shows minimal information about a single aggregation which has to be set via aggr_name=<Name>.
        # Use together with output_format=python for API calls
        "aggr_single_api": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "bi_aggregations",
            "description": _l(
                "Single Aggregation for simple API calls. Contains the state and state output."
            ),
            "group_painters": [],
            "hidden": True,
            "hidebutton": True,
            "icon": "aggr",
            "layout": "table",
            "mobile": False,
            "mustsearch": False,
            "name": "aggr_single_api",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="aggr_state_num"),
                PainterSpec(name="aggr_output"),
                PainterSpec(name="aggr_in_downtime"),
                PainterSpec(name="aggr_acknowledged"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [],
            "title": _l("Single Aggregation for simple API calls"),
            "topic": "bi",
            "user_sortable": True,
            "single_infos": ["aggr"],
            "context": {},
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        # Summary of all aggregations for usage as web services
        "aggr_summary": {
            "browser_reload": 0,
            "column_headers": "off",
            "datasource": "bi_aggregations",
            "description": _l(
                "Simple summary page of all BI aggregates that is used as a web services."
            ),
            "group_painters": [],
            "hidden": True,
            "hidebutton": True,
            "icon": None,
            "layout": "boxed",
            "mobile": False,
            "mustsearch": False,
            "name": "aggr_summary",
            "num_columns": 1,
            "painters": [
                PainterSpec(name="aggr_name"),
                PainterSpec(name="aggr_state"),
                PainterSpec(name="aggr_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [],
            "title": _l("BI Aggregations Summary State"),
            "topic": "bi",
            "user_sortable": True,
            "owner": UserId.builtin(),
            "single_infos": [],
            "context": {},
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        # Host group with boxed BIs for each host
        "aggr_hostgroup_boxed": {
            "browser_reload": 0,
            "column_headers": "off",
            "context": {"aggr_group": {"aggr_group": ""}, "hostregex": {"host_regex": ""}},
            "datasource": "bi_hostnamebygroup_aggregations",
            "description": _l("Host group with boxed BIs for each host\n"),
            "group_painters": [
                PainterSpec(name="site_icon"),
                PainterSpec(
                    name="sitealias",
                    link_spec=VisualLinkSpec(type_name="views", name="sitehosts"),
                ),
            ],
            "hidden": True,
            "hidebutton": False,
            "icon": "aggr",
            "layout": "boxed",
            "name": "aggr_hostgroup_boxed",
            "num_columns": 2,
            "painters": [
                PainterSpec(name="host_state"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
                PainterSpec(name="host_icons"),
                PainterSpec(name="alias"),
                PainterSpec(name="aggr_treestate_boxed"),
            ],
            "public": True,
            "single_infos": ["hostgroup"],
            "sorters": [
                SorterSpec(sorter="site", negate=False),
                SorterSpec(sorter="site_host", negate=False),
            ],
            "title": _l("Host group with BI state"),
            "user_sortable": True,
            "owner": UserId.builtin(),
            "link_from": {},
            "topic": "",
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        #   +----------------------------------------------------------------------+
        #   |       _   _       _   _  __ _           _   _                        |
        #   |      | \ | | ___ | |_(_)/ _(_) ___ __ _| |_(_) ___  _ __  ___        |
        #   |      |  \| |/ _ \| __| | |_| |/ __/ _` | __| |/ _ \| '_ \/ __|       |
        #   |      | |\  | (_) | |_| |  _| | (_| (_| | |_| | (_) | | | \__ \       |
        #   |      |_| \_|\___/ \__|_|_| |_|\___\__,_|\__|_|\___/|_| |_|___/       |
        #   |                                                                      |
        #   +----------------------------------------------------------------------+
        "hostnotifications": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log",
            "description": _l("Notification events of hosts."),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": True,
            "hidebutton": False,
            "icon": "notifications",
            "layout": "table",
            "mustsearch": False,
            "name": "hostnotifications",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_contact_name"),
                PainterSpec(name="log_command"),
                PainterSpec(name="log_state"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Notifications of host"),
            "topic": "history",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "log_class": {
                    "logclass0": "",
                    "logclass1": "",
                    "logclass2": "",
                    "logclass3": "on",
                    "logclass4": "",
                    "logclass5": "",
                    "logclass6": "",
                    "logclass8": "",
                },
                "serviceregex": {"service_regex": ""},
                "log_plugin_output": {"log_plugin_output": ""},
                "logtime": {"logtime_from": "90", "logtime_from_range": "86400"},
                "log_state": {},
                "log_notification_phase": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "hostsvcnotifications": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log",
            "description": _l(
                "All notification events concerning the state of a certain host (including services)"
            ),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": True,
            "hidebutton": False,
            "icon": "notifications",
            "layout": "table",
            "mustsearch": False,
            "name": "hostsvcnotifications",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_contact_name"),
                PainterSpec(name="log_command"),
                PainterSpec(name="log_type"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hostsvcnotifications"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="svcnotifications"),
                ),
                PainterSpec(name="log_state"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Notifications of host & services"),
            "topic": "history",
            "user_sortable": True,
            "single_infos": ["host"],
            "context": {
                "siteopt": {},
                "log_class": {
                    "logclass0": "",
                    "logclass1": "",
                    "logclass2": "",
                    "logclass3": "on",
                    "logclass4": "",
                    "logclass5": "",
                    "logclass6": "",
                    "logclass8": "",
                },
                "serviceregex": {"service_regex": ""},
                "log_plugin_output": {"log_plugin_output": ""},
                "logtime": {"logtime_from": "90", "logtime_from_range": "86400"},
                "log_state": {},
                "log_notification_phase": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "notifications": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log",
            "description": _l("All notification events of hosts or services."),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": False,
            "hidebutton": False,
            "icon": "notifications",
            "layout": "table",
            "mustsearch": False,
            "name": "notifications",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_contact_name"),
                PainterSpec(name="log_command"),
                PainterSpec(name="log_type"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hostsvcnotifications"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="svcnotifications"),
                ),
                PainterSpec(name="log_state"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Host & service history"),
            "topic": "history",
            "sort_index": 20,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "log_class": {
                    "logclass0": "",
                    "logclass1": "",
                    "logclass2": "",
                    "logclass3": "on",
                    "logclass4": "",
                    "logclass5": "",
                    "logclass6": "",
                    "logclass8": "",
                },
                "siteopt": {"site": ""},
                "hostregex": {"host_regex": ""},
                "serviceregex": {"service_regex": ""},
                "log_plugin_output": {"log_plugin_output": ""},
                "logtime": {"logtime_from": "90", "logtime_from_range": "86400"},
                "log_state": {},
                "log_notification_phase": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "failed_notifications": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log",
            "description": _l("Failed notification events of hosts and services."),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": False,
            "hidebutton": True,
            "icon": {"icon": "notifications", "emblem": "warning"},
            "layout": "table",
            "mustsearch": False,
            "name": "failed_notifications",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_contact_name"),
                PainterSpec(name="log_command"),
                PainterSpec(name="log_type"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hostsvcnotifications"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="svcnotifications"),
                ),
                PainterSpec(name="log_state"),
                PainterSpec(name="log_plugin_output"),
                PainterSpec(name="log_comment"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Failed notifications"),
            "topic": "analyze",
            "sort_index": 40,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "log_class": {
                    "logclass0": "",
                    "logclass1": "",
                    "logclass2": "",
                    "logclass3": "on",
                    "logclass4": "",
                    "logclass5": "",
                    "logclass6": "",
                    "logclass8": "",
                },
                "log_type": {"log_type": ".*NOTIFICATION RESULT$"},
                "log_state": {
                    "logst_h0": "",
                    "logst_h1": "on",
                    "logst_h2": "on",
                    "logst_s0": "",
                    "logst_s1": "on",
                    "logst_s2": "on",
                    "logst_s3": "on",
                },
                "siteopt": {"site": ""},
                "hostregex": {"host_regex": ""},
                "serviceregex": {"service_regex": ""},
                "log_plugin_output": {"log_plugin_output": ""},
                "logtime": {"logtime_from": "90", "logtime_from_range": "86400"},
                "log_notification_phase": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
        "svcnotifications": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log",
            "description": _l("All notification events concerning the state of a certain service."),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": True,
            "hidebutton": False,
            "icon": "notifications",
            "layout": "table",
            "mustsearch": False,
            "name": "svcnotifications",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_contact_name"),
                PainterSpec(name="log_command"),
                PainterSpec(name="host"),
                PainterSpec(name="log_state"),
                PainterSpec(name="log_plugin_output"),
            ],
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Service notifications"),
            "topic": "history",
            "public": True,
            "user_sortable": True,
            "single_infos": ["service", "host"],
            "context": {
                "siteopt": {},
                "log_class": {
                    "logclass0": "",
                    "logclass1": "",
                    "logclass2": "",
                    "logclass3": "on",
                    "logclass4": "",
                    "logclass5": "",
                    "logclass6": "",
                    "logclass8": "",
                },
                "log_plugin_output": {"log_plugin_output": ""},
                "logtime": {"logtime_from": "90", "logtime_from_range": "86400"},
                "log_state": {},
                "log_notification_phase": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        "contactnotifications": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log",
            "description": _l("All notification events sent to"),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": True,
            "hidebutton": False,
            "icon": "notifications",
            "layout": "table",
            "mustsearch": False,
            "name": "contactnotifications",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_command"),
                PainterSpec(name="log_type"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hostsvcnotifications"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="svcnotifications"),
                ),
                PainterSpec(name="log_state"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Notifications of contact"),
            "topic": "history",
            "user_sortable": True,
            "single_infos": ["contact"],
            "context": {
                "log_class": {
                    "logclass0": "",
                    "logclass1": "",
                    "logclass2": "",
                    "logclass3": "on",
                    "logclass4": "",
                    "logclass5": "",
                    "logclass6": "",
                    "logclass8": "",
                },
                "host": {"host": ""},
                "serviceregex": {"service_regex": ""},
                "log_plugin_output": {"log_plugin_output": ""},
                "logtime": {"logtime_from": "90", "logtime_from_range": "86400"},
                "log_state": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        #   +----------------------------------------------------------------------+
        #   |     _    _           _     _                     _ _                 |
        #   |    / \  | | ___ _ __| |_  | |__   __ _ _ __   __| | | ___ _ __ ___   |
        #   |   / _ \ | |/ _ \ '__| __| | '_ \ / _` | '_ \ / _` | |/ _ \ '__/ __|  |
        #   |  / ___ \| |  __/ |  | |_  | | | | (_| | | | | (_| | |  __/ |  \__ \  |
        #   | /_/   \_\_|\___|_|   \__| |_| |_|\__,_|_| |_|\__,_|_|\___|_|  |___/  |
        #   |                                                                      |
        #   +----------------------------------------------------------------------+
        "alerthandlers": {
            "browser_reload": 0,
            "column_headers": "pergroup",
            "datasource": "log",
            "description": _l("All alert handler executions."),
            "group_painters": [PainterSpec(name="log_date")],
            "hidden": False,
            "hidebutton": False,
            "icon": "alert_handlers",
            "layout": "table",
            "mustsearch": False,
            "name": "alerthandlers",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(name="log_command"),
                PainterSpec(name="log_type"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hoststatus"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="log_state"),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [
                SorterSpec(sorter="log_time", negate=True),
                SorterSpec(sorter="log_lineno", negate=True),
            ],
            "title": _l("Alert handler executions"),
            "topic": "analyze",
            "sort_index": 20,
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "log_class": {
                    "logclass0": "",
                    "logclass1": "",
                    "logclass2": "",
                    "logclass3": "",
                    "logclass4": "",
                    "logclass5": "",
                    "logclass6": "",
                    "logclass8": "on",
                },
                "siteopt": {"site": ""},
                "hostregex": {"host_regex": ""},
                "serviceregex": {"service_regex": ""},
                "log_plugin_output": {"log_plugin_output": ""},
                "logtime": {"logtime_from": "90", "logtime_from_range": "86400"},
                "log_state": {},
                "log_notification_phase": {},
            },
            "link_from": {},
            "add_context_to_title": True,
            "is_show_more": False,
        },
    }
)

_host_view_context = {
    "host_acknowledged": {"is_host_acknowledged": "-1"},
    "host_check_command": {"host_check_command": ""},
    "host_in_notification_period": {"is_host_in_notification_period": "-1"},
    "host_in_service_period": {"is_host_in_service_period": "-1"},
    "host_notifications_enabled": {"is_host_notifications_enabled": "-1"},
    "host_scheduled_downtime_depth": {"is_host_scheduled_downtime_depth": "-1"},
    "host_tags": {
        "host_tag_0_grp": "",
        "host_tag_0_op": "",
        "host_tag_0_val": "",
        "host_tag_1_grp": "",
        "host_tag_1_op": "",
        "host_tag_1_val": "",
        "host_tag_2_grp": "",
        "host_tag_2_op": "",
        "host_tag_2_val": "",
    },
    "hostalias": {"hostalias": "", "neg_hostalias": ""},
    "hostgroups": {"hostgroups": "", "neg_hostgroups": ""},
    "hostregex": {"host_regex": "", "neg_host_regex": ""},
    "hoststate": {"hoststate_filled": "1", "hst0": "on", "hst1": "on", "hst2": "on", "hstp": "on"},
    "opthost_contactgroup": {"neg_opthost_contact_group": "", "opthost_contact_group": ""},
    "opthostgroup": {"neg_opthost_group": "", "opthost_group": ""},
    "siteopt": {"site": ""},
}


def _simple_host_view(custom_attributes, add_context=None):
    context = _host_view_context.copy()
    if add_context:
        context.update(add_context)

    view_spec = {
        "browser_reload": 30,
        "column_headers": "pergroup",
        "datasource": "hosts",
        "force_checkboxes": False,
        "hidden": False,
        "hidebutton": False,
        "icon": None,
        "layout": "table",
        "mobile": False,
        "mustsearch": False,
        "num_columns": 1,
        "play_sounds": False,
        "user_sortable": True,
        "context": context,
        "group_painters": [
            PainterSpec(name="sitealias"),
        ],
        "painters": [],
        "single_infos": [],
        "sorters": [
            SorterSpec(sorter="site", negate=False),
            SorterSpec(sorter="site_host", negate=False),
        ],
        "owner": UserId.builtin(),
        "public": True,
        "link_from": {},
        "is_show_more": False,
    }

    view_spec.update(custom_attributes)
    return view_spec


builtin_views["docker_nodes"] = _simple_host_view(
    {
        "title": _l("Docker nodes"),
        "topic": "applications",
        "icon": "docker",
        "sort_index": 10,
        "description": _l(
            "Overall state of all docker nodes, with counts of services in the various states."
        ),
        "add_context_to_title": False,
        "painters": [
            *host_view_painters,
            PainterSpec(name="inv_software_applications_docker_version"),
            PainterSpec(name="inv_software_applications_docker_num_containers_total"),
            PainterSpec(name="inv_software_applications_docker_num_containers_running"),
            PainterSpec(name="inv_software_applications_docker_num_containers_paused"),
            PainterSpec(name="inv_software_applications_docker_num_containers_stopped"),
        ],
        "name": "docker_nodes",
    },
    add_context={
        "host_labels": {"host_label": '[{"value":"cmk/docker_object:node"}]'},
    },
)

builtin_views["docker_containers"] = _simple_host_view(
    {
        "title": _l("Docker containers"),
        "topic": "applications",
        "icon": "docker",
        "sort_index": 20,
        "description": _l(
            "Overall state of all docker containers, with counts of services in the various states."
        ),
        "add_context_to_title": False,
        "painters": [
            *host_view_painters,
            PainterSpec(name="host_docker_node"),
            PainterSpec(
                name="perfometer",
                join_index="CPU utilization",
            ),
            PainterSpec(
                name="perfometer",
                join_index="Memory used",
            ),
            PainterSpec(
                name="perfometer",
                join_index="Uptime",
            ),
        ],
        "name": "docker_containers",
    },
    add_context={
        "host_labels": {"host_label": '[{"value":"cmk/docker_object:container"}]'},
    },
)

builtin_views["vsphere_servers"] = _simple_host_view(
    {
        "title": _l("vSphere Servers"),
        "topic": "applications",
        "icon": "vsphere",
        "sort_index": 30,
        "description": _l(
            "Overall state of all vSphere servers, with counts of services in the various states."
        ),
        "add_context_to_title": False,
        "painters": host_view_painters,
        "name": "vsphere_servers",
    },
    add_context={
        "host_labels": {"host_label": '[{"value":"cmk/vsphere_object:server"}]'},
    },
)

builtin_views["vpshere_vms"] = _simple_host_view(
    {
        "title": _l("vSphere VMs"),
        "topic": "applications",
        "icon": "vsphere",
        "sort_index": 40,
        "description": _l("Overall state of all vSphere based virtual machines."),
        "add_context_to_title": False,
        "painters": [
            *host_view_painters,
            PainterSpec(
                name="svc_plugin_output",
                join_index="ESX Hostsystem",
                column_title="Server",
            ),
            PainterSpec(
                name="perfometer",
                join_index="CPU utilization",
            ),
            PainterSpec(
                name="perfometer",
                join_index="ESX Memory",
            ),
            PainterSpec(
                name="svc_plugin_output",
                join_index="ESX Guest Tools",
                column_title="Guest tools",
            ),
        ],
        "name": "vpshere_vms",
    },
    add_context={
        "host_labels": {"host_label": '[{"value":"cmk/vsphere_object:vm"}]'},
    },
)

builtin_views["crash_reports"] = {
    "description": _l("List crash reports of all sites"),
    "title": _l("Crash reports"),
    "browser_reload": 0,
    "column_headers": "pergroup",
    "context": {},
    "datasource": "crash_reports",
    "force_checkboxes": False,
    "group_painters": [
        PainterSpec(name="sitealias"),
    ],
    "hidden": False,
    "hidebutton": False,
    "icon": "crash",
    "layout": "table",
    "mobile": False,
    "mustsearch": False,
    "name": "crash_reports",
    "num_columns": 1,
    "painters": [
        PainterSpec(name="crash_ident"),
        PainterSpec(name="crash_type"),
        PainterSpec(name="crash_version"),
        PainterSpec(name="crash_time"),
        PainterSpec(name="crash_exception"),
    ],
    "play_sounds": False,
    "single_infos": [],
    "sorters": [
        SorterSpec(sorter="sitealias", negate=False),
        SorterSpec(sorter="crash_time", negate=True),
    ],
    "user_sortable": True,
    "topic": "analyze",
    "sort_index": 30,
    "is_show_more": True,
    "owner": UserId.builtin(),
    "public": True,
    "link_from": {},
    "add_context_to_title": True,
}


builtin_views["cmk_servers"] = {
    "add_context_to_title": False,
    "browser_reload": 0,
    "column_headers": "pergroup",
    "context": {"host_labels": {"host_label": '[{"value":"cmk/check_mk_server:yes"}]'}},
    "datasource": "hosts",
    "description": _l("Displaying the overall state of Checkmk servers\n"),
    "force_checkboxes": False,
    "group_painters": [],
    "hidden": True,
    "hidebutton": True,
    "icon": "checkmk",
    "layout": "table",
    "mobile": False,
    "mustsearch": False,
    "name": "cmk_servers",
    "num_columns": 1,
    "painters": [
        PainterSpec(
            name="host",
            parameters=PainterParameters(
                color_choices=[
                    "colorize_up",
                    "colorize_down",
                    "colorize_unreachable",
                    "colorize_pending",
                    "colorize_downtime",
                ]
            ),
            link_spec=VisualLinkSpec(type_name="views", name="host"),
            tooltip="host_addresses",
        ),
        PainterSpec(
            name="inv_software_os_name",
            parameters=PainterParameters(use_short=True),
        ),
        PainterSpec(
            name="inv_hardware_cpu_cores",
            parameters=PainterParameters(use_short=True),
        ),
        PainterSpec(
            name="inv_hardware_memory_total_ram_usable",
            parameters=PainterParameters(use_short=True),
        ),
        PainterSpec(
            name="perfometer",
            join_index="CPU utilization",
        ),
        PainterSpec(
            name="perfometer",
            join_index="CPU load",
        ),
        PainterSpec(
            name="perfometer",
            join_index="Memory",
        ),
        PainterSpec(
            name="perfometer",
            join_index="Disk IO SUMMARY",
        ),
    ],
    "play_sounds": False,
    "single_infos": [],
    "sorters": [
        SorterSpec(sorter="sitealias", negate=False),
        SorterSpec(sorter="host_name", negate=False),
    ],
    "user_sortable": True,
    "title": _l("Checkmk servers"),
    "topic": "analyze",
    "sort_index": 6,
    "owner": UserId.builtin(),
    "public": True,
    "link_from": {},
    "is_show_more": False,
}


def cmk_sites_painters() -> Sequence[PainterSpec]:
    service_painters: list[Any] = []
    if not cmk_version.is_raw_edition():
        service_painters += [
            PainterSpec(name="invcmksites_cmc"),
            PainterSpec(name="invcmksites_dcd"),
            PainterSpec(name="invcmksites_liveproxyd"),
            PainterSpec(name="invcmksites_mknotifyd"),
        ]
    else:
        service_painters += [
            PainterSpec(name="invcmksites_nagios"),
        ]

    service_painters += [
        PainterSpec(name="invcmksites_mkeventd"),
        PainterSpec(name="invcmksites_apache"),
        PainterSpec(name="invcmksites_rrdcached"),
        PainterSpec(name="invcmksites_xinetd"),
        PainterSpec(name="invcmksites_crontab"),
        PainterSpec(name="invcmksites_stunnel"),
    ]

    if cmk_version.is_raw_edition():
        service_painters += [
            PainterSpec(name="invcmksites_npcd"),
        ]

    return [
        PainterSpec(
            name="host",
            parameters={
                "color_choices": [
                    "colorize_up",
                    "colorize_down",
                    "colorize_unreachable",
                    "colorize_pending",
                    "colorize_downtime",
                ]
            },
            link_spec=VisualLinkSpec(type_name="views", name="host"),
            tooltip="host_addresses",
        ),
        PainterSpec(name="invcmksites_site"),
        PainterSpec(name="invcmksites_used_version"),
        PainterSpec(name="invcmksites_num_hosts"),
        PainterSpec(name="invcmksites_num_services"),
        PainterSpec(name="invcmksites_check_helper_usage"),
        PainterSpec(name="invcmksites_fetcher_helper_usage"),
        PainterSpec(name="invcmksites_checker_helper_usage"),
        PainterSpec(name="invcmksites_livestatus_usage"),
    ] + service_painters


builtin_views["cmk_sites"] = {
    "add_context_to_title": False,
    "browser_reload": 0,
    "column_headers": "pergroup",
    "context": {
        "host_labels": {"host_label": '[{"value":"cmk/check_mk_server:yes"}]'},
    },
    "datasource": "invcmksites",
    "description": _l("Displaying the state of Checkmk sites\n"),
    "force_checkboxes": False,
    "group_painters": [],
    "hidden": True,
    "hidebutton": True,
    "icon": "checkmk",
    "layout": "table",
    "mobile": False,
    "mustsearch": False,
    "name": "cmk_sites",
    "num_columns": 1,
    "painters": cmk_sites_painters(),
    "play_sounds": False,
    "single_infos": [],
    "sorters": [
        SorterSpec(sorter="sitealias", negate=False),
        SorterSpec(sorter="host_name", negate=False),
    ],
    "user_sortable": True,
    "title": _l("Checkmk sites"),
    "topic": "analyze",
    "sort_index": 7,
    "owner": UserId.builtin(),
    "public": True,
    "link_from": {},
    "is_show_more": False,
}

builtin_views["cmk_sites_of_host"] = {
    "add_context_to_title": True,
    "browser_reload": 0,
    "column_headers": "pergroup",
    "context": {},
    "datasource": "invcmksites",
    "description": _l("Displaying the state of Checkmk sites of the given host\n"),
    "force_checkboxes": False,
    "group_painters": [],
    "hidden": True,
    "hidebutton": True,
    "icon": "checkmk",
    "layout": "table",
    "mobile": False,
    "mustsearch": False,
    "name": "cmk_sites_of_host",
    "num_columns": 1,
    "painters": cmk_sites_painters(),
    "play_sounds": False,
    "single_infos": ["host"],
    "sorters": [
        SorterSpec(sorter="sitealias", negate=False),
        SorterSpec(sorter="host_name", negate=False),
    ],
    "user_sortable": True,
    "title": _l("Checkmk sites of host"),
    "topic": "applications",
    "owner": UserId.builtin(),
    "public": True,
    "link_from": {},
    "sort_index": 99,
    "is_show_more": False,
}

# FIXME: Can be removed once all dashboards have been converted
# to have the view definitions right inside the dashboards
builtin_views.update(
    {
        # A similar view, used in the dashboard
        "hostproblems_dash": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "hosts",
            "description": _l(
                "A complete list of all host problems, optimized for usage in the dashboard"
            ),
            "group_painters": [],
            "hidden": True,
            "hidebutton": True,
            "layout": "table",
            "mustsearch": False,
            "name": "hostproblems_dash",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="host_state"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
                PainterSpec(name="host_icons"),
                PainterSpec(name="host_state_age"),
                PainterSpec(name="host_plugin_output"),
            ],
            "public": True,
            "sorters": [SorterSpec(sorter="hoststate", negate=True)],
            "title": _l("Host problems"),
            "topic": "",
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "host_scheduled_downtime_depth": {"is_host_scheduled_downtime_depth": "0"},
                "hoststate": {"hst0": "", "hst1": "on", "hst2": "on", "hstp": ""},
                "host_acknowledged": {"is_host_acknowledged": "0"},
            },
            "link_from": {},
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        # Similar view, but for the dashboard
        "svcproblems_dash": {
            "browser_reload": 30,
            "column_headers": "pergroup",
            "datasource": "services",
            "description": _l(
                "All non-downtime, non-acknownledged services, used for the dashbaord"
            ),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "svcproblems_dash",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="service_state"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="host"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="service"),
                ),
                PainterSpec(name="service_icons"),
                PainterSpec(name="svc_plugin_output"),
                PainterSpec(name="svc_state_age"),
                PainterSpec(name="svc_check_age"),
            ],
            "play_sounds": True,
            "public": True,
            "sorters": [
                SorterSpec(sorter="svcstate", negate=True),
                SorterSpec(sorter="stateage", negate=False),
                SorterSpec(sorter="svcdescr", negate=False),
            ],
            "title": _l("Service problems"),
            "topic": "",
            "user_sortable": True,
            "single_infos": [],
            "context": {
                "service_acknowledged": {"is_service_acknowledged": "0"},
                "svcstate": {"st0": "", "st1": "on", "st2": "on", "st3": "on", "stp": ""},
                "hoststate": {"hst0": "on", "hst1": "", "hst2": "", "hstp": "on"},
                "in_downtime": {"is_in_downtime": "0"},
            },
            "link_from": {},
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
        # Similar view, but for dashboard
        "events_dash": {
            "browser_reload": 90,
            "column_headers": "pergroup",
            "datasource": "log_events",
            "description": _l("Events of the last 4 hours."),
            "group_painters": [],
            "hidden": True,
            "hidebutton": False,
            "layout": "table",
            "mustsearch": False,
            "name": "events_dash",
            "num_columns": 1,
            "owner": UserId.builtin(),
            "painters": [
                PainterSpec(name="log_icon"),
                PainterSpec(name="log_time"),
                PainterSpec(
                    name="host",
                    link_spec=VisualLinkSpec(type_name="views", name="hostsvcevents"),
                ),
                PainterSpec(
                    name="service_description",
                    link_spec=VisualLinkSpec(type_name="views", name="svcevents"),
                ),
                PainterSpec(name="log_plugin_output"),
            ],
            "play_sounds": False,
            "public": True,
            "sorters": [],
            "title": _l("Events of the last 4 hours (for the dashboard)"),
            "topic": "",
            "user_sortable": True,
            "single_infos": [],
            "context": {"logtime": {"logtime_from": "4", "logtime_from_range": "3600"}},
            "link_from": {},
            "icon": None,
            "add_context_to_title": True,
            "sort_index": 99,
            "is_show_more": False,
        },
    }
)
