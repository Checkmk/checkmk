@startuml

participant Agent as agent
participant "agent-receiver" as agent_receiver
participant "RestAPI" as rest_api

== register_existing ==

agent -> agent_receiver: /register_existing (Credentials, uuid, csr, hostname)
agent_receiver -> agent_receiver: Root Certificate
agent_receiver -> rest_api: /agent_controller_certificates_settings (Credentials)
rest_api -> agent_receiver: Agent controller certificate settings
agent_receiver -> agent_receiver: Sign CSR (Agent controller certificate settings)
agent_receiver -> agent_receiver: Signed Certificate
agent_receiver -> rest_api: /objects/host_config_internal/hostname/actions/register/invoke (Credentials, uuid, hostname)
rest_api -> agent_receiver: Connection mode
agent_receiver -> agent: Root Certificate, Signed Certificate, Connection mode


== pairing ==

agent -> agent_receiver:  /pairing (Credentials, csr)
agent_receiver -> rest_api: /root__cert (Credentials)
rest_api -> agent_receiver: Root Certificate
agent_receiver -> rest_api: /csr (Credentials, csr)
rest_api -> agent_receiver: Signed certificate
agent_receiver -> agent: Root Certificate, Signed Certificate


== register_with_hostname ==

agent -> agent_receiver: /register_with_hostname (Credentials, uuid, hostname)
agent_receiver -> rest_api: /objects/host_config_internal/hostname (Credentials, hostname)
rest_api -> agent_receiver: host_config
agent_receiver -> rest_api: /objects/host_config_internal/hostname/actions/link_uuid/invoke (Credentials, hostname, uuid)
rest_api -> agent_receiver: OK
agent_receiver -> agent: OK


== register_new ==

agent -> agent_receiver: /register_new (Credentials, uuid, csr, agent_labels)
agent_receiver -> rest_api: /version (Credentials)
rest_api -> agent_receiver: Version
agent_receiver -> agent_receiver: Edition supports register_new?
agent_receiver -> agent_receiver: Root Certificate
agent_receiver -> rest_api: /agent_controller_certificates_settings (Credentials)
rest_api -> agent_receiver: Agent controller certificate settings
agent_receiver -> agent_receiver: Sign CSR (Agent controller certificate settings)
agent_receiver -> agent_receiver: Signed Certificate
agent_receiver -> agent_receiver: Write registration file (Username, uuid, agent_labels, signed certificate)
agent_receiver -> agent: Root Certificate


== register_new_ongoing ==

agent -> agent_receiver: /register_new_ongoing (Credentials, uuid)
agent_receiver -> rest_api: /version (Credentials)
rest_api -> agent_receiver: Version
agent_receiver -> agent_receiver: Edition supports register_new_ongoing?
agent_receiver -> agent_receiver: Retrieve request for registration (uuid)
agent_receiver -> agent_receiver: Request for registration: username matches?
agent_receiver -> agent_receiver: Check registration status
agent_receiver -> agent: Registration in progress / Registration declined: reason / Success: Signed certificate, connection mode


== agent_data ==

agent -[#green]-> agent_receiver: /agent_data (uuid, data, compression)
agent_receiver -> agent_receiver: Is registered?
agent_receiver -> agent_receiver: Is push agent?
agent_receiver -> agent_receiver: Decompress data
agent_receiver -> agent_receiver: Store data
agent_receiver -[#green]-> agent: OK


== registration_status ==

agent -[#green]-> agent_receiver: /registration_status (uuid)
agent_receiver -[#green]-> agent: RegistrationStatus


@enduml
