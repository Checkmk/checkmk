@startuml
scale 0.6

participant "Monitoring core" as monitoring_core
box "Notify helper\n(cmk ~--notify --keepalive)"
participant "notify_keepalive()" as cmk_notify
participant "notify_rulebased()" as notify_rule_based
end box
database "Spool directory\n($OMD_ROOT/var/check_mk/notify/spool)" as spool_directory
box "mknotifyd"
participant SpoolHandler as mknotifyd_spool_handler
participant NotificationQueue as mknotifyd_notification_queue
end box
participant "cmk ~--notify --spoolfile X" as cmk_notify_spoolfile
participant "Notfication plugin" as notification_plugin
participant "User" as user

== Synchronous storing of spool file ==

monitoring_core -> cmk_notify: Notification data via stdin
cmk_notify -> cmk_notify: Create raw notification context\nfrom Notification data
cmk_notify -> cmk_notify: Complete raw notification context
cmk_notify -> notify_rule_based: Raw notification context
notify_rule_based -> notify_rule_based: Create final notification\ncontexts based on notification rules
notify_rule_based -> notify_rule_based: Process final notification context
notify_rule_based -> spool_directory: Store notification context
monitoring_core <- cmk_notify: Ready for new data

== Asynchronous processing ==

spool_directory <- mknotifyd_spool_handler: Read notification context
mknotifyd_spool_handler -> mknotifyd_notification_queue: Enqueue notification context
mknotifyd_notification_queue -> cmk_notify_spoolfile: Start process to\nread notification context
monitoring_core <- cmk_notify_spoolfile: Log progress (start) to monitoring history
cmk_notify_spoolfile -> notification_plugin: Hand over notification context\nvia environment
notification_plugin -> user: Send notification
monitoring_core <- cmk_notify_spoolfile: Log result (plugin result) to monitoring history
mknotifyd_notification_queue <- notification_plugin: Output + exit code
mknotifyd_notification_queue <- mknotifyd_notification_queue: Create NotificationResult\nfrom output + exit code
' TODO: Is this and the above logging from cmk_notify_spoolfile resulting in duplicated logs?
monitoring_core <- mknotifyd_notification_queue: Log result (plugin result) to monitoring history
@enduml
