#!/usr/bin/env python3
# Copyright (C) 2019 Checkmk GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from collections.abc import Mapping

from cmk.agent_based.v2 import (
    AgentSection,
    CheckPlugin,
    CheckResult,
    DiscoveryResult,
    HostLabel,
    HostLabelGenerator,
    Result,
    RuleSetType,
    Service,
    State,
    StringTable,
)


# define an appropriate section type
class Section:
    pass


def parse_norris(_string_table: StringTable) -> Section:
    """
    >>> parse_norris([
    ... # Example output from agent:
    ... # Put here the example output of the data source
    ... ])
    Section(...)
    """
    return Section()


def host_labels_norris(_section: Section) -> HostLabelGenerator:
    yield HostLabel("name", "value")


agent_section_norris = AgentSection(
    name="norris",
    # Don't use this unless you known what you're doing!
    # parsed_section_name="mr_pickle",  # you can't rename norris, norris renames you!
    parse_function=parse_norris,
    host_label_function=host_labels_norris,
)


def discover_norris(_params: Mapping[str, object], _section: Section) -> DiscoveryResult:
    yield Service(item="Chuck")


def check_norris(item: str, params: Mapping[str, object], section: Section) -> CheckResult:
    yield Result(
        state=State.UNKNOWN,
        summary="Check not implemented",
        details=(
            f"Check not implemented.\nitem: {item!r}\nparams: {params!r}\nsection: {section!r}\n"
        ),
    )


def cluster_check_norris(
    item: str, params: Mapping[str, object], section: Mapping[str, Section]
) -> CheckResult:
    """This is just an example."""
    aggregated_data = Section()
    for _node_name, _node_section in section.items():
        # do something  clever here!
        pass

    yield from check_norris(item, params, aggregated_data)


check_plugin_norris = CheckPlugin(
    name="norris",
    service_name="Check Norris %s",
    discovery_function=discover_norris,
    discovery_default_parameters={},
    discovery_ruleset_name="norris_discovery_rule",
    # The ruleset type here is `MERGED`. Choose `ALL` to get a list of
    # all parameter sets matching the host.
    discovery_ruleset_type=RuleSetType.MERGED,
    check_function=check_norris,
    check_ruleset_name="norris_rules",
    check_default_parameters={},
    cluster_check_function=cluster_check_norris,
)
