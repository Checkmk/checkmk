#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2016             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

from __future__ import print_function
import os

# sample configuration:
# mode = "nc"    # "nc" = use netcat, "tool" = use memcached-tool
# instances = [
#  ("localhost", 11211),
#  ("localhost", 11212)
# ]

settings = {}
config_file = os.path.join(os.environ.get("MK_CONFDIR", "/etc/check_mk"), "memcached.cfg")
if os.path.exists(config_file):
    exec (open(config_file).read(), settings, settings)

if 'instances' in settings:
    print("<<<memcached>>>")
    if settings.get("mode", "nc"):
        cmdline = 'echo "stats" | nc %s %s |sed -e "s/\(STAT \|END\)//"'
    else:
        cmdline = 'memcached-tool %s:%s stats'

    for instance in settings['instances']:
        print("[%s:%s]" % (instance[0], instance[1]))
        for line in os.popen(cmdline % instance):  # nosec
            print(line.strip())
