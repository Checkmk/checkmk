#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
import cmk.base.plugins.agent_based.utils.docker as docker


def parse_docker_container_network(info):
    version = docker.get_version(info)
    index = 0 if version is None else 1
    parsed = docker.json_get_obj(info[index]) or {}
    return parsed


def inv_docker_container_network_networks(parsed, inventory_tree):
    network_data = parsed.get("Networks") or {}

    networks = inventory_tree.get_list("software.applications.docker.container.networks:")

    for network_name, network in network_data.items():
        networks.append({
            "name": network_name,
            "network_id": network["NetworkID"],
            "ip_address": network["IPAddress"],
            "ip_prefixlen": network["IPPrefixLen"],
            "gateway": network["Gateway"],
            "mac_address": network["MacAddress"],
        })


def inv_docker_container_network_ports(parsed, inventory_tree):
    port_data = parsed.get("Ports") or {}

    ports = inventory_tree.get_list("software.applications.docker.container.ports:")

    for container_port_spec, host_ports in port_data.items():
        port, proto = container_port_spec.split("/", 1)

        if host_ports:
            host_addresses = ", ".join(
                ["%s:%s" % (hp["HostIp"], hp["HostPort"]) for hp in host_ports])
        else:
            host_addresses = ""

        ports.append({
            "port": int(port),
            "protocol": proto,
            "host_addresses": host_addresses,
        })


def inv_docker_container_network(info, inventory_tree):
    parsed = parse_docker_container_network(info)
    inv_docker_container_network_networks(parsed, inventory_tree)
    inv_docker_container_network_ports(parsed, inventory_tree)


inv_info["docker_container_network"] = {  # pylint: disable=undefined-variable
    "inv_function": inv_docker_container_network,
}
