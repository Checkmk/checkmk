#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example output:
# parsed is used
# {u'vendor': u'VMware, Inc.', u'name': u'VMware ESXi', u'propertyCollector': u'ha-property-collector', u'apiVersion': u'6.7.3', u'sessionManager': u'ha-sessionmgr', u'licenseManager': u'ha-license-manager', u'version': u'6.7.0', u'build': u'15160138', u'osType': u'vmnix-x86', u'perfManager': u'ha-perfmgr', u'rootFolder': u'ha-folder-root'}


def inv_esx_systeminfo(parsed):
    node = inv_tree("software.os.")

    def parse_flat(parsed):
        mapping = {}
        for line in parsed:
            mapping[line[0]] = " ".join(line[1:])
        return mapping

    if isinstance(parsed, list):
        # `parsed` may actually look like:
        # [[u'vendor', u'VMWare,' u'Inc.],
        #  [u'name', u'VMWare', u'ESXi'],
        #  ...
        # ]
        parsed = parse_flat(parsed)

    node["vendor"] = parsed.get("vendor", "")
    node["name"] = parsed.get("name", "")
    node["version"] = parsed.get("version", "")
    node["type"] = parsed.get("osType", "")
    node["arch"] = "x86_64"


inv_info["esx_systeminfo"] = {
    "inv_function": inv_esx_systeminfo,
}
