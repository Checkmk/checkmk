#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2016             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


def inv_hp_proliant_da_phydrv(info):
    map_types = {
        "1": "other",
        "2": "parallel SCSI",
        "3": "SATA",
        "4": "SAS",
    }

    node = inv_tree_list("hardware.storage.disks:")
    for cntlr_index, _index, bay, _status, _ref_hours, size, _condition, \
        bus_number, _smart_status, model, serial, ty, fw in info:

        node.append({
            "controller": cntlr_index,
            "bay": bay,
            "bus": bus_number,
            "size": int(size) * 1024**2,
            "model": model,
            "serial": serial,
            "type": map_types.get(ty, "unknown(%s)" % ty),
            "firmware": fw,
        })


inv_info['hp_proliant_da_phydrv'] = {
    'inv_function': inv_hp_proliant_da_phydrv,
}
