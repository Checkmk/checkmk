#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# Example output:
# <<<win_cpuinfo:sep(58)>>>
# Name                      : Intel(R) Core(TM)2 Duo CPU     T9600  @ 2.80GHz
# Manufacturer              : GenuineIntel
# Caption                   : Intel64 Family 6 Model 23 Stepping 10
# DeviceID                  : CPU0
# MaxClockSpeed             : 2783
# DataWidth                 : 64
# L2CacheSize               :
# L3CacheSize               : 0
# NumberOfCores             : 1
# NumberOfLogicalProcessors : 1
# Status                    : OK


def win_cpuinfo_parse_speed(v):  # into Hz (float)
    if v == "Unknown" or v == "":
        return None
    parts = v.split()
    if len(parts) == 1:
        return float(parts[0]) * 1000000.0  # seems to be in MHz as default
    elif parts[1] == "GHz":
        return float(parts[0]) * 1000000000.0
    elif parts[1] == "MHz":
        return float(parts[0]) * 1000000.0
    elif parts[1] == "kHz":
        return float(parts[0]) * 1000.0
    elif parts[1] == "Hz":
        return float(parts[0])


def win_cpuinfo_parse_voltage(v):
    if v == "Unknown" or v == "":
        return None
    parts = v.split()
    return float(parts[0])


def inv_win_cpuinfo(info):
    node = inv_tree("hardware.cpu.")
    num_procs = 0
    for varname, value in info:
        varname = re.sub(" *", "", varname)
        value = re.sub("^ ", "", value)

        if varname == "NumberOfCores" and value != "":
            if value != "":
                node["cores_per_cpu"] = int(value)
            else:
                node["cores_per_cpu"] = 1  # missing on Windows 2003

        elif varname == "NumberOfLogicalProcessors":
            if value != "":
                node["threads_per_cpu"] = int(value)
            else:
                node["threads_per_cpu"] = 1  # missing on Windows 2003

        elif varname == "Manufacturer":
            node["vendor"] = {
                "GenuineIntel": "intel",
                "AuthenticAMD": "amd",
            }.get(value, value)

        # there is also the L3CacheSize
        elif varname == "L2CacheSize" and value != "":
            # normalized to bytes!
            node["cache_size"] = saveint(value) * 1024
        elif varname == "Name":
            node["model"] = value
        # For the following two entries we assume that all
        # entries are numbered in increasing order in /proc/cpuinfo.
        elif varname == "DeviceID":
            num_procs += 1
        elif varname == "CurrentVoltage":
            node["voltage"] = win_cpuinfo_parse_voltage(value)
        elif varname == "MaxClockSpeed":
            node["max_speed"] = win_cpuinfo_parse_speed(value)
        #elif varname == "AddressWidth":
        #    if value == "64":
        #        node["arch"] = "x86_64"
        #    else:
        #        node["arch"] = "i386"
        elif varname == "Architecture":
            node["arch"] = {
                "0": "i386",
                "1": "MIPS",
                "2": "Alpha",
                "3": "PowerPC",
                "6": "Itanium",
                "9": "x86_64",
            }.get(value, value)

    if num_procs:
        node.setdefault("cores_per_cpu", 1)
        node.setdefault("threads_per_cpu", 1)
        node["cpus"] = num_procs
        node["cores"] = num_procs * node["cores_per_cpu"]
        node["threads"] = num_procs * node["threads_per_cpu"]


inv_info['win_cpuinfo'] = {
    "inv_function": inv_win_cpuinfo,
}
