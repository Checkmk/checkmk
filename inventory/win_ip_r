#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2017             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# -- (type|target|mask|gateway|device)
# <<<win_ip_r:sep(124):persist(1495544240)>>>
# indirect|0.0.0.0|0.0.0.0|11.112.81.1|vmxnet3 Ethernet Adapter #2
# direct|11.112.81.0|255.255.255.0|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|11.112.81.34|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|11.112.81.36|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|11.112.81.39|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|11.112.81.41|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|11.112.81.43|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|11.112.81.44|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|11.112.81.45|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|11.112.81.46|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|11.112.81.255|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|11.112.136.0|255.255.252.0|0.0.0.0|vmxnet3 Ethernet Adapter
# direct|11.112.136.112|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter
# direct|11.112.139.255|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter
# direct|169.254.0.0|255.255.0.0|0.0.0.0|Microsoft Failover Cluster Virtual Adapter
# direct|169.254.2.184|255.255.255.255|0.0.0.0|Microsoft Failover Cluster Virtual Adapter
# direct|169.254.255.255|255.255.255.255|0.0.0.0|Microsoft Failover Cluster Virtual Adapter
# direct|224.0.0.0|240.0.0.0|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|224.0.0.0|240.0.0.0|0.0.0.0|vmxnet3 Ethernet Adapter
# direct|224.0.0.0|240.0.0.0|0.0.0.0|Microsoft Failover Cluster Virtual Adapter
# direct|255.255.255.255|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter #2
# direct|255.255.255.255|255.255.255.255|0.0.0.0|vmxnet3 Ethernet Adapter
# direct|255.255.255.255|255.255.255.255|0.0.0.0|Microsoft Failover Cluster Virtual Adapter


def inv_win_ip_r(info):
    routes = inv_tree_list("networking.routes:")
    for _type, target, mask, gateway, device in info:
        routes.append({
            "target": "{target}/{subnet}".format(
                target=target,
                # Convert subnetmask to CIDR
                subnet=sum([bin(int(x)).count("1") for x in mask.split(".")])),
            "device": device,
            "gateway": gateway,
            "type": _type,
        })


inv_info['win_ip_r'] = {
    'inv_function': inv_win_ip_r,
}
