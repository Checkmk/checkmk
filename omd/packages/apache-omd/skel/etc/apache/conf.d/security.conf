# This file contains some common security settings we apply to the site apache
# and the requests to it. Please let us know in case these settings limit you
# in valid use cases.

# Mitigate the risk of cross-site scripting and other injection attacks.
#
# To make things easier, you can use an online CSP header generator
# such as: https://www.cspisawesome.com/.
#
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
# https://www.w3.org/TR/CSP3/
# https://content-security-policy.com/
# https://www.html5rocks.com/en/tutorials/security/content-security-policy/
#
<IfModule mod_headers.c>
    # For details about the CSP see:
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP

    # That's evolving into a bit of a mess. For 2.2 we introduce SAML. Since
    # the authentication requests to the IDP become too large, the 3XX forwards
    # cannot be used. So we use the HTTP POST binding. This is a html form
    # which is then submitted to the IDP.
    # (http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-binding-simplesign-cd-02.html).
    #
    # The form-actions are controlled by the CSP. Now we need to dynamically
    # add form-action urls to our CSP. The idea is to set just the form-action
    # in the wsgi app and then transform it here to the general CSP.
    #
    # Then the second bummer hits in. Apache has two header lists. *exploding
    # head emoji* The onsuccess list and the always list. Unfortunately a `set`
    # or `edit` on the always list does not affect the onsuccess list. But that
    # list is where the wsgi headers go... So for now:
    #
    # 1. Set the CSP header if the wsgi app hasn't set it yet. (Edit only works on existing headers)
    # 2. edit the CSP to the final value
    # 3. If this is an unsuccessful request/response unset the header
    # 4. Only if this is a unsuccessful
    #
    # request/response set the header to the always list. When is a
    # request/response unsuccessful you may ask? Well if the response code is
    # not 200 ;-) If other codes also should be considered successful and
    # therefore include the custom form-actions, just add them...

    # This is also in cmk/gui/http.py:set_csp_form_action, change accordingly...
    # This could have been:
    # `Header setifempty Content-Security-Policy "form-action 'self' javascript: 'unsafe-inline';"`
    # but centos 7 comes with apache 2.4.6 and this does not support
    # `setifempty` so we have to do it ourselves...
    Header set Content-Security-Policy "form-action 'self' javascript: 'unsafe-inline';" "expr=resp('Content-Security-Policy')==''"

    Header edit Content-Security-Policy  "form-action (.+);" "default-src 'self' 'unsafe-inline' 'unsafe-eval' ssh: rdp:; img-src 'self' data: https://*.tile.openstreetmap.org/ ; connect-src 'self' https://crash.checkmk.com/ https://license.checkmk.com/api/verify; frame-ancestors 'self' ; base-uri 'self'; form-action $1; object-src 'self'; worker-src 'self' blob:"
    Header unset Content-Security-Policy "expr=%{REQUEST_STATUS} != 200"
    Header always set Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' ssh: rdp:; img-src 'self' data: https://*.tile.openstreetmap.org/ ; connect-src 'self' https://crash.checkmk.com/ https://license.checkmk.com/api/verify; frame-ancestors 'self' ; base-uri 'self'; form-action 'self' javascript: 'unsafe-inline'; object-src 'self'; worker-src 'self' blob:" "expr=%{REQUEST_STATUS} != 200"

    # Only set Content-Security-Policy for web pages and not other resources
    <FilesMatch "\.(js|css|png|ico|wav|jpg)$">
        Header unset Content-Security-Policy
        Header always unset Content-Security-Policy
    </FilesMatch>

    # End of the CSP shenannigans

    # Disable all Features
    # See:
    #   * https://wiki.owasp.org/index.php/OWASP_Secure_Headers_Project#fp
    #   * https://w3c.github.io/webappsec-permissions-policy/
    Header always set Permissions-Policy "accelerometer=(), autoplay=(), camera=(), encrypted-media=(), fullscreen=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(), usb=()"

    Header always set X-Frame-Options "sameorigin"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set X-Permitted-Cross-Domain-Policies "none"
    Header always set Referrer-Policy "origin-when-cross-origin"

    # Don't allow the browser to change the content type we send to him. See CMK-6239.
    Header always set X-Content-Type-Options "nosniff"
</IfModule>

# Provide minimal information about the running software version and platform to clients
ServerTokens Prod

# Disable TRACE request method to prevent some kind of reflection attack
TraceEnable Off

# Disable all methods except the used methods. Add more if needed.
<IfModule mod_rewrite.c>
  RewriteEngine on
  RewriteCond %{REQUEST_METHOD} !^(HEAD|GET|POST|DELETE|PUT)
  RewriteRule .* - [R=405,L]
</IfModule>
#
# Trigger cron jobs. This is done without authentication
<Location "/###SITE###/check_mk/run_cron.py">
    Order deny,allow
    Deny from all
    Allow from ip 127.0.0.1
    Require local
    Satisfy any
</Location>

#  Webservice for graph images used by notifications
<Location "/###SITE###/check_mk/ajax_graph_images.py">
    Order deny,allow
    Deny from all
    Allow from ip 127.0.0.1
    Require local
    Satisfy any
</Location>
