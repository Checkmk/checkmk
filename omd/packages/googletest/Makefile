include ../../Makefile.omd

# The tar file for snapshots can be generated by cloning https://github.com/google/googletest and doing:
# ( VERSION=0048647619; git archive --prefix=googletest-$VERSION/ -o ~/git/check_mk/omd/packages/googletest/googletest-$VERSION.tar.gz $VERSION )

NAME    := googletest
VERSION := release-1.8.1
DIR     := $(NAME)-$(VERSION)

.PHONY: build install skel clean

# The rules below are not perfect, but good enough for now...
build: $(DIR)/Makefile
	$(MAKE) -C $(DIR)
	mkdir -p $(PACKAGE_GOOGLETEST_DESTDIR)/lib
# We do not ship the headers and libraries, we just need them at a known
# location for testing.
	cp -au $(DIR)/googletest/include $(DIR)/googlemock/include $(PACKAGE_GOOGLETEST_DESTDIR)
	cp -au $(DIR)/googletest/lib/.libs/lib*.a $(DIR)/googlemock/lib/.libs/lib*.a $(PACKAGE_GOOGLETEST_DESTDIR)/lib

$(DIR)/Makefile.in: $(DIR).tar.gz
	tar xzf $(DIR).tar.gz
# The structure of the autotools m4 macro directories within googletest is a bit
# obscure. Furthermore, there seems to be some autotools versionitis in this
# area. Simply creating an empty directory seems to work around warnings/errors
# (depends on autottools version).
	mkdir -p $(DIR)/m4
	cd $(DIR) && autoreconf -i

$(DIR)/Makefile: $(DIR)/Makefile.in
# NOTE: We have to use a recent C++ compiler, otherwise we will get linker
# errors later when we use the libraries we compile here. For some (sad)
# background, see e.g.:
#
#    https://gcc.gnu.org/onlinedocs/libstdc++/manual/using_dual_abi.html
#    https://developers.redhat.com/blog/2015/02/05/gcc5-and-the-c11-abi/
#
#basically what part of AC_PROC_CXX does
	@CXX="" ; \
	for PROG in g++-9 clang++-8 g++-8 clang++-7 g++-7 clang++-6.0 clang++-5.0 g++ clang++; do \
	    echo -n "checking for $$PROG... "; SAVED_IFS=$$IFS; IFS=: ; \
	    for DIR in $$PATH; do \
	        IFS=$$SAVED_IFS ; \
	        test -z "$$DIR" && DIR=. ; \
	        ABS_PROG="$$DIR/$$PROG" ; \
	        test -x "$$ABS_PROG" && { CXX="$$ABS_PROG"; echo "$$CXX"; break 2; } ; \
	    done ; \
	    echo "no"; IFS=$$SAVED_IFS ; \
	done ; \
	test -z "$$CXX" && { echo "error: no C++ compiler found" >&2 ; exit 1; } ; \
	cd $(DIR) && ./configure --disable-shared CXX="$$CXX"

install:

skel:

clean:
	rm -rf $(DIR) $(PACKAGE_GOOGLETEST_DESTDIR)
