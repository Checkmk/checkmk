diff --git a/plugins/check_snmp.c b/plugins/check_snmp.c
index 295aa9b5..5fd9325f 100644
--- a/plugins/check_snmp.c
+++ b/plugins/check_snmp.c
@@ -311,12 +311,14 @@ main (int argc, char **argv)
 		snmpcmd = strdup (PATH_TO_SNMPGET);
 	}

+	char *absolute_snmpcmd_path= get_absolute_snmp_cmd_path(snmpcmd);
+
 	/* 10 arguments to pass before context and authpriv options + 1 for host and numoids. Add one for terminating NULL */

 	unsigned index = 0;
 	command_line = calloc (11 + numcontext + numauthpriv + 1 + numoids + 1, sizeof (char *));

-	command_line[index++] = snmpcmd;
+	command_line[index++] = absolute_snmpcmd_path;
 	command_line[index++] = strdup ("-Le");
 	command_line[index++] = strdup ("-t");
 	xasprintf (&command_line[index++], "%d", timeout_interval);
@@ -328,7 +330,7 @@ main (int argc, char **argv)
 	command_line[index++] = strdup (proto);

 	xasprintf(&cl_hidden_auth, "%s -Le -t %d -r %d -m %s -v %s",
-		snmpcmd, timeout_interval, retries, strlen(miblist) ? miblist : "''", proto);
+		absolute_snmpcmd_path, timeout_interval, retries, strlen(miblist) ? miblist : "''", proto);

 	if (ignore_mib_parsing_errors) {
 		command_line[index++] = "-Pe";
diff --git a/plugins/check_hpjd.c b/plugins/check_hpjd.c
index c34bb082..b24ff677 100644
--- a/plugins/check_hpjd.c
+++ b/plugins/check_hpjd.c
@@ -37,6 +37,7 @@ const char *email = "devel@monitoring-plugins.org";
 #include "popen.h"
 #include "utils.h"
 #include "netutils.h"
+#include "utils_cmd.h"

 #define DEFAULT_COMMUNITY "public"
 #define DEFAULT_PORT "161"
@@ -121,12 +122,9 @@ main (int argc, char **argv)
 		 HPJD_GD_DOOR_OPEN, HPJD_GD_PAPER_OUTPUT, HPJD_GD_STATUS_DISPLAY);

 	/* get the command to run */
-	sprintf (command_line, "%s -OQa -m : -v 1 -c %s %s:%u %s",
-			PATH_TO_SNMPGET,
-			community,
-			address,
-			port,
-			query_string);
+	char * absolute_cmd_path = get_absolute_snmp_cmd_path(PATH_TO_SNMPGET);
+	sprintf (command_line, "%s -OQa -m : -v 1 -c %s %s:%hd %s", absolute_cmd_path, community,
+ 									address, port, query_string);

 	/* run the command */
 	child_process = spopen (command_line);
diff --git a/lib/utils_cmd.c b/lib/utils_cmd.c
index 7957ec14..a776b6ba 100644
diff --git a/lib/utils_cmd.h b/lib/utils_cmd.h
index 061f5d4f..a93ed6e6 100644
--- a/lib/utils_cmd.h
+++ b/lib/utils_cmd.h
@@ -23,6 +23,7 @@ typedef struct output output;
 int cmd_run (const char *, output *, output *, int);
 int cmd_run_array (char *const *, output *, output *, int);
 int cmd_file_read (char *, output *, int);
+char * get_absolute_snmp_cmd_path(char*);

 /* only multi-threaded plugins need to bother with this */
 void cmd_init (void);
--- a/lib/utils_cmd.c
+++ b/lib/utils_cmd.c
@@ -387,6 +387,22 @@ cmd_file_read ( char *filename, output *out, int flags)
 	return 0;
 }

+char * get_absolute_snmp_cmd_path(char* relativ_snmp_cmd)
+{
+        // We need to dynamically get the OMD_ROOT env variable as we do not know it during compile time:
+        // We're caching the compiled monitoring-plugins and reusing it for multiple versions of checkmk
+        char *omd_root = getenv("OMD_ROOT");
+        if (omd_root == NULL) {
+            die(STATE_UNKNOWN, _("OMD_ROOT not set"));
+        }
+
+        char * absolute_snmpcmd_path = calloc(1, strlen(omd_root) + strlen(relativ_snmp_cmd) + 1);
+        strcat(absolute_snmpcmd_path, omd_root);
+        strcat(absolute_snmpcmd_path, relativ_snmp_cmd);
+
+        return absolute_snmpcmd_path;
+}
+
 void
 timeout_alarm_handler (int signo)
 {
