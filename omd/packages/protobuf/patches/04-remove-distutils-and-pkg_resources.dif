diff --git a/python/setup.py b/python/setup.py
index 127476184..b630fbcdd 100755
--- a/python/setup.py
+++ b/python/setup.py
@@ -4,11 +4,9 @@
 
 # pylint:disable=missing-module-docstring
 # pylint:disable=g-bad-import-order
-from distutils import util
 import fnmatch
 import glob
 import os
-import pkg_resources
 import re
 import subprocess
 import sys
@@ -21,10 +19,9 @@ import sysconfig
 # namespace_packages option for the "google" package.
 from setuptools import setup, Extension, find_packages
 
-from distutils.command.build_ext import build_ext as _build_ext
-from distutils.command.build_py import build_py as _build_py
-from distutils.command.clean import clean as _clean
-from distutils.spawn import find_executable
+from setuptools.command.build_ext import build_ext as _build_ext
+from setuptools.command.build_py import build_py as _build_py
+from shutil import which
 
 # Find the Protocol Compiler.
 if 'PROTOC' in os.environ and os.path.exists(os.environ['PROTOC']):
@@ -38,7 +35,7 @@ elif os.path.exists('../vsprojects/Debug/protoc.exe'):
 elif os.path.exists('../vsprojects/Release/protoc.exe'):
   protoc = '../vsprojects/Release/protoc.exe'
 else:
-  protoc = find_executable('protoc')
+  protoc = which('protoc')
 
 
 def GetVersion():
@@ -131,21 +128,6 @@ def GenerateUnittestProtos():
   GenProto('google/protobuf/pyext/python.proto', False)
 
 
-class CleanCmd(_clean):
-  """Custom clean command for building the protobuf extension."""
-
-  def run(self):
-    # Delete generated files in the code tree.
-    for (dirpath, unused_dirnames, filenames) in os.walk('.'):
-      for filename in filenames:
-        filepath = os.path.join(dirpath, filename)
-        if (filepath.endswith('_pb2.py') or filepath.endswith('.pyc') or
-            filepath.endswith('.so') or filepath.endswith('.o')):
-          os.remove(filepath)
-    # _clean is an old-style class, so super() doesn't work.
-    _clean.run(self)
-
-
 class BuildPyCmd(_build_py):
   """Custom build_py command for building the protobuf runtime."""
 
@@ -267,12 +249,11 @@ if __name__ == '__main__':
     # deployment target of macOS 10.9 or later, or iOS 7 or later.
     if sys.platform == 'darwin':
       mac_target = str(sysconfig.get_config_var('MACOSX_DEPLOYMENT_TARGET'))
-      if mac_target and (pkg_resources.parse_version(mac_target) <
-                         pkg_resources.parse_version('10.9.0')):
+      if mac_target:
         os.environ['MACOSX_DEPLOYMENT_TARGET'] = '10.9'
         os.environ['_PYTHON_HOST_PLATFORM'] = re.sub(
             r'macosx-[0-9]+\.[0-9]+-(.+)', r'macosx-10.9-\1',
-            util.get_platform())
+            sysconfig.get_platform())
 
     # https://github.com/Theano/Theano/issues/4926
     if sys.platform == 'win32':
@@ -344,7 +325,6 @@ if __name__ == '__main__':
           ],),
       test_suite='google.protobuf.internal',
       cmdclass={
-          'clean': CleanCmd,
           'build_py': BuildPyCmd,
           'build_ext': BuildExtCmd,
           'test_conformance': TestConformanceCmd,
