load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make")

filegroup(
    name = "all_srcs",
    srcs = glob(
        ["**/*"],
        exclude = ["bazel-*"],
    ),
)

configure_make(
    name = "stunnel",
    args = ["-j4"],
    configure_options = [
        "--with-ssl=$$EXT_BUILD_DEPS/openssl",
        "--with-bashcompdir=$$INSTALLDIR/share",
    ],
    copts = [
        "-Wl,--rpath,$ORIGIN_VAR/../lib",
    ],
    env = {
        "PKG_CONFIG_PATH": ":".join([
            "/usr/lib/pkgconfig",
            "/usr/lib64/pkgconfig",
            "/usr/lib/x86_64-linux-gnu/pkgconfig",
        ]),
        "ORIGIN_VAR": "\\\\$$\\$$ORIGIN",
    },
    lib_source = ":all_srcs",
    out_binaries = [
        "stunnel",
        "stunnel3",
        "stunnel.bash",
    ],
    out_lib_dir = "lib/stunnel",
    out_shared_libs = [
        "libstunnel.so",
    ],
    postfix_script = """
        mv $INSTALLDIR/share/stunnel.bash $INSTALLDIR/bin
    """,
    visibility = ["//visibility:public"],
    deps = ["@openssl"],
)

filegroup(
    name = "stunnel_bin",
    srcs = [":stunnel"],
    output_group = "stunnel",
    visibility = ["//visibility:public"],
)

filegroup(
    name = "stunnel3_bin",
    srcs = [":stunnel"],
    output_group = "stunnel3",
    visibility = ["//visibility:public"],
)

filegroup(
    name = "stunnel.bash",
    srcs = [":stunnel"],
    output_group = "stunnel.bash",
    visibility = ["//visibility:public"],
)

filegroup(
    name = "libstunnel.so",
    srcs = [":stunnel"],
    output_group = "libstunnel.so",
    visibility = ["//visibility:public"],
)
