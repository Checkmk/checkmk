load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make")

filegroup(
    name = "all_srcs",
    srcs = glob(["**"]),
)

configure_make(
    name = "xmlsec1",
    args = ["-j6"],
    configure_command = "configure",
    configure_in_place = True,
    configure_options = [
        "--with-openssl=$$EXT_BUILD_DEPS/openssl",
        "--disable-mans",
        "--disable-docs",
    ],
    copts = ["-Wl,--rpath,$ORIGIN_VAR/../lib"],

    # This is a nasty workaround for Bazel's inability to escape `$ORIGIN`
    # combined with foreign_cc/configure_make's RPATH agnosticness
    #   see https://github.com/bazelbuild/rules_foreign_cc/issues/940
    # There is a caveat left, though: this rule will append "/opt/gcc-13.2.0/lib/../lib64"
    #   + the actual build directory, leading to a potentially wrong RPATH
    #   next to the fact that build artifacts won't be binary identical even
    #   when built in an exact same environment
    # This can be worked around by setting RPATH again after `bazel build` still
    # leaving us with RPATH placeholders of different size
    # Unfortunately this does not work for dynamic libraries, since strangely
    # for those the flags definded with `copts` will be appended rather than
    # prepended, resulting in wrong RPATH components in front of `$ORIGIN/../lib`
    # For that reason we need to manually set RPATH outside Bazel (during `make`)
    env = {
        "PKG_CONFIG_PATH": ":".join([
            "/usr/lib/pkgconfig",
            "/usr/lib64/pkgconfig",
            "/usr/lib/x86_64-linux-gnu/pkgconfig",
        ]),
        "ORIGIN_VAR": "\\\\$$\\$$ORIGIN",
    },
    lib_name = "xmlsec1",
    lib_source = ":all_srcs",
    out_binaries = ["xmlsec1"],
    # Looks like Bazel doesn't know .la files, but we need them.
    #  see https://stackoverflow.com/questions/75282435
    # So instead of listing library files explicitly we just deliver the
    # whole `lib` folder, containing shared and dynamic libraries as well as
    # .la files
    out_data_dirs = ["lib"],
    targets = ["install"],
    visibility = ["//visibility:public"],
    deps = ["@openssl"],
)
