#!/bin/bash
# Copyright (C) 2024 Checkmk GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

set -e

failure() {
    test ${#@} -eq 0 || echo "$(basename "$0"):" "$@" >&2
    exit 1
}

usage() {
    echo "usage: $(basename "$0") [OPTION]..."
    echo "Run the CI pipeline or parts of it."
    echo
    echo "  -e, --setup-environment    setup environment"
    echo "  -c, --clean                remove artifacts first"
    echo "  -F, --check-format         check for correct formatting"
    echo "  -b, --build                build"
    echo "  -a, --all                  shortcut for -F -b -U -u -i -t"
    echo "  -f, --format               format sources"
    echo "  -T, --tsc                  run tsc"
    echo "  -E, --eslint               run eslint"
    echo "  -t, --tests                run tests"
    echo "  -h, --help                 show this help"
}

parse_options() {
    # Yes, all those option variables are global.
    RUN_SETUP_ENVIRONMENT=no
    RUN_CLEAN=no
    RUN_CHECK_FORMAT=no
    RUN_BUILD=no
    RUN_FORMAT=no
    RUN_TSC=no
    RUN_ESLINT=no
    RUN_TESTS=no

    if ! OPTIONS=$(getopt --options 'ecFbafTEth' --long 'setup-environment,clean,clean,check-format,build,all,format,tsc,eslint,tests,help' --name "$(basename "$0")" -- "$@"); then
        usage >&2
        failure
    fi
    eval set -- "$OPTIONS"
    unset OPTIONS

    while true; do
        case "$1" in
            '-e' | '--setup-environment')
                RUN_SETUP_ENVIRONMENT=yes
                shift
                continue
                ;;
            '-c' | '--clean')
                RUN_CLEAN=yes
                shift
                continue
                ;;
            '-F' | '--check-format')
                RUN_CHECK_FORMAT=yes
                shift
                continue
                ;;
            '-b' | '--build')
                RUN_BUILD=yes
                shift
                continue
                ;;
            '-a' | '--all')
                RUN_CHECK_FORMAT=yes
                RUN_TSC=yes
                RUN_ESLINT=yes
                RUN_TESTS=yes
                RUN_BUILD=yes
                shift
                continue
                ;;
            '-f' | '--format')
                RUN_FORMAT=yes
                shift
                continue
                ;;
            '-T' | '--tsc')
                RUN_TSC=yes
                shift
                continue
                ;;
            '-E' | '--eslint')
                RUN_ESLINT=yes
                shift
                continue
                ;;
            '-t' | '--tests')
                RUN_TESTS=yes
                shift
                continue
                ;;
            '-h' | '--help')
                usage
                exit 0
                ;;
            '--')
                shift
                test ${#@} -eq 0 || failure "extra arguments:" "$@"
                break
                ;;
            *) failure "internal error" ;;
        esac
    done

    readonly RUN_SETUP_ENVIRONMENT RUN_CLEAN RUN_CHECK_FORMAT RUN_BUILD RUN_FORMAT RUN_TSC RUN_ESLINT RUN_TESTS
}

run_setup_environment() {
    ARTIFACTS_BASE="https://artifacts.lan.tribe29.com"
    export NPM_CONFIG_REGISTRY="${ARTIFACTS_BASE}/repository/npm-proxy/"
    export SASS_BINARY_SITE="${ARTIFACTS_BASE}/repository/archives/"
    export NODE_OPTIONS="--dns-result-order=ipv4first",
    npm \
        ci \
        --yes \
        --unsafe-perm \
        --audit=false
}

run_clean() {
    rm -rf dist
}

run_check_format() {
    npm run test-prettier
}

run_build() {
    npm run build
}

run_format() {
    npm run prettier
}

run_tsc() {
    npm run test-tsc
}

run_eslint() {
    npm run test-eslint
}

run_tests() {
    npm run test
}

main() {
    # Change to the directory where this script resides, it makes many things easier
    # and we can call this script from everywhere.
    cd -- "${BASH_SOURCE%/*}"
    parse_options "$@"
    test ${RUN_SETUP_ENVIRONMENT} = yes && run_setup_environment
    test ${RUN_CLEAN} = yes && run_clean
    test ${RUN_CHECK_FORMAT} = yes && run_check_format
    test ${RUN_BUILD} = yes && run_build
    test ${RUN_FORMAT} = yes && run_format
    test ${RUN_TSC} = yes && run_tsc
    test ${RUN_ESLINT} = yes && run_eslint
    test ${RUN_TESTS} = yes && run_tests
    true
}

main "$@"
