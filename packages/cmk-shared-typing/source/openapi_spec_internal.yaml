info:
  description: "# Introduction\n\nWith the Checkmk REST-API you can transfer and execute\
    \ the tasks you normally perform\nmanually in Checkmk's GUI to the Checkmk server\
    \ via command or script.\n\nREST stands for Representational State Transfer and\
    \ describes an architecture for the exchange of\ndata on distributed systems -\
    \ especially for Web services. The implementation of this REST-API is\ndone via\
    \ the HTTP/1.1 protocol, where resources are addressed via URIs and accessed with\
    \ HTTP\nmethods (GET, POST, PUT, DELETE).\n\nThe API is documented in a machine-readable\
    \ schema and a human-readable format in English, with all\nresources, their input\
    \ and output parameters and the associated value ranges. The API is created\n\
    with the OpenAPI specification 3.x, an API description format especially for REST\
    \ APIs.\n\nThe API documentation created with this specification is displayed\
    \ to you with ReDoc (a\nresponsive Web design for an OpenAPI document) or with\
    \ Swagger UI (an OpenAPI document\nvisualization for direct interaction with the\
    \ API's resources).\n\n\n# Prerequisites\n\n* You know Checkmk and its principles\
    \ of setup and configuration.\n* You are experienced in using an API, preferably\
    \ a REST-API.\n* You are familiar with at least one of the applications for which\
    \ sample code is available.\n* It helps if you have already worked with ReDoc\
    \ and/or Swagger UI.\n\n# Responses\n\nAs specified by the `Content-Type` of `application/json`,\
    \ the response payload is serialized with\nJSON and encoded in UTF-8.\n\n## JSON\
    \ envelope attributes for objects\n\nAll objects are wrapped in a JSON structure\
    \ called a \"Domain Object\" which take the following\nform:\n\n    {\n      \
    \  \"domainType\": <domain type>,\n        \"instanceId\": <string to uniquely\
    \ identify domain object>,\n        \"title\": <human readable header>,\n    \
    \    \"links\": [<relation link>, ...],\n        \"extensions\": {\n         \
    \   <attribute name>: <attribute value>,\n            ...\n        },\n      \
    \  \"members\": {\n            <member name>: <member definition>,\n         \
    \   ...\n        }\n     }\n\nThe collections `members`, `extensions` and `links`\
    \ are defined as such:\n\n * domainType - The type of object this refers to, e.g.\
    \ `host`, and `service`.\n * instanceId - The globally unique identifier for this\
    \ particular object.\n * title - A human readable string which is only relevant\
    \ for user interfaces.\n * links - A collection of links to other resources or\
    \ actions.\n * extensions - The data container for all direct attributes of the\
    \ object.\n * members - The container for external resources, like linked foreign\
    \ objects or actions.\n\n### Note\n\nPreviously, an attribute called `members`\
    \ has been used in these objects, but it will no longer be\nused. All relations\
    \ to other objects will be listed in the `links` attribute.\n\n## JSON envelope\
    \ for collections\n\nFor collections, the JSON envelope looks slightly different.\n\
    \n    {\n        \"domainType\": <domain type>,\n        \"instanceId\": <string\
    \ to uniquely identify domain object>,\n        \"title\": <human readable header>,\n\
    \        \"links\": [<relation link>, ...],\n        \"extensions\": {\n     \
    \       <attribute name>: <attribute value>,\n            ...\n        },\n  \
    \      \"value\": [<domain object 1>, <domain object 2>, ...],\n    }\n\n## Link\
    \ relations\n\nEvery response comes with a collection of `links` to inform the\
    \ API client on possible\nfollow-up actions. For example, a folder response can\
    \ have links to resources for updating,\ndeleting and moving the folder. The client\
    \ does not have to know about the URL structure, it\njust needs to follow the\
    \ link. In this sense, the API is quasi self-documenting.\nThis provision of additional\
    \ information as a REST-API principle is also called\n[HATEOAS](https://en.wikipedia.org/wiki/HATEOAS).\
    \ In this context,\na `rel` specifies the type of relationship of the concerning\
    \ resource to the resource that generated\nthis representation. The rel attribute\
    \ is only of informational nature for the client.\n\nObjects may have these possible\
    \ generic link relations:\n\n * self - The API location of the current object\n\
    \ * help - Documentation for the currently requested endpoint\n * collection -\
    \ The API location for a list of object of the current objects' type\n * edit\
    \ - The API location to update the current object\n * edit-form - The GUI location\
    \ to edit the current object\n * delete - The API location to delete the current\
    \ object\n\nMembers of collections have also:\n\n * item - The API location of\
    \ a member of the current collection\n\nPlease note that these (except for self)\
    \ are completely optional and may or may not be available on\ncertain endpoints.\
    \ More specialized link relations are also available:\n\n * invoke - The API location\
    \ to invoke an action\n * start - The API location to start a long running process,\
    \ which the current object represents\n * cancel - The API location to abort the\
    \ long running process, which the current object represents\n * download - The\
    \ URL to download the object described by the current endpoint\n * move - The\
    \ API location to move the current object to another destination\n\nEndpoint specific\
    \ link relations are also possible.\n\n# Updating values\n\nWhen an object is\
    \ updated by multiple requests at the same time, it can happen that the second\n\
    request will overwrite important values from the first request. This is known\
    \ as the \"lost update\nproblem\" and can be prevented by a locking scheme. The\
    \ scheme that Checkmk uses for this is called\nan \"optimistic lock\" and allows\
    \ read access even when writes are happening. It works as follows:\n\n1. The user\
    \ fetches the object to be modified.\n2. The server responds with the data and\
    \ an HTTP `ETag` header containing a value which is something\n   like the \"\
    checksum\" of the object.\n3. In order to modify the object, the user sends an\
    \ update request with an HTTP `If-Match` header\n   which contains the value of\
    \ the previously fetched `ETag`. This ensures that the writer has seen\n   the\
    \ object to be modified. If any modifications by someone else were to happen between\
    \ the\n   request (1) and the update (3) these values would not match and the\
    \ update would fail.\n4. If you are sure you are not updating objects simultaneously\
    \ and want to avoid first fetching the\n   object in order to obtain its ETag\
    \ value, you can bypass this step by providing a \"*\" for the\n   the 'If-Match'\
    \ header like so.  `\"If-Match\": \"*\"`\n\nThis scheme is used for most `PUT`\
    \ requests throughout the REST API and always works the same way.\nDetailed documentation\
    \ of the various involved fields as well as the possible error messages can\n\
    be found on the documentation of each affected endpoint.\n\n# Querying Status\
    \ Data\n\nThe endpoints in the category \"Monitoring\" support arbitrary Livestatus\
    \ expressions (including And,\nOr combinators) and all columns of some specific\
    \ tables can be queried.\n\n### Note\n\nYou can find an introduction to basic\
    \ monitoring principles including host and service status in the\n[Checkmk guide](https://docs.checkmk.com/latest/en/monitoring_basics.html).\n\
    \n## Filter expressions\n\nA *filter expression* is a recursively defined structure\
    \ containing *binary expression nodes*,\n*negation nodes* or *combination nodes*.\
    \ With *filter expressions*, very complex Livestatus queries\ncan be constructed.\n\
    \n## Binary expression node\n\nA *binary expression node* represents one condition\
    \ on which to filter. `left` is always a\nLivestatus column name, `right` is always\
    \ a value.\n\n### Definition\n\n    {'op': <livestatus operator>, 'left': <livestatus\
    \ column>, 'right': <value>}\n\n### Operators\n\nA list of all list of all possible\n\
    [Livestatus filter operators](https://docs.checkmk.com/latest/en/livestatus_references.html#heading_filter),\n\
    can be found in the Checkmk documentation.\n\n### Example\n\nThis example filters\
    \ for an entry where the host_name equals to \"example.com\".\n\n    {'op': '=',\
    \ 'left': 'host_name', 'right': 'example.com'}\n\n### Note\n\nFor the specific\
    \ table used, please consult the endpoint documentation.\n\n## Negation node\n\
    \nThere is only one negation node, the `not` expression, which logically negates\
    \ a *filter\nexpression*. `expr` is a valid *filter expression*, so any *binary\
    \ expression node*, *negation\nnode* or *combination node* may be used here.\n\
    \n### Definition\n\n     {'op': 'not', 'expr': <any filter expr>}\n\n### Example\n\
    \nThis example filters for hosts which **do not** have the host_name \"example.com\"\
    .\n\n    {'op': 'not', 'expr': {'op': '=', 'left': 'host_name', 'right': 'example.com'}}\n\
    \nThis is equivalent to\n\n    {'op': '!=', 'left': 'host_name', 'right': 'example.com'}\n\
    \n## Combination nodes\n\n`and` and `or` combinators are supported. They can be\
    \ nested arbitrarily. `expr` is a list of\nvalid *filter expressions*, so any\
    \ number of *binary nodes*, *negation nodes* or *combination nodes*\nmay be used\
    \ there. These expression do not have to all be of the same type, so a mix of\
    \ *binary\nexpression nodes*, *negation nodes* and *combination nodes* is also\
    \ possible.\n\n### Definition\n\nThis results in a *filter expression* in which\
    \ all the contained expression must be true:\n\n    {'op': 'and', 'expr': [<any\
    \ filter expr>, ...]}\n\nThis results in a *filter expression* in which only one\
    \ of the contained expression needs to\nbe true:\n\n    {'op': 'or', 'expr': [<any\
    \ filter expr>, ...]}\n\n### Example\n\nThis example filters for the host \"example.com\"\
    \ only when the `state` column is set to `0`, which\nmeans the state is OK.\n\n\
    \    {'op': 'and', 'expr': [{'op': '=', 'left': 'host_name', 'right': 'example.com'},\n\
    \                            {'op': '=', 'left': 'state', 'right': 0}]}\n\n# Table\
    \ definitions\n\nThe following Livestatus tables can be queried through the REST-API.\
    \ Which table is being used\nin a particular endpoint can be seen in the endpoint\
    \ documentation.\n\n## Downtimes Table\n\n### Columns:\n\n| Column name | Type\
    \ | Description |\n| - | - | - |\n|author | string | The contact that scheduled\
    \ the downtime |\n|comment | string | A comment text |\n|duration | int | The\
    \ duration of the downtime in seconds |\n|end_time | time | The end time of the\
    \ downtime as UNIX timestamp |\n|entry_time | time | The time the entry was made\
    \ as UNIX timestamp |\n|fixed | int | A 1 if the downtime is fixed, a 0 if it\
    \ is flexible |\n|id | int | The id of the downtime |\n|is_pending | int | 1 if\
    \ the downtime is currently pending **(not active)**, 0 if it is active |\n|is_service\
    \ | int | 0, if this entry is for a host, 1 if it is for a service |\n|origin\
    \ | int | A 0 if the downtime has been set by a command, a 1 if it has been configured\
    \ by a rule |\n|recurring | int | For recurring downtimes: 1: hourly, 2: daily,\
    \ 3: weekly, 4: two-weekly, 5: four-weekly. Otherwise 0 |\n|start_time | time\
    \ | The start time of the downtime as UNIX timestamp |\n|triggered_by | int |\
    \ The ID of the downtime triggering this downtime or 0 if there is none |\n|type\
    \ | int | 1 for a service downtime, 2 for a host downtime |\n\n### Adjacent columns:\n\
    \n| Column name | Type | Description |\n| - | - | - |\n|host_accept_passive_checks\
    \ | int | Whether passive host checks are accepted **(0/1)** |\n|host_acknowledged\
    \ | int | Whether the current problem has been acknowledged **(0/1)** |\n|host_acknowledgement_type\
    \ | int | Type of acknowledgement **(0: none, 1: normal, 2: sticky)** |\n|host_action_url\
    \ | string | An optional URL to custom actions or information about this host\
    \ |\n|host_action_url_expanded | string | The same as action_url, but with the\
    \ most important macros expanded |\n|host_active_checks_enabled | int | Whether\
    \ active checks of the object are enabled **(0/1)** |\n|host_address | string\
    \ | IP address |\n|host_alias | string | An alias name for the host |\n|host_check_command\
    \ | string | Logical command name for active checks |\n|host_check_command_expanded\
    \ | string | Logical command name for active checks, with macros expanded |\n\
    |host_check_flapping_recovery_notification | int | Whether to check to send a\
    \ recovery notification when flapping stops **(0/1)** |\n|host_check_freshness\
    \ | int | Whether freshness checks are enabled **(0/1)** |\n|host_check_interval\
    \ | float | Number of basic interval lengths between two scheduled checks |\n\
    |host_check_options | int | The current check option, forced, normal, freshness\
    \ **(0-2)** |\n|host_check_period | string | Time period in which this object\
    \ will be checked. If empty then the check will always be executed. |\n|host_check_type\
    \ | int | Type of check **(0: active, 1: passive)** |\n|host_checks_enabled |\
    \ int | Whether checks of the object are enabled **(0/1)** |\n|host_childs | list\
    \ | A list of all direct children of the host |\n|host_comments | list | A list\
    \ of the ids of all comments |\n|host_comments_with_extra_info | list | A list\
    \ of all comments with id, author, comment, entry type and entry time |\n|host_comments_with_info\
    \ | list | A list of all comments with id, author and comment |\n|host_contact_groups\
    \ | list | A list of all contact groups this object is in |\n|host_contacts |\
    \ list | A list of all contacts of this object |\n|host_current_attempt | int\
    \ | Number of the current check attempts |\n|host_current_notification_number\
    \ | int | Number of the current notification |\n|host_custom_variable_names |\
    \ list | A list of the names of the custom variables |\n|host_custom_variable_values\
    \ | list | A list of the values of the custom variables |\n|host_custom_variables\
    \ | dict | A dictionary of the custom variables |\n|host_display_name | string\
    \ | Optional display name |\n|host_downtimes | list | A list of the ids of all\
    \ scheduled downtimes of this object |\n|host_downtimes_with_extra_info | list\
    \ | A list of the scheduled downtimes with id, author, comment, origin, entry_time,\
    \ start_time, end_time, fixed, duration, recurring and is_pending |\n|host_downtimes_with_info\
    \ | list | A list of the scheduled downtimes with id, author and comment |\n|host_event_handler\
    \ | string | Command used as event handler |\n|host_event_handler_enabled | int\
    \ | Whether event handling is enabled **(0/1)** |\n|host_execution_time | float\
    \ | Time the check needed for execution |\n|host_filename | string | The value\
    \ of the custom variable FILENAME |\n|host_first_notification_delay | float |\
    \ Delay before the first notification |\n|host_flap_detection_enabled | int |\
    \ Whether flap detection is enabled **(0/1)** |\n|host_flappiness | float | The\
    \ current level of flappiness, this corresponds with the recent frequency of state\
    \ changes |\n|host_groups | list | A list of all host groups this object is in\
    \ |\n|host_hard_state | int | The effective hard state of this object |\n|host_has_been_checked\
    \ | int | Whether a check has already been executed **(0/1)** |\n|host_high_flap_threshold\
    \ | float | High threshold of flap detection |\n|host_icon_image | string | The\
    \ name of an image file to be used in the web pages |\n|host_icon_image_alt |\
    \ string | Alternative text for the icon_image |\n|host_icon_image_expanded |\
    \ string | The same as icon_image, but with the most important macros expanded\
    \ |\n|host_in_check_period | int | Whether this object is currently in its check\
    \ period **(0/1)** |\n|host_in_notification_period | int | Whether this object\
    \ is currently in its notification period **(0/1)** |\n|host_in_service_period\
    \ | int | Whether this object is currently in its service period **(0/1)** |\n\
    |host_initial_state | int | Initial state |\n|host_is_executing | int | is there\
    \ a check currently running **(0/1)** |\n|host_is_flapping | int | Whether the\
    \ state is flapping **(0/1)** |\n|host_label_names | list | A list of the names\
    \ of the labels |\n|host_label_source_names | list | A list of the names of the\
    \ label sources |\n|host_label_source_values | list | A list of the values of\
    \ the label sources |\n|host_label_sources | dict | A dictionary of the label\
    \ sources |\n|host_label_values | list | A list of the values of the labels |\n\
    |host_labels | dict | A dictionary of the labels |\n|host_last_check | time |\
    \ Time of the last check **(Unix timestamp)** |\n|host_last_hard_state | int |\
    \ Last hard state |\n|host_last_hard_state_change | time | Time of the last hard\
    \ state change - soft or hard **(Unix timestamp)** |\n|host_last_notification\
    \ | time | Time of the last notification **(Unix timestamp)** |\n|host_last_state\
    \ | int | State before last state change |\n|host_last_state_change | time | Time\
    \ of the last state change - soft or hard **(Unix timestamp)** |\n|host_last_time_down\
    \ | time | Last time the host was DOWN **(Unix timestamp)** |\n|host_last_time_unreachable\
    \ | time | Last time the host was UNREACHABLE **(Unix timestamp)** |\n|host_last_time_up\
    \ | time | Last time the host was UP **(Unix timestamp)** |\n|host_latency | float\
    \ | Time difference between scheduled check time and actual check time |\n|host_long_plugin_output\
    \ | string | Long **(extra)** output of the last check |\n|host_low_flap_threshold\
    \ | float | Low threshold of flap detection |\n|host_max_check_attempts | int\
    \ | Maximum attempts for active checks before a hard state |\n|host_metrics |\
    \ list | A list of all metrics of this object that historically existed |\n|host_mk_inventory\
    \ | blob | The file content of the Check_MK HW/SW Inventory |\n|host_mk_inventory_gz\
    \ | blob | The gzipped file content of the Check_MK HW/SW Inventory |\n|host_mk_inventory_last\
    \ | time | The timestamp of the last Check_MK HW/SW Inventory for this host. 0\
    \ means that no inventory data is present |\n|host_mk_logwatch_files | list |\
    \ This list of logfiles with problems fetched via mk_logwatch |\n|host_modified_attributes\
    \ | int | A bitmask specifying which attributes have been modified |\n|host_modified_attributes_list\
    \ | list | A list of all modified attributes |\n|host_name | string | Host name\
    \ |\n|host_next_check | time | Scheduled time for the next check **(Unix timestamp)**\
    \ |\n|host_next_notification | time | Time of the next notification **(Unix timestamp)**\
    \ |\n|host_no_more_notifications | int | Whether to stop sending notifications\
    \ **(0/1)** |\n|host_notes | string | Optional notes for this object, with macros\
    \ not expanded |\n|host_notes_expanded | string | The same as notes, but with\
    \ the most important macros expanded |\n|host_notes_url | string | An optional\
    \ URL with further information about the object |\n|host_notes_url_expanded |\
    \ string | Same es notes_url, but with the most important macros expanded |\n\
    |host_notification_interval | float | Interval of periodic notification in minutes\
    \ or 0 if its off |\n|host_notification_period | string | Time period in which\
    \ problems of this object will be notified. If empty then notification will be\
    \ always |\n|host_notification_postponement_reason | string | reason for postponing\
    \ the pending notification, empty if nothing is postponed |\n|host_notifications_enabled\
    \ | int | Whether notifications of the host are enabled **(0/1)** |\n|host_num_services\
    \ | int | The total number of services of the host |\n|host_num_services_crit\
    \ | int | The number of the host's services with the soft state CRIT |\n|host_num_services_handled_problems\
    \ | int | The number of the host's services which have handled problems |\n|host_num_services_hard_crit\
    \ | int | The number of the host's services with the hard state CRIT |\n|host_num_services_hard_ok\
    \ | int | The number of the host's services with the hard state OK |\n|host_num_services_hard_unknown\
    \ | int | The number of the host's services with the hard state UNKNOWN |\n|host_num_services_hard_warn\
    \ | int | The number of the host's services with the hard state WARN |\n|host_num_services_ok\
    \ | int | The number of the host's services with the soft state OK |\n|host_num_services_pending\
    \ | int | The number of the host's services which have not been checked yet **(pending)**\
    \ |\n|host_num_services_unhandled_problems | int | The number of the host's services\
    \ which have unhandled problems |\n|host_num_services_unknown | int | The number\
    \ of the host's services with the soft state UNKNOWN |\n|host_num_services_warn\
    \ | int | The number of the host's services with the soft state WARN |\n|host_obsess_over_host\
    \ | int | The current obsess_over_host setting **(0/1)** |\n|host_parents | list\
    \ | A list of all direct parents of the host |\n|host_pending_flex_downtime |\
    \ int | Number of pending flexible downtimes |\n|host_percent_state_change | float\
    \ | Percent state change |\n|host_perf_data | string | Optional performance data\
    \ of the last check |\n|host_performance_data | dictdouble | Optional performance\
    \ data as a dict |\n|host_plugin_output | string | Output of the last check |\n\
    |host_pnpgraph_present | int | Whether there is a PNP4Nagios graph present for\
    \ this object **(-1/0/1)** |\n|host_previous_hard_state | int | Previous hard\
    \ state **(that hard state before the current/last hard state)** |\n|host_process_performance_data\
    \ | int | Whether processing of performance data is enabled **(0/1)** |\n|host_retry_interval\
    \ | float | Number of basic interval lengths between checks when retrying after\
    \ a soft error |\n|host_scheduled_downtime_depth | int | The number of downtimes\
    \ this object is currently in |\n|host_service_period | string | Time period during\
    \ which the object is expected to be available |\n|host_services | list | A list\
    \ of all services of the host |\n|host_services_with_fullstate | list | A list\
    \ of all services including full state information. The list of entries can grow\
    \ in future versions. |\n|host_services_with_info | list | A list of all services\
    \ including detailed information about each service |\n|host_services_with_state\
    \ | list | A list of all services of the host together with state and has_been_checked\
    \ |\n|host_smartping_timeout | int | Maximum expected time between two received\
    \ packets in ms |\n|host_staleness | float | The staleness of this object |\n\
    |host_state | int | The current state of the object, for hosts: 0/1/2 for UP/DOWN/UNREACH,\
    \ for services: 0/1/2/3 for OK/WARN/CRIT/UNKNOWN |\n|host_state_type | int | Type\
    \ of the current state **(0: soft, 1: hard)** |\n|host_statusmap_image | string\
    \ | The name of in image file for the status map |\n|host_structured_status |\
    \ blob | The file content of the structured status of the Check_MK HW/SW Inventory\
    \ |\n|host_tag_names | list | A list of the names of the tags |\n|host_tag_values\
    \ | list | A list of the values of the tags |\n|host_tags | dict | A dictionary\
    \ of the tags |\n|host_total_services | int | The total number of services of\
    \ the host |\n|host_worst_service_hard_state | int | The worst hard state of all\
    \ of the host's services **(OK <= WARN <= UNKNOWN <= CRIT)** |\n|host_worst_service_state\
    \ | int | The worst soft state of all of the host's services **(OK <= WARN <=\
    \ UNKNOWN <= CRIT)** |\n|host_x_3d | float | 3D-Coordinates: X |\n|host_y_3d |\
    \ float | 3D-Coordinates: Y |\n|host_z_3d | float | 3D-Coordinates: Z |\n|service_accept_passive_checks\
    \ | int | Whether passive host checks are accepted **(0/1)** |\n|service_acknowledged\
    \ | int | Whether the current problem has been acknowledged **(0/1)** |\n|service_acknowledgement_type\
    \ | int | Type of acknowledgement **(0: none, 1: normal, 2: sticky)** |\n|service_action_url\
    \ | string | An optional URL to custom actions or information about this host\
    \ |\n|service_action_url_expanded | string | The same as action_url, but with\
    \ the most important macros expanded |\n|service_active_checks_enabled | int |\
    \ Whether active checks of the object are enabled **(0/1)** |\n|service_cache_interval\
    \ | int | For checks that base on cached agent data the interval in that this\
    \ cache is recreated. 0 for other services. |\n|service_cached_at | time | For\
    \ checks that base on cached agent data the time when this data was created. 0\
    \ for other services. |\n|service_check_command | string | Logical command name\
    \ for active checks |\n|service_check_command_expanded | string | Logical command\
    \ name for active checks, with macros expanded |\n|service_check_flapping_recovery_notification\
    \ | int | Whether to check to send a recovery notification when flapping stops\
    \ **(0/1)** |\n|service_check_freshness | int | Whether freshness checks are enabled\
    \ **(0/1)** |\n|service_check_interval | float | Number of basic interval lengths\
    \ between two scheduled checks |\n|service_check_options | int | The current check\
    \ option, forced, normal, freshness **(0-2)** |\n|service_check_period | string\
    \ | Time period in which this object will be checked. If empty then the check\
    \ will always be executed. |\n|service_check_type | int | Type of check **(0:\
    \ active, 1: passive)** |\n|service_checks_enabled | int | Whether checks of the\
    \ object are enabled **(0/1)** |\n|service_comments | list | A list of the ids\
    \ of all comments |\n|service_comments_with_extra_info | list | A list of all\
    \ comments with id, author, comment, entry type and entry time |\n|service_comments_with_info\
    \ | list | A list of all comments with id, author and comment |\n|service_contact_groups\
    \ | list | A list of all contact groups this object is in |\n|service_contacts\
    \ | list | A list of all contacts of this object |\n|service_current_attempt |\
    \ int | Number of the current check attempts |\n|service_current_notification_number\
    \ | int | Number of the current notification |\n|service_custom_variable_names\
    \ | list | A list of the names of the custom variables |\n|service_custom_variable_values\
    \ | list | A list of the values of the custom variables |\n|service_custom_variables\
    \ | dict | A dictionary of the custom variables |\n|service_description | string\
    \ | Service name |\n|service_display_name | string | Optional display name |\n\
    |service_downtimes | list | A list of the ids of all scheduled downtimes of this\
    \ object |\n|service_downtimes_with_extra_info | list | A list of the scheduled\
    \ downtimes with id, author, comment, origin, entry_time, start_time, end_time,\
    \ fixed, duration, recurring and is_pending |\n|service_downtimes_with_info |\
    \ list | A list of the scheduled downtimes with id, author and comment |\n|service_event_handler\
    \ | string | Command used as event handler |\n|service_event_handler_enabled |\
    \ int | Whether event handling is enabled **(0/1)** |\n|service_execution_time\
    \ | float | Time the check needed for execution |\n|service_first_notification_delay\
    \ | float | Delay before the first notification |\n|service_flap_detection_enabled\
    \ | int | Whether flap detection is enabled **(0/1)** |\n|service_flappiness |\
    \ float | The current level of flappiness, this corresponds with the recent frequency\
    \ of state changes |\n|service_groups | list | A list of all service groups this\
    \ object is in |\n|service_hard_state | int | The effective hard state of this\
    \ object |\n|service_has_been_checked | int | Whether a check has already been\
    \ executed **(0/1)** |\n|service_high_flap_threshold | float | High threshold\
    \ of flap detection |\n|service_icon_image | string | The name of an image file\
    \ to be used in the web pages |\n|service_icon_image_alt | string | Alternative\
    \ text for the icon_image |\n|service_icon_image_expanded | string | The same\
    \ as icon_image, but with the most important macros expanded |\n|service_in_check_period\
    \ | int | Whether this object is currently in its check period **(0/1)** |\n|service_in_notification_period\
    \ | int | Whether this object is currently in its notification period **(0/1)**\
    \ |\n|service_in_passive_check_period | int | Whether this service is currently\
    \ in its passive check period **(0/1)** |\n|service_in_service_period | int |\
    \ Whether this object is currently in its service period **(0/1)** |\n|service_initial_state\
    \ | int | Initial state |\n|service_is_executing | int | is there a check currently\
    \ running **(0/1)** |\n|service_is_flapping | int | Whether the state is flapping\
    \ **(0/1)** |\n|service_label_names | list | A list of the names of the labels\
    \ |\n|service_label_source_names | list | A list of the names of the label sources\
    \ |\n|service_label_source_values | list | A list of the values of the label sources\
    \ |\n|service_label_sources | dict | A dictionary of the label sources |\n|service_label_values\
    \ | list | A list of the values of the labels |\n|service_labels | dict | A dictionary\
    \ of the labels |\n|service_last_check | time | Time of the last check **(Unix\
    \ timestamp)** |\n|service_last_hard_state | int | Last hard state |\n|service_last_hard_state_change\
    \ | time | Time of the last hard state change - soft or hard **(Unix timestamp)**\
    \ |\n|service_last_notification | time | Time of the last notification **(Unix\
    \ timestamp)** |\n|service_last_state | int | State before last state change |\n\
    |service_last_state_change | time | Time of the last state change - soft or hard\
    \ **(Unix timestamp)** |\n|service_last_time_critical | time | Last time the service\
    \ was CRIT **(Unix timestamp)** |\n|service_last_time_ok | time | Last time the\
    \ service was OK **(Unix timestamp)** |\n|service_last_time_unknown | time | Last\
    \ time the service was UNKNOWN **(Unix timestamp)** |\n|service_last_time_warning\
    \ | time | Last time the service was WARN **(Unix timestamp)** |\n|service_latency\
    \ | float | Time difference between scheduled check time and actual check time\
    \ |\n|service_long_plugin_output | string | Long **(extra)** output of the last\
    \ check |\n|service_low_flap_threshold | float | Low threshold of flap detection\
    \ |\n|service_max_check_attempts | int | Maximum attempts for active checks before\
    \ a hard state |\n|service_metrics | list | A list of all metrics of this object\
    \ that historically existed |\n|service_modified_attributes | int | A bitmask\
    \ specifying which attributes have been modified |\n|service_modified_attributes_list\
    \ | list | A list of all modified attributes |\n|service_next_check | time | Scheduled\
    \ time for the next check **(Unix timestamp)** |\n|service_next_notification |\
    \ time | Time of the next notification **(Unix timestamp)** |\n|service_no_more_notifications\
    \ | int | Whether to stop sending notifications **(0/1)** |\n|service_notes |\
    \ string | Optional notes for this object, with macros not expanded |\n|service_notes_expanded\
    \ | string | The same as notes, but with the most important macros expanded |\n\
    |service_notes_url | string | An optional URL with further information about the\
    \ object |\n|service_notes_url_expanded | string | Same es notes_url, but with\
    \ the most important macros expanded |\n|service_notification_interval | float\
    \ | Interval of periodic notification in minutes or 0 if its off |\n|service_notification_period\
    \ | string | Time period in which problems of this object will be notified. If\
    \ empty then notification will be always |\n|service_notification_postponement_reason\
    \ | string | reason for postponing the pending notification, empty if nothing\
    \ is postponed |\n|service_notifications_enabled | int | Whether notifications\
    \ of the host are enabled **(0/1)** |\n|service_obsess_over_service | int | The\
    \ current obsess_over_service setting **(0/1)** |\n|service_passive_check_period\
    \ | string | Time period in which this **(passive)** service will be checked.\
    \ |\n|service_pending_flex_downtime | int | Number of pending flexible downtimes\
    \ |\n|service_percent_state_change | float | Percent state change |\n|service_perf_data\
    \ | string | Optional performance data of the last check |\n|service_performance_data\
    \ | dictdouble | Optional performance data as a dict |\n|service_plugin_output\
    \ | string | Output of the last check |\n|service_pnpgraph_present | int | Whether\
    \ there is a PNP4Nagios graph present for this object **(-1/0/1)** |\n|service_prediction_files\
    \ | list | List currently available predictions |\n|service_previous_hard_state\
    \ | int | Previous hard state **(that hard state before the current/last hard\
    \ state)** |\n|service_process_performance_data | int | Whether processing of\
    \ performance data is enabled **(0/1)** |\n|service_retry_interval | float | Number\
    \ of basic interval lengths between checks when retrying after a soft error |\n\
    |service_robotmk_last_error_log | blob | The file content of the Robotmk error\
    \ log |\n|service_robotmk_last_error_log_gz | blob | The gzipped file content\
    \ of the Robotmk error log |\n|service_robotmk_last_log | blob | The file content\
    \ of the Robotmk log |\n|service_robotmk_last_log_gz | blob | The gzipped file\
    \ content of the Robotmk log |\n|service_scheduled_downtime_depth | int | The\
    \ number of downtimes this object is currently in |\n|service_service_period |\
    \ string | Time period during which the object is expected to be available |\n\
    |service_staleness | float | The staleness of this object |\n|service_state |\
    \ int | The current state of the object, for hosts: 0/1/2 for UP/DOWN/UNREACH,\
    \ for services: 0/1/2/3 for OK/WARN/CRIT/UNKNOWN |\n|service_state_type | int\
    \ | Type of the current state **(0: soft, 1: hard)** |\n|service_tag_names | list\
    \ | A list of the names of the tags |\n|service_tag_values | list | A list of\
    \ the values of the tags |\n|service_tags | dict | A dictionary of the tags |\n\
    \n## Hostgroups Table\n\n### Columns:\n\n| Column name | Type | Description |\n\
    | - | - | - |\n|action_url | string | An optional URL to custom notes or actions\
    \ on the host group |\n|alias | string | An alias of the hostgroup |\n|members\
    \ | list | A list of all host names that are members of the hostgroup |\n|members_with_state\
    \ | list | A list of all host names that are members of the hostgroup together\
    \ with state and has_been_checked |\n|name | string | Name of the hostgroup |\n\
    |notes | string | Optional additional notes about the host group |\n|notes_url\
    \ | string | An optional URL to further notes on the host group |\n|num_hosts\
    \ | int | The total number of hosts in the group |\n|num_hosts_down | int | The\
    \ number of hosts in the group that are down |\n|num_hosts_handled_problems |\
    \ int | The total number of hosts in this group with handled problems |\n|num_hosts_pending\
    \ | int | The number of hosts in the group that are pending |\n|num_hosts_unhandled_problems\
    \ | int | The total number of hosts in this group with unhandled problems |\n\
    |num_hosts_unreach | int | The number of hosts in the group that are unreachable\
    \ |\n|num_hosts_up | int | The number of hosts in the group that are up |\n|num_services\
    \ | int | The total number of services of hosts in this group |\n|num_services_crit\
    \ | int | The total number of services with the state CRIT of hosts in this group\
    \ |\n|num_services_handled_problems | int | The total number of services of hosts\
    \ in this group with handled problems |\n|num_services_hard_crit | int | The total\
    \ number of services with the state CRIT of hosts in this group |\n|num_services_hard_ok\
    \ | int | The total number of services with the state OK of hosts in this group\
    \ |\n|num_services_hard_unknown | int | The total number of services with the\
    \ state UNKNOWN of hosts in this group |\n|num_services_hard_warn | int | The\
    \ total number of services with the state WARN of hosts in this group |\n|num_services_ok\
    \ | int | The total number of services with the state OK of hosts in this group\
    \ |\n|num_services_pending | int | The total number of services with the state\
    \ Pending of hosts in this group |\n|num_services_unhandled_problems | int | The\
    \ total number of services of hosts in this group with unhandled problems |\n\
    |num_services_unknown | int | The total number of services with the state UNKNOWN\
    \ of hosts in this group |\n|num_services_warn | int | The total number of services\
    \ with the state WARN of hosts in this group |\n|worst_host_state | int | The\
    \ worst state of all of the groups' hosts **(UP <= UNREACHABLE <= DOWN)** |\n\
    |worst_service_hard_state | int | The worst state of all services that belong\
    \ to a host of this group **(OK <= WARN <= UNKNOWN <= CRIT)** |\n|worst_service_state\
    \ | int | The worst state of all services that belong to a host of this group\
    \ **(OK <= WARN <= UNKNOWN <= CRIT)** |\n\n## Hosts Table\n\n### Columns:\n\n\
    | Column name | Type | Description |\n| - | - | - |\n|accept_passive_checks |\
    \ int | Whether passive host checks are accepted **(0/1)** |\n|acknowledged |\
    \ int | Whether the current problem has been acknowledged **(0/1)** |\n|acknowledgement_type\
    \ | int | Type of acknowledgement **(0: none, 1: normal, 2: sticky)** |\n|action_url\
    \ | string | An optional URL to custom actions or information about this host\
    \ |\n|action_url_expanded | string | The same as action_url, but with the most\
    \ important macros expanded |\n|active_checks_enabled | int | Whether active checks\
    \ of the object are enabled **(0/1)** |\n|address | string | IP address |\n|alias\
    \ | string | An alias name for the host |\n|check_command | string | Logical command\
    \ name for active checks |\n|check_command_expanded | string | Logical command\
    \ name for active checks, with macros expanded |\n|check_flapping_recovery_notification\
    \ | int | Whether to check to send a recovery notification when flapping stops\
    \ **(0/1)** |\n|check_freshness | int | Whether freshness checks are enabled **(0/1)**\
    \ |\n|check_interval | float | Number of basic interval lengths between two scheduled\
    \ checks |\n|check_options | int | The current check option, forced, normal, freshness\
    \ **(0-2)** |\n|check_period | string | Time period in which this object will\
    \ be checked. If empty then the check will always be executed. |\n|check_type\
    \ | int | Type of check **(0: active, 1: passive)** |\n|checks_enabled | int |\
    \ Whether checks of the object are enabled **(0/1)** |\n|childs | list | A list\
    \ of all direct children of the host |\n|comments | list | A list of the ids of\
    \ all comments |\n|comments_with_extra_info | list | A list of all comments with\
    \ id, author, comment, entry type and entry time |\n|comments_with_info | list\
    \ | A list of all comments with id, author and comment |\n|contact_groups | list\
    \ | A list of all contact groups this object is in |\n|contacts | list | A list\
    \ of all contacts of this object |\n|current_attempt | int | Number of the current\
    \ check attempts |\n|current_notification_number | int | Number of the current\
    \ notification |\n|custom_variable_names | list | A list of the names of the custom\
    \ variables |\n|custom_variable_values | list | A list of the values of the custom\
    \ variables |\n|custom_variables | dict | A dictionary of the custom variables\
    \ |\n|display_name | string | Optional display name |\n|downtimes | list | A list\
    \ of the ids of all scheduled downtimes of this object |\n|downtimes_with_extra_info\
    \ | list | A list of the scheduled downtimes with id, author, comment, origin,\
    \ entry_time, start_time, end_time, fixed, duration, recurring and is_pending\
    \ |\n|downtimes_with_info | list | A list of the scheduled downtimes with id,\
    \ author and comment |\n|event_handler | string | Command used as event handler\
    \ |\n|event_handler_enabled | int | Whether event handling is enabled **(0/1)**\
    \ |\n|execution_time | float | Time the check needed for execution |\n|filename\
    \ | string | The value of the custom variable FILENAME |\n|first_notification_delay\
    \ | float | Delay before the first notification |\n|flap_detection_enabled | int\
    \ | Whether flap detection is enabled **(0/1)** |\n|flappiness | float | The current\
    \ level of flappiness, this corresponds with the recent frequency of state changes\
    \ |\n|groups | list | A list of all host groups this object is in |\n|hard_state\
    \ | int | The effective hard state of this object |\n|has_been_checked | int |\
    \ Whether a check has already been executed **(0/1)** |\n|high_flap_threshold\
    \ | float | High threshold of flap detection |\n|icon_image | string | The name\
    \ of an image file to be used in the web pages |\n|icon_image_alt | string | Alternative\
    \ text for the icon_image |\n|icon_image_expanded | string | The same as icon_image,\
    \ but with the most important macros expanded |\n|in_check_period | int | Whether\
    \ this object is currently in its check period **(0/1)** |\n|in_notification_period\
    \ | int | Whether this object is currently in its notification period **(0/1)**\
    \ |\n|in_service_period | int | Whether this object is currently in its service\
    \ period **(0/1)** |\n|initial_state | int | Initial state |\n|is_executing |\
    \ int | is there a check currently running **(0/1)** |\n|is_flapping | int | Whether\
    \ the state is flapping **(0/1)** |\n|label_names | list | A list of the names\
    \ of the labels |\n|label_source_names | list | A list of the names of the label\
    \ sources |\n|label_source_values | list | A list of the values of the label sources\
    \ |\n|label_sources | dict | A dictionary of the label sources |\n|label_values\
    \ | list | A list of the values of the labels |\n|labels | dict | A dictionary\
    \ of the labels |\n|last_check | time | Time of the last check **(Unix timestamp)**\
    \ |\n|last_hard_state | int | Last hard state |\n|last_hard_state_change | time\
    \ | Time of the last hard state change - soft or hard **(Unix timestamp)** |\n\
    |last_notification | time | Time of the last notification **(Unix timestamp)**\
    \ |\n|last_state | int | State before last state change |\n|last_state_change\
    \ | time | Time of the last state change - soft or hard **(Unix timestamp)** |\n\
    |last_time_down | time | Last time the host was DOWN **(Unix timestamp)** |\n\
    |last_time_unreachable | time | Last time the host was UNREACHABLE **(Unix timestamp)**\
    \ |\n|last_time_up | time | Last time the host was UP **(Unix timestamp)** |\n\
    |latency | float | Time difference between scheduled check time and actual check\
    \ time |\n|long_plugin_output | string | Long **(extra)** output of the last check\
    \ |\n|low_flap_threshold | float | Low threshold of flap detection |\n|max_check_attempts\
    \ | int | Maximum attempts for active checks before a hard state |\n|metrics |\
    \ list | A list of all metrics of this object that historically existed |\n|mk_inventory\
    \ | blob | The file content of the Check_MK HW/SW Inventory |\n|mk_inventory_gz\
    \ | blob | The gzipped file content of the Check_MK HW/SW Inventory |\n|mk_inventory_last\
    \ | time | The timestamp of the last Check_MK HW/SW Inventory for this host. 0\
    \ means that no inventory data is present |\n|mk_logwatch_files | list | This\
    \ list of logfiles with problems fetched via mk_logwatch |\n|modified_attributes\
    \ | int | A bitmask specifying which attributes have been modified |\n|modified_attributes_list\
    \ | list | A list of all modified attributes |\n|name | string | Host name |\n\
    |next_check | time | Scheduled time for the next check **(Unix timestamp)** |\n\
    |next_notification | time | Time of the next notification **(Unix timestamp)**\
    \ |\n|no_more_notifications | int | Whether to stop sending notifications **(0/1)**\
    \ |\n|notes | string | Optional notes for this object, with macros not expanded\
    \ |\n|notes_expanded | string | The same as notes, but with the most important\
    \ macros expanded |\n|notes_url | string | An optional URL with further information\
    \ about the object |\n|notes_url_expanded | string | Same es notes_url, but with\
    \ the most important macros expanded |\n|notification_interval | float | Interval\
    \ of periodic notification in minutes or 0 if its off |\n|notification_period\
    \ | string | Time period in which problems of this object will be notified. If\
    \ empty then notification will be always |\n|notification_postponement_reason\
    \ | string | reason for postponing the pending notification, empty if nothing\
    \ is postponed |\n|notifications_enabled | int | Whether notifications of the\
    \ host are enabled **(0/1)** |\n|num_services | int | The total number of services\
    \ of the host |\n|num_services_crit | int | The number of the host's services\
    \ with the soft state CRIT |\n|num_services_handled_problems | int | The number\
    \ of the host's services which have handled problems |\n|num_services_hard_crit\
    \ | int | The number of the host's services with the hard state CRIT |\n|num_services_hard_ok\
    \ | int | The number of the host's services with the hard state OK |\n|num_services_hard_unknown\
    \ | int | The number of the host's services with the hard state UNKNOWN |\n|num_services_hard_warn\
    \ | int | The number of the host's services with the hard state WARN |\n|num_services_ok\
    \ | int | The number of the host's services with the soft state OK |\n|num_services_pending\
    \ | int | The number of the host's services which have not been checked yet **(pending)**\
    \ |\n|num_services_unhandled_problems | int | The number of the host's services\
    \ which have unhandled problems |\n|num_services_unknown | int | The number of\
    \ the host's services with the soft state UNKNOWN |\n|num_services_warn | int\
    \ | The number of the host's services with the soft state WARN |\n|obsess_over_host\
    \ | int | The current obsess_over_host setting **(0/1)** |\n|parents | list |\
    \ A list of all direct parents of the host |\n|pending_flex_downtime | int | Number\
    \ of pending flexible downtimes |\n|percent_state_change | float | Percent state\
    \ change |\n|perf_data | string | Optional performance data of the last check\
    \ |\n|performance_data | dictdouble | Optional performance data as a dict |\n\
    |plugin_output | string | Output of the last check |\n|pnpgraph_present | int\
    \ | Whether there is a PNP4Nagios graph present for this object **(-1/0/1)** |\n\
    |previous_hard_state | int | Previous hard state **(that hard state before the\
    \ current/last hard state)** |\n|process_performance_data | int | Whether processing\
    \ of performance data is enabled **(0/1)** |\n|retry_interval | float | Number\
    \ of basic interval lengths between checks when retrying after a soft error |\n\
    |scheduled_downtime_depth | int | The number of downtimes this object is currently\
    \ in |\n|service_period | string | Time period during which the object is expected\
    \ to be available |\n|services | list | A list of all services of the host |\n\
    |services_with_fullstate | list | A list of all services including full state\
    \ information. The list of entries can grow in future versions. |\n|services_with_info\
    \ | list | A list of all services including detailed information about each service\
    \ |\n|services_with_state | list | A list of all services of the host together\
    \ with state and has_been_checked |\n|smartping_timeout | int | Maximum expected\
    \ time between two received packets in ms |\n|staleness | float | The staleness\
    \ of this object |\n|state | int | The current state of the object, for hosts:\
    \ 0/1/2 for UP/DOWN/UNREACH, for services: 0/1/2/3 for OK/WARN/CRIT/UNKNOWN |\n\
    |state_type | int | Type of the current state **(0: soft, 1: hard)** |\n|statusmap_image\
    \ | string | The name of in image file for the status map |\n|structured_status\
    \ | blob | The file content of the structured status of the Check_MK HW/SW Inventory\
    \ |\n|tag_names | list | A list of the names of the tags |\n|tag_values | list\
    \ | A list of the values of the tags |\n|tags | dict | A dictionary of the tags\
    \ |\n|total_services | int | The total number of services of the host |\n|worst_service_hard_state\
    \ | int | The worst hard state of all of the host's services **(OK <= WARN <=\
    \ UNKNOWN <= CRIT)** |\n|worst_service_state | int | The worst soft state of all\
    \ of the host's services **(OK <= WARN <= UNKNOWN <= CRIT)** |\n|x_3d | float\
    \ | 3D-Coordinates: X |\n|y_3d | float | 3D-Coordinates: Y |\n|z_3d | float |\
    \ 3D-Coordinates: Z |\n\n## Servicegroups Table\n\n### Columns:\n\n| Column name\
    \ | Type | Description |\n| - | - | - |\n|action_url | string | An optional URL\
    \ to custom notes or actions on the service group |\n|alias | string | An alias\
    \ of the servicegroup |\n|members | list | A list of all members of the service\
    \ group as host/service pairs |\n|members_with_state | list | A list of all members\
    \ of the service group with state and has_been_checked |\n|name | string | Name\
    \ of the servicegroup |\n|notes | string | Optional additional notes about the\
    \ service group |\n|notes_url | string | An optional URL to further notes on the\
    \ service group |\n|num_services | int | The total number of services in the group\
    \ |\n|num_services_crit | int | The number of services in the group that are CRIT\
    \ |\n|num_services_handled_problems | int | The number of services in the group\
    \ that have handled problems |\n|num_services_hard_crit | int | The number of\
    \ services in the group that are CRIT |\n|num_services_hard_ok | int | The number\
    \ of services in the group that are OK |\n|num_services_hard_unknown | int | The\
    \ number of services in the group that are UNKNOWN |\n|num_services_hard_warn\
    \ | int | The number of services in the group that are WARN |\n|num_services_ok\
    \ | int | The number of services in the group that are OK |\n|num_services_pending\
    \ | int | The number of services in the group that are PENDING |\n|num_services_unhandled_problems\
    \ | int | The number of services in the group that have unhandled problems |\n\
    |num_services_unknown | int | The number of services in the group that are UNKNOWN\
    \ |\n|num_services_warn | int | The number of services in the group that are WARN\
    \ |\n|worst_service_state | int | The worst soft state of all of the groups services\
    \ **(OK <= WARN <= UNKNOWN <= CRIT)** |\n\n## Services Table\n\n### Columns:\n\
    \n| Column name | Type | Description |\n| - | - | - |\n|accept_passive_checks\
    \ | int | Whether passive host checks are accepted **(0/1)** |\n|acknowledged\
    \ | int | Whether the current problem has been acknowledged **(0/1)** |\n|acknowledgement_type\
    \ | int | Type of acknowledgement **(0: none, 1: normal, 2: sticky)** |\n|action_url\
    \ | string | An optional URL to custom actions or information about this host\
    \ |\n|action_url_expanded | string | The same as action_url, but with the most\
    \ important macros expanded |\n|active_checks_enabled | int | Whether active checks\
    \ of the object are enabled **(0/1)** |\n|cache_interval | int | For checks that\
    \ base on cached agent data the interval in that this cache is recreated. 0 for\
    \ other services. |\n|cached_at | time | For checks that base on cached agent\
    \ data the time when this data was created. 0 for other services. |\n|check_command\
    \ | string | Logical command name for active checks |\n|check_command_expanded\
    \ | string | Logical command name for active checks, with macros expanded |\n\
    |check_flapping_recovery_notification | int | Whether to check to send a recovery\
    \ notification when flapping stops **(0/1)** |\n|check_freshness | int | Whether\
    \ freshness checks are enabled **(0/1)** |\n|check_interval | float | Number of\
    \ basic interval lengths between two scheduled checks |\n|check_options | int\
    \ | The current check option, forced, normal, freshness **(0-2)** |\n|check_period\
    \ | string | Time period in which this object will be checked. If empty then the\
    \ check will always be executed. |\n|check_type | int | Type of check **(0: active,\
    \ 1: passive)** |\n|checks_enabled | int | Whether checks of the object are enabled\
    \ **(0/1)** |\n|comments | list | A list of the ids of all comments |\n|comments_with_extra_info\
    \ | list | A list of all comments with id, author, comment, entry type and entry\
    \ time |\n|comments_with_info | list | A list of all comments with id, author\
    \ and comment |\n|contact_groups | list | A list of all contact groups this object\
    \ is in |\n|contacts | list | A list of all contacts of this object |\n|current_attempt\
    \ | int | Number of the current check attempts |\n|current_notification_number\
    \ | int | Number of the current notification |\n|custom_variable_names | list\
    \ | A list of the names of the custom variables |\n|custom_variable_values | list\
    \ | A list of the values of the custom variables |\n|custom_variables | dict |\
    \ A dictionary of the custom variables |\n|description | string | Service name\
    \ |\n|display_name | string | Optional display name |\n|downtimes | list | A list\
    \ of the ids of all scheduled downtimes of this object |\n|downtimes_with_extra_info\
    \ | list | A list of the scheduled downtimes with id, author, comment, origin,\
    \ entry_time, start_time, end_time, fixed, duration, recurring and is_pending\
    \ |\n|downtimes_with_info | list | A list of the scheduled downtimes with id,\
    \ author and comment |\n|event_handler | string | Command used as event handler\
    \ |\n|event_handler_enabled | int | Whether event handling is enabled **(0/1)**\
    \ |\n|execution_time | float | Time the check needed for execution |\n|first_notification_delay\
    \ | float | Delay before the first notification |\n|flap_detection_enabled | int\
    \ | Whether flap detection is enabled **(0/1)** |\n|flappiness | float | The current\
    \ level of flappiness, this corresponds with the recent frequency of state changes\
    \ |\n|groups | list | A list of all service groups this object is in |\n|hard_state\
    \ | int | The effective hard state of this object |\n|has_been_checked | int |\
    \ Whether a check has already been executed **(0/1)** |\n|high_flap_threshold\
    \ | float | High threshold of flap detection |\n|icon_image | string | The name\
    \ of an image file to be used in the web pages |\n|icon_image_alt | string | Alternative\
    \ text for the icon_image |\n|icon_image_expanded | string | The same as icon_image,\
    \ but with the most important macros expanded |\n|in_check_period | int | Whether\
    \ this object is currently in its check period **(0/1)** |\n|in_notification_period\
    \ | int | Whether this object is currently in its notification period **(0/1)**\
    \ |\n|in_passive_check_period | int | Whether this service is currently in its\
    \ passive check period **(0/1)** |\n|in_service_period | int | Whether this object\
    \ is currently in its service period **(0/1)** |\n|initial_state | int | Initial\
    \ state |\n|is_executing | int | is there a check currently running **(0/1)**\
    \ |\n|is_flapping | int | Whether the state is flapping **(0/1)** |\n|label_names\
    \ | list | A list of the names of the labels |\n|label_source_names | list | A\
    \ list of the names of the label sources |\n|label_source_values | list | A list\
    \ of the values of the label sources |\n|label_sources | dict | A dictionary of\
    \ the label sources |\n|label_values | list | A list of the values of the labels\
    \ |\n|labels | dict | A dictionary of the labels |\n|last_check | time | Time\
    \ of the last check **(Unix timestamp)** |\n|last_hard_state | int | Last hard\
    \ state |\n|last_hard_state_change | time | Time of the last hard state change\
    \ - soft or hard **(Unix timestamp)** |\n|last_notification | time | Time of the\
    \ last notification **(Unix timestamp)** |\n|last_state | int | State before last\
    \ state change |\n|last_state_change | time | Time of the last state change -\
    \ soft or hard **(Unix timestamp)** |\n|last_time_critical | time | Last time\
    \ the service was CRIT **(Unix timestamp)** |\n|last_time_ok | time | Last time\
    \ the service was OK **(Unix timestamp)** |\n|last_time_unknown | time | Last\
    \ time the service was UNKNOWN **(Unix timestamp)** |\n|last_time_warning | time\
    \ | Last time the service was WARN **(Unix timestamp)** |\n|latency | float |\
    \ Time difference between scheduled check time and actual check time |\n|long_plugin_output\
    \ | string | Long **(extra)** output of the last check |\n|low_flap_threshold\
    \ | float | Low threshold of flap detection |\n|max_check_attempts | int | Maximum\
    \ attempts for active checks before a hard state |\n|metrics | list | A list of\
    \ all metrics of this object that historically existed |\n|modified_attributes\
    \ | int | A bitmask specifying which attributes have been modified |\n|modified_attributes_list\
    \ | list | A list of all modified attributes |\n|next_check | time | Scheduled\
    \ time for the next check **(Unix timestamp)** |\n|next_notification | time |\
    \ Time of the next notification **(Unix timestamp)** |\n|no_more_notifications\
    \ | int | Whether to stop sending notifications **(0/1)** |\n|notes | string |\
    \ Optional notes for this object, with macros not expanded |\n|notes_expanded\
    \ | string | The same as notes, but with the most important macros expanded |\n\
    |notes_url | string | An optional URL with further information about the object\
    \ |\n|notes_url_expanded | string | Same es notes_url, but with the most important\
    \ macros expanded |\n|notification_interval | float | Interval of periodic notification\
    \ in minutes or 0 if its off |\n|notification_period | string | Time period in\
    \ which problems of this object will be notified. If empty then notification will\
    \ be always |\n|notification_postponement_reason | string | reason for postponing\
    \ the pending notification, empty if nothing is postponed |\n|notifications_enabled\
    \ | int | Whether notifications of the host are enabled **(0/1)** |\n|obsess_over_service\
    \ | int | The current obsess_over_service setting **(0/1)** |\n|passive_check_period\
    \ | string | Time period in which this **(passive)** service will be checked.\
    \ |\n|pending_flex_downtime | int | Number of pending flexible downtimes |\n|percent_state_change\
    \ | float | Percent state change |\n|perf_data | string | Optional performance\
    \ data of the last check |\n|performance_data | dictdouble | Optional performance\
    \ data as a dict |\n|plugin_output | string | Output of the last check |\n|pnpgraph_present\
    \ | int | Whether there is a PNP4Nagios graph present for this object **(-1/0/1)**\
    \ |\n|prediction_files | list | List currently available predictions |\n|previous_hard_state\
    \ | int | Previous hard state **(that hard state before the current/last hard\
    \ state)** |\n|process_performance_data | int | Whether processing of performance\
    \ data is enabled **(0/1)** |\n|retry_interval | float | Number of basic interval\
    \ lengths between checks when retrying after a soft error |\n|robotmk_last_error_log\
    \ | blob | The file content of the Robotmk error log |\n|robotmk_last_error_log_gz\
    \ | blob | The gzipped file content of the Robotmk error log |\n|robotmk_last_log\
    \ | blob | The file content of the Robotmk log |\n|robotmk_last_log_gz | blob\
    \ | The gzipped file content of the Robotmk log |\n|scheduled_downtime_depth |\
    \ int | The number of downtimes this object is currently in |\n|service_period\
    \ | string | Time period during which the object is expected to be available |\n\
    |staleness | float | The staleness of this object |\n|state | int | The current\
    \ state of the object, for hosts: 0/1/2 for UP/DOWN/UNREACH, for services: 0/1/2/3\
    \ for OK/WARN/CRIT/UNKNOWN |\n|state_type | int | Type of the current state **(0:\
    \ soft, 1: hard)** |\n|tag_names | list | A list of the names of the tags |\n\
    |tag_values | list | A list of the values of the tags |\n|tags | dict | A dictionary\
    \ of the tags |\n\n### Adjacent columns:\n\n| Column name | Type | Description\
    \ |\n| - | - | - |\n|host_accept_passive_checks | int | Whether passive host checks\
    \ are accepted **(0/1)** |\n|host_acknowledged | int | Whether the current problem\
    \ has been acknowledged **(0/1)** |\n|host_acknowledgement_type | int | Type of\
    \ acknowledgement **(0: none, 1: normal, 2: sticky)** |\n|host_action_url | string\
    \ | An optional URL to custom actions or information about this host |\n|host_action_url_expanded\
    \ | string | The same as action_url, but with the most important macros expanded\
    \ |\n|host_active_checks_enabled | int | Whether active checks of the object are\
    \ enabled **(0/1)** |\n|host_address | string | IP address |\n|host_alias | string\
    \ | An alias name for the host |\n|host_check_command | string | Logical command\
    \ name for active checks |\n|host_check_command_expanded | string | Logical command\
    \ name for active checks, with macros expanded |\n|host_check_flapping_recovery_notification\
    \ | int | Whether to check to send a recovery notification when flapping stops\
    \ **(0/1)** |\n|host_check_freshness | int | Whether freshness checks are enabled\
    \ **(0/1)** |\n|host_check_interval | float | Number of basic interval lengths\
    \ between two scheduled checks |\n|host_check_options | int | The current check\
    \ option, forced, normal, freshness **(0-2)** |\n|host_check_period | string |\
    \ Time period in which this object will be checked. If empty then the check will\
    \ always be executed. |\n|host_check_type | int | Type of check **(0: active,\
    \ 1: passive)** |\n|host_checks_enabled | int | Whether checks of the object are\
    \ enabled **(0/1)** |\n|host_childs | list | A list of all direct children of\
    \ the host |\n|host_comments | list | A list of the ids of all comments |\n|host_comments_with_extra_info\
    \ | list | A list of all comments with id, author, comment, entry type and entry\
    \ time |\n|host_comments_with_info | list | A list of all comments with id, author\
    \ and comment |\n|host_contact_groups | list | A list of all contact groups this\
    \ object is in |\n|host_contacts | list | A list of all contacts of this object\
    \ |\n|host_current_attempt | int | Number of the current check attempts |\n|host_current_notification_number\
    \ | int | Number of the current notification |\n|host_custom_variable_names |\
    \ list | A list of the names of the custom variables |\n|host_custom_variable_values\
    \ | list | A list of the values of the custom variables |\n|host_custom_variables\
    \ | dict | A dictionary of the custom variables |\n|host_display_name | string\
    \ | Optional display name |\n|host_downtimes | list | A list of the ids of all\
    \ scheduled downtimes of this object |\n|host_downtimes_with_extra_info | list\
    \ | A list of the scheduled downtimes with id, author, comment, origin, entry_time,\
    \ start_time, end_time, fixed, duration, recurring and is_pending |\n|host_downtimes_with_info\
    \ | list | A list of the scheduled downtimes with id, author and comment |\n|host_event_handler\
    \ | string | Command used as event handler |\n|host_event_handler_enabled | int\
    \ | Whether event handling is enabled **(0/1)** |\n|host_execution_time | float\
    \ | Time the check needed for execution |\n|host_filename | string | The value\
    \ of the custom variable FILENAME |\n|host_first_notification_delay | float |\
    \ Delay before the first notification |\n|host_flap_detection_enabled | int |\
    \ Whether flap detection is enabled **(0/1)** |\n|host_flappiness | float | The\
    \ current level of flappiness, this corresponds with the recent frequency of state\
    \ changes |\n|host_groups | list | A list of all host groups this object is in\
    \ |\n|host_hard_state | int | The effective hard state of this object |\n|host_has_been_checked\
    \ | int | Whether a check has already been executed **(0/1)** |\n|host_high_flap_threshold\
    \ | float | High threshold of flap detection |\n|host_icon_image | string | The\
    \ name of an image file to be used in the web pages |\n|host_icon_image_alt |\
    \ string | Alternative text for the icon_image |\n|host_icon_image_expanded |\
    \ string | The same as icon_image, but with the most important macros expanded\
    \ |\n|host_in_check_period | int | Whether this object is currently in its check\
    \ period **(0/1)** |\n|host_in_notification_period | int | Whether this object\
    \ is currently in its notification period **(0/1)** |\n|host_in_service_period\
    \ | int | Whether this object is currently in its service period **(0/1)** |\n\
    |host_initial_state | int | Initial state |\n|host_is_executing | int | is there\
    \ a check currently running **(0/1)** |\n|host_is_flapping | int | Whether the\
    \ state is flapping **(0/1)** |\n|host_label_names | list | A list of the names\
    \ of the labels |\n|host_label_source_names | list | A list of the names of the\
    \ label sources |\n|host_label_source_values | list | A list of the values of\
    \ the label sources |\n|host_label_sources | dict | A dictionary of the label\
    \ sources |\n|host_label_values | list | A list of the values of the labels |\n\
    |host_labels | dict | A dictionary of the labels |\n|host_last_check | time |\
    \ Time of the last check **(Unix timestamp)** |\n|host_last_hard_state | int |\
    \ Last hard state |\n|host_last_hard_state_change | time | Time of the last hard\
    \ state change - soft or hard **(Unix timestamp)** |\n|host_last_notification\
    \ | time | Time of the last notification **(Unix timestamp)** |\n|host_last_state\
    \ | int | State before last state change |\n|host_last_state_change | time | Time\
    \ of the last state change - soft or hard **(Unix timestamp)** |\n|host_last_time_down\
    \ | time | Last time the host was DOWN **(Unix timestamp)** |\n|host_last_time_unreachable\
    \ | time | Last time the host was UNREACHABLE **(Unix timestamp)** |\n|host_last_time_up\
    \ | time | Last time the host was UP **(Unix timestamp)** |\n|host_latency | float\
    \ | Time difference between scheduled check time and actual check time |\n|host_long_plugin_output\
    \ | string | Long **(extra)** output of the last check |\n|host_low_flap_threshold\
    \ | float | Low threshold of flap detection |\n|host_max_check_attempts | int\
    \ | Maximum attempts for active checks before a hard state |\n|host_metrics |\
    \ list | A list of all metrics of this object that historically existed |\n|host_mk_inventory\
    \ | blob | The file content of the Check_MK HW/SW Inventory |\n|host_mk_inventory_gz\
    \ | blob | The gzipped file content of the Check_MK HW/SW Inventory |\n|host_mk_inventory_last\
    \ | time | The timestamp of the last Check_MK HW/SW Inventory for this host. 0\
    \ means that no inventory data is present |\n|host_mk_logwatch_files | list |\
    \ This list of logfiles with problems fetched via mk_logwatch |\n|host_modified_attributes\
    \ | int | A bitmask specifying which attributes have been modified |\n|host_modified_attributes_list\
    \ | list | A list of all modified attributes |\n|host_name | string | Host name\
    \ |\n|host_next_check | time | Scheduled time for the next check **(Unix timestamp)**\
    \ |\n|host_next_notification | time | Time of the next notification **(Unix timestamp)**\
    \ |\n|host_no_more_notifications | int | Whether to stop sending notifications\
    \ **(0/1)** |\n|host_notes | string | Optional notes for this object, with macros\
    \ not expanded |\n|host_notes_expanded | string | The same as notes, but with\
    \ the most important macros expanded |\n|host_notes_url | string | An optional\
    \ URL with further information about the object |\n|host_notes_url_expanded |\
    \ string | Same es notes_url, but with the most important macros expanded |\n\
    |host_notification_interval | float | Interval of periodic notification in minutes\
    \ or 0 if its off |\n|host_notification_period | string | Time period in which\
    \ problems of this object will be notified. If empty then notification will be\
    \ always |\n|host_notification_postponement_reason | string | reason for postponing\
    \ the pending notification, empty if nothing is postponed |\n|host_notifications_enabled\
    \ | int | Whether notifications of the host are enabled **(0/1)** |\n|host_num_services\
    \ | int | The total number of services of the host |\n|host_num_services_crit\
    \ | int | The number of the host's services with the soft state CRIT |\n|host_num_services_handled_problems\
    \ | int | The number of the host's services which have handled problems |\n|host_num_services_hard_crit\
    \ | int | The number of the host's services with the hard state CRIT |\n|host_num_services_hard_ok\
    \ | int | The number of the host's services with the hard state OK |\n|host_num_services_hard_unknown\
    \ | int | The number of the host's services with the hard state UNKNOWN |\n|host_num_services_hard_warn\
    \ | int | The number of the host's services with the hard state WARN |\n|host_num_services_ok\
    \ | int | The number of the host's services with the soft state OK |\n|host_num_services_pending\
    \ | int | The number of the host's services which have not been checked yet **(pending)**\
    \ |\n|host_num_services_unhandled_problems | int | The number of the host's services\
    \ which have unhandled problems |\n|host_num_services_unknown | int | The number\
    \ of the host's services with the soft state UNKNOWN |\n|host_num_services_warn\
    \ | int | The number of the host's services with the soft state WARN |\n|host_obsess_over_host\
    \ | int | The current obsess_over_host setting **(0/1)** |\n|host_parents | list\
    \ | A list of all direct parents of the host |\n|host_pending_flex_downtime |\
    \ int | Number of pending flexible downtimes |\n|host_percent_state_change | float\
    \ | Percent state change |\n|host_perf_data | string | Optional performance data\
    \ of the last check |\n|host_performance_data | dictdouble | Optional performance\
    \ data as a dict |\n|host_plugin_output | string | Output of the last check |\n\
    |host_pnpgraph_present | int | Whether there is a PNP4Nagios graph present for\
    \ this object **(-1/0/1)** |\n|host_previous_hard_state | int | Previous hard\
    \ state **(that hard state before the current/last hard state)** |\n|host_process_performance_data\
    \ | int | Whether processing of performance data is enabled **(0/1)** |\n|host_retry_interval\
    \ | float | Number of basic interval lengths between checks when retrying after\
    \ a soft error |\n|host_scheduled_downtime_depth | int | The number of downtimes\
    \ this object is currently in |\n|host_service_period | string | Time period during\
    \ which the object is expected to be available |\n|host_services | list | A list\
    \ of all services of the host |\n|host_services_with_fullstate | list | A list\
    \ of all services including full state information. The list of entries can grow\
    \ in future versions. |\n|host_services_with_info | list | A list of all services\
    \ including detailed information about each service |\n|host_services_with_state\
    \ | list | A list of all services of the host together with state and has_been_checked\
    \ |\n|host_smartping_timeout | int | Maximum expected time between two received\
    \ packets in ms |\n|host_staleness | float | The staleness of this object |\n\
    |host_state | int | The current state of the object, for hosts: 0/1/2 for UP/DOWN/UNREACH,\
    \ for services: 0/1/2/3 for OK/WARN/CRIT/UNKNOWN |\n|host_state_type | int | Type\
    \ of the current state **(0: soft, 1: hard)** |\n|host_statusmap_image | string\
    \ | The name of in image file for the status map |\n|host_structured_status |\
    \ blob | The file content of the structured status of the Check_MK HW/SW Inventory\
    \ |\n|host_tag_names | list | A list of the names of the tags |\n|host_tag_values\
    \ | list | A list of the values of the tags |\n|host_tags | dict | A dictionary\
    \ of the tags |\n|host_total_services | int | The total number of services of\
    \ the host |\n|host_worst_service_hard_state | int | The worst hard state of all\
    \ of the host's services **(OK <= WARN <= UNKNOWN <= CRIT)** |\n|host_worst_service_state\
    \ | int | The worst soft state of all of the host's services **(OK <= WARN <=\
    \ UNKNOWN <= CRIT)** |\n|host_x_3d | float | 3D-Coordinates: X |\n|host_y_3d |\
    \ float | 3D-Coordinates: Y |\n|host_z_3d | float | 3D-Coordinates: Z |\n\n##\
    \ Comments Table\n\n### Columns:\n\n| Column name | Type | Description |\n| -\
    \ | - | - |\n|author | string | The contact that entered the comment |\n|comment\
    \ | string | A comment text |\n|entry_time | time | The time the entry was made\
    \ as UNIX timestamp |\n|entry_type | int | The type of the comment: 1 is user,\
    \ 2 is downtime, 3 is flapping and 4 is acknowledgement |\n|expire_time | time\
    \ | Time of expiry of this comment as a UNIX timestamp |\n|expires | int | Whether\
    \ this comment expires |\n|id | int | The id of the comment |\n|is_service | int\
    \ | 0, if this entry is for a host, 1 if it is for a service |\n|persistent |\
    \ int | Whether this comment is persistent **(0/1)** |\n|source | int | The source\
    \ of the comment **(0 is internal and 1 is external)** |\n|type | int | The type\
    \ of the comment: 1 is host, 2 is service |\n\n### Adjacent columns:\n\n| Column\
    \ name | Type | Description |\n| - | - | - |\n|host_accept_passive_checks | int\
    \ | Whether passive host checks are accepted **(0/1)** |\n|host_acknowledged |\
    \ int | Whether the current problem has been acknowledged **(0/1)** |\n|host_acknowledgement_type\
    \ | int | Type of acknowledgement **(0: none, 1: normal, 2: sticky)** |\n|host_action_url\
    \ | string | An optional URL to custom actions or information about this host\
    \ |\n|host_action_url_expanded | string | The same as action_url, but with the\
    \ most important macros expanded |\n|host_active_checks_enabled | int | Whether\
    \ active checks of the object are enabled **(0/1)** |\n|host_address | string\
    \ | IP address |\n|host_alias | string | An alias name for the host |\n|host_check_command\
    \ | string | Logical command name for active checks |\n|host_check_command_expanded\
    \ | string | Logical command name for active checks, with macros expanded |\n\
    |host_check_flapping_recovery_notification | int | Whether to check to send a\
    \ recovery notification when flapping stops **(0/1)** |\n|host_check_freshness\
    \ | int | Whether freshness checks are enabled **(0/1)** |\n|host_check_interval\
    \ | float | Number of basic interval lengths between two scheduled checks |\n\
    |host_check_options | int | The current check option, forced, normal, freshness\
    \ **(0-2)** |\n|host_check_period | string | Time period in which this object\
    \ will be checked. If empty then the check will always be executed. |\n|host_check_type\
    \ | int | Type of check **(0: active, 1: passive)** |\n|host_checks_enabled |\
    \ int | Whether checks of the object are enabled **(0/1)** |\n|host_childs | list\
    \ | A list of all direct children of the host |\n|host_comments | list | A list\
    \ of the ids of all comments |\n|host_comments_with_extra_info | list | A list\
    \ of all comments with id, author, comment, entry type and entry time |\n|host_comments_with_info\
    \ | list | A list of all comments with id, author and comment |\n|host_contact_groups\
    \ | list | A list of all contact groups this object is in |\n|host_contacts |\
    \ list | A list of all contacts of this object |\n|host_current_attempt | int\
    \ | Number of the current check attempts |\n|host_current_notification_number\
    \ | int | Number of the current notification |\n|host_custom_variable_names |\
    \ list | A list of the names of the custom variables |\n|host_custom_variable_values\
    \ | list | A list of the values of the custom variables |\n|host_custom_variables\
    \ | dict | A dictionary of the custom variables |\n|host_display_name | string\
    \ | Optional display name |\n|host_downtimes | list | A list of the ids of all\
    \ scheduled downtimes of this object |\n|host_downtimes_with_extra_info | list\
    \ | A list of the scheduled downtimes with id, author, comment, origin, entry_time,\
    \ start_time, end_time, fixed, duration, recurring and is_pending |\n|host_downtimes_with_info\
    \ | list | A list of the scheduled downtimes with id, author and comment |\n|host_event_handler\
    \ | string | Command used as event handler |\n|host_event_handler_enabled | int\
    \ | Whether event handling is enabled **(0/1)** |\n|host_execution_time | float\
    \ | Time the check needed for execution |\n|host_filename | string | The value\
    \ of the custom variable FILENAME |\n|host_first_notification_delay | float |\
    \ Delay before the first notification |\n|host_flap_detection_enabled | int |\
    \ Whether flap detection is enabled **(0/1)** |\n|host_flappiness | float | The\
    \ current level of flappiness, this corresponds with the recent frequency of state\
    \ changes |\n|host_groups | list | A list of all host groups this object is in\
    \ |\n|host_hard_state | int | The effective hard state of this object |\n|host_has_been_checked\
    \ | int | Whether a check has already been executed **(0/1)** |\n|host_high_flap_threshold\
    \ | float | High threshold of flap detection |\n|host_icon_image | string | The\
    \ name of an image file to be used in the web pages |\n|host_icon_image_alt |\
    \ string | Alternative text for the icon_image |\n|host_icon_image_expanded |\
    \ string | The same as icon_image, but with the most important macros expanded\
    \ |\n|host_in_check_period | int | Whether this object is currently in its check\
    \ period **(0/1)** |\n|host_in_notification_period | int | Whether this object\
    \ is currently in its notification period **(0/1)** |\n|host_in_service_period\
    \ | int | Whether this object is currently in its service period **(0/1)** |\n\
    |host_initial_state | int | Initial state |\n|host_is_executing | int | is there\
    \ a check currently running **(0/1)** |\n|host_is_flapping | int | Whether the\
    \ state is flapping **(0/1)** |\n|host_label_names | list | A list of the names\
    \ of the labels |\n|host_label_source_names | list | A list of the names of the\
    \ label sources |\n|host_label_source_values | list | A list of the values of\
    \ the label sources |\n|host_label_sources | dict | A dictionary of the label\
    \ sources |\n|host_label_values | list | A list of the values of the labels |\n\
    |host_labels | dict | A dictionary of the labels |\n|host_last_check | time |\
    \ Time of the last check **(Unix timestamp)** |\n|host_last_hard_state | int |\
    \ Last hard state |\n|host_last_hard_state_change | time | Time of the last hard\
    \ state change - soft or hard **(Unix timestamp)** |\n|host_last_notification\
    \ | time | Time of the last notification **(Unix timestamp)** |\n|host_last_state\
    \ | int | State before last state change |\n|host_last_state_change | time | Time\
    \ of the last state change - soft or hard **(Unix timestamp)** |\n|host_last_time_down\
    \ | time | Last time the host was DOWN **(Unix timestamp)** |\n|host_last_time_unreachable\
    \ | time | Last time the host was UNREACHABLE **(Unix timestamp)** |\n|host_last_time_up\
    \ | time | Last time the host was UP **(Unix timestamp)** |\n|host_latency | float\
    \ | Time difference between scheduled check time and actual check time |\n|host_long_plugin_output\
    \ | string | Long **(extra)** output of the last check |\n|host_low_flap_threshold\
    \ | float | Low threshold of flap detection |\n|host_max_check_attempts | int\
    \ | Maximum attempts for active checks before a hard state |\n|host_metrics |\
    \ list | A list of all metrics of this object that historically existed |\n|host_mk_inventory\
    \ | blob | The file content of the Check_MK HW/SW Inventory |\n|host_mk_inventory_gz\
    \ | blob | The gzipped file content of the Check_MK HW/SW Inventory |\n|host_mk_inventory_last\
    \ | time | The timestamp of the last Check_MK HW/SW Inventory for this host. 0\
    \ means that no inventory data is present |\n|host_mk_logwatch_files | list |\
    \ This list of logfiles with problems fetched via mk_logwatch |\n|host_modified_attributes\
    \ | int | A bitmask specifying which attributes have been modified |\n|host_modified_attributes_list\
    \ | list | A list of all modified attributes |\n|host_name | string | Host name\
    \ |\n|host_next_check | time | Scheduled time for the next check **(Unix timestamp)**\
    \ |\n|host_next_notification | time | Time of the next notification **(Unix timestamp)**\
    \ |\n|host_no_more_notifications | int | Whether to stop sending notifications\
    \ **(0/1)** |\n|host_notes | string | Optional notes for this object, with macros\
    \ not expanded |\n|host_notes_expanded | string | The same as notes, but with\
    \ the most important macros expanded |\n|host_notes_url | string | An optional\
    \ URL with further information about the object |\n|host_notes_url_expanded |\
    \ string | Same es notes_url, but with the most important macros expanded |\n\
    |host_notification_interval | float | Interval of periodic notification in minutes\
    \ or 0 if its off |\n|host_notification_period | string | Time period in which\
    \ problems of this object will be notified. If empty then notification will be\
    \ always |\n|host_notification_postponement_reason | string | reason for postponing\
    \ the pending notification, empty if nothing is postponed |\n|host_notifications_enabled\
    \ | int | Whether notifications of the host are enabled **(0/1)** |\n|host_num_services\
    \ | int | The total number of services of the host |\n|host_num_services_crit\
    \ | int | The number of the host's services with the soft state CRIT |\n|host_num_services_handled_problems\
    \ | int | The number of the host's services which have handled problems |\n|host_num_services_hard_crit\
    \ | int | The number of the host's services with the hard state CRIT |\n|host_num_services_hard_ok\
    \ | int | The number of the host's services with the hard state OK |\n|host_num_services_hard_unknown\
    \ | int | The number of the host's services with the hard state UNKNOWN |\n|host_num_services_hard_warn\
    \ | int | The number of the host's services with the hard state WARN |\n|host_num_services_ok\
    \ | int | The number of the host's services with the soft state OK |\n|host_num_services_pending\
    \ | int | The number of the host's services which have not been checked yet **(pending)**\
    \ |\n|host_num_services_unhandled_problems | int | The number of the host's services\
    \ which have unhandled problems |\n|host_num_services_unknown | int | The number\
    \ of the host's services with the soft state UNKNOWN |\n|host_num_services_warn\
    \ | int | The number of the host's services with the soft state WARN |\n|host_obsess_over_host\
    \ | int | The current obsess_over_host setting **(0/1)** |\n|host_parents | list\
    \ | A list of all direct parents of the host |\n|host_pending_flex_downtime |\
    \ int | Number of pending flexible downtimes |\n|host_percent_state_change | float\
    \ | Percent state change |\n|host_perf_data | string | Optional performance data\
    \ of the last check |\n|host_performance_data | dictdouble | Optional performance\
    \ data as a dict |\n|host_plugin_output | string | Output of the last check |\n\
    |host_pnpgraph_present | int | Whether there is a PNP4Nagios graph present for\
    \ this object **(-1/0/1)** |\n|host_previous_hard_state | int | Previous hard\
    \ state **(that hard state before the current/last hard state)** |\n|host_process_performance_data\
    \ | int | Whether processing of performance data is enabled **(0/1)** |\n|host_retry_interval\
    \ | float | Number of basic interval lengths between checks when retrying after\
    \ a soft error |\n|host_scheduled_downtime_depth | int | The number of downtimes\
    \ this object is currently in |\n|host_service_period | string | Time period during\
    \ which the object is expected to be available |\n|host_services | list | A list\
    \ of all services of the host |\n|host_services_with_fullstate | list | A list\
    \ of all services including full state information. The list of entries can grow\
    \ in future versions. |\n|host_services_with_info | list | A list of all services\
    \ including detailed information about each service |\n|host_services_with_state\
    \ | list | A list of all services of the host together with state and has_been_checked\
    \ |\n|host_smartping_timeout | int | Maximum expected time between two received\
    \ packets in ms |\n|host_staleness | float | The staleness of this object |\n\
    |host_state | int | The current state of the object, for hosts: 0/1/2 for UP/DOWN/UNREACH,\
    \ for services: 0/1/2/3 for OK/WARN/CRIT/UNKNOWN |\n|host_state_type | int | Type\
    \ of the current state **(0: soft, 1: hard)** |\n|host_statusmap_image | string\
    \ | The name of in image file for the status map |\n|host_structured_status |\
    \ blob | The file content of the structured status of the Check_MK HW/SW Inventory\
    \ |\n|host_tag_names | list | A list of the names of the tags |\n|host_tag_values\
    \ | list | A list of the values of the tags |\n|host_tags | dict | A dictionary\
    \ of the tags |\n|host_total_services | int | The total number of services of\
    \ the host |\n|host_worst_service_hard_state | int | The worst hard state of all\
    \ of the host's services **(OK <= WARN <= UNKNOWN <= CRIT)** |\n|host_worst_service_state\
    \ | int | The worst soft state of all of the host's services **(OK <= WARN <=\
    \ UNKNOWN <= CRIT)** |\n|host_x_3d | float | 3D-Coordinates: X |\n|host_y_3d |\
    \ float | 3D-Coordinates: Y |\n|host_z_3d | float | 3D-Coordinates: Z |\n|service_accept_passive_checks\
    \ | int | Whether passive host checks are accepted **(0/1)** |\n|service_acknowledged\
    \ | int | Whether the current problem has been acknowledged **(0/1)** |\n|service_acknowledgement_type\
    \ | int | Type of acknowledgement **(0: none, 1: normal, 2: sticky)** |\n|service_action_url\
    \ | string | An optional URL to custom actions or information about this host\
    \ |\n|service_action_url_expanded | string | The same as action_url, but with\
    \ the most important macros expanded |\n|service_active_checks_enabled | int |\
    \ Whether active checks of the object are enabled **(0/1)** |\n|service_cache_interval\
    \ | int | For checks that base on cached agent data the interval in that this\
    \ cache is recreated. 0 for other services. |\n|service_cached_at | time | For\
    \ checks that base on cached agent data the time when this data was created. 0\
    \ for other services. |\n|service_check_command | string | Logical command name\
    \ for active checks |\n|service_check_command_expanded | string | Logical command\
    \ name for active checks, with macros expanded |\n|service_check_flapping_recovery_notification\
    \ | int | Whether to check to send a recovery notification when flapping stops\
    \ **(0/1)** |\n|service_check_freshness | int | Whether freshness checks are enabled\
    \ **(0/1)** |\n|service_check_interval | float | Number of basic interval lengths\
    \ between two scheduled checks |\n|service_check_options | int | The current check\
    \ option, forced, normal, freshness **(0-2)** |\n|service_check_period | string\
    \ | Time period in which this object will be checked. If empty then the check\
    \ will always be executed. |\n|service_check_type | int | Type of check **(0:\
    \ active, 1: passive)** |\n|service_checks_enabled | int | Whether checks of the\
    \ object are enabled **(0/1)** |\n|service_comments | list | A list of the ids\
    \ of all comments |\n|service_comments_with_extra_info | list | A list of all\
    \ comments with id, author, comment, entry type and entry time |\n|service_comments_with_info\
    \ | list | A list of all comments with id, author and comment |\n|service_contact_groups\
    \ | list | A list of all contact groups this object is in |\n|service_contacts\
    \ | list | A list of all contacts of this object |\n|service_current_attempt |\
    \ int | Number of the current check attempts |\n|service_current_notification_number\
    \ | int | Number of the current notification |\n|service_custom_variable_names\
    \ | list | A list of the names of the custom variables |\n|service_custom_variable_values\
    \ | list | A list of the values of the custom variables |\n|service_custom_variables\
    \ | dict | A dictionary of the custom variables |\n|service_description | string\
    \ | Service name |\n|service_display_name | string | Optional display name |\n\
    |service_downtimes | list | A list of the ids of all scheduled downtimes of this\
    \ object |\n|service_downtimes_with_extra_info | list | A list of the scheduled\
    \ downtimes with id, author, comment, origin, entry_time, start_time, end_time,\
    \ fixed, duration, recurring and is_pending |\n|service_downtimes_with_info |\
    \ list | A list of the scheduled downtimes with id, author and comment |\n|service_event_handler\
    \ | string | Command used as event handler |\n|service_event_handler_enabled |\
    \ int | Whether event handling is enabled **(0/1)** |\n|service_execution_time\
    \ | float | Time the check needed for execution |\n|service_first_notification_delay\
    \ | float | Delay before the first notification |\n|service_flap_detection_enabled\
    \ | int | Whether flap detection is enabled **(0/1)** |\n|service_flappiness |\
    \ float | The current level of flappiness, this corresponds with the recent frequency\
    \ of state changes |\n|service_groups | list | A list of all service groups this\
    \ object is in |\n|service_hard_state | int | The effective hard state of this\
    \ object |\n|service_has_been_checked | int | Whether a check has already been\
    \ executed **(0/1)** |\n|service_high_flap_threshold | float | High threshold\
    \ of flap detection |\n|service_icon_image | string | The name of an image file\
    \ to be used in the web pages |\n|service_icon_image_alt | string | Alternative\
    \ text for the icon_image |\n|service_icon_image_expanded | string | The same\
    \ as icon_image, but with the most important macros expanded |\n|service_in_check_period\
    \ | int | Whether this object is currently in its check period **(0/1)** |\n|service_in_notification_period\
    \ | int | Whether this object is currently in its notification period **(0/1)**\
    \ |\n|service_in_passive_check_period | int | Whether this service is currently\
    \ in its passive check period **(0/1)** |\n|service_in_service_period | int |\
    \ Whether this object is currently in its service period **(0/1)** |\n|service_initial_state\
    \ | int | Initial state |\n|service_is_executing | int | is there a check currently\
    \ running **(0/1)** |\n|service_is_flapping | int | Whether the state is flapping\
    \ **(0/1)** |\n|service_label_names | list | A list of the names of the labels\
    \ |\n|service_label_source_names | list | A list of the names of the label sources\
    \ |\n|service_label_source_values | list | A list of the values of the label sources\
    \ |\n|service_label_sources | dict | A dictionary of the label sources |\n|service_label_values\
    \ | list | A list of the values of the labels |\n|service_labels | dict | A dictionary\
    \ of the labels |\n|service_last_check | time | Time of the last check **(Unix\
    \ timestamp)** |\n|service_last_hard_state | int | Last hard state |\n|service_last_hard_state_change\
    \ | time | Time of the last hard state change - soft or hard **(Unix timestamp)**\
    \ |\n|service_last_notification | time | Time of the last notification **(Unix\
    \ timestamp)** |\n|service_last_state | int | State before last state change |\n\
    |service_last_state_change | time | Time of the last state change - soft or hard\
    \ **(Unix timestamp)** |\n|service_last_time_critical | time | Last time the service\
    \ was CRIT **(Unix timestamp)** |\n|service_last_time_ok | time | Last time the\
    \ service was OK **(Unix timestamp)** |\n|service_last_time_unknown | time | Last\
    \ time the service was UNKNOWN **(Unix timestamp)** |\n|service_last_time_warning\
    \ | time | Last time the service was WARN **(Unix timestamp)** |\n|service_latency\
    \ | float | Time difference between scheduled check time and actual check time\
    \ |\n|service_long_plugin_output | string | Long **(extra)** output of the last\
    \ check |\n|service_low_flap_threshold | float | Low threshold of flap detection\
    \ |\n|service_max_check_attempts | int | Maximum attempts for active checks before\
    \ a hard state |\n|service_metrics | list | A list of all metrics of this object\
    \ that historically existed |\n|service_modified_attributes | int | A bitmask\
    \ specifying which attributes have been modified |\n|service_modified_attributes_list\
    \ | list | A list of all modified attributes |\n|service_next_check | time | Scheduled\
    \ time for the next check **(Unix timestamp)** |\n|service_next_notification |\
    \ time | Time of the next notification **(Unix timestamp)** |\n|service_no_more_notifications\
    \ | int | Whether to stop sending notifications **(0/1)** |\n|service_notes |\
    \ string | Optional notes for this object, with macros not expanded |\n|service_notes_expanded\
    \ | string | The same as notes, but with the most important macros expanded |\n\
    |service_notes_url | string | An optional URL with further information about the\
    \ object |\n|service_notes_url_expanded | string | Same es notes_url, but with\
    \ the most important macros expanded |\n|service_notification_interval | float\
    \ | Interval of periodic notification in minutes or 0 if its off |\n|service_notification_period\
    \ | string | Time period in which problems of this object will be notified. If\
    \ empty then notification will be always |\n|service_notification_postponement_reason\
    \ | string | reason for postponing the pending notification, empty if nothing\
    \ is postponed |\n|service_notifications_enabled | int | Whether notifications\
    \ of the host are enabled **(0/1)** |\n|service_obsess_over_service | int | The\
    \ current obsess_over_service setting **(0/1)** |\n|service_passive_check_period\
    \ | string | Time period in which this **(passive)** service will be checked.\
    \ |\n|service_pending_flex_downtime | int | Number of pending flexible downtimes\
    \ |\n|service_percent_state_change | float | Percent state change |\n|service_perf_data\
    \ | string | Optional performance data of the last check |\n|service_performance_data\
    \ | dictdouble | Optional performance data as a dict |\n|service_plugin_output\
    \ | string | Output of the last check |\n|service_pnpgraph_present | int | Whether\
    \ there is a PNP4Nagios graph present for this object **(-1/0/1)** |\n|service_prediction_files\
    \ | list | List currently available predictions |\n|service_previous_hard_state\
    \ | int | Previous hard state **(that hard state before the current/last hard\
    \ state)** |\n|service_process_performance_data | int | Whether processing of\
    \ performance data is enabled **(0/1)** |\n|service_retry_interval | float | Number\
    \ of basic interval lengths between checks when retrying after a soft error |\n\
    |service_robotmk_last_error_log | blob | The file content of the Robotmk error\
    \ log |\n|service_robotmk_last_error_log_gz | blob | The gzipped file content\
    \ of the Robotmk error log |\n|service_robotmk_last_log | blob | The file content\
    \ of the Robotmk log |\n|service_robotmk_last_log_gz | blob | The gzipped file\
    \ content of the Robotmk log |\n|service_scheduled_downtime_depth | int | The\
    \ number of downtimes this object is currently in |\n|service_service_period |\
    \ string | Time period during which the object is expected to be available |\n\
    |service_staleness | float | The staleness of this object |\n|service_state |\
    \ int | The current state of the object, for hosts: 0/1/2 for UP/DOWN/UNREACH,\
    \ for services: 0/1/2/3 for OK/WARN/CRIT/UNKNOWN |\n|service_state_type | int\
    \ | Type of the current state **(0: soft, 1: hard)** |\n|service_tag_names | list\
    \ | A list of the names of the tags |\n|service_tag_values | list | A list of\
    \ the values of the tags |\n|service_tags | dict | A dictionary of the tags |\n\
    \n## Eventconsoleevents Table\n\n### Columns:\n\n| Column name | Type | Description\
    \ |\n| - | - | - |\n|event_application | string | Syslog tag/application |\n|event_comment\
    \ | string | Event comment |\n|event_contact | string | Contact information |\n\
    |event_contact_groups | list | Contact groups |\n|event_contact_groups_precedence\
    \ | string | Whether or not the host- or rule groups have precedence |\n|event_core_host\
    \ | string | The canonical name of the host for this event as known in the monitoring\
    \ |\n|event_count | int | The number of occurrences of this event within period\
    \ |\n|event_facility | int | Syslog facility |\n|event_first | time | Time of\
    \ the first occurrence of the event **(Unix timestamp)** |\n|event_host | string\
    \ | The host name for this event, potentially rewritten |\n|event_host_in_downtime\
    \ | int | Whether or not the host **(if found in core)** was in downtime during\
    \ event creation **(0/1)** |\n|event_id | int | The unique ID for this event |\n\
    |event_ipaddress | string | The IP address where the event originated |\n|event_last\
    \ | time | Time of the last occurrence of this event **(Unix timestamp)** |\n\
    |event_match_groups | list | Text groups from regular expression match |\n|event_match_groups_syslog_application\
    \ | list | The syslog application match groups |\n|event_orig_host | string |\
    \ The original host name for this event |\n|event_owner | string | The owner of\
    \ the event |\n|event_phase | string | The phase the event is currently in **(one\
    \ of open/closed/delayed/counting/ack)** |\n|event_pid | int | The process ID\
    \ of the originating process |\n|event_priority | int | Syslog priority |\n|event_rule_id\
    \ | string | The ID of the rule |\n|event_sl | int | The service level for this\
    \ event |\n|event_state | int | The state of the event **(0/1/2/3)** |\n|event_text\
    \ | string | The textual description of the event |\n\n### Adjacent columns:\n\
    \n| Column name | Type | Description |\n| - | - | - |\n|host_accept_passive_checks\
    \ | int | Whether passive host checks are accepted **(0/1)** |\n|host_acknowledged\
    \ | int | Whether the current problem has been acknowledged **(0/1)** |\n|host_acknowledgement_type\
    \ | int | Type of acknowledgement **(0: none, 1: normal, 2: sticky)** |\n|host_action_url\
    \ | string | An optional URL to custom actions or information about this host\
    \ |\n|host_action_url_expanded | string | The same as action_url, but with the\
    \ most important macros expanded |\n|host_active_checks_enabled | int | Whether\
    \ active checks of the object are enabled **(0/1)** |\n|host_address | string\
    \ | IP address |\n|host_alias | string | An alias name for the host |\n|host_check_command\
    \ | string | Logical command name for active checks |\n|host_check_command_expanded\
    \ | string | Logical command name for active checks, with macros expanded |\n\
    |host_check_flapping_recovery_notification | int | Whether to check to send a\
    \ recovery notification when flapping stops **(0/1)** |\n|host_check_freshness\
    \ | int | Whether freshness checks are enabled **(0/1)** |\n|host_check_interval\
    \ | float | Number of basic interval lengths between two scheduled checks |\n\
    |host_check_options | int | The current check option, forced, normal, freshness\
    \ **(0-2)** |\n|host_check_period | string | Time period in which this object\
    \ will be checked. If empty then the check will always be executed. |\n|host_check_type\
    \ | int | Type of check **(0: active, 1: passive)** |\n|host_checks_enabled |\
    \ int | Whether checks of the object are enabled **(0/1)** |\n|host_childs | list\
    \ | A list of all direct children of the host |\n|host_comments | list | A list\
    \ of the ids of all comments |\n|host_comments_with_extra_info | list | A list\
    \ of all comments with id, author, comment, entry type and entry time |\n|host_comments_with_info\
    \ | list | A list of all comments with id, author and comment |\n|host_contact_groups\
    \ | list | A list of all contact groups this object is in |\n|host_contacts |\
    \ list | A list of all contacts of this object |\n|host_current_attempt | int\
    \ | Number of the current check attempts |\n|host_current_notification_number\
    \ | int | Number of the current notification |\n|host_custom_variable_names |\
    \ list | A list of the names of the custom variables |\n|host_custom_variable_values\
    \ | list | A list of the values of the custom variables |\n|host_custom_variables\
    \ | dict | A dictionary of the custom variables |\n|host_display_name | string\
    \ | Optional display name |\n|host_downtimes | list | A list of the ids of all\
    \ scheduled downtimes of this object |\n|host_downtimes_with_extra_info | list\
    \ | A list of the scheduled downtimes with id, author, comment, origin, entry_time,\
    \ start_time, end_time, fixed, duration, recurring and is_pending |\n|host_downtimes_with_info\
    \ | list | A list of the scheduled downtimes with id, author and comment |\n|host_event_handler\
    \ | string | Command used as event handler |\n|host_event_handler_enabled | int\
    \ | Whether event handling is enabled **(0/1)** |\n|host_execution_time | float\
    \ | Time the check needed for execution |\n|host_filename | string | The value\
    \ of the custom variable FILENAME |\n|host_first_notification_delay | float |\
    \ Delay before the first notification |\n|host_flap_detection_enabled | int |\
    \ Whether flap detection is enabled **(0/1)** |\n|host_flappiness | float | The\
    \ current level of flappiness, this corresponds with the recent frequency of state\
    \ changes |\n|host_groups | list | A list of all host groups this object is in\
    \ |\n|host_hard_state | int | The effective hard state of this object |\n|host_has_been_checked\
    \ | int | Whether a check has already been executed **(0/1)** |\n|host_high_flap_threshold\
    \ | float | High threshold of flap detection |\n|host_icon_image | string | The\
    \ name of an image file to be used in the web pages |\n|host_icon_image_alt |\
    \ string | Alternative text for the icon_image |\n|host_icon_image_expanded |\
    \ string | The same as icon_image, but with the most important macros expanded\
    \ |\n|host_in_check_period | int | Whether this object is currently in its check\
    \ period **(0/1)** |\n|host_in_notification_period | int | Whether this object\
    \ is currently in its notification period **(0/1)** |\n|host_in_service_period\
    \ | int | Whether this object is currently in its service period **(0/1)** |\n\
    |host_initial_state | int | Initial state |\n|host_is_executing | int | is there\
    \ a check currently running **(0/1)** |\n|host_is_flapping | int | Whether the\
    \ state is flapping **(0/1)** |\n|host_label_names | list | A list of the names\
    \ of the labels |\n|host_label_source_names | list | A list of the names of the\
    \ label sources |\n|host_label_source_values | list | A list of the values of\
    \ the label sources |\n|host_label_sources | dict | A dictionary of the label\
    \ sources |\n|host_label_values | list | A list of the values of the labels |\n\
    |host_labels | dict | A dictionary of the labels |\n|host_last_check | time |\
    \ Time of the last check **(Unix timestamp)** |\n|host_last_hard_state | int |\
    \ Last hard state |\n|host_last_hard_state_change | time | Time of the last hard\
    \ state change - soft or hard **(Unix timestamp)** |\n|host_last_notification\
    \ | time | Time of the last notification **(Unix timestamp)** |\n|host_last_state\
    \ | int | State before last state change |\n|host_last_state_change | time | Time\
    \ of the last state change - soft or hard **(Unix timestamp)** |\n|host_last_time_down\
    \ | time | Last time the host was DOWN **(Unix timestamp)** |\n|host_last_time_unreachable\
    \ | time | Last time the host was UNREACHABLE **(Unix timestamp)** |\n|host_last_time_up\
    \ | time | Last time the host was UP **(Unix timestamp)** |\n|host_latency | float\
    \ | Time difference between scheduled check time and actual check time |\n|host_long_plugin_output\
    \ | string | Long **(extra)** output of the last check |\n|host_low_flap_threshold\
    \ | float | Low threshold of flap detection |\n|host_max_check_attempts | int\
    \ | Maximum attempts for active checks before a hard state |\n|host_metrics |\
    \ list | A list of all metrics of this object that historically existed |\n|host_mk_inventory\
    \ | blob | The file content of the Check_MK HW/SW Inventory |\n|host_mk_inventory_gz\
    \ | blob | The gzipped file content of the Check_MK HW/SW Inventory |\n|host_mk_inventory_last\
    \ | time | The timestamp of the last Check_MK HW/SW Inventory for this host. 0\
    \ means that no inventory data is present |\n|host_mk_logwatch_files | list |\
    \ This list of logfiles with problems fetched via mk_logwatch |\n|host_modified_attributes\
    \ | int | A bitmask specifying which attributes have been modified |\n|host_modified_attributes_list\
    \ | list | A list of all modified attributes |\n|host_name | string | Host name\
    \ |\n|host_next_check | time | Scheduled time for the next check **(Unix timestamp)**\
    \ |\n|host_next_notification | time | Time of the next notification **(Unix timestamp)**\
    \ |\n|host_no_more_notifications | int | Whether to stop sending notifications\
    \ **(0/1)** |\n|host_notes | string | Optional notes for this object, with macros\
    \ not expanded |\n|host_notes_expanded | string | The same as notes, but with\
    \ the most important macros expanded |\n|host_notes_url | string | An optional\
    \ URL with further information about the object |\n|host_notes_url_expanded |\
    \ string | Same es notes_url, but with the most important macros expanded |\n\
    |host_notification_interval | float | Interval of periodic notification in minutes\
    \ or 0 if its off |\n|host_notification_period | string | Time period in which\
    \ problems of this object will be notified. If empty then notification will be\
    \ always |\n|host_notification_postponement_reason | string | reason for postponing\
    \ the pending notification, empty if nothing is postponed |\n|host_notifications_enabled\
    \ | int | Whether notifications of the host are enabled **(0/1)** |\n|host_num_services\
    \ | int | The total number of services of the host |\n|host_num_services_crit\
    \ | int | The number of the host's services with the soft state CRIT |\n|host_num_services_handled_problems\
    \ | int | The number of the host's services which have handled problems |\n|host_num_services_hard_crit\
    \ | int | The number of the host's services with the hard state CRIT |\n|host_num_services_hard_ok\
    \ | int | The number of the host's services with the hard state OK |\n|host_num_services_hard_unknown\
    \ | int | The number of the host's services with the hard state UNKNOWN |\n|host_num_services_hard_warn\
    \ | int | The number of the host's services with the hard state WARN |\n|host_num_services_ok\
    \ | int | The number of the host's services with the soft state OK |\n|host_num_services_pending\
    \ | int | The number of the host's services which have not been checked yet **(pending)**\
    \ |\n|host_num_services_unhandled_problems | int | The number of the host's services\
    \ which have unhandled problems |\n|host_num_services_unknown | int | The number\
    \ of the host's services with the soft state UNKNOWN |\n|host_num_services_warn\
    \ | int | The number of the host's services with the soft state WARN |\n|host_obsess_over_host\
    \ | int | The current obsess_over_host setting **(0/1)** |\n|host_parents | list\
    \ | A list of all direct parents of the host |\n|host_pending_flex_downtime |\
    \ int | Number of pending flexible downtimes |\n|host_percent_state_change | float\
    \ | Percent state change |\n|host_perf_data | string | Optional performance data\
    \ of the last check |\n|host_performance_data | dictdouble | Optional performance\
    \ data as a dict |\n|host_plugin_output | string | Output of the last check |\n\
    |host_pnpgraph_present | int | Whether there is a PNP4Nagios graph present for\
    \ this object **(-1/0/1)** |\n|host_previous_hard_state | int | Previous hard\
    \ state **(that hard state before the current/last hard state)** |\n|host_process_performance_data\
    \ | int | Whether processing of performance data is enabled **(0/1)** |\n|host_retry_interval\
    \ | float | Number of basic interval lengths between checks when retrying after\
    \ a soft error |\n|host_scheduled_downtime_depth | int | The number of downtimes\
    \ this object is currently in |\n|host_service_period | string | Time period during\
    \ which the object is expected to be available |\n|host_services | list | A list\
    \ of all services of the host |\n|host_services_with_fullstate | list | A list\
    \ of all services including full state information. The list of entries can grow\
    \ in future versions. |\n|host_services_with_info | list | A list of all services\
    \ including detailed information about each service |\n|host_services_with_state\
    \ | list | A list of all services of the host together with state and has_been_checked\
    \ |\n|host_smartping_timeout | int | Maximum expected time between two received\
    \ packets in ms |\n|host_staleness | float | The staleness of this object |\n\
    |host_state | int | The current state of the object, for hosts: 0/1/2 for UP/DOWN/UNREACH,\
    \ for services: 0/1/2/3 for OK/WARN/CRIT/UNKNOWN |\n|host_state_type | int | Type\
    \ of the current state **(0: soft, 1: hard)** |\n|host_statusmap_image | string\
    \ | The name of in image file for the status map |\n|host_structured_status |\
    \ blob | The file content of the structured status of the Check_MK HW/SW Inventory\
    \ |\n|host_tag_names | list | A list of the names of the tags |\n|host_tag_values\
    \ | list | A list of the values of the tags |\n|host_tags | dict | A dictionary\
    \ of the tags |\n|host_total_services | int | The total number of services of\
    \ the host |\n|host_worst_service_hard_state | int | The worst hard state of all\
    \ of the host's services **(OK <= WARN <= UNKNOWN <= CRIT)** |\n|host_worst_service_state\
    \ | int | The worst soft state of all of the host's services **(OK <= WARN <=\
    \ UNKNOWN <= CRIT)** |\n|host_x_3d | float | 3D-Coordinates: X |\n|host_y_3d |\
    \ float | 3D-Coordinates: Y |\n|host_z_3d | float | 3D-Coordinates: Z |\n\n\n\
    # Authentication\n\nTo use this API from an automated client, a user needs to\
    \ be set up in Checkmk. Any kind of user,\nbe it *automation* or *GUI* users,\
    \ can be used to access the REST API. On a newly created site\nsome users are\
    \ already created. You can configure them in Checkmk at *Setup* > *Users*.\n\n\
    For the various authentication methods that can be used please consult the following\
    \ descriptions,\nwhich occur in the order of precedence. This means that on a\
    \ request which receives multiple\nauthentication methods, the one with the highest\
    \ priority \"wins\" and is used. This is especially\nconvenient when developing\
    \ automation scripts, as these can directly be used with either the\ncurrently\
    \ logged in GUI user, or the \"Bearer\" authentication method which takes precedence\
    \ over the\nGUI authentication method. The result is that the user doesn't have\
    \ to log out to check that the\nscripts works with the other method.\n\n<SecurityDefinitions\
    \ />\n\n\n\n# Queries through the REST API\n\nGiven that Livestatus handles commands\
    \ asynchronously, the Rest API  is only responsible for the\npreparation and dispatch\
    \ of these commands, without confirming their execution. To ensure the\ncommands\
    \ sent to Livestatus are executed as intended, users must verify this on their\
    \ own.\n\nThe following script is an example of how to create a host downtime\
    \ and check that it has indeed been created:\n\n\n    #!/usr/bin/env python3\n\
    \    import requests\n    import pprint\n    import time\n    from datetime import\
    \ datetime, timedelta\n\n    # Checkmk server details\n    SERVER = \"localhost\"\
    \n    SITE_NAME = \"central\"\n    USERNAME = \"automation\"\n    PASSWORD = \"\
    test123\"\n    PROTOCOL = \"http\"\n    API_URL = f\"{PROTOCOL}://{SERVER}/{SITE_NAME}/check_mk/api/1.0\"\
    \n\n    session = requests.Session()\n    session.headers[\"Authorization\"] =\
    \ f\"Bearer {USERNAME} {PASSWORD}\"\n    session.headers[\"Accept\"] = \"application/json\"\
    \n\n    # Target host and downtime details\n    target_host = \"host01\"\n   \
    \ downtime_start = (datetime.now() + timedelta(hours=1)).replace(microsecond=0).isoformat()\
    \ + \"Z\"\n    downtime_end = (datetime.now() + timedelta(hours=2)).replace(microsecond=0).isoformat()\
    \ + \"Z\"\n    comment = \"Security updates #1234\"\n\n    # Send create downtime\
    \ command\n    resp = session.post(\n        f\"{API_URL}/domain-types/downtime/collections/host\"\
    ,\n        headers={\n            \"Content-Type\": \"application/json\",\n  \
    \      },\n        json={\n            \"start_time\": downtime_start,\n     \
    \       \"end_time\": downtime_end,\n            \"comment\": comment,\n     \
    \       \"downtime_type\": \"host\",\n            \"host_name\": target_host,\n\
    \        },\n    )\n    if resp.status_code != 204:\n        raise RuntimeError(pprint.pformat(resp.json()))\n\
    \n    # Check if downtime was created. Retry up to 5 times at 5 seconds intervals\n\
    \    found = False\n    for retry in range(5):\n        result = session.get(\n\
    \            f\"{API_URL}/domain-types/downtime/collections/all\",\n         \
    \   params={\n                \"host_name\": target_host,\n                \"\
    downtime_type\": \"host\",\n                \"site_id\": SITE_NAME,\n        \
    \        \"query\": '{\"op\": \"and\", \"expr\": [{\"op\": \"=\", \"left\": \"\
    comment\", \"right\": \"'\n                + comment\n                + '\"},\
    \ {\"op\": \"=\", \"left\": \"type\", \"right\": \"2\"}]}',\n            },\n\
    \        )\n        if (result.status_code == 200) and (len(result.json()[\"value\"\
    ]) > 0):\n            found = True\n            break\n\n        time.sleep(5)\n\
    \        print(f\"Retrying ({retry+1}) after 5 seconds...\")\n\n    if not found:\n\
    \        raise RuntimeError(\"Downtime not found.\")\n\n    print(\"Downtime successfully\
    \ created.\")\n\n\n# Compatibility\n\n## HTTP client compatibility\n\nIf you have\
    \ a client which cannot do the HTTP PUT or DELETE methods, you can use the\n`X-HTTP-Method-Override`\
    \ HTTP header to force the server into believing the client actually sent\nsuch\
    \ a method. In these cases the HTTP method to use has to be POST. You cannot override\
    \ from GET.\n\n## Compatibility policy\n\nIt is our policy to keep all documented\
    \ parts backwards compatible, as long as there is no\ncompelling reason (like\
    \ security, etc.) to break compatibility.\n\nIn the event of a break in backwards\
    \ compatibility, these changes are documented and, if possible,\nannounced by\
    \ deprecating the field or endpoint in question beforehand. Please understand\
    \ that this\ncan't be promised for all cases (security, etc.) though.\n\n## Versioning\n\
    \n### Definition\n\nThe REST API is versioned by a *major* and *minor* version\
    \ number.\n\nThe *major* number is incremented when backwards incompatible changes\
    \ to the API have been made.\nThis will reset the *minor* number to *0*. A *werk*\
    \ which contains the details of the change and\nmarking the change as incompatible\
    \ will be released when this happens.\n\nTh *minor* number will be increased when\
    \ backwards compatible changes are added to the API. A\n*werk* detailing the additions\
    \ will be released when this happens.\n\n**Note:** Despite the noted backward\
    \ compatibility, API consumers are best to ensure that their\nimplementation does\
    \ not disrupt use-case requirements.\n\n### Usage\n\nThe *major* version is part\
    \ of the URL of each endpoint, while the whole version (in the form\n*major*.*minor*)\
    \ can be sent via the HTTP header `X-API-Version`. If the header is not sent,\n\
    the most recent *minor* version of the through the URL selected *major* version\
    \ is used.\nThe header will also be present in the accompanying HTTP response.\n\
    \n### Format\n\n * URL: *v1*, *v2*, etc.\n * X-API-Version HTTP header: *major.minor*\n\
    \n### Notes\n\n * In the first release, the version part in the URL has been documented\
    \ as `1.0`. These\n   URLs will continue to work in the future, although using\
    \ the `X-API-Version` header will not be\n   possible with this version identifier.\
    \ You have to use the above documented format (v1, v2, ...)\n   in the URL to\
    \ be able to use the `X-API-Version` header.\n\n## Undocumented behaviour\n\n\
    We cannot guarantee bug-for-bug backwards compatibility. If a behaviour of an\
    \ endpoint is not\ndocumented we may change it without incrementing the API version."
  license:
    name: GNU General Public License version 2
    url: https://checkmk.com/legal/gpl
  contact:
    name: Contact the Checkmk Team
    url: https://checkmk.com/contact
    email: feedback@checkmk.com
  title: Checkmk REST-API
  version: '1000.0'
externalDocs:
  description: The official Checkmk user guide
  url: https://docs.checkmk.com/
x-logo:
  url: https://checkmk.com/bilder/brand-assets/checkmk_logo_main.png
  altText: Checkmk
x-tagGroups:
- name: Monitoring
  tags:
  - Acknowledge problems
  - Comments
  - Downtimes
  - Host status
  - Service status
  - Miscellaneous
  - Event Console
  - Metrics
  - Service Level Agreements
  - HW/SW Inventory
- name: Setup
  tags:
  - Business intelligence (BI)
  - Activate changes
  - Agents
  - Audit logs
  - Aux Tags
  - Contact groups
  - Folders
  - Hosts
  - Host groups
  - Host tag groups
  - Notification Rules
  - Parent scan
  - Rules
  - Rulesets
  - Service discovery
  - Service groups
  - Time periods
  - Users
  - LDAP Connections
  - License usage
  - SAML connections
  - User Roles
  - Passwords
  - Site management
  - open-telemetry
- name: Checkmk Internal
  tags:
  - Background Jobs
  - Certificates
  - Configuration entities
  - Configuration entities / Notification Parameter
  - Configuration entities / Folder
  - Hosts (internal)
  - Quick setup
  - Broker Connection
  - Autocomplete (internal)
  - Dynamic Configuration Daemon (DCD)
  - Metric (internal)
  - Relays
  - Dashboards
  - User Messages
  - Graph Timeranges
  - Sidebar Element
  - Visual Filters
  - Data Sources
  - Views
  - Pagetype Topics
  - Visual Info
  - Metric backend
- name: Undocumented Endpoint
  tags:
  - Onboarding helper
x-ignoredHeaderParameters:
- User-Agent
- X-Test-Header
security:
- headerAuth: []
- webserverAuth: []
paths:
  /domain-types/acknowledge/actions/delete/invoke:
    post:
      tags:
      - Acknowledge problems
      description: "\n\nThis endpoint requires the following permissions: \n * Acknowledge\
        \ (`action.acknowledge`): Acknowledge host and service problems and remove\
        \ acknowledgements\n"
      summary: Remove acknowledgement on host or service problems.
      operationId: cmk.gui.openapi.endpoints.acknowledgement.delete_acknowledgement
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveProblemAcknowledgement'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/acknowledge/actions/delete/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"acknowledge_type\"\
          : \"host\",\n        \"host_name\": \"example.com\",\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 201:\nelif resp.status_code == 204:\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/acknowledge/actions/delete/invoke\",\n  \
          \  method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    data=json.dumps({\n       \
          \ \"acknowledge_type\": \"host\",\n        \"host_name\": \"example.com\"\
          ,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 201:\n\
          elif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/acknowledge/actions/delete/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    acknowledge_type='host'\\\n    host_name='example.com'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"acknowledge_type\": \"host\",\n         \
          \ \"host_name\": \"example.com\"\n        }' \\\n  \"$API_URL/domain-types/acknowledge/actions/delete/invoke\""
  /domain-types/acknowledge/collections/host:
    post:
      tags:
      - Acknowledge problems
      description: "\n\nThis endpoint requires the following permissions: \n * Acknowledge\
        \ (`action.acknowledge`): Acknowledge host and service problems and remove\
        \ acknowledgements\n"
      summary: Set acknowledgement on related hosts
      operationId: cmk.gui.openapi.endpoints.acknowledgement.set_acknowledgement_on_hosts
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '422':
          description: 'Unprocessable Entity: The query yielded no result.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api422CustomError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeHostRelatedProblem'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/acknowledge/collections/host\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"sticky\"\
          : False,\n        \"persistent\": False,\n        \"notify\": False,\n \
          \       \"comment\": \"This was expected.\",\n        \"expire_on\": \"\
          2025-05-20T07:30:00Z\",\n        \"acknowledge_type\": \"host\",\n     \
          \   \"host_name\": \"example.com\",\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 201:\nelif resp.status_code == 204:\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/acknowledge/collections/host\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    #\
          \ This schema has multiple variations. Please refer to\n    # the 'Payload'\
          \ section for details.\n    data=json.dumps({\n        \"sticky\": False,\n\
          \        \"persistent\": False,\n        \"notify\": False,\n        \"\
          comment\": \"This was expected.\",\n        \"expire_on\": \"2025-05-20T07:30:00Z\"\
          ,\n        \"acknowledge_type\": \"host\",\n        \"host_name\": \"example.com\"\
          ,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 201:\n\
          elif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/acknowledge/collections/host\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    sticky:=false\\\n    persistent:=false\\\n    notify:=false\\\n\
          \    comment='This was expected.'\\\n    expire_on='2025-05-20T07:30:00Z'\\\
          \n    acknowledge_type='host'\\\n    host_name='example.com'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"acknowledge_type\": \"host\",\n         \
          \ \"comment\": \"This was expected.\",\n          \"expire_on\": \"2025-05-20T07:30:00Z\"\
          ,\n          \"host_name\": \"example.com\",\n          \"notify\": false,\n\
          \          \"persistent\": false,\n          \"sticky\": false\n       \
          \ }' \\\n  \"$API_URL/domain-types/acknowledge/collections/host\""
  /domain-types/acknowledge/collections/service:
    post:
      tags:
      - Acknowledge problems
      description: "\n\nThis endpoint requires the following permissions: \n * Acknowledge\
        \ (`action.acknowledge`): Acknowledge host and service problems and remove\
        \ acknowledgements\n"
      summary: Set acknowledgement on related services
      operationId: cmk.gui.openapi.endpoints.acknowledgement.set_acknowledgement_on_services
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '422':
          description: 'Unprocessable Entity: Service was not in a problem state.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api422CustomError1'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeServiceRelatedProblem'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/acknowledge/collections/service\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"sticky\"\
          : False,\n        \"persistent\": False,\n        \"notify\": False,\n \
          \       \"comment\": \"This was expected.\",\n        \"expire_on\": \"\
          2025-05-20T07:30:00Z\",\n        \"acknowledge_type\": \"service\",\n  \
          \      \"host_name\": \"example.com\",\n        \"service_description\"\
          : \"CPU load\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 201:\nelif resp.status_code == 204:\n    print('Done')\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/acknowledge/collections/service\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    #\
          \ This schema has multiple variations. Please refer to\n    # the 'Payload'\
          \ section for details.\n    data=json.dumps({\n        \"sticky\": False,\n\
          \        \"persistent\": False,\n        \"notify\": False,\n        \"\
          comment\": \"This was expected.\",\n        \"expire_on\": \"2025-05-20T07:30:00Z\"\
          ,\n        \"acknowledge_type\": \"service\",\n        \"host_name\": \"\
          example.com\",\n        \"service_description\": \"CPU load\",\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/acknowledge/collections/service\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    sticky:=false\\\n    persistent:=false\\\n    notify:=false\\\n\
          \    comment='This was expected.'\\\n    expire_on='2025-05-20T07:30:00Z'\\\
          \n    acknowledge_type='service'\\\n    host_name='example.com'\\\n    service_description='CPU\
          \ load'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"acknowledge_type\": \"service\",\n      \
          \    \"comment\": \"This was expected.\",\n          \"expire_on\": \"2025-05-20T07:30:00Z\"\
          ,\n          \"host_name\": \"example.com\",\n          \"notify\": false,\n\
          \          \"persistent\": false,\n          \"service_description\": \"\
          CPU load\",\n          \"sticky\": false\n        }' \\\n  \"$API_URL/domain-types/acknowledge/collections/service\""
  /domain-types/activation_run/collections/pending_changes:
    get:
      tags:
      - Activate changes
      description: "\n\nThis endpoint requires the following permissions: \n"
      summary: Show all pending changes
      operationId: cmk.gui.openapi.endpoints.activate_changes.list_pending_changes
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingChangesCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/activation_run/collections/pending_changes\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/activation_run/collections/pending_changes\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/activation_run/collections/pending_changes\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/activation_run/collections/pending_changes\""
  /domain-types/activation_run/collections/running:
    get:
      tags:
      - Activate changes
      description: "\n\nThis endpoint requires the following permissions: \n"
      summary: Show all currently running activations
      operationId: cmk.gui.openapi.endpoints.activate_changes.list_activations
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationRunCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/activation_run/collections/running\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/activation_run/collections/running\",\n \
          \   method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/activation_run/collections/running\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/activation_run/collections/running\""
  /objects/activation_run/{activation_id}:
    get:
      tags:
      - Activate changes
      description: "If the activation is still running a link to the wait-for-completion\
        \ resource for the activation job is included.This endpoint requires the following\
        \ permissions: \n * Activate configuration (`wato.activate`): This permission\
        \ is needed for activating the current configuration (and thus rewriting the\
        \ monitoring configuration and restart the monitoring daemon.)\n"
      summary: Show the activation status
      operationId: cmk.gui.openapi.endpoints.activate_changes.show_activation
      parameters:
      - in: path
        name: activation_id
        description: The activation-id.
        schema:
          type: string
          example: d3b07384d113e0ec49eaa6238ad5ff00
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: There is no running activation with this activation_id.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404CustomError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationStatusResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00\""
  /objects/activation_run/{activation_id}/actions/wait-for-completion/invoke:
    get:
      tags:
      - Activate changes
      description: "This endpoint will periodically redirect on itself to prevent\
        \ timeouts.This endpoint requires the following permissions: \n * Activate\
        \ configuration (`wato.activate`): This permission is needed for activating\
        \ the current configuration (and thus rewriting the monitoring configuration\
        \ and restart the monitoring daemon.)\n"
      summary: Wait for activation completion
      operationId: cmk.gui.openapi.endpoints.activate_changes.activate_changes_wait_for_completion
      parameters:
      - in: path
        name: activation_id
        description: The activation-id.
        schema:
          type: string
          example: d3b07384d113e0ec49eaa6238ad5ff00
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '302':
          description: 'Found: The activation is still running. Redirecting to the
            ''Wait for completion'' endpoint.'
          content: {}
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: There is no running activation with this activation_id.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404CustomError1'
        '204':
          description: 'No Content: The activation has been completed.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.get(\n    f\"{API_URL}/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00/actions/wait-for-completion/invoke\"\
          ,\n    allow_redirects=True,\n)\nif resp.status_code == 204:\n    print('Done')\n\
          elif resp.status_code == 302:\n    print('Redirected to', resp.headers['location'])\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00/actions/wait-for-completion/invoke\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 204:\n    print('Done')\n\
          elif resp.status == 302:\n    print('Redirected to', resp.headers['location'])"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00/actions/wait-for-completion/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00/actions/wait-for-completion/invoke\""
  /domain-types/activation_run/actions/activate-changes/invoke:
    post:
      tags:
      - Activate changes
      description: "This endpoint will start an asynchronous background job that will\
        \ activate all pending changes.\nIt will either return a response immediately\
        \ (when redirect=False) which includes the ID for\nthe just triggered activation\
        \ run or will redirect (when redirect=True) to the \"Wait for\ncompletion\"\
        \ endpoint and only return a response when the background job is completed.\n\
        The relevant ETag for the current set of pending changes can be obtained from\
        \ the 'Show all\npending changes' endpoint. However, if there are alterations\
        \ to the list of pending changes, a\nnew query to the endpoint will be needed\
        \ to acquire the updated ETag.This endpoint requires the following permissions:\
        \ \n * All of:\n   * Activate configuration (`wato.activate`): This permission\
        \ is needed for activating the current configuration (and thus rewriting the\
        \ monitoring configuration and restart the monitoring daemon.)\n   * Optionally:\n\
        \     * Activate foreign changes (`wato.activateforeign`): When several users\
        \ work in parallel with Setup then several pending changes of different users\
        \ might pile up before changes are activated. Only with this permission a\
        \ user will be allowed to activate the current configuration if this situation\
        \ appears.\n"
      summary: Activate pending changes
      operationId: cmk.gui.openapi.endpoints.activate_changes.activate_changes
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id001
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '303':
          description: 'See Other: The activation has been started and is still running.
            Redirecting to the ''Wait for completion'' endpoint.'
          content: {}
        '401':
          description: 'Unauthorized: The API user may not activate another users
            changes, or the user may and activation was not forced explicitly.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api401CustomError'
        '403':
          description: 'Forbidden: Activation not possible because of licensing issues.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403CustomError'
        '409':
          description: 'Conflict: Some sites could not be activated.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409CustomError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '422':
          description: 'Unprocessable Entity: There are no changes to be activated.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api422CustomError2'
        '423':
          description: 'Locked: There is already an activation running.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api423CustomError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: Activation has been started, but not completed (if you
            need to wait for completion, see documentation for this endpoint).'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationRunResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id001
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateChanges'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/activation_run/actions/activate-changes/invoke\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"redirect\"\
          : False,\n        \"sites\": [\"production\"],\n        \"force_foreign_changes\"\
          : False,\n    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelif resp.status_code\
          \ == 303:\n    print('Redirected to', resp.headers['location'])\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/activation_run/actions/activate-changes/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required) The\
          \ value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"redirect\": False,\n        \"sites\": [\"production\"],\n      \
          \  \"force_foreign_changes\": False,\n    }).encode('utf-8'),\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:\nelif resp.status == 303:\n    print('Redirected\
          \ to', resp.headers['location'])"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/activation_run/actions/activate-changes/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'If-Match:\"\
          a20ceacf346041dc\"' \\\n    'Content-Type:application/json' \\\n    redirect:=false\\\
          \n    sites:='[\"production\"]'\\\n    force_foreign_changes:=false"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl -L \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\
          \" \\\n  --header \"Content-Type: application/json\" \\\n  --data '{\n \
          \         \"force_foreign_changes\": false,\n          \"redirect\": false,\n\
          \          \"sites\": [\n            \"production\"\n          ]\n     \
          \   }' \\\n  \"$API_URL/domain-types/activation_run/actions/activate-changes/invoke\""
  /domain-types/agent/actions/automatic-deployment/invoke:
    get:
      tags:
      - Agents
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ monitoring agents (`wato.agents`): Manage customized packaged monitoring\
        \ agents for Linux, Windows and other operating systems\n"
      summary: Show the status of the automatic deployment system
      operationId: cmk.gui.cee.agent_bakery._openapi.automatic_deployment_status
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResultObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/agent/actions/automatic-deployment/invoke\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/automatic-deployment/invoke\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/agent/actions/automatic-deployment/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/agent/actions/automatic-deployment/invoke\""
  /domain-types/agent/actions/baking_status/invoke:
    get:
      tags:
      - Agents
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ monitoring agents (`wato.agents`): Manage customized packaged monitoring\
        \ agents for Linux, Windows and other operating systems\n"
      summary: Show the baking status
      operationId: cmk.gui.cee.agent_bakery._openapi.baking_status
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResultObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/agent/actions/baking_status/invoke\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/baking_status/invoke\",\n \
          \   method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/agent/actions/baking_status/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/agent/actions/baking_status/invoke\""
  /domain-types/agent/actions/download/invoke:
    get:
      tags:
      - Agents
      description: ''
      summary: Download agents shipped with Checkmk
      operationId: cmk.gui.openapi.endpoints.agent.download_agent
      parameters:
      - in: query
        name: os_type
        description: The type of the operating system. May be one of linux_rpm, linux_deb,
          windows_msi
        schema:
          type: string
          enum:
          - linux_deb
          - linux_rpm
          - windows_msi
          example: linux_deb
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\nimport shutil\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/octet-stream'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/agent/actions/download/invoke\"\
          ,\n    params={  # goes into query string\n        \"os_type\": 'linux_deb',\
          \  # (required) The type of the operating system.\n    },\n    stream=True,\n\
          )\nif resp.status_code == 200:\n    file_name = resp.headers['content-disposition'].split('filename=')[1].strip('\"\
          ')\n    with open(file_name, 'wb') as out_file:\n        resp.raw.decode_content\
          \ = True\n        shutil.copyfileobj(resp.raw, out_file)\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport shutil\n\
          import urllib.parse\nimport urllib.request\n\nHOST_NAME = \"localhost\"\n\
          SITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"os_type\": 'linux_deb',  # (required)\
          \ The type of the operating system.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/download/invoke?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/octet-stream\"\
          ,\n        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    file_name\
          \ = resp.headers['content-disposition'].split('filename=')[1].strip('\"\
          ')\n    with open(file_name, 'wb') as out_file:\n        shutil.copyfileobj(resp,\
          \ out_file)\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/agent/actions/download/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/octet-stream\" \\\n    \n    os_type=='linux_deb' \\\n   \
          \ --download "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  -JO \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/octet-stream\"\
          \ \\\n  \n  --data-urlencode 'os_type=linux_deb' \\\n  \"$API_URL/domain-types/agent/actions/download/invoke\""
  /domain-types/agent/actions/download_by_hash/invoke:
    get:
      tags:
      - Agents
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Manage monitoring agents (`wato.agents`): Manage customized packaged\
        \ monitoring agents for Linux, Windows and other operating systems\n   * Optionally:\n\
        \     * Register host & download monitoring agents of your hosts (`wato.download_agents`):\
        \ Register hosts that you are a contact for and then download monitoring agents\
        \ that have been created with the Agent Bakery for these hosts. Please note\
        \ that these agents might contain confidential information such as passwords.\n\
        \   * Optionally:\n     * Register all hosts & download all monitoring agents\
        \ (`wato.download_all_agents`): Register all hosts with the Agent Bakery and\
        \ download all monitoring agents that have been created with the Agent Bakery,\
        \ even if you are not a contact for the host in question. Please note that\
        \ these agents might contain confidential information such as passwords.\n"
      summary: Download an agent by agent hash and operating system
      operationId: cmk.gui.cee.agent_bakery._openapi.download_agent_by_hash
      parameters:
      - in: query
        name: agent_hash
        description: The configuration hash representing an agent.
        schema:
          type: string
          example: 80e99ba3a66d4880
          pattern: ^[a-fA-F0-9]{16}$
        required: true
      - in: query
        name: os_type
        description: The type of the operating system. May be one of aix_tgz, linux_deb,
          linux_rpm, linux_tgz, solaris_pkg, solaris_tgz, windows_msi
        schema:
          type: string
          enum: &id002
          - aix_tgz
          - linux_deb
          - linux_rpm
          - linux_tgz
          - solaris_pkg
          - solaris_tgz
          - windows_msi
          example: linux_tgz
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\nimport shutil\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/octet-stream'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/agent/actions/download_by_hash/invoke\"\
          ,\n    params={  # goes into query string\n        \"agent_hash\": '80e99ba3a66d4880',\
          \  # (required) The configuration hash representing an agent.\n        \"\
          os_type\": 'linux_tgz',  # (required) The type of the operating system.\n\
          \    },\n    stream=True,\n)\nif resp.status_code == 200:\n    file_name\
          \ = resp.headers['content-disposition'].split('filename=')[1].strip('\"\
          ')\n    with open(file_name, 'wb') as out_file:\n        resp.raw.decode_content\
          \ = True\n        shutil.copyfileobj(resp.raw, out_file)\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport shutil\n\
          import urllib.parse\nimport urllib.request\n\nHOST_NAME = \"localhost\"\n\
          SITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"agent_hash\": '80e99ba3a66d4880',  # (required)\
          \ The configuration hash representing an agent.\n    \"os_type\": 'linux_tgz',\
          \  # (required) The type of the operating system.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/download_by_hash/invoke?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/octet-stream\"\
          ,\n        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    file_name\
          \ = resp.headers['content-disposition'].split('filename=')[1].strip('\"\
          ')\n    with open(file_name, 'wb') as out_file:\n        shutil.copyfileobj(resp,\
          \ out_file)\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/agent/actions/download_by_hash/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/octet-stream\" \\\n    \n    agent_hash=='80e99ba3a66d4880'\
          \ \\\n    os_type=='linux_tgz' \\\n    --download "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  -JO \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/octet-stream\"\
          \ \\\n  \n  --data-urlencode 'agent_hash=80e99ba3a66d4880' \\\n  --data-urlencode\
          \ 'os_type=linux_tgz' \\\n  \"$API_URL/domain-types/agent/actions/download_by_hash/invoke\""
  /domain-types/agent/actions/download_by_host/invoke:
    get:
      tags:
      - Agents
      description: "To download the vanilla agent (factory defaults) set `agent_type`\
        \ to `\"vanilla\"`\nand omit the fields `host_name` and `folder_name`.\n\n\
        To download the agent of a specific host, set `agent_type` to `\"host_name\"\
        `\nand set `host_name` to the name of the host (omitting `folder_name`).\n\
        \nTo download the generic agent of a specific folder, set `agent_type` to\
        \ `\"generic\"`.\nYou can then either omit the `folder_name` (defaulting to\
        \ the root folder), or specify\nthe path of a specific folder *on disk*, starting\
        \ from the root folder\n(e.g. to download the agent for the folder shown as\
        \ \"Main / My-Folder\" in the GUI,\nspecify \"/My_Folder/\").\nThe correct\
        \ folder can be found in the agents downloads page.\nThe field `host_name`\
        \ should be omitted.This endpoint requires the following permissions: \n *\
        \ All of:\n   * Manage monitoring agents (`wato.agents`): Manage customized\
        \ packaged monitoring agents for Linux, Windows and other operating systems\n\
        \   * Optionally:\n     * Register host & download monitoring agents of your\
        \ hosts (`wato.download_agents`): Register hosts that you are a contact for\
        \ and then download monitoring agents that have been created with the Agent\
        \ Bakery for these hosts. Please note that these agents might contain confidential\
        \ information such as passwords.\n   * Optionally:\n     * Register all hosts\
        \ & download all monitoring agents (`wato.download_all_agents`): Register\
        \ all hosts with the Agent Bakery and download all monitoring agents that\
        \ have been created with the Agent Bakery, even if you are not a contact for\
        \ the host in question. Please note that these agents might contain confidential\
        \ information such as passwords.\n"
      summary: Download an agent by host or folder name and operating system
      operationId: cmk.gui.cee.agent_bakery._openapi.download_agent_by_host
      parameters:
      - in: query
        name: agent_type
        description: Type of agent.
        schema:
          type: string
          default: host_name
          enum:
          - host_name
          - vanilla
          - generic
          example: host_name
        required: false
      - in: query
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: false
      - in: query
        name: folder_name
        description: 'A folder name.


          Path delimiters can be either `~`, `/` or `\`. Please use the one most appropriate
          for your quoting/escaping needs. A good default choice is `~`.'
        schema:
          type: string
          example: '~'
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        required: false
      - in: query
        name: os_type
        description: The type of the operating system. May be one of aix_tgz, linux_deb,
          linux_rpm, linux_tgz, solaris_pkg, solaris_tgz, windows_msi
        schema:
          type: string
          enum: *id002
          example: linux_tgz
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\nimport shutil\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/octet-stream'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/agent/actions/download_by_host/invoke\"\
          ,\n    params={  # goes into query string\n        \"agent_type\": 'host_name',\
          \  # Type of agent.\n        \"host_name\": 'example.com',  # A host name.\n\
          \        \"folder_name\": '~',  # A folder name.\n        \"os_type\": 'linux_tgz',\
          \  # (required) The type of the operating system.\n    },\n    stream=True,\n\
          )\nif resp.status_code == 200:\n    file_name = resp.headers['content-disposition'].split('filename=')[1].strip('\"\
          ')\n    with open(file_name, 'wb') as out_file:\n        resp.raw.decode_content\
          \ = True\n        shutil.copyfileobj(resp.raw, out_file)\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport shutil\n\
          import urllib.parse\nimport urllib.request\n\nHOST_NAME = \"localhost\"\n\
          SITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"agent_type\": 'host_name',  # Type of\
          \ agent.\n    \"host_name\": 'example.com',  # A host name.\n    \"folder_name\"\
          : '~',  # A folder name.\n    \"os_type\": 'linux_tgz',  # (required) The\
          \ type of the operating system.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/download_by_host/invoke?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/octet-stream\"\
          ,\n        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    file_name\
          \ = resp.headers['content-disposition'].split('filename=')[1].strip('\"\
          ')\n    with open(file_name, 'wb') as out_file:\n        shutil.copyfileobj(resp,\
          \ out_file)\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/agent/actions/download_by_host/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/octet-stream\" \\\n    \n    agent_type=='host_name' \\\n\
          \    host_name=='example.com' \\\n    folder_name=='~' \\\n    os_type=='linux_tgz'\
          \ \\\n    --download "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  -JO \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/octet-stream\"\
          \ \\\n  \n  --data-urlencode 'agent_type=host_name' \\\n  --data-urlencode\
          \ 'host_name=example.com' \\\n  --data-urlencode 'folder_name=~' \\\n  --data-urlencode\
          \ 'os_type=linux_tgz' \\\n  \"$API_URL/domain-types/agent/actions/download_by_host/invoke\""
  /domain-types/agent/collections/all:
    get:
      tags:
      - Agents
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ monitoring agents (`wato.agents`): Manage customized packaged monitoring\
        \ agents for Linux, Windows and other operating systems\n"
      summary: Show all agents
      operationId: cmk.gui.cee.agent_bakery._openapi.list_agents
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/agent/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/collections/all\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/agent/collections/all\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/agent/collections/all\""
  /objects/agent/{agent_hash}:
    get:
      tags:
      - Agents
      description: ''
      summary: Show Configuration of a single agent
      operationId: cmk.gui.cee.agent_bakery._openapi.show_agent_information
      parameters:
      - in: path
        name: agent_hash
        description: The configuration hash representing an agent.
        schema:
          type: string
          example: 80e99ba3a66d4880
          pattern: ^[a-fA-F0-9]{16}$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/agent/80e99ba3a66d4880\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/agent/80e99ba3a66d4880\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/agent/80e99ba3a66d4880\" \\\n    \"\
          Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/agent/80e99ba3a66d4880\""
  /domain-types/agent/actions/bake/invoke:
    post:
      tags:
      - Agents
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Manage monitoring agents (`wato.agents`): Manage customized packaged\
        \ monitoring agents for Linux, Windows and other operating systems\n   * Bake\
        \ agents (`wato.bake_agents`): Bake new agent packages for Linux, Windows\
        \ and other operating systems\n"
      summary: Bake all agents
      operationId: cmk.gui.cee.agent_bakery._openapi.bake_all_agents
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResultScalar'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/agent/actions/bake/invoke\"\
          ,\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          elif resp.status_code == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/bake/invoke\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \   },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/agent/actions/bake/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/domain-types/agent/actions/bake/invoke\""
  /domain-types/agent/actions/bake_and_sign/invoke:
    post:
      tags:
      - Agents
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Manage monitoring agents (`wato.agents`): Manage customized packaged\
        \ monitoring agents for Linux, Windows and other operating systems\n   * Bake\
        \ agents (`wato.bake_agents`): Bake new agent packages for Linux, Windows\
        \ and other operating systems\n   * Configuration of agent updates (`wato.agent_deployment`):\
        \ This permissions allows full control of the automatic agent updates.\n \
        \  * Sign agents (`wato.sign_agents`): Sign baked agent packages for Linux,\
        \ Windows and other operating systems\n"
      summary: Bake and sign all agents
      operationId: cmk.gui.cee.agent_bakery._openapi.bake_and_sign_all_agents
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id003
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResultScalar'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id003
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentSign'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/agent/actions/bake_and_sign/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"key_id\": 42,\n        \"passphrase\": \"\
          sw0rdfish\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/bake_and_sign/invoke\",\n \
          \   method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"key_id\": 42,\n        \"passphrase\"\
          : \"sw0rdfish\",\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/agent/actions/bake_and_sign/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    key_id:=42\\\n    passphrase='sw0rdfish'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"key_id\": 42,\n          \"passphrase\": \"sw0rdfish\"\n  \
          \      }' \\\n  \"$API_URL/domain-types/agent/actions/bake_and_sign/invoke\""
  /domain-types/agent/actions/sign/invoke:
    post:
      tags:
      - Agents
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Configuration of agent updates (`wato.agent_deployment`): This\
        \ permissions allows full control of the automatic agent updates.\n   * Sign\
        \ agents (`wato.sign_agents`): Sign baked agent packages for Linux, Windows\
        \ and other operating systems\n"
      summary: Sign all agents
      operationId: cmk.gui.cee.agent_bakery._openapi.sign_agents
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentSign'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/agent/actions/sign/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"key_id\": 42,\n        \"passphrase\": \"\
          sw0rdfish\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 201:\nelif resp.status_code == 204:\n    print('Done')\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/sign/invoke\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    data=json.dumps({\n\
          \        \"key_id\": 42,\n        \"passphrase\": \"sw0rdfish\",\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/agent/actions/sign/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    key_id:=42\\\n    passphrase='sw0rdfish'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"key_id\": 42,\n          \"passphrase\": \"sw0rdfish\"\n  \
          \      }' \\\n  \"$API_URL/domain-types/agent/actions/sign/invoke\""
  /domain-types/audit_log/collections/all:
    get:
      tags:
      - Audit logs
      description: "\n\nThis endpoint requires the following permissions: \n * Audit\
        \ log (`wato.auditlog`): Access to the historic audit log. The currently pending\
        \ changes can be seen by all users with access to Setup.\n"
      summary: Get all audit log entries
      operationId: cmk.gui.openapi.endpoints.audit_log.get_all
      parameters:
      - in: query
        name: object_type
        description: The type of object we want to filter on
        schema:
          type: string
          default: All
          enum:
          - All
          - None
          - Folder
          - Host
          - User
          - Rule
          - Ruleset
          example: Folder
        required: false
      - in: query
        name: object_id
        description: Name of an object to filter by
        schema:
          type: string
          example: host_01
        required: false
      - in: query
        name: user_id
        description: An username to filter by
        schema:
          type: string
          example: my_admin_user
        required: false
      - in: query
        name: date
        description: The date from wich to obtain the audit log entries. The format
          has to conform to the ISO 8601 profile
        schema:
          type: string
          format: iso8601
          example: '2017-07-21'
        required: true
      - in: query
        name: regexp
        description: A regular expression to be applied to the user_id, action and
          summary fields.
        schema:
          type: string
          example: ^l.*m.*p
        required: false
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogEntryCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/audit_log/collections/all\"\
          ,\n    params={  # goes into query string\n        \"object_type\": 'Folder',\
          \  # The type of object we want to filter on\n        \"object_id\": 'host_01',\
          \  # Name of an object to filter by\n        \"user_id\": 'my_admin_user',\
          \  # An username to filter by\n        \"date\": '2017-07-21',  # (required)\
          \ The date from wich to obtain the audit log entries.\n        \"regexp\"\
          : '^l.*m.*p',  # A regular expression to be applied to the user_id, action\
          \ and summary fields.\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"object_type\": 'Folder',  # The type of\
          \ object we want to filter on\n    \"object_id\": 'host_01',  # Name of\
          \ an object to filter by\n    \"user_id\": 'my_admin_user',  # An username\
          \ to filter by\n    \"date\": '2017-07-21',  # (required) The date from\
          \ wich to obtain the audit log entries.\n    \"regexp\": '^l.*m.*p',  #\
          \ A regular expression to be applied to the user_id, action and summary\
          \ fields.\n})\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/domain-types/audit_log/collections/all?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/audit_log/collections/all\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    object_type=='Folder' \\\n    object_id=='host_01' \\\n\
          \    user_id=='my_admin_user' \\\n    date=='2017-07-21' \\\n    regexp=='^l.*m.*p' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'object_type=Folder' \\\n  --data-urlencode\
          \ 'object_id=host_01' \\\n  --data-urlencode 'user_id=my_admin_user' \\\n\
          \  --data-urlencode 'date=2017-07-21' \\\n  --data-urlencode 'regexp=^l.*m.*p'\
          \ \\\n  \"$API_URL/domain-types/audit_log/collections/all\""
  /domain-types/audit_log/actions/archive/invoke:
    post:
      tags:
      - Audit logs
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Audit log (`wato.auditlog`): Access\
        \ to the historic audit log. The currently pending changes can be seen by\
        \ all users with access to Setup.\n   * Archive audit log (`wato.clear_auditlog`):\
        \ Archive the entries of the audit log. To be able to archive the audit log\
        \ a user needs the generic Setup permission \"Make changes, perform actions\"\
        , the \"View audit log\" and this permission.\n"
      summary: Move audit log entries to archive
      operationId: cmk.gui.openapi.endpoints.audit_log.archive_logs
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/audit_log/actions/archive/invoke\"\
          ,\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif resp.status_code\
          \ == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/audit_log/actions/archive/invoke\",\n   \
          \ method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 201:\nelif resp.status\
          \ == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/audit_log/actions/archive/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/domain-types/audit_log/actions/archive/invoke\""
  /objects/autocomplete/{autocomplete_id}:
    post:
      tags:
      - Autocomplete (internal)
      description: ''
      summary: Call the autocompleter specified in the url
      x-badges:
      - name: CRE
        position: after
        color: '#afb9c2'
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: cmk.gui.openapi.endpoints.autocomplete.show
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id004
          type: string
        example: application/json
      - in: path
        name: autocomplete_id
        description: The id of the autocompleter
        schema:
          type: string
          example: tag_groups
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id004
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/autocomplete/tag_groups\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"value\": \"central_site\",\n        \"parameters\"\
          : {\n            \"strict\": False,\n            \"context\": {\n      \
          \      },\n        },\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/autocomplete/tag_groups\",\n    method=\"POST\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"value\": \"central_site\",\n        \"parameters\": {\n         \
          \   \"strict\": False,\n            \"context\": {\n            },\n   \
          \     },\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/autocomplete/tag_groups\" \\\n  \
          \  --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\"\
          \ \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    value='central_site'\\\n    parameters[strict]:=false"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"parameters\": {\n            \"context\": {},\n           \
          \ \"strict\": false\n          },\n          \"value\": \"central_site\"\
          \n        }' \\\n  \"$API_URL/objects/autocomplete/tag_groups\""
  /domain-types/aux_tag/collections/all:
    get:
      tags:
      - Aux Tags
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ tags (`wato.hosttags`): Create, remove and edit tags. Removing tags also\
        \ might remove rules, so this permission should not be available to normal\
        \ users.\n"
      summary: Show Auxiliary Tags
      operationId: cmk.gui.openapi.endpoints.aux_tags.show_aux_tags
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuxTagResponseCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/aux_tag/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/aux_tag/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/aux_tag/collections/all\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/aux_tag/collections/all\""
    post:
      tags:
      - Aux Tags
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Optionally:\n     * Write access\
        \ to all hosts and folders (`wato.all_folders`): Without this permission,\
        \ operations on folders can only be done by users that are members of one\
        \ of the folders contact groups. This permission grants full access to all\
        \ folders and hosts.\n   * Manage tags (`wato.hosttags`): Create, remove and\
        \ edit tags. Removing tags also might remove rules, so this permission should\
        \ not be available to normal users.\n"
      summary: Create an Auxiliary Tag
      operationId: cmk.gui.openapi.endpoints.aux_tags.create_aux_tag
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id005
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuxTagResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id005
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuxTagAttrsCreate'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/aux_tag/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"aux_tag_id\": \"ip-v4\",\n        \"topic\"\
          : \"Monitoring agents\",\n        \"title\": \"AuxTagExampleTitle\",\n \
          \       \"help\": \"AuxTagExampleHelp\",\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/aux_tag/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    data=json.dumps({\n\
          \        \"aux_tag_id\": \"ip-v4\",\n        \"topic\": \"Monitoring agents\"\
          ,\n        \"title\": \"AuxTagExampleTitle\",\n        \"help\": \"AuxTagExampleHelp\"\
          ,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 200:\n\
          \    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status ==\
          \ 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/aux_tag/collections/all\" \\\
          \n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\"\
          \ \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    aux_tag_id='ip-v4'\\\n    topic='Monitoring agents'\\\n    title='AuxTagExampleTitle'\\\
          \n    help='AuxTagExampleHelp'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"aux_tag_id\": \"ip-v4\",\n          \"help\": \"AuxTagExampleHelp\"\
          ,\n          \"title\": \"AuxTagExampleTitle\",\n          \"topic\": \"\
          Monitoring agents\"\n        }' \\\n  \"$API_URL/domain-types/aux_tag/collections/all\""
  /objects/aux_tag/{aux_tag_id}:
    get:
      tags:
      - Aux Tags
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ tags (`wato.hosttags`): Create, remove and edit tags. Removing tags also\
        \ might remove rules, so this permission should not be available to normal\
        \ users.\n"
      summary: Show an Auxiliary Tag
      operationId: cmk.gui.openapi.endpoints.aux_tags.show_aux_tag
      parameters:
      - in: path
        name: aux_tag_id
        description: An auxiliary tag id
        schema:
          type:
          - string
          - 'null'
          example: ip-v4
          pattern: ^[-0-9a-zA-Z_]+\Z
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuxTagResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/aux_tag/ip-v4\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/aux_tag/ip-v4\",\n    method=\"GET\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n    },\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/aux_tag/ip-v4\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/aux_tag/ip-v4\""
    put:
      tags:
      - Aux Tags
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Optionally:\n     * Write access\
        \ to all hosts and folders (`wato.all_folders`): Without this permission,\
        \ operations on folders can only be done by users that are members of one\
        \ of the folders contact groups. This permission grants full access to all\
        \ folders and hosts.\n   * Manage tags (`wato.hosttags`): Create, remove and\
        \ edit tags. Removing tags also might remove rules, so this permission should\
        \ not be available to normal users.\n"
      summary: Update an aux tag
      operationId: cmk.gui.openapi.endpoints.aux_tags.put_aux_tag
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id006
          type: string
        example: application/json
      - in: path
        name: aux_tag_id
        description: An auxiliary tag id
        schema:
          type:
          - string
          - 'null'
          example: ip-v4
          pattern: ^[-0-9a-zA-Z_]+\Z
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuxTagResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id006
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuxTagAttrsUpdate'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/aux_tag/ip-v4\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"topic\": \"Monitoring agents\",\n       \
          \ \"title\": \"AuxTagExampleTitle\",\n        \"help\": \"AuxTagExampleHelp\"\
          ,\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/aux_tag/ip-v4\",\n    method=\"PUT\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"topic\": \"Monitoring agents\",\n        \"title\": \"AuxTagExampleTitle\"\
          ,\n        \"help\": \"AuxTagExampleHelp\",\n    }).encode('utf-8'),\n)\n\
          # Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/aux_tag/ip-v4\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    \n    'Content-Type:application/json' \\\n    topic='Monitoring agents'\\\
          \n    title='AuxTagExampleTitle'\\\n    help='AuxTagExampleHelp'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"help\": \"AuxTagExampleHelp\",\n          \"title\": \"AuxTagExampleTitle\"\
          ,\n          \"topic\": \"Monitoring agents\"\n        }' \\\n  \"$API_URL/objects/aux_tag/ip-v4\""
  /objects/aux_tag/{aux_tag_id}/actions/delete/invoke:
    post:
      tags:
      - Aux Tags
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Optionally:\n     * Write access\
        \ to all hosts and folders (`wato.all_folders`): Without this permission,\
        \ operations on folders can only be done by users that are members of one\
        \ of the folders contact groups. This permission grants full access to all\
        \ folders and hosts.\n   * Manage tags (`wato.hosttags`): Create, remove and\
        \ edit tags. Removing tags also might remove rules, so this permission should\
        \ not be available to normal users.\n"
      summary: Delete an Auxiliary Tag
      operationId: cmk.gui.openapi.endpoints.aux_tags.delete_aux_tag
      parameters:
      - in: path
        name: aux_tag_id
        description: An auxiliary tag id
        schema:
          type:
          - string
          - 'null'
          example: ip-v4
          pattern: ^[-0-9a-zA-Z_]+\Z
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/aux_tag/ip-v4/actions/delete/invoke\"\
          ,\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif resp.status_code\
          \ == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/aux_tag/ip-v4/actions/delete/invoke\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \   },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/aux_tag/ip-v4/actions/delete/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/aux_tag/ip-v4/actions/delete/invoke\""
  /objects/background_job/{job_id}:
    get:
      tags:
      - Background Jobs
      description: ''
      summary: Show the last status of a background job
      operationId: cmk.gui.openapi.endpoints.background_job.show_background_job_snapshot
      parameters:
      - in: query
        name: site_id
        description: The site where the background job is located. Defaults to local
          site
        schema:
          type: string
          example: foobar
        required: false
      - in: path
        name: job_id
        description: The ID of the background job
        schema:
          type: string
          example: foobar
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundJobSnapshotObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/background_job/foobar\"\
          ,\n    params={  # goes into query string\n        \"site_id\": 'foobar',\
          \  # The site where the background job is located.\n    },\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"site_id\": 'foobar',  # The site where\
          \ the background job is located.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/background_job/foobar?{query_string}\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/background_job/foobar\" \\\n    \"\
          Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    site_id=='foobar' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'site_id=foobar' \\\n  \"$API_URL/objects/background_job/foobar\""
  /domain-types/broker_connection/collections/all:
    get:
      tags:
      - Broker Connection
      description: "\n\nThis endpoint requires the following permissions: \n * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Show all peer to peer broker connections
      operationId: cmk.gui.openapi.endpoints.broker_connection.show_broker_connections
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerConnectionResponseCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/broker_connection/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/broker_connection/collections/all\",\n  \
          \  method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/broker_connection/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/broker_connection/collections/all\""
    post:
      tags:
      - Broker Connection
      description: "\n\nThis endpoint requires the following permissions: \n * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Create a peer to peer broker connection
      operationId: cmk.gui.openapi.endpoints.broker_connection.create_broker_connection
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id007
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerConnectionResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id007
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerConnectionRequestCreate'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/broker_connection/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"connection_id\": \"connection_1\",\n    \
          \    \"connection_config\": {\n            \"connecter\": {\n          \
          \      \"site_id\": \"remote_1\",\n            },\n            \"connectee\"\
          : {\n                \"site_id\": \"remote_2\",\n            },\n      \
          \  },\n    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/broker_connection/collections/all\",\n  \
          \  method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"connection_id\": \"connection_1\"\
          ,\n        \"connection_config\": {\n            \"connecter\": {\n    \
          \            \"site_id\": \"remote_1\",\n            },\n            \"\
          connectee\": {\n                \"site_id\": \"remote_2\",\n           \
          \ },\n        },\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/broker_connection/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    connection_id='connection_1'\\\n    connection_config[connecter][site_id]='remote_1'\\\
          \n    connection_config[connectee][site_id]='remote_2'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"connection_config\": {\n            \"connectee\": {\n    \
          \          \"site_id\": \"remote_2\"\n            },\n            \"connecter\"\
          : {\n              \"site_id\": \"remote_1\"\n            }\n          },\n\
          \          \"connection_id\": \"connection_1\"\n        }' \\\n  \"$API_URL/domain-types/broker_connection/collections/all\""
  /objects/broker_connection/{connection_id}:
    get:
      tags:
      - Broker Connection
      description: "\n\nThis endpoint requires the following permissions: \n * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Show a peer to peer broker connection
      operationId: cmk.gui.openapi.endpoints.broker_connection.show_broker_connection
      parameters:
      - in: path
        name: connection_id
        description: An unique connection id for the broker connection
        schema:
          type: string
          example: connection_1
          pattern: ^[-a-z0-9A-Z_]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerConnectionResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/broker_connection/connection_1\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/broker_connection/connection_1\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/broker_connection/connection_1\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/broker_connection/connection_1\""
    put:
      tags:
      - Broker Connection
      description: "\n\nThis endpoint requires the following permissions: \n * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Edit a peer to peer broker connection
      operationId: cmk.gui.openapi.endpoints.broker_connection.edit_broker_connection
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id008
          type: string
        example: application/json
      - in: path
        name: connection_id
        description: An unique connection id for the broker connection
        schema:
          type: string
          example: connection_1
          pattern: ^[-a-z0-9A-Z_]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerConnectionResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id008
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrokerConnectionRequestUpdate'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/broker_connection/connection_1\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"connection_config\"\
          : {\n            \"connecter\": {\n                \"site_id\": \"remote_1\"\
          ,\n            },\n            \"connectee\": {\n                \"site_id\"\
          : \"remote_2\",\n            },\n        },\n    },\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/broker_connection/connection_1\",\n    method=\"\
          PUT\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n        \"Content-Type\": 'application/json', \
          \ # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    data=json.dumps({\n        \"connection_config\": {\n\
          \            \"connecter\": {\n                \"site_id\": \"remote_1\"\
          ,\n            },\n            \"connectee\": {\n                \"site_id\"\
          : \"remote_2\",\n            },\n        },\n    }).encode('utf-8'),\n)\n\
          # Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/broker_connection/connection_1\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n    'Content-Type:application/json'\
          \ \\\n    connection_config[connecter][site_id]='remote_1'\\\n    connection_config[connectee][site_id]='remote_2'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"connection_config\"\
          : {\n            \"connectee\": {\n              \"site_id\": \"remote_2\"\
          \n            },\n            \"connecter\": {\n              \"site_id\"\
          : \"remote_1\"\n            }\n          }\n        }' \\\n  \"$API_URL/objects/broker_connection/connection_1\""
    delete:
      tags:
      - Broker Connection
      description: "\n\nThis endpoint requires the following permissions: \n * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Delete a peer to peer broker connection
      operationId: cmk.gui.openapi.endpoints.broker_connection.delete_broker_connection
      parameters:
      - in: path
        name: connection_id
        description: An unique connection id for the broker connection
        schema:
          type: string
          example: connection_1
          pattern: ^[-a-z0-9A-Z_]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/broker_connection/connection_1\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/broker_connection/connection_1\",\n    method=\"\
          DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \   },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/broker_connection/connection_1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/broker_connection/connection_1\""
  /domain-types/bi_aggregation/actions/aggregation_state/invoke:
    get:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * Business\
        \ Intelligence rules and aggregations (`wato.bi_rules`): Use the Setup BI\
        \ module, create, modify and delete BI rules and aggregations in packs that\
        \ you are a contact of.\n"
      summary: Get the state of BI aggregations
      operationId: cmk.gui.bi._openapi.bi_aggregation_state_get
      parameters:
      - in: query
        name: filter_names
        description: Filter by names
        schema:
          type: array
          example: &id112
          - Host foo
          items:
            type: string
        required: false
        explode: true
        style: form
      - in: query
        name: filter_groups
        description: Filter by group
        schema:
          type: array
          example: &id113
          - My Group
          items:
            type: string
        required: false
        explode: true
        style: form
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIAggregationStateResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/bi_aggregation/actions/aggregation_state/invoke\"\
          ,\n    params={  # goes into query string\n        \"filter_names\": ['Host\
          \ foo'],  # Filter by names\n        \"filter_groups\": ['My Group'],  #\
          \ Filter by group\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"filter_names\": ['Host foo'],  # Filter\
          \ by names\n    \"filter_groups\": ['My Group'],  # Filter by group\n})\n\
          \nrequest = urllib.request.Request(\n    f\"{API_URL}/domain-types/bi_aggregation/actions/aggregation_state/invoke?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/bi_aggregation/actions/aggregation_state/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    filter_names=='['Host foo']' \\\n   \
          \ filter_groups=='['My Group']' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'filter_names=Host foo' \\\n  --data-urlencode\
          \ 'filter_groups=My Group' \\\n  \"$API_URL/domain-types/bi_aggregation/actions/aggregation_state/invoke\""
    post:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * Business\
        \ Intelligence rules and aggregations (`wato.bi_rules`): Use the Setup BI\
        \ module, create, modify and delete BI rules and aggregations in packs that\
        \ you are a contact of.\n"
      summary: Get the state of BI aggregations
      operationId: cmk.gui.bi._openapi.bi_aggregation_state_post
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id009
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIAggregationStateResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id009
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BIAggregationStateRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/bi_aggregation/actions/aggregation_state/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"filter_names\": [\"Host foo\"],\n       \
          \ \"filter_groups\": [\"My Group\"],\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/bi_aggregation/actions/aggregation_state/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"filter_names\": [\"Host foo\"\
          ],\n        \"filter_groups\": [\"My Group\"],\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/bi_aggregation/actions/aggregation_state/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    filter_names:='[\"Host foo\"]'\\\n    filter_groups:='[\"My Group\"\
          ]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"filter_groups\": [\n            \"My Group\"\n          ],\n\
          \          \"filter_names\": [\n            \"Host foo\"\n          ]\n\
          \        }' \\\n  \"$API_URL/domain-types/bi_aggregation/actions/aggregation_state/invoke\""
  /domain-types/bi_pack/collections/all:
    get:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * Business\
        \ Intelligence rules and aggregations (`wato.bi_rules`): Use the Setup BI\
        \ module, create, modify and delete BI rules and aggregations in packs that\
        \ you are a contact of.\n"
      summary: Show all BI packs
      operationId: cmk.gui.bi._openapi.get_bi_packs
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/bi_pack/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/bi_pack/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/bi_pack/collections/all\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/bi_pack/collections/all\""
  /objects/bi_aggregation/{aggregation_id}:
    get:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * Business\
        \ Intelligence rules and aggregations (`wato.bi_rules`): Use the Setup BI\
        \ module, create, modify and delete BI rules and aggregations in packs that\
        \ you are a contact of.\n"
      summary: Get a BI aggregation
      operationId: cmk.gui.bi._openapi.get_bi_aggregation
      parameters:
      - in: path
        name: aggregation_id
        description: The unique id for the aggregation
        schema:
          type: string
          example: aggregation1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIAggregationEndpoint'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/bi_aggregation/aggregation1\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_aggregation/aggregation1\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/bi_aggregation/aggregation1\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/bi_aggregation/aggregation1\""
    put:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Business Intelligence rules and aggregations\
        \ (`wato.bi_rules`): Use the Setup BI module, create, modify and delete BI\
        \ rules and aggregations in packs that you are a contact of.\n"
      summary: Update an existing BI aggregation
      operationId: cmk.gui.bi._openapi.put_bi_aggregation
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id010
          type: string
        example: application/json
      - in: path
        name: aggregation_id
        description: The unique id for the aggregation
        schema:
          type: string
          example: aggregation1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIAggregationEndpoint'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id010
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BIAggregationEndpoint'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/bi_aggregation/aggregation1\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"id\": \"aggr1\",\n        \"comment\": \"\
          Rule comment\",\n        \"customer\": \"customer1\",\n        \"groups\"\
          : {\n            \"names\": [\"groupA\", \"groupB\"],\n            \"paths\"\
          : [\n                [\"path\", \"group\", \"a\"],\n                [\"\
          path\", \"group\", \"b\"],\n            ],\n        },\n        \"node\"\
          : {\n            \"search\": {\n                \"type\": \"empty\",\n \
          \           },\n            \"action\": {\n                \"type\": \"\
          state_of_host\",\n                \"host_regex\": \"\",\n            },\n\
          \        },\n        \"aggregation_visualization\": {\n            \"ignore_rule_styles\"\
          : False,\n            \"layout_id\": \"builtin_default\",\n            \"\
          line_style\": \"round\",\n        },\n        \"computation_options\": {\n\
          \            \"disabled\": False,\n            \"use_hard_states\": False,\n\
          \            \"escalate_downtimes_as_warn\": False,\n            \"freeze_aggregations\"\
          : False,\n        },\n        \"pack_id\": \"pack1\",\n    },\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_aggregation/aggregation1\",\n    method=\"\
          PUT\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"id\": \"aggr1\",\n        \"comment\": \"Rule comment\",\n      \
          \  \"customer\": \"customer1\",\n        \"groups\": {\n            \"names\"\
          : [\"groupA\", \"groupB\"],\n            \"paths\": [\n                [\"\
          path\", \"group\", \"a\"],\n                [\"path\", \"group\", \"b\"\
          ],\n            ],\n        },\n        \"node\": {\n            \"search\"\
          : {\n                \"type\": \"empty\",\n            },\n            \"\
          action\": {\n                \"type\": \"state_of_host\",\n            \
          \    \"host_regex\": \"\",\n            },\n        },\n        \"aggregation_visualization\"\
          : {\n            \"ignore_rule_styles\": False,\n            \"layout_id\"\
          : \"builtin_default\",\n            \"line_style\": \"round\",\n       \
          \ },\n        \"computation_options\": {\n            \"disabled\": False,\n\
          \            \"use_hard_states\": False,\n            \"escalate_downtimes_as_warn\"\
          : False,\n            \"freeze_aggregations\": False,\n        },\n    \
          \    \"pack_id\": \"pack1\",\n    }).encode('utf-8'),\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/bi_aggregation/aggregation1\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'Content-Type:application/json' \\\n    id='aggr1'\\\n \
          \   comment='Rule comment'\\\n    customer='customer1'\\\n    groups[names]:='[\"\
          groupA\", \"groupB\"]'\\\n    groups[paths]:='[[\"path\", \"group\", \"\
          a\"], [\"path\", \"group\", \"b\"]]'\\\n    node[search][type]='empty'\\\
          \n    node[action][type]='state_of_host'\\\n    node[action][host_regex]=''\\\
          \n    aggregation_visualization[ignore_rule_styles]:=false\\\n    aggregation_visualization[layout_id]='builtin_default'\\\
          \n    aggregation_visualization[line_style]='round'\\\n    computation_options[disabled]:=false\\\
          \n    computation_options[use_hard_states]:=false\\\n    computation_options[escalate_downtimes_as_warn]:=false\\\
          \n    computation_options[freeze_aggregations]:=false\\\n    pack_id='pack1'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"aggregation_visualization\": {\n            \"ignore_rule_styles\"\
          : false,\n            \"layout_id\": \"builtin_default\",\n            \"\
          line_style\": \"round\"\n          },\n          \"comment\": \"Rule comment\"\
          ,\n          \"computation_options\": {\n            \"disabled\": false,\n\
          \            \"escalate_downtimes_as_warn\": false,\n            \"freeze_aggregations\"\
          : false,\n            \"use_hard_states\": false\n          },\n       \
          \   \"customer\": \"customer1\",\n          \"groups\": {\n            \"\
          names\": [\n              \"groupA\",\n              \"groupB\"\n      \
          \      ],\n            \"paths\": [\n              [\n                \"\
          path\",\n                \"group\",\n                \"a\"\n           \
          \   ],\n              [\n                \"path\",\n                \"group\"\
          ,\n                \"b\"\n              ]\n            ]\n          },\n\
          \          \"id\": \"aggr1\",\n          \"node\": {\n            \"action\"\
          : {\n              \"host_regex\": \"\",\n              \"type\": \"state_of_host\"\
          \n            },\n            \"search\": {\n              \"type\": \"\
          empty\"\n            }\n          },\n          \"pack_id\": \"pack1\"\n\
          \        }' \\\n  \"$API_URL/objects/bi_aggregation/aggregation1\""
    post:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Business Intelligence rules and aggregations\
        \ (`wato.bi_rules`): Use the Setup BI module, create, modify and delete BI\
        \ rules and aggregations in packs that you are a contact of.\n"
      summary: Create a BI aggregation
      operationId: cmk.gui.bi._openapi.post_bi_aggregation
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id011
          type: string
        example: application/json
      - in: path
        name: aggregation_id
        description: The unique id for the aggregation
        schema:
          type: string
          example: aggregation1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIAggregationEndpoint'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id011
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BIAggregationEndpoint'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/bi_aggregation/aggregation1\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"id\": \"aggr1\",\n        \"comment\": \"\
          Rule comment\",\n        \"customer\": \"customer1\",\n        \"groups\"\
          : {\n            \"names\": [\"groupA\", \"groupB\"],\n            \"paths\"\
          : [\n                [\"path\", \"group\", \"a\"],\n                [\"\
          path\", \"group\", \"b\"],\n            ],\n        },\n        \"node\"\
          : {\n            \"search\": {\n                \"type\": \"empty\",\n \
          \           },\n            \"action\": {\n                \"type\": \"\
          state_of_host\",\n                \"host_regex\": \"\",\n            },\n\
          \        },\n        \"aggregation_visualization\": {\n            \"ignore_rule_styles\"\
          : False,\n            \"layout_id\": \"builtin_default\",\n            \"\
          line_style\": \"round\",\n        },\n        \"computation_options\": {\n\
          \            \"disabled\": False,\n            \"use_hard_states\": False,\n\
          \            \"escalate_downtimes_as_warn\": False,\n            \"freeze_aggregations\"\
          : False,\n        },\n        \"pack_id\": \"pack1\",\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_aggregation/aggregation1\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    data=json.dumps({\n\
          \        \"id\": \"aggr1\",\n        \"comment\": \"Rule comment\",\n  \
          \      \"customer\": \"customer1\",\n        \"groups\": {\n           \
          \ \"names\": [\"groupA\", \"groupB\"],\n            \"paths\": [\n     \
          \           [\"path\", \"group\", \"a\"],\n                [\"path\", \"\
          group\", \"b\"],\n            ],\n        },\n        \"node\": {\n    \
          \        \"search\": {\n                \"type\": \"empty\",\n         \
          \   },\n            \"action\": {\n                \"type\": \"state_of_host\"\
          ,\n                \"host_regex\": \"\",\n            },\n        },\n \
          \       \"aggregation_visualization\": {\n            \"ignore_rule_styles\"\
          : False,\n            \"layout_id\": \"builtin_default\",\n            \"\
          line_style\": \"round\",\n        },\n        \"computation_options\": {\n\
          \            \"disabled\": False,\n            \"use_hard_states\": False,\n\
          \            \"escalate_downtimes_as_warn\": False,\n            \"freeze_aggregations\"\
          : False,\n        },\n        \"pack_id\": \"pack1\",\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/bi_aggregation/aggregation1\" \\\n\
          \    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\"\
          \ \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    id='aggr1'\\\n    comment='Rule comment'\\\n    customer='customer1'\\\
          \n    groups[names]:='[\"groupA\", \"groupB\"]'\\\n    groups[paths]:='[[\"\
          path\", \"group\", \"a\"], [\"path\", \"group\", \"b\"]]'\\\n    node[search][type]='empty'\\\
          \n    node[action][type]='state_of_host'\\\n    node[action][host_regex]=''\\\
          \n    aggregation_visualization[ignore_rule_styles]:=false\\\n    aggregation_visualization[layout_id]='builtin_default'\\\
          \n    aggregation_visualization[line_style]='round'\\\n    computation_options[disabled]:=false\\\
          \n    computation_options[use_hard_states]:=false\\\n    computation_options[escalate_downtimes_as_warn]:=false\\\
          \n    computation_options[freeze_aggregations]:=false\\\n    pack_id='pack1'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"aggregation_visualization\": {\n            \"ignore_rule_styles\"\
          : false,\n            \"layout_id\": \"builtin_default\",\n            \"\
          line_style\": \"round\"\n          },\n          \"comment\": \"Rule comment\"\
          ,\n          \"computation_options\": {\n            \"disabled\": false,\n\
          \            \"escalate_downtimes_as_warn\": false,\n            \"freeze_aggregations\"\
          : false,\n            \"use_hard_states\": false\n          },\n       \
          \   \"customer\": \"customer1\",\n          \"groups\": {\n            \"\
          names\": [\n              \"groupA\",\n              \"groupB\"\n      \
          \      ],\n            \"paths\": [\n              [\n                \"\
          path\",\n                \"group\",\n                \"a\"\n           \
          \   ],\n              [\n                \"path\",\n                \"group\"\
          ,\n                \"b\"\n              ]\n            ]\n          },\n\
          \          \"id\": \"aggr1\",\n          \"node\": {\n            \"action\"\
          : {\n              \"host_regex\": \"\",\n              \"type\": \"state_of_host\"\
          \n            },\n            \"search\": {\n              \"type\": \"\
          empty\"\n            }\n          },\n          \"pack_id\": \"pack1\"\n\
          \        }' \\\n  \"$API_URL/objects/bi_aggregation/aggregation1\""
    delete:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Business Intelligence rules and aggregations\
        \ (`wato.bi_rules`): Use the Setup BI module, create, modify and delete BI\
        \ rules and aggregations in packs that you are a contact of.\n"
      summary: Delete a BI aggregation
      operationId: cmk.gui.bi._openapi.delete_bi_aggregation
      parameters:
      - in: path
        name: aggregation_id
        description: The unique id for the aggregation
        schema:
          type: string
          example: aggregation1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/bi_aggregation/aggregation1\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_aggregation/aggregation1\",\n    method=\"\
          DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \   },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/bi_aggregation/aggregation1\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/bi_aggregation/aggregation1\""
  /objects/bi_pack/{pack_id}:
    get:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * Business\
        \ Intelligence rules and aggregations (`wato.bi_rules`): Use the Setup BI\
        \ module, create, modify and delete BI rules and aggregations in packs that\
        \ you are a contact of.\n"
      summary: Get a BI pack and its rules and aggregations
      operationId: cmk.gui.bi._openapi.get_bi_pack
      parameters:
      - in: path
        name: pack_id
        description: The unique id for the aggregation pack
        schema:
          type: string
          example: pack1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/bi_pack/pack1\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_pack/pack1\",\n    method=\"GET\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n    },\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/bi_pack/pack1\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/bi_pack/pack1\""
    put:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Business Intelligence rules and aggregations\
        \ (`wato.bi_rules`): Use the Setup BI module, create, modify and delete BI\
        \ rules and aggregations in packs that you are a contact of.\n   * Business\
        \ Intelligence administration (`wato.bi_admin`): Edit all rules and aggregations\
        \ for Business Intelligence, create, modify and delete rule packs.\n"
      summary: Update an existing BI pack
      operationId: cmk.gui.bi._openapi.put_bi_pack
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id012
          type: string
        example: application/json
      - in: path
        name: pack_id
        description: The unique id for the aggregation pack
        schema:
          type: string
          example: pack1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIPackEndpoint'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id012
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BIPackEndpoint'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/bi_pack/pack1\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"title\": \"BI Title\",\n        \"contact_groups\"\
          : [\"contact\", \"contactgroup_b\"],\n        \"public\": \"false\",\n \
          \   },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_pack/pack1\",\n    method=\"PUT\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"title\": \"BI Title\",\n        \"contact_groups\": [\"contact\"\
          , \"contactgroup_b\"],\n        \"public\": \"false\",\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/bi_pack/pack1\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    \n    'Content-Type:application/json' \\\n    title='BI Title'\\\n\
          \    contact_groups:='[\"contact\", \"contactgroup_b\"]'\\\n    public='false'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"contact_groups\": [\n            \"contact\",\n           \
          \ \"contactgroup_b\"\n          ],\n          \"public\": \"false\",\n \
          \         \"title\": \"BI Title\"\n        }' \\\n  \"$API_URL/objects/bi_pack/pack1\""
    post:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Business Intelligence rules and aggregations\
        \ (`wato.bi_rules`): Use the Setup BI module, create, modify and delete BI\
        \ rules and aggregations in packs that you are a contact of.\n   * Business\
        \ Intelligence administration (`wato.bi_admin`): Edit all rules and aggregations\
        \ for Business Intelligence, create, modify and delete rule packs.\n"
      summary: Create a new BI pack
      operationId: cmk.gui.bi._openapi.post_bi_pack
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id013
          type: string
        example: application/json
      - in: path
        name: pack_id
        description: The unique id for the aggregation pack
        schema:
          type: string
          example: pack1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIPackEndpoint'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id013
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BIPackEndpoint'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/bi_pack/pack1\",\n    headers={\n\
          \        \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    json={\n\
          \        \"title\": \"BI Title\",\n        \"contact_groups\": [\"contact\"\
          , \"contactgroup_b\"],\n        \"public\": \"false\",\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_pack/pack1\",\n    method=\"POST\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"title\": \"BI Title\",\n        \"contact_groups\": [\"contact\"\
          , \"contactgroup_b\"],\n        \"public\": \"false\",\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/bi_pack/pack1\" \\\n    --follow\
          \ \\\n    --all \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\
          \n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    title='BI Title'\\\n    contact_groups:='[\"contact\", \"contactgroup_b\"\
          ]'\\\n    public='false'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"contact_groups\": [\n            \"contact\",\n           \
          \ \"contactgroup_b\"\n          ],\n          \"public\": \"false\",\n \
          \         \"title\": \"BI Title\"\n        }' \\\n  \"$API_URL/objects/bi_pack/pack1\""
    delete:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Business Intelligence rules and aggregations\
        \ (`wato.bi_rules`): Use the Setup BI module, create, modify and delete BI\
        \ rules and aggregations in packs that you are a contact of.\n   * Business\
        \ Intelligence administration (`wato.bi_admin`): Edit all rules and aggregations\
        \ for Business Intelligence, create, modify and delete rule packs.\n"
      summary: Delete BI pack
      operationId: cmk.gui.bi._openapi.delete_bi_pack
      parameters:
      - in: path
        name: pack_id
        description: The unique id for the aggregation pack
        schema:
          type: string
          example: pack1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/bi_pack/pack1\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_pack/pack1\",\n    method=\"DELETE\",\n   \
          \ headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/bi_pack/pack1\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/bi_pack/pack1\""
  /objects/bi_rule/{rule_id}:
    get:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * Business\
        \ Intelligence rules and aggregations (`wato.bi_rules`): Use the Setup BI\
        \ module, create, modify and delete BI rules and aggregations in packs that\
        \ you are a contact of.\n"
      summary: Show a BI rule
      operationId: cmk.gui.bi._openapi.get_bi_rule
      parameters:
      - in: path
        name: rule_id
        description: The unique id for the rule
        schema:
          type: string
          example: rule1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIRuleEndpoint'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/bi_rule/rule1\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_rule/rule1\",\n    method=\"GET\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n    },\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/bi_rule/rule1\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/bi_rule/rule1\""
    put:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Business Intelligence rules and aggregations\
        \ (`wato.bi_rules`): Use the Setup BI module, create, modify and delete BI\
        \ rules and aggregations in packs that you are a contact of.\n"
      summary: Update an existing BI rule
      operationId: cmk.gui.bi._openapi.put_bi_rule
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id014
          type: string
        example: application/json
      - in: path
        name: rule_id
        description: The unique id for the rule
        schema:
          type: string
          example: rule1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIRuleEndpoint'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id014
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BIRuleEndpoint'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/bi_rule/rule1\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"id\": \"rule1\",\n        \"nodes\": [],\n\
          \        \"params\": {\n            \"arguments\": [\"foo\", \"bar\"],\n\
          \        },\n        \"node_visualization\": {\n            \"type\": \"\
          block\",\n            \"style_config\": {\n            },\n        },\n\
          \        \"properties\": {\n            \"title\": \"\",\n            \"\
          comment\": \"\",\n            \"docu_url\": \"\",\n            \"icon\"\
          : \"\",\n            \"state_messages\": {\n            },\n        },\n\
          \        \"aggregation_function\": {\n            \"type\": \"best\",\n\
          \            \"count\": 1,\n            \"restrict_state\": 2,\n       \
          \ },\n        \"computation_options\": {\n            \"disabled\": False,\n\
          \        },\n        \"pack_id\": \"pack1\",\n    },\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_rule/rule1\",\n    method=\"PUT\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"id\": \"rule1\",\n        \"nodes\": [],\n        \"params\": {\n\
          \            \"arguments\": [\"foo\", \"bar\"],\n        },\n        \"\
          node_visualization\": {\n            \"type\": \"block\",\n            \"\
          style_config\": {\n            },\n        },\n        \"properties\": {\n\
          \            \"title\": \"\",\n            \"comment\": \"\",\n        \
          \    \"docu_url\": \"\",\n            \"icon\": \"\",\n            \"state_messages\"\
          : {\n            },\n        },\n        \"aggregation_function\": {\n \
          \           \"type\": \"best\",\n            \"count\": 1,\n           \
          \ \"restrict_state\": 2,\n        },\n        \"computation_options\": {\n\
          \            \"disabled\": False,\n        },\n        \"pack_id\": \"pack1\"\
          ,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 200:\n\
          \    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/bi_rule/rule1\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    \n    'Content-Type:application/json' \\\n    id='rule1'\\\n    nodes:='[]'\\\
          \n    params[arguments]:='[\"foo\", \"bar\"]'\\\n    node_visualization[type]='block'\\\
          \n    properties[title]=''\\\n    properties[comment]=''\\\n    properties[docu_url]=''\\\
          \n    properties[icon]=''\\\n    aggregation_function[type]='best'\\\n \
          \   aggregation_function[count]:=1\\\n    aggregation_function[restrict_state]:=2\\\
          \n    computation_options[disabled]:=false\\\n    pack_id='pack1'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"aggregation_function\": {\n            \"count\": 1,\n    \
          \        \"restrict_state\": 2,\n            \"type\": \"best\"\n      \
          \    },\n          \"computation_options\": {\n            \"disabled\"\
          : false\n          },\n          \"id\": \"rule1\",\n          \"node_visualization\"\
          : {\n            \"style_config\": {},\n            \"type\": \"block\"\n\
          \          },\n          \"nodes\": [],\n          \"pack_id\": \"pack1\"\
          ,\n          \"params\": {\n            \"arguments\": [\n             \
          \ \"foo\",\n              \"bar\"\n            ]\n          },\n       \
          \   \"properties\": {\n            \"comment\": \"\",\n            \"docu_url\"\
          : \"\",\n            \"icon\": \"\",\n            \"state_messages\": {},\n\
          \            \"title\": \"\"\n          }\n        }' \\\n  \"$API_URL/objects/bi_rule/rule1\""
    post:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Business Intelligence rules and aggregations\
        \ (`wato.bi_rules`): Use the Setup BI module, create, modify and delete BI\
        \ rules and aggregations in packs that you are a contact of.\n"
      summary: Create a new BI rule
      operationId: cmk.gui.bi._openapi.post_bi_rule
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id015
          type: string
        example: application/json
      - in: path
        name: rule_id
        description: The unique id for the rule
        schema:
          type: string
          example: rule1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIRuleEndpoint'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id015
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BIRuleEndpoint'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/bi_rule/rule1\",\n    headers={\n\
          \        \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    json={\n\
          \        \"id\": \"rule1\",\n        \"nodes\": [],\n        \"params\"\
          : {\n            \"arguments\": [\"foo\", \"bar\"],\n        },\n      \
          \  \"node_visualization\": {\n            \"type\": \"block\",\n       \
          \     \"style_config\": {\n            },\n        },\n        \"properties\"\
          : {\n            \"title\": \"\",\n            \"comment\": \"\",\n    \
          \        \"docu_url\": \"\",\n            \"icon\": \"\",\n            \"\
          state_messages\": {\n            },\n        },\n        \"aggregation_function\"\
          : {\n            \"type\": \"best\",\n            \"count\": 1,\n      \
          \      \"restrict_state\": 2,\n        },\n        \"computation_options\"\
          : {\n            \"disabled\": False,\n        },\n        \"pack_id\":\
          \ \"pack1\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_rule/rule1\",\n    method=\"POST\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"id\": \"rule1\",\n        \"nodes\": [],\n        \"params\": {\n\
          \            \"arguments\": [\"foo\", \"bar\"],\n        },\n        \"\
          node_visualization\": {\n            \"type\": \"block\",\n            \"\
          style_config\": {\n            },\n        },\n        \"properties\": {\n\
          \            \"title\": \"\",\n            \"comment\": \"\",\n        \
          \    \"docu_url\": \"\",\n            \"icon\": \"\",\n            \"state_messages\"\
          : {\n            },\n        },\n        \"aggregation_function\": {\n \
          \           \"type\": \"best\",\n            \"count\": 1,\n           \
          \ \"restrict_state\": 2,\n        },\n        \"computation_options\": {\n\
          \            \"disabled\": False,\n        },\n        \"pack_id\": \"pack1\"\
          ,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 200:\n\
          \    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status ==\
          \ 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/bi_rule/rule1\" \\\n    --follow\
          \ \\\n    --all \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\
          \n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    id='rule1'\\\n    nodes:='[]'\\\n    params[arguments]:='[\"foo\"\
          , \"bar\"]'\\\n    node_visualization[type]='block'\\\n    properties[title]=''\\\
          \n    properties[comment]=''\\\n    properties[docu_url]=''\\\n    properties[icon]=''\\\
          \n    aggregation_function[type]='best'\\\n    aggregation_function[count]:=1\\\
          \n    aggregation_function[restrict_state]:=2\\\n    computation_options[disabled]:=false\\\
          \n    pack_id='pack1'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"aggregation_function\": {\n            \"count\": 1,\n    \
          \        \"restrict_state\": 2,\n            \"type\": \"best\"\n      \
          \    },\n          \"computation_options\": {\n            \"disabled\"\
          : false\n          },\n          \"id\": \"rule1\",\n          \"node_visualization\"\
          : {\n            \"style_config\": {},\n            \"type\": \"block\"\n\
          \          },\n          \"nodes\": [],\n          \"pack_id\": \"pack1\"\
          ,\n          \"params\": {\n            \"arguments\": [\n             \
          \ \"foo\",\n              \"bar\"\n            ]\n          },\n       \
          \   \"properties\": {\n            \"comment\": \"\",\n            \"docu_url\"\
          : \"\",\n            \"icon\": \"\",\n            \"state_messages\": {},\n\
          \            \"title\": \"\"\n          }\n        }' \\\n  \"$API_URL/objects/bi_rule/rule1\""
    delete:
      tags:
      - Business intelligence (BI)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Business Intelligence rules and aggregations\
        \ (`wato.bi_rules`): Use the Setup BI module, create, modify and delete BI\
        \ rules and aggregations in packs that you are a contact of.\n"
      summary: Delete BI rule
      operationId: cmk.gui.bi._openapi.delete_bi_rule
      parameters:
      - in: path
        name: rule_id
        description: The unique id for the rule
        schema:
          type: string
          example: rule1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/bi_rule/rule1\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_rule/rule1\",\n    method=\"DELETE\",\n   \
          \ headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/bi_rule/rule1\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/bi_rule/rule1\""
  /agent_controller_certificates_settings:
    get:
      tags:
      - Certificates
      description: "\n\nThis endpoint requires the following permissions: \n * Any\
        \ of:\n   * Read access to all modules (`wato.seeall`): When this permission\
        \ is set then the user sees also such modules he has no explicit access to\
        \ (see below).\n   * Global settings (`wato.global`): Access to the module\
        \ <i>Global settings</i>\n"
      summary: Show agent controller certificate settings
      operationId: cmk.gui.openapi.endpoints.cert.agent_controller_certificates_settings
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Unauthorized to read the global settings'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403CustomError1'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentControllerCertificateSettings'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/agent_controller_certificates_settings\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/agent_controller_certificates_settings\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/agent_controller_certificates_settings\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/agent_controller_certificates_settings\""
  /root_cert:
    get:
      tags:
      - Certificates
      description: "\n\nThis endpoint requires the following permissions: \n * Agent\
        \ pairing (`general.agent_pairing`): Only relevant for the agent controller\
        \ shipped with Checkmk 2.1. Pairing of Checkmk agents with the monitoring\
        \ site. This step establishes trust between the agent and the monitoring site.\n"
      summary: X.509 PEM-encoded root certificate
      operationId: cmk.gui.openapi.endpoints.cert.root_cert
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: You do not have the permission for agent pairing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403CustomError2'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/X509PEM'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/root_cert\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/root_cert\",\n    method=\"GET\",\n    headers={\n   \
          \     \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n        \"\
          Accept\": \"application/json\",\n        \n    },\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/root_cert\" \\\n    \"Authorization: Bearer\
          \ $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/root_cert\""
  /csr:
    post:
      tags:
      - Certificates
      description: "\n\nThis endpoint requires the following permissions: \n * Agent\
        \ pairing (`general.agent_pairing`): Only relevant for the agent controller\
        \ shipped with Checkmk 2.1. Pairing of Checkmk agents with the monitoring\
        \ site. This step establishes trust between the agent and the monitoring site.\n"
      summary: X.509 PEM-encoded Certificate Signing Requests (CSRs)
      operationId: cmk.gui.openapi.endpoints.cert.make_certificate
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id016
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: You do not have the permission for agent pairing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403CustomError3'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/X509PEM'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id016
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/X509ReqPEMUUID'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/csr\",\n    headers={\n       \
          \ \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    json={\n\
          \        \"csr\": \"-----BEGIN CERTIFICATE REQUEST-----\\n...\\n-----END\
          \ CERTIFICATE REQUEST-----\\n\",\n    },\n    allow_redirects=True,\n)\n\
          if resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/csr\",\n    method=\"POST\",\n    headers={\n        \"\
          Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n        \"Accept\"\
          : \"application/json\",\n        \n        \"Content-Type\": 'application/json',\
          \  # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    data=json.dumps({\n        \"csr\": \"-----BEGIN CERTIFICATE\
          \ REQUEST-----\\n...\\n-----END CERTIFICATE REQUEST-----\\n\",\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/csr\" \\\n    --follow \\\n    --all \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'Content-Type:application/json' \\\n    csr='-----BEGIN\
          \ CERTIFICATE REQUEST-----\n    ...\n    -----END CERTIFICATE REQUEST-----\n\
          \    '"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"csr\": \"-----BEGIN CERTIFICATE REQUEST-----\\n...\\n-----END\
          \ CERTIFICATE REQUEST-----\\n\"\n        }' \\\n  \"$API_URL/csr\""
  /domain-types/comment/collections/{collection_name}:
    get:
      tags:
      - Comments
      description: ''
      summary: Show comments
      operationId: cmk.gui.openapi.endpoints.comment.show_comments
      parameters:
      - in: query
        name: query
        description: An query expression of the Livestatus 'comments' table in nested
          dictionary form. If you want to use multiple expressions, nest them with
          the AND/OR operators.
        required: false
        content:
          application/json:
            schema:
              example: '{"op": "=", "left": "host_name", "right": "example.com"}'
              $ref: '#/components/schemas/Expr'
      - in: query
        name: host_name
        description: The host name. No exception is raised when the specified host
          name does not exist
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: false
      - in: query
        name: service_description
        description: The service name. No exception is raised when the specified service
          description does not exist
        schema:
          type: string
          example: Memory
        required: false
      - in: query
        name: site_id
        description: An existing site id
        schema:
          type: string
          example: heute
        required: false
      - in: path
        name: collection_name
        description: Do you want to get comments from 'hosts', 'services' or 'all'
        schema:
          type: string
          enum:
          - host
          - service
          - all
          example: all
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/comment/collections/all\"\
          ,\n    params={  # goes into query string\n        \"query\": '{\"op\":\
          \ \"=\", \"left\": \"host_name\", \"right\": \"example.com\"}',  # An query\
          \ expression of the Livestatus 'comments' table in nested dictionary form.\n\
          \        \"host_name\": 'example.com',  # The host name.\n        \"service_description\"\
          : 'Memory',  # The service name.\n        \"site_id\": 'heute',  # An existing\
          \ site id\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"query\": '{\"op\": \"=\", \"left\": \"\
          host_name\", \"right\": \"example.com\"}',  # An query expression of the\
          \ Livestatus 'comments' table in nested dictionary form.\n    \"host_name\"\
          : 'example.com',  # The host name.\n    \"service_description\": 'Memory',\
          \  # The service name.\n    \"site_id\": 'heute',  # An existing site id\n\
          })\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/domain-types/comment/collections/all?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/comment/collections/all\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    query=='{\"op\": \"=\", \"left\": \"host_name\", \"right\"\
          : \"example.com\"}' \\\n    host_name=='example.com' \\\n    service_description=='Memory'\
          \ \\\n    site_id=='heute' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'query={\"op\": \"=\", \"left\": \"host_name\"\
          , \"right\": \"example.com\"}' \\\n  --data-urlencode 'host_name=example.com'\
          \ \\\n  --data-urlencode 'service_description=Memory' \\\n  --data-urlencode\
          \ 'site_id=heute' \\\n  \"$API_URL/domain-types/comment/collections/all\""
  /objects/comment/{comment_id}:
    get:
      tags:
      - Comments
      description: ''
      summary: Show a comment
      operationId: cmk.gui.openapi.endpoints.comment.show_comment
      parameters:
      - in: query
        name: site_id
        description: An existing site id
        schema:
          type: string
          example: heute
        required: true
      - in: path
        name: comment_id
        description: An existing comment's ID
        schema:
          type: integer
          example: '1'
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/comment/1\"\
          ,\n    params={  # goes into query string\n        \"site_id\": 'heute',\
          \  # (required) An existing site id\n    },\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"site_id\": 'heute',  # (required) An existing\
          \ site id\n})\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/objects/comment/1?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/comment/1\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    \n    site_id=='heute' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'site_id=heute' \\\n  \"$API_URL/objects/comment/1\""
  /domain-types/comment/actions/delete/invoke:
    post:
      tags:
      - Comments
      description: "\n\nThis endpoint requires the following permissions: \n * Add\
        \ comments (`action.addcomment`): Add comments to hosts or services, and remove\
        \ comments\n"
      summary: Delete comments
      operationId: cmk.gui.openapi.endpoints.comment.delete_comments
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteComments'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/comment/actions/delete/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"delete_type\"\
          : \"delete_by_query\",\n        \"comment_id\": 21,\n        \"site_id\"\
          : \"production\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 201:\nelif resp.status_code == 204:\n    print('Done')\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/comment/actions/delete/invoke\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    #\
          \ This schema has multiple variations. Please refer to\n    # the 'Payload'\
          \ section for details.\n    data=json.dumps({\n        \"delete_type\":\
          \ \"delete_by_query\",\n        \"comment_id\": 21,\n        \"site_id\"\
          : \"production\",\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/comment/actions/delete/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    delete_type='delete_by_query'\\\n    comment_id:=21\\\n    site_id='production'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"comment_id\": 21,\n          \"delete_type\"\
          : \"delete_by_query\",\n          \"site_id\": \"production\"\n        }'\
          \ \\\n  \"$API_URL/domain-types/comment/actions/delete/invoke\""
  /domain-types/comment/collections/host:
    post:
      tags:
      - Comments
      description: "\n\nThis endpoint requires the following permissions: \n * Add\
        \ comments (`action.addcomment`): Add comments to hosts or services, and remove\
        \ comments\n"
      summary: Create a host comment
      operationId: cmk.gui.openapi.endpoints.comment.create_host_comment
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHostRelatedComment'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/comment/collections/host\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"comment\"\
          : \"Windows\",\n        \"persistent\": False,\n        \"comment_type\"\
          : \"host\",\n        \"host_name\": \"example.com\",\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 201:\nelif resp.status_code == 204:\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/comment/collections/host\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    #\
          \ This schema has multiple variations. Please refer to\n    # the 'Payload'\
          \ section for details.\n    data=json.dumps({\n        \"comment\": \"Windows\"\
          ,\n        \"persistent\": False,\n        \"comment_type\": \"host\",\n\
          \        \"host_name\": \"example.com\",\n    }).encode('utf-8'),\n)\n#\
          \ Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/comment/collections/host\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    comment='Windows'\\\n    persistent:=false\\\n    comment_type='host'\\\
          \n    host_name='example.com'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"comment\": \"Windows\",\n          \"comment_type\"\
          : \"host\",\n          \"host_name\": \"example.com\",\n          \"persistent\"\
          : false\n        }' \\\n  \"$API_URL/domain-types/comment/collections/host\""
  /domain-types/comment/collections/service:
    post:
      tags:
      - Comments
      description: "\n\nThis endpoint requires the following permissions: \n * Add\
        \ comments (`action.addcomment`): Add comments to hosts or services, and remove\
        \ comments\n"
      summary: Create a service comment
      operationId: cmk.gui.openapi.endpoints.comment.create_service_comment
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceRelatedComment'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/comment/collections/service\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"comment\"\
          : \"Windows\",\n        \"persistent\": False,\n        \"comment_type\"\
          : \"service\",\n        \"host_name\": \"example.com\",\n        \"service_description\"\
          : \"Memory\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 201:\nelif resp.status_code == 204:\n    print('Done')\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/comment/collections/service\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    #\
          \ This schema has multiple variations. Please refer to\n    # the 'Payload'\
          \ section for details.\n    data=json.dumps({\n        \"comment\": \"Windows\"\
          ,\n        \"persistent\": False,\n        \"comment_type\": \"service\"\
          ,\n        \"host_name\": \"example.com\",\n        \"service_description\"\
          : \"Memory\",\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if\
          \ status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/comment/collections/service\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    comment='Windows'\\\n    persistent:=false\\\n    comment_type='service'\\\
          \n    host_name='example.com'\\\n    service_description='Memory'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"comment\": \"Windows\",\n          \"comment_type\"\
          : \"service\",\n          \"host_name\": \"example.com\",\n          \"\
          persistent\": false,\n          \"service_description\": \"Memory\"\n  \
          \      }' \\\n  \"$API_URL/domain-types/comment/collections/service\""
  /domain-types/form_spec/collections/{entity_type}:
    get:
      tags:
      - Configuration entities
      description: ''
      summary: Get a configuration entity form spec schema
      operationId: cmk.gui.openapi.endpoints.configuration_entity._get_configuration_entity_form_spec_schema
      parameters:
      - in: query
        name: entity_type_specifier
        description: Entity type specifier of the configuration entity
        schema:
          type: string
          example: mail
        required: true
      - in: path
        name: entity_type
        description: Type of configuration entity
        schema:
          type: string
          enum:
          - notification_parameter
          - folder
          example: notification_parameter
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/form_spec/collections/notification_parameter\"\
          ,\n    params={  # goes into query string\n        \"entity_type_specifier\"\
          : 'mail',  # (required) Entity type specifier of the configuration entity\n\
          \    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"entity_type_specifier\": 'mail',  # (required)\
          \ Entity type specifier of the configuration entity\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/form_spec/collections/notification_parameter?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/form_spec/collections/notification_parameter\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    entity_type_specifier=='mail' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'entity_type_specifier=mail' \\\n  \"$API_URL/domain-types/form_spec/collections/notification_parameter\""
  /domain-types/configuration_entity/actions/edit-single-entity/invoke:
    put:
      tags:
      - Configuration entities
      description: ''
      summary: Update an existing configuration entity
      operationId: cmk.gui.openapi.endpoints.configuration_entity._update_configuration_entity
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id017
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '422':
          description: 'Unprocessable Entity: The request could not be processed.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api422DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditConfigurationEntityResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id017
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigurationEntity'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/configuration_entity/actions/edit-single-entity/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entity_type\": \"notification_parameter\"\
          ,\n        \"entity_type_specifier\": \"mail\",\n        \"entity_id\":\
          \ \"b43b060b-3b8c-41cf-8405-dddc6dd02575\",\n        \"data\": {\n     \
          \   },\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/configuration_entity/actions/edit-single-entity/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entity_type\": \"notification_parameter\"\
          ,\n        \"entity_type_specifier\": \"mail\",\n        \"entity_id\":\
          \ \"b43b060b-3b8c-41cf-8405-dddc6dd02575\",\n        \"data\": {\n     \
          \   },\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/domain-types/configuration_entity/actions/edit-single-entity/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' \\\n\
          \    entity_type='notification_parameter'\\\n    entity_type_specifier='mail'\\\
          \n    entity_id='b43b060b-3b8c-41cf-8405-dddc6dd02575'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"data\": {},\n          \"entity_id\": \"b43b060b-3b8c-41cf-8405-dddc6dd02575\"\
          ,\n          \"entity_type\": \"notification_parameter\",\n          \"\
          entity_type_specifier\": \"mail\"\n        }' \\\n  \"$API_URL/domain-types/configuration_entity/actions/edit-single-entity/invoke\""
  /domain-types/configuration_entity/collections/all:
    post:
      tags:
      - Configuration entities
      description: ''
      summary: Create a configuration entity
      operationId: cmk.gui.openapi.endpoints.configuration_entity._create_configuration_entity
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id018
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '422':
          description: 'Unprocessable Entity: The request could not be processed.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api422DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditConfigurationEntityResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id018
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConfigurationEntity'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/configuration_entity/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entity_type\": \"notification_parameter\"\
          ,\n        \"entity_type_specifier\": \"mail\",\n        \"data\": {\n \
          \       },\n    },\n    allow_redirects=True,\n)\nif resp.status_code ==\
          \ 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/configuration_entity/collections/all\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entity_type\": \"notification_parameter\"\
          ,\n        \"entity_type_specifier\": \"mail\",\n        \"data\": {\n \
          \       },\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/configuration_entity/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    entity_type='notification_parameter'\\\n    entity_type_specifier='mail'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"data\": {},\n          \"entity_type\": \"notification_parameter\"\
          ,\n          \"entity_type_specifier\": \"mail\"\n        }' \\\n  \"$API_URL/domain-types/configuration_entity/collections/all\""
  /domain-types/folder/collections/{entity_type_specifier}:
    get:
      tags:
      - Configuration entities / Folder
      description: ''
      summary: List existing folder
      operationId: cmk.gui.openapi.endpoints.configuration_entity.folder._list_folder
      parameters:
      - in: path
        name: entity_type_specifier
        description: Entity type specifier of the configuration entity
        schema:
          type: string
          example: mail
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderResponseCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/folder/collections/mail\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/folder/collections/mail\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/folder/collections/mail\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/folder/collections/mail\""
  /domain-types/notification_parameter/collections/{entity_type_specifier}:
    get:
      tags:
      - Configuration entities / Notification Parameter
      description: ''
      summary: List existing notification parameters
      operationId: cmk.gui.openapi.endpoints.configuration_entity.notification_parameter._list_notification_parameters
      parameters:
      - in: path
        name: entity_type_specifier
        description: Entity type specifier of the configuration entity
        schema:
          type: string
          example: mail
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationParamResponseCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/notification_parameter/collections/mail\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/notification_parameter/collections/mail\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/notification_parameter/collections/mail\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/notification_parameter/collections/mail\""
  /objects/notification_parameter/{entity_id}:
    get:
      tags:
      - Configuration entities / Notification Parameter
      description: ''
      summary: Get a notification parameter
      operationId: cmk.gui.openapi.endpoints.configuration_entity.notification_parameter._get_notification_parameter
      parameters:
      - in: path
        name: entity_id
        description: Object id of the configuration entity
        schema:
          type: string
          example: b43b060b-3b8c-41cf-8405-dddc6dd02575
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/notification_parameter/b43b060b-3b8c-41cf-8405-dddc6dd02575\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/notification_parameter/b43b060b-3b8c-41cf-8405-dddc6dd02575\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/notification_parameter/b43b060b-3b8c-41cf-8405-dddc6dd02575\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/notification_parameter/b43b060b-3b8c-41cf-8405-dddc6dd02575\""
  /domain-types/contact_group_config/collections/all:
    get:
      tags:
      - Contact groups
      description: "\n\nThis endpoint requires the following permissions: \n * User\
        \ management (`wato.users`): This permission is needed for the modules <b>Users</b>,\
        \ <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Show all contact groups
      operationId: cmk.gui.openapi.endpoints.contact_group_config.list_group
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroupCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/contact_group_config/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/contact_group_config/collections/all\",\n\
          \    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/contact_group_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/contact_group_config/collections/all\""
    post:
      tags:
      - Contact groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * User management (`wato.users`): This\
        \ permission is needed for the modules <b>Users</b>, <b>Roles</b> and <b>Contact\
        \ groups</b>\n"
      summary: Create a contact group
      operationId: cmk.gui.openapi.endpoints.contact_group_config.create
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id019
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id019
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputContactGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/contact_group_config/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"name\": \"OnCall\",\n        \"alias\": \"\
          Not on Sundays.\",\n        \"inventory_paths\": {\n            \"type\"\
          : \"allow_all\",\n        },\n        \"customer\": \"provider\",\n    },\n\
          \    allow_redirects=True,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          elif resp.status_code == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/contact_group_config/collections/all\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"name\": \"OnCall\",\n        \"\
          alias\": \"Not on Sundays.\",\n        \"inventory_paths\": {\n        \
          \    \"type\": \"allow_all\",\n        },\n        \"customer\": \"provider\"\
          ,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 200:\n\
          \    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status ==\
          \ 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/contact_group_config/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    name='OnCall'\\\n    alias='Not on Sundays.'\\\n    inventory_paths[type]='allow_all'\\\
          \n    customer='provider'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"alias\": \"Not on Sundays.\",\n          \"customer\": \"provider\"\
          ,\n          \"inventory_paths\": {\n            \"type\": \"allow_all\"\
          \n          },\n          \"name\": \"OnCall\"\n        }' \\\n  \"$API_URL/domain-types/contact_group_config/collections/all\""
  /objects/contact_group_config/{name}:
    get:
      tags:
      - Contact groups
      description: "\n\nThis endpoint requires the following permissions: \n * User\
        \ management (`wato.users`): This permission is needed for the modules <b>Users</b>,\
        \ <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Show a contact group
      operationId: cmk.gui.openapi.endpoints.contact_group_config.show
      parameters:
      - in: path
        name: name
        description: The identifier name of the group.
        schema:
          type: string
          example: pathname
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroup'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/contact_group_config/pathname\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/contact_group_config/pathname\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/contact_group_config/pathname\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/contact_group_config/pathname\""
    put:
      tags:
      - Contact groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * User management (`wato.users`): This\
        \ permission is needed for the modules <b>Users</b>, <b>Roles</b> and <b>Contact\
        \ groups</b>\n"
      summary: Update a contact group
      operationId: cmk.gui.openapi.endpoints.contact_group_config.update
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id020
          type: string
        example: application/json
      - in: path
        name: name
        description: The identifier name of the group.
        schema:
          type: string
          example: pathname
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroup'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id020
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactGroupAttributes'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/contact_group_config/pathname\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"alias\"\
          : \"Example Group\",\n        \"inventory_paths\": {\n            \"type\"\
          : \"allow_all\",\n        },\n        \"customer\": \"provider\",\n    },\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/contact_group_config/pathname\",\n    method=\"\
          PUT\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n        \"Content-Type\": 'application/json', \
          \ # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    data=json.dumps({\n        \"alias\": \"Example Group\"\
          ,\n        \"inventory_paths\": {\n            \"type\": \"allow_all\",\n\
          \        },\n        \"customer\": \"provider\",\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/contact_group_config/pathname\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n    'Content-Type:application/json'\
          \ \\\n    alias='Example Group'\\\n    inventory_paths[type]='allow_all'\\\
          \n    customer='provider'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"alias\": \"\
          Example Group\",\n          \"customer\": \"provider\",\n          \"inventory_paths\"\
          : {\n            \"type\": \"allow_all\"\n          }\n        }' \\\n \
          \ \"$API_URL/objects/contact_group_config/pathname\""
    delete:
      tags:
      - Contact groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * User management (`wato.users`): This\
        \ permission is needed for the modules <b>Users</b>, <b>Roles</b> and <b>Contact\
        \ groups</b>\n"
      summary: Delete a contact group
      operationId: cmk.gui.openapi.endpoints.contact_group_config.delete
      parameters:
      - in: path
        name: name
        description: The identifier name of the group.
        schema:
          type: string
          example: pathname
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/contact_group_config/pathname\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/contact_group_config/pathname\",\n    method=\"\
          DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \   },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/contact_group_config/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/contact_group_config/pathname\""
  /domain-types/contact_group_config/actions/bulk-update/invoke:
    put:
      tags:
      - Contact groups
      description: "Please be aware that when doing bulk updates, it is not possible\
        \ to prevent the\n[Updating Values](\"lost update problem\"), which is normally\
        \ prevented by the ETag locking\nmechanism. Use at your own risk.This endpoint\
        \ requires the following permissions: \n * All of:\n   * Make changes, perform\
        \ actions (`wato.edit`): This permission is needed in order to make any changes\
        \ or perform any actions at all. Without this permission, the user is only\
        \ able to view data, and that only in modules he has explicit permissions\
        \ for.\n   * User management (`wato.users`): This permission is needed for\
        \ the modules <b>Users</b>, <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Bulk update contact groups
      operationId: cmk.gui.openapi.endpoints.contact_group_config.bulk_update
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id021
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroupCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id021
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateContactGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-update/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entries\": [\n            {\n           \
          \     \"name\": \"OnCall\",\n                \"attributes\": {\n       \
          \             \"alias\": \"Not on Sundays\",\n                },\n     \
          \       },\n        ],\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-update/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entries\": [\n            {\n\
          \                \"name\": \"OnCall\",\n                \"attributes\":\
          \ {\n                    \"alias\": \"Not on Sundays\",\n              \
          \  },\n            },\n        ],\n    }).encode('utf-8'),\n)\n# Will raise\
          \ an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/domain-types/contact_group_config/actions/bulk-update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' \\\n\
          \    entries:='[{\"name\": \"OnCall\", \"attributes\": {\"alias\": \"Not\
          \ on Sundays\"}}]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"entries\": [\n            {\n              \"attributes\":\
          \ {\n                \"alias\": \"Not on Sundays\"\n              },\n \
          \             \"name\": \"OnCall\"\n            }\n          ]\n       \
          \ }' \\\n  \"$API_URL/domain-types/contact_group_config/actions/bulk-update/invoke\""
  /domain-types/contact_group_config/actions/bulk-create/invoke:
    post:
      tags:
      - Contact groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * User management (`wato.users`): This\
        \ permission is needed for the modules <b>Users</b>, <b>Roles</b> and <b>Contact\
        \ groups</b>\n"
      summary: Bulk create contact groups
      operationId: cmk.gui.openapi.endpoints.contact_group_config.bulk_create
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id022
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroupCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id022
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkInputContactGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-create/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entries\": [\n            {\n           \
          \     \"name\": \"OnCall\",\n                \"alias\": \"Not on Sundays\"\
          ,\n            },\n        ],\n    },\n    allow_redirects=True,\n)\nif\
          \ resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-create/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entries\": [\n            {\n\
          \                \"name\": \"OnCall\",\n                \"alias\": \"Not\
          \ on Sundays\",\n            },\n        ],\n    }).encode('utf-8'),\n)\n\
          # Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/contact_group_config/actions/bulk-create/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    entries:='[{\"name\": \"OnCall\", \"alias\": \"Not on Sundays\"\
          }]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"entries\": [\n            {\n              \"alias\": \"Not\
          \ on Sundays\",\n              \"name\": \"OnCall\"\n            }\n   \
          \       ]\n        }' \\\n  \"$API_URL/domain-types/contact_group_config/actions/bulk-create/invoke\""
  /domain-types/contact_group_config/actions/bulk-delete/invoke:
    post:
      tags:
      - Contact groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * User management (`wato.users`): This\
        \ permission is needed for the modules <b>Users</b>, <b>Roles</b> and <b>Contact\
        \ groups</b>\n"
      summary: Bulk delete contact groups
      operationId: cmk.gui.openapi.endpoints.contact_group_config.bulk_delete
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteContactGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-delete/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entries\": [\"windows\", \"panels\"],\n \
          \   },\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-delete/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entries\": [\"windows\", \"panels\"\
          ],\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 201:\n\
          elif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/contact_group_config/actions/bulk-delete/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    entries:='[\"windows\", \"panels\"]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"entries\": [\n            \"windows\",\n            \"panels\"\
          \n          ]\n        }' \\\n  \"$API_URL/domain-types/contact_group_config/actions/bulk-delete/invoke\""
  /domain-types/dashboard_metadata/collections/all:
    get:
      tags:
      - Dashboards
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Customize dashboards and use them (`general.edit_dashboards`):\
        \ Allows to create own dashboards, customize built-in dashboards and use them.\n\
        \   * Optionally:\n     * Modify built-in dashboards (`general.force_dashboards`):\
        \ Make own published dashboards override built-in dashboards for all users.\n\
        \   * Optionally:\n     * See user dashboards (`general.see_user_dashboards`):\
        \ Is needed for seeing dashboards that other users have created.\n   * Optionally:\n\
        \     * See packaged dashboards (`general.see_packaged_dashboards`): Is needed\
        \ for seeing dashboards that are provided via extension packages.\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Some\
        \ permissions starting with `pagetype_topic`:\n   * Some permissions starting\
        \ with `dashboard`:\n   * Optionally:\n     * All of:\n       * Customize\
        \ views and use them (`general.edit_views`): Allows to create own views, customize\
        \ built-in views and use them.\n       * See user views (`general.see_user_views`):\
        \ Is needed for seeing views that other users have created.\n       * See\
        \ packaged views (`general.see_packaged_views`): Is needed for seeing views\
        \ that are provided via extension packages.\n       * Some permissions starting\
        \ with `view`:\n"
      summary: List permitted dashboard metadata.
      operationId: Dashboards.list_dashboard_metadata_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardMetadataCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/dashboard_metadata/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/dashboard_metadata/collections/all\",\n \
          \   method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/dashboard_metadata/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/dashboard_metadata/collections/all\""
  /objects/constant/dashboard:
    get:
      tags:
      - Dashboards
      description: ''
      summary: Show the dashboard constraints
      operationId: Dashboards.show_dashboard_constants_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardConstantsObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/constant/dashboard\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/constant/dashboard\",\n    method=\"GET\",\n \
          \   headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/constant/dashboard\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/constant/dashboard\""
  /objects/constant/widget_available_inventory/collections/all:
    get:
      tags:
      - Dashboards
      description: ''
      summary: List available inventory for dashboard widgets.
      x-badges:
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      - name: CSE
        position: after
        color: '#7e96f3'
      operationId: Dashboards.list_widget_available_inventory_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetAvailableInventoryCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/constant/widget_available_inventory/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/constant/widget_available_inventory/collections/all\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/constant/widget_available_inventory/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/constant/widget_available_inventory/collections/all\""
  /objects/dashboard_relative_grid/{dashboard_id}:
    get:
      tags:
      - Dashboards
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Customize dashboards and use them (`general.edit_dashboards`):\
        \ Allows to create own dashboards, customize built-in dashboards and use them.\n\
        \   * Optionally:\n     * Modify built-in dashboards (`general.force_dashboards`):\
        \ Make own published dashboards override built-in dashboards for all users.\n\
        \   * Optionally:\n     * See user dashboards (`general.see_user_dashboards`):\
        \ Is needed for seeing dashboards that other users have created.\n   * Optionally:\n\
        \     * See packaged dashboards (`general.see_packaged_dashboards`): Is needed\
        \ for seeing dashboards that are provided via extension packages.\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Some\
        \ permissions starting with `pagetype_topic`:\n   * Some permissions starting\
        \ with `dashboard`:\n   * Optionally:\n     * All of:\n       * Customize\
        \ views and use them (`general.edit_views`): Allows to create own views, customize\
        \ built-in views and use them.\n       * See user views (`general.see_user_views`):\
        \ Is needed for seeing views that other users have created.\n       * See\
        \ packaged views (`general.see_packaged_views`): Is needed for seeing views\
        \ that are provided via extension packages.\n       * Some permissions starting\
        \ with `view`:\n"
      summary: Show a dashboard.
      operationId: Dashboards.show_relative_grid_dashboard_v1
      parameters:
      - in: path
        name: dashboard_id
        content:
          application/json:
            schema:
              description: Dashboard ID
              examples:
              - main
              title: Dashboard Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelativeGridDashboardDomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/dashboard_relative_grid/main\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/dashboard_relative_grid/main\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/dashboard_relative_grid/main\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/dashboard_relative_grid/main\""
    put:
      tags:
      - Dashboards
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Customize dashboards and use them (`general.edit_dashboards`):\
        \ Allows to create own dashboards, customize built-in dashboards and use them.\n\
        \   * Optionally:\n     * Modify built-in dashboards (`general.force_dashboards`):\
        \ Make own published dashboards override built-in dashboards for all users.\n\
        \   * Optionally:\n     * See user dashboards (`general.see_user_dashboards`):\
        \ Is needed for seeing dashboards that other users have created.\n   * Optionally:\n\
        \     * See packaged dashboards (`general.see_packaged_dashboards`): Is needed\
        \ for seeing dashboards that are provided via extension packages.\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Some\
        \ permissions starting with `pagetype_topic`:\n   * Some permissions starting\
        \ with `dashboard`:\n   * Optionally:\n     * All of:\n       * Customize\
        \ views and use them (`general.edit_views`): Allows to create own views, customize\
        \ built-in views and use them.\n       * See user views (`general.see_user_views`):\
        \ Is needed for seeing views that other users have created.\n       * See\
        \ packaged views (`general.see_packaged_views`): Is needed for seeing views\
        \ that are provided via extension packages.\n       * Some permissions starting\
        \ with `view`:\n"
      summary: Edit a dashboard.
      operationId: Dashboards.edit_relative_grid_dashboard_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id023
          type: string
        example: application/json
      - in: path
        name: dashboard_id
        content:
          application/json:
            schema:
              description: Dashboard ID
              examples:
              - main
              title: Dashboard Id
              type: string
        required: true
      - in: query
        name: owner
        content:
          application/json:
            schema:
              description: The owner of the dashboard. If not provided, the current
                user is assumed.
              examples:
              - admin
              title: Owner
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelativeGridDashboardDomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id023
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditDashboardV1'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/dashboard_relative_grid/main\"\
          ,\n    params={  # goes into query string\n        \"owner\": 'admin',\n\
          \    },\n    headers={\n        \"Content-Type\": 'application/json',  #\
          \ (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"owner\": 'admin',\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/dashboard_relative_grid/main?{query_string}\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/dashboard_relative_grid/main\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'Content-Type:application/json' \\\n    owner=='admin' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data-urlencode\
          \ 'owner=admin' \\\n  \"$API_URL/objects/dashboard_relative_grid/main\""
  /objects/dashboard_responsive_grid/{dashboard_id}:
    get:
      tags:
      - Dashboards
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Customize dashboards and use them (`general.edit_dashboards`):\
        \ Allows to create own dashboards, customize built-in dashboards and use them.\n\
        \   * Optionally:\n     * Modify built-in dashboards (`general.force_dashboards`):\
        \ Make own published dashboards override built-in dashboards for all users.\n\
        \   * Optionally:\n     * See user dashboards (`general.see_user_dashboards`):\
        \ Is needed for seeing dashboards that other users have created.\n   * Optionally:\n\
        \     * See packaged dashboards (`general.see_packaged_dashboards`): Is needed\
        \ for seeing dashboards that are provided via extension packages.\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Some\
        \ permissions starting with `pagetype_topic`:\n   * Some permissions starting\
        \ with `dashboard`:\n   * Optionally:\n     * All of:\n       * Customize\
        \ views and use them (`general.edit_views`): Allows to create own views, customize\
        \ built-in views and use them.\n       * See user views (`general.see_user_views`):\
        \ Is needed for seeing views that other users have created.\n       * See\
        \ packaged views (`general.see_packaged_views`): Is needed for seeing views\
        \ that are provided via extension packages.\n       * Some permissions starting\
        \ with `view`:\n"
      summary: Show a dashboard.
      x-badges:
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      - name: CSE
        position: after
        color: '#7e96f3'
      operationId: Dashboards.show_responsive_grid_dashboard_v1
      parameters:
      - in: path
        name: dashboard_id
        content:
          application/json:
            schema:
              description: Dashboard ID
              examples:
              - main
              title: Dashboard Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsiveGridDashboardDomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/dashboard_responsive_grid/main\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/dashboard_responsive_grid/main\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/dashboard_responsive_grid/main\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/dashboard_responsive_grid/main\""
    put:
      tags:
      - Dashboards
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Customize dashboards and use them (`general.edit_dashboards`):\
        \ Allows to create own dashboards, customize built-in dashboards and use them.\n\
        \   * Optionally:\n     * Modify built-in dashboards (`general.force_dashboards`):\
        \ Make own published dashboards override built-in dashboards for all users.\n\
        \   * Optionally:\n     * See user dashboards (`general.see_user_dashboards`):\
        \ Is needed for seeing dashboards that other users have created.\n   * Optionally:\n\
        \     * See packaged dashboards (`general.see_packaged_dashboards`): Is needed\
        \ for seeing dashboards that are provided via extension packages.\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Some\
        \ permissions starting with `pagetype_topic`:\n   * Some permissions starting\
        \ with `dashboard`:\n   * Optionally:\n     * All of:\n       * Customize\
        \ views and use them (`general.edit_views`): Allows to create own views, customize\
        \ built-in views and use them.\n       * See user views (`general.see_user_views`):\
        \ Is needed for seeing views that other users have created.\n       * See\
        \ packaged views (`general.see_packaged_views`): Is needed for seeing views\
        \ that are provided via extension packages.\n       * Some permissions starting\
        \ with `view`:\n"
      summary: Edit a dashboard.
      x-badges:
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      - name: CSE
        position: after
        color: '#7e96f3'
      operationId: Dashboards.edit_responsive_grid_dashboard_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id024
          type: string
        example: application/json
      - in: path
        name: dashboard_id
        content:
          application/json:
            schema:
              description: Dashboard ID
              examples:
              - main
              title: Dashboard Id
              type: string
        required: true
      - in: query
        name: owner
        content:
          application/json:
            schema:
              description: The owner of the dashboard. If not provided, the current
                user is assumed.
              examples:
              - admin
              title: Owner
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsiveGridDashboardDomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id024
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditResponsiveGridDashboardV1'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/dashboard_responsive_grid/main\"\
          ,\n    params={  # goes into query string\n        \"owner\": 'admin',\n\
          \    },\n    headers={\n        \"Content-Type\": 'application/json',  #\
          \ (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"owner\": 'admin',\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/dashboard_responsive_grid/main?{query_string}\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/dashboard_responsive_grid/main\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'Content-Type:application/json' \\\n    owner=='admin' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data-urlencode\
          \ 'owner=admin' \\\n  \"$API_URL/objects/dashboard_responsive_grid/main\""
  /domain-types/dashboard/actions/compute-top-list/invoke:
    post:
      tags:
      - Dashboards
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Optionally:\n     * See all host and services (`general.see_all`):\
        \ See all objects regardless of contacts and contact groups. If combined with\
        \ 'perform commands' then commands may be done on all objects.\n   * Optionally:\n\
        \     * See all hosts and services (`bi.see_all`): With this permission set,\
        \ the BI aggregation rules are applied to all hosts and services - not only\
        \ those the user is a contact for. If you remove this permissions then the\
        \ user will see incomplete aggregation trees with status based only on those\
        \ items.\n   * Optionally:\n     * See all events (`mkeventd.seeall`): If\
        \ a user lacks this permission then he/she can see only those events that\
        \ originate from a host that he/she is a contact for.\n"
      summary: Compute top list based on widget specification
      operationId: Dashboards.compute_top_list
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id025
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputedTopListResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id025
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopListRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/dashboard/actions/compute-top-list/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/dashboard/actions/compute-top-list/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/dashboard/actions/compute-top-list/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/dashboard/actions/compute-top-list/invoke\""
  /domain-types/dashboard/actions/compute-widget-attributes/invoke:
    post:
      tags:
      - Dashboards
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Customize dashboards and use them (`general.edit_dashboards`):\
        \ Allows to create own dashboards, customize built-in dashboards and use them.\n\
        \   * Optionally:\n     * Modify built-in dashboards (`general.force_dashboards`):\
        \ Make own published dashboards override built-in dashboards for all users.\n\
        \   * Optionally:\n     * See user dashboards (`general.see_user_dashboards`):\
        \ Is needed for seeing dashboards that other users have created.\n   * Optionally:\n\
        \     * See packaged dashboards (`general.see_packaged_dashboards`): Is needed\
        \ for seeing dashboards that are provided via extension packages.\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Some\
        \ permissions starting with `pagetype_topic`:\n   * Some permissions starting\
        \ with `dashboard`:\n   * Optionally:\n     * All of:\n       * Customize\
        \ views and use them (`general.edit_views`): Allows to create own views, customize\
        \ built-in views and use them.\n       * See user views (`general.see_user_views`):\
        \ Is needed for seeing views that other users have created.\n       * See\
        \ packaged views (`general.see_packaged_views`): Is needed for seeing views\
        \ that are provided via extension packages.\n       * Some permissions starting\
        \ with `view`:\n"
      summary: Compute widget specification attributes
      operationId: Dashboards.compute_widget_attributes_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id026
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComputedWidgetSpecResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id026
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputedWidgetSpecRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/dashboard/actions/compute-widget-attributes/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/dashboard/actions/compute-widget-attributes/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/dashboard/actions/compute-widget-attributes/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/dashboard/actions/compute-widget-attributes/invoke\""
  /domain-types/dashboard_relative_grid/actions/clone/invoke:
    post:
      tags:
      - Dashboards
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Customize dashboards and use them (`general.edit_dashboards`):\
        \ Allows to create own dashboards, customize built-in dashboards and use them.\n\
        \   * Optionally:\n     * Modify built-in dashboards (`general.force_dashboards`):\
        \ Make own published dashboards override built-in dashboards for all users.\n\
        \   * Optionally:\n     * See user dashboards (`general.see_user_dashboards`):\
        \ Is needed for seeing dashboards that other users have created.\n   * Optionally:\n\
        \     * See packaged dashboards (`general.see_packaged_dashboards`): Is needed\
        \ for seeing dashboards that are provided via extension packages.\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Some\
        \ permissions starting with `pagetype_topic`:\n   * Some permissions starting\
        \ with `dashboard`:\n   * Optionally:\n     * All of:\n       * Customize\
        \ views and use them (`general.edit_views`): Allows to create own views, customize\
        \ built-in views and use them.\n       * See user views (`general.see_user_views`):\
        \ Is needed for seeing views that other users have created.\n       * See\
        \ packaged views (`general.see_packaged_views`): Is needed for seeing views\
        \ that are provided via extension packages.\n       * Some permissions starting\
        \ with `view`:\n"
      summary: Clone as relative dashboard
      operationId: Dashboards.clone_as_relative_grid_dashboard_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneDashboardV1'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.max_redirects\
          \ = 100  # increase if necessary\n\nresp = session.post(\n    f\"{API_URL}/domain-types/dashboard_relative_grid/actions/clone/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/dashboard_relative_grid/actions/clone/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Content-Type\": 'application/json',\
          \  # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 201:\nelif resp.status\
          \ == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/dashboard_relative_grid/actions/clone/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Content-Type: application/json\"\
          \ \\\n  \"$API_URL/domain-types/dashboard_relative_grid/actions/clone/invoke\""
  /domain-types/dashboard_relative_grid/collections/all:
    post:
      tags:
      - Dashboards
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Customize dashboards and use them (`general.edit_dashboards`):\
        \ Allows to create own dashboards, customize built-in dashboards and use them.\n\
        \   * Optionally:\n     * Modify built-in dashboards (`general.force_dashboards`):\
        \ Make own published dashboards override built-in dashboards for all users.\n\
        \   * Optionally:\n     * See user dashboards (`general.see_user_dashboards`):\
        \ Is needed for seeing dashboards that other users have created.\n   * Optionally:\n\
        \     * See packaged dashboards (`general.see_packaged_dashboards`): Is needed\
        \ for seeing dashboards that are provided via extension packages.\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Some\
        \ permissions starting with `pagetype_topic`:\n   * Some permissions starting\
        \ with `dashboard`:\n   * Optionally:\n     * All of:\n       * Customize\
        \ views and use them (`general.edit_views`): Allows to create own views, customize\
        \ built-in views and use them.\n       * See user views (`general.see_user_views`):\
        \ Is needed for seeing views that other users have created.\n       * See\
        \ packaged views (`general.see_packaged_views`): Is needed for seeing views\
        \ that are provided via extension packages.\n       * Some permissions starting\
        \ with `view`:\n"
      summary: Create a dashboard.
      operationId: Dashboards.create_relative_grid_dashboard_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id027
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelativeGridDashboardDomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id027
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDashboardV1'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/dashboard_relative_grid/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/dashboard_relative_grid/collections/all\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/dashboard_relative_grid/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/dashboard_relative_grid/collections/all\""
  /domain-types/dashboard_responsive_grid/actions/clone/invoke:
    post:
      tags:
      - Dashboards
      description: "Clones an existing responsive grid dashboard to a new dashboard.\
        \ Relative dashboards\ncurrently cannot be cloned as responsive grid dashboard.This\
        \ endpoint requires the following permissions: \n * All of:\n   * Customize\
        \ dashboards and use them (`general.edit_dashboards`): Allows to create own\
        \ dashboards, customize built-in dashboards and use them.\n   * Optionally:\n\
        \     * Modify built-in dashboards (`general.force_dashboards`): Make own\
        \ published dashboards override built-in dashboards for all users.\n   * Optionally:\n\
        \     * See user dashboards (`general.see_user_dashboards`): Is needed for\
        \ seeing dashboards that other users have created.\n   * Optionally:\n   \
        \  * See packaged dashboards (`general.see_packaged_dashboards`): Is needed\
        \ for seeing dashboards that are provided via extension packages.\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Some\
        \ permissions starting with `pagetype_topic`:\n   * Some permissions starting\
        \ with `dashboard`:\n   * Optionally:\n     * All of:\n       * Customize\
        \ views and use them (`general.edit_views`): Allows to create own views, customize\
        \ built-in views and use them.\n       * See user views (`general.see_user_views`):\
        \ Is needed for seeing views that other users have created.\n       * See\
        \ packaged views (`general.see_packaged_views`): Is needed for seeing views\
        \ that are provided via extension packages.\n       * Some permissions starting\
        \ with `view`:\n"
      summary: Clone as responsive dashboard
      operationId: Dashboards.clone_as_responsive_grid_dashboard_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneDashboardV1'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.max_redirects\
          \ = 100  # increase if necessary\n\nresp = session.post(\n    f\"{API_URL}/domain-types/dashboard_responsive_grid/actions/clone/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/dashboard_responsive_grid/actions/clone/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Content-Type\": 'application/json',\
          \  # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 201:\nelif resp.status\
          \ == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/dashboard_responsive_grid/actions/clone/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Content-Type: application/json\"\
          \ \\\n  \"$API_URL/domain-types/dashboard_responsive_grid/actions/clone/invoke\""
  /domain-types/dashboard_responsive_grid/collections/all:
    post:
      tags:
      - Dashboards
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Customize dashboards and use them (`general.edit_dashboards`):\
        \ Allows to create own dashboards, customize built-in dashboards and use them.\n\
        \   * Optionally:\n     * Modify built-in dashboards (`general.force_dashboards`):\
        \ Make own published dashboards override built-in dashboards for all users.\n\
        \   * Optionally:\n     * See user dashboards (`general.see_user_dashboards`):\
        \ Is needed for seeing dashboards that other users have created.\n   * Optionally:\n\
        \     * See packaged dashboards (`general.see_packaged_dashboards`): Is needed\
        \ for seeing dashboards that are provided via extension packages.\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Some\
        \ permissions starting with `pagetype_topic`:\n   * Some permissions starting\
        \ with `dashboard`:\n   * Optionally:\n     * All of:\n       * Customize\
        \ views and use them (`general.edit_views`): Allows to create own views, customize\
        \ built-in views and use them.\n       * See user views (`general.see_user_views`):\
        \ Is needed for seeing views that other users have created.\n       * See\
        \ packaged views (`general.see_packaged_views`): Is needed for seeing views\
        \ that are provided via extension packages.\n       * Some permissions starting\
        \ with `view`:\n"
      summary: Create a dashboard.
      x-badges:
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      - name: CSE
        position: after
        color: '#7e96f3'
      operationId: Dashboards.create_responsive_grid_dashboard_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id028
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsiveGridDashboardDomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id028
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResponsiveGridDashboardV1'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/dashboard_responsive_grid/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/dashboard_responsive_grid/collections/all\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/dashboard_responsive_grid/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/dashboard_responsive_grid/collections/all\""
  /objects/dashboard/{dashboard_id}:
    delete:
      tags:
      - Dashboards
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Customize dashboards and use them (`general.edit_dashboards`):\
        \ Allows to create own dashboards, customize built-in dashboards and use them.\n\
        \   * Optionally:\n     * Modify built-in dashboards (`general.force_dashboards`):\
        \ Make own published dashboards override built-in dashboards for all users.\n\
        \   * Optionally:\n     * See user dashboards (`general.see_user_dashboards`):\
        \ Is needed for seeing dashboards that other users have created.\n   * Optionally:\n\
        \     * See packaged dashboards (`general.see_packaged_dashboards`): Is needed\
        \ for seeing dashboards that are provided via extension packages.\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Some\
        \ permissions starting with `pagetype_topic`:\n   * Some permissions starting\
        \ with `dashboard`:\n   * Optionally:\n     * All of:\n       * Customize\
        \ views and use them (`general.edit_views`): Allows to create own views, customize\
        \ built-in views and use them.\n       * See user views (`general.see_user_views`):\
        \ Is needed for seeing views that other users have created.\n       * See\
        \ packaged views (`general.see_packaged_views`): Is needed for seeing views\
        \ that are provided via extension packages.\n       * Some permissions starting\
        \ with `view`:\n"
      summary: Delete a dashboard.
      operationId: Dashboards.delete_dashboard_v1
      parameters:
      - in: path
        name: dashboard_id
        content:
          application/json:
            schema:
              description: Dashboard ID
              examples:
              - main
              title: Dashboard Id
              type: string
        required: true
      - in: query
        name: owner
        content:
          application/json:
            schema:
              description: The owner of the dashboard. If not provided, the current
                user is assumed.
              examples:
              - admin
              title: Owner
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\n\n\
          resp = session.delete(\n    f\"{API_URL}/objects/dashboard/main\",\n   \
          \ params={  # goes into query string\n        \"owner\": 'admin',\n    },\n\
          )\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"owner\": 'admin',\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/dashboard/main?{query_string}\",\n    method=\"\
          DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n    },\n)\n# Will raise an HTTPError if status code is\
          \ >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 204:\n\
          \    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/dashboard/main\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    owner=='admin' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --data-urlencode 'owner=admin' \\\n\
          \  \"$API_URL/objects/dashboard/main\""
  /objects/constant/data_source/collections/all:
    get:
      tags:
      - Data Sources
      description: ''
      summary: List data sources.
      operationId: Data Sources.list_data_sources_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/constant/data_source/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/constant/data_source/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/constant/data_source/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/constant/data_source/collections/all\""
  /domain-types/downtime/collections/all:
    get:
      tags:
      - Downtimes
      description: "\n\nThis endpoint requires the following permissions: \n"
      summary: Show all scheduled downtimes
      operationId: cmk.gui.openapi.endpoints.downtime.show_downtimes
      parameters:
      - in: query
        name: query
        description: An query expression of the Livestatus 'downtimes' table in nested
          dictionary form. If you want to use multiple expressions, nest them with
          the AND/OR operators.
        required: false
        content:
          application/json:
            schema:
              example: '{"op": "and", "expr": [{"op": "=", "left": "host_name", "right":
                "example.com"}, {"op": "=", "left": "type", "right": "0"}]}'
              $ref: '#/components/schemas/Expr'
      - in: query
        name: host_name
        description: The host name. No exception is raised when the specified host
          name does not exist. Using this parameter only will filter for host downtimes
          only. Cannot be used together with the query parameter.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: false
      - in: query
        name: service_description
        description: The service name. No exception is raised when the specified service
          description does not exist. This parameter can be combined with the host_name
          parameter to only filter for service downtimes of on a specific host. Cannot
          be used together with the query parameter.
        schema:
          type: string
          example: Memory
        required: false
      - in: query
        name: downtime_type
        description: The type of the downtime to be listed. Only filters the result
          when using the host_name or service_description parameter.
        schema:
          type: string
          default: both
          enum:
          - host
          - service
          - both
          example: host
        required: false
      - in: query
        name: site_id
        description: An existing site id
        schema:
          type: string
          example: heute
        required: false
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DowntimeCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/downtime/collections/all\"\
          ,\n    params={  # goes into query string\n        \"host_name\": 'example.com',\
          \  # The host name.\n        \"service_description\": 'Memory',  # The service\
          \ name.\n        \"query\": '{\"op\": \"and\", \"expr\": [{\"op\": \"=\"\
          , \"left\": \"host_name\", \"right\": \"example.com\"}, {\"op\": \"=\",\
          \ \"left\": \"type\", \"right\": \"0\"}]}',  # An query expression of the\
          \ Livestatus 'downtimes' table in nested dictionary form.\n        \"downtime_type\"\
          : 'host',  # The type of the downtime to be listed.\n        \"site_id\"\
          : 'heute',  # An existing site id\n    },\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"host_name\": 'example.com',  # The host\
          \ name.\n    \"service_description\": 'Memory',  # The service name.\n \
          \   \"query\": '{\"op\": \"and\", \"expr\": [{\"op\": \"=\", \"left\": \"\
          host_name\", \"right\": \"example.com\"}, {\"op\": \"=\", \"left\": \"type\"\
          , \"right\": \"0\"}]}',  # An query expression of the Livestatus 'downtimes'\
          \ table in nested dictionary form.\n    \"downtime_type\": 'host',  # The\
          \ type of the downtime to be listed.\n    \"site_id\": 'heute',  # An existing\
          \ site id\n})\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/domain-types/downtime/collections/all?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/downtime/collections/all\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    host_name=='example.com' \\\n    service_description=='Memory'\
          \ \\\n    query=='{\"op\": \"and\", \"expr\": [{\"op\": \"=\", \"left\"\
          : \"host_name\", \"right\": \"example.com\"}, {\"op\": \"=\", \"left\":\
          \ \"type\", \"right\": \"0\"}]}' \\\n    downtime_type=='host' \\\n    site_id=='heute' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'host_name=example.com' \\\n  --data-urlencode\
          \ 'service_description=Memory' \\\n  --data-urlencode 'query={\"op\": \"\
          and\", \"expr\": [{\"op\": \"=\", \"left\": \"host_name\", \"right\": \"\
          example.com\"}, {\"op\": \"=\", \"left\": \"type\", \"right\": \"0\"}]}'\
          \ \\\n  --data-urlencode 'downtime_type=host' \\\n  --data-urlencode 'site_id=heute'\
          \ \\\n  \"$API_URL/domain-types/downtime/collections/all\""
  /objects/downtime/{downtime_id}:
    get:
      tags:
      - Downtimes
      description: "\n\nThis endpoint requires the following permissions: \n"
      summary: Show downtime
      operationId: cmk.gui.openapi.endpoints.downtime.show_downtime
      parameters:
      - in: query
        name: site_id
        description: An existing site id
        schema:
          type: string
          example: heute
        required: true
      - in: path
        name: downtime_id
        description: The id of the downtime
        schema:
          type: string
          example: '54'
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DowntimeObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/downtime/54\"\
          ,\n    params={  # goes into query string\n        \"site_id\": 'heute',\
          \  # (required) An existing site id\n    },\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"site_id\": 'heute',  # (required) An existing\
          \ site id\n})\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/objects/downtime/54?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/downtime/54\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    \n    site_id=='heute' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'site_id=heute' \\\n  \"$API_URL/objects/downtime/54\""
  /domain-types/downtime/actions/modify/invoke:
    put:
      tags:
      - Downtimes
      description: "\n\nThis endpoint requires the following permissions: \n * Set/remove\
        \ downtimes (`action.downtimes`): Schedule and remove downtimes on hosts and\
        \ services\n"
      summary: Modify a scheduled downtime
      operationId: cmk.gui.openapi.endpoints.downtime.modify_host_downtime
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Update downtimes commands have been sent to Livestatus.
            The REST API exclusively manages the preparation and dispatch of commands
            to Livestatus. These commands are processed in an asynchronous manner,
            and the REST API does not validate the successful execution of commands
            on Livestatus. To investigate any failures in Livestatus, one should refer
            to the corresponding log. Also you can refer to [Queries through the REST
            API](#section/Queries-through-the-REST-API) section for further information.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifyDowntime'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/downtime/actions/modify/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"modify_type\"\
          : \"params\",\n        \"end_time\": {\n            \"modify_type\": \"\
          absolute\",\n            \"value\": \"2024-03-06T12:00:00Z\",\n        },\n\
          \        \"comment\": \"Security updates\",\n        \"site_id\": \"central\"\
          ,\n        \"downtime_id\": \"54\",\n    },\n)\nif resp.status_code == 204:\n\
          \    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/downtime/actions/modify/invoke\",\n    method=\"\
          PUT\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    # This schema has multiple\
          \ variations. Please refer to\n    # the 'Payload' section for details.\n\
          \    data=json.dumps({\n        \"modify_type\": \"params\",\n        \"\
          end_time\": {\n            \"modify_type\": \"absolute\",\n            \"\
          value\": \"2024-03-06T12:00:00Z\",\n        },\n        \"comment\": \"\
          Security updates\",\n        \"site_id\": \"central\",\n        \"downtime_id\"\
          : \"54\",\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp PUT \"$API_URL/domain-types/downtime/actions/modify/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' \\\n\
          \    modify_type='params'\\\n    end_time[modify_type]='absolute'\\\n  \
          \  end_time[value]='2024-03-06T12:00:00Z'\\\n    comment='Security updates'\\\
          \n    site_id='central'\\\n    downtime_id='54'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ PUT \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"comment\": \"Security updates\",\n      \
          \    \"downtime_id\": \"54\",\n          \"end_time\": {\n            \"\
          modify_type\": \"absolute\",\n            \"value\": \"2024-03-06T12:00:00Z\"\
          \n          },\n          \"modify_type\": \"params\",\n          \"site_id\"\
          : \"central\"\n        }' \\\n  \"$API_URL/domain-types/downtime/actions/modify/invoke\""
  /domain-types/downtime/actions/delete/invoke:
    post:
      tags:
      - Downtimes
      description: "\n\nThis endpoint requires the following permissions: \n * Set/remove\
        \ downtimes (`action.downtimes`): Schedule and remove downtimes on hosts and\
        \ services\n"
      summary: Delete a scheduled downtime
      operationId: cmk.gui.openapi.endpoints.downtime.delete_downtime
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Delete downtimes commands have been sent to Livestatus.
            The REST API exclusively manages the preparation and dispatch of commands
            to Livestatus. These commands are processed in an asynchronous manner,
            and the REST API does not validate the successful execution of commands
            on Livestatus. To investigate any failures in Livestatus, one should refer
            to the corresponding log. Also you can refer to [Queries through the REST
            API](#section/Queries-through-the-REST-API) section for further information.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDowntime'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/downtime/actions/delete/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"delete_type\"\
          : \"params\",\n        \"site_id\": \"heute\",\n        \"downtime_id\"\
          : \"54\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code ==\
          \ 201:\nelif resp.status_code == 204:\n    print('Done')\nelse:\n    raise\
          \ RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/downtime/actions/delete/invoke\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    #\
          \ This schema has multiple variations. Please refer to\n    # the 'Payload'\
          \ section for details.\n    data=json.dumps({\n        \"delete_type\":\
          \ \"params\",\n        \"site_id\": \"heute\",\n        \"downtime_id\"\
          : \"54\",\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/downtime/actions/delete/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    delete_type='params'\\\n    site_id='heute'\\\n    downtime_id='54'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"delete_type\": \"params\",\n          \"\
          downtime_id\": \"54\",\n          \"site_id\": \"heute\"\n        }' \\\n\
          \  \"$API_URL/domain-types/downtime/actions/delete/invoke\""
  /domain-types/downtime/collections/host:
    post:
      tags:
      - Downtimes
      description: "\n\nThis endpoint requires the following permissions: \n * Set/remove\
        \ downtimes (`action.downtimes`): Schedule and remove downtimes on hosts and\
        \ services\n"
      summary: Create a host related scheduled downtime
      operationId: cmk.gui.openapi.endpoints.downtime.create_host_related_downtime
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '422':
          description: 'Unprocessable Entity: The request could not be processed.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api422DefaultError'
        '204':
          description: 'No Content: Create host related downtimes commands have been
            sent to Livestatus. The REST API exclusively manages the preparation and
            dispatch of commands to Livestatus. These commands are processed in an
            asynchronous manner, and the REST API does not validate the successful
            execution of commands on Livestatus. To investigate any failures in Livestatus,
            one should refer to the corresponding log. Also you can refer to [Queries
            through the REST API](#section/Queries-through-the-REST-API) section for
            further information.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHostRelatedDowntime'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/downtime/collections/host\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"start_time\"\
          : \"2017-07-21T17:32:28Z\",\n        \"end_time\": \"2017-07-21T17:32:28Z\"\
          ,\n        \"recur\": \"hour\",\n        \"duration\": 60,\n        \"comment\"\
          : \"Security updates\",\n        \"downtime_type\": \"host\",\n        \"\
          host_name\": \"example.com\",\n    },\n    allow_redirects=True,\n)\nif\
          \ resp.status_code == 201:\nelif resp.status_code == 204:\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/downtime/collections/host\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    #\
          \ This schema has multiple variations. Please refer to\n    # the 'Payload'\
          \ section for details.\n    data=json.dumps({\n        \"start_time\": \"\
          2017-07-21T17:32:28Z\",\n        \"end_time\": \"2017-07-21T17:32:28Z\"\
          ,\n        \"recur\": \"hour\",\n        \"duration\": 60,\n        \"comment\"\
          : \"Security updates\",\n        \"downtime_type\": \"host\",\n        \"\
          host_name\": \"example.com\",\n    }).encode('utf-8'),\n)\n# Will raise\
          \ an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/downtime/collections/host\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    start_time='2017-07-21T17:32:28Z'\\\n    end_time='2017-07-21T17:32:28Z'\\\
          \n    recur='hour'\\\n    duration:=60\\\n    comment='Security updates'\\\
          \n    downtime_type='host'\\\n    host_name='example.com'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"comment\": \"Security updates\",\n      \
          \    \"downtime_type\": \"host\",\n          \"duration\": 60,\n       \
          \   \"end_time\": \"2017-07-21T17:32:28Z\",\n          \"host_name\": \"\
          example.com\",\n          \"recur\": \"hour\",\n          \"start_time\"\
          : \"2017-07-21T17:32:28Z\"\n        }' \\\n  \"$API_URL/domain-types/downtime/collections/host\""
  /domain-types/downtime/collections/service:
    post:
      tags:
      - Downtimes
      description: "\n\nThis endpoint requires the following permissions: \n * Set/remove\
        \ downtimes (`action.downtimes`): Schedule and remove downtimes on hosts and\
        \ services\n"
      summary: Create a service related scheduled downtime
      operationId: cmk.gui.openapi.endpoints.downtime.create_service_related_downtime
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '422':
          description: 'Unprocessable Entity: The request could not be processed.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api422DefaultError'
        '204':
          description: 'No Content: Create service related downtimes commands have
            been sent to Livestatus. The REST API exclusively manages the preparation
            and dispatch of commands to Livestatus. These commands are processed in
            an asynchronous manner, and the REST API does not validate the successful
            execution of commands on Livestatus. To investigate any failures in Livestatus,
            one should refer to the corresponding log. Also you can refer to [Queries
            through the REST API](#section/Queries-through-the-REST-API) section for
            further information.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceRelatedDowntime'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/downtime/collections/service\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"start_time\"\
          : \"2017-07-21T17:32:28Z\",\n        \"end_time\": \"2017-07-21T17:32:28Z\"\
          ,\n        \"recur\": \"hour\",\n        \"duration\": 60,\n        \"comment\"\
          : \"Security updates\",\n        \"downtime_type\": \"service\",\n     \
          \   \"host_name\": \"example.com\",\n        \"service_descriptions\": [\"\
          CPU utilization\", \"Memory\"],\n    },\n    allow_redirects=True,\n)\n\
          if resp.status_code == 201:\nelif resp.status_code == 204:\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/downtime/collections/service\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    #\
          \ This schema has multiple variations. Please refer to\n    # the 'Payload'\
          \ section for details.\n    data=json.dumps({\n        \"start_time\": \"\
          2017-07-21T17:32:28Z\",\n        \"end_time\": \"2017-07-21T17:32:28Z\"\
          ,\n        \"recur\": \"hour\",\n        \"duration\": 60,\n        \"comment\"\
          : \"Security updates\",\n        \"downtime_type\": \"service\",\n     \
          \   \"host_name\": \"example.com\",\n        \"service_descriptions\": [\"\
          CPU utilization\", \"Memory\"],\n    }).encode('utf-8'),\n)\n# Will raise\
          \ an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/downtime/collections/service\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    start_time='2017-07-21T17:32:28Z'\\\n    end_time='2017-07-21T17:32:28Z'\\\
          \n    recur='hour'\\\n    duration:=60\\\n    comment='Security updates'\\\
          \n    downtime_type='service'\\\n    host_name='example.com'\\\n    service_descriptions:='[\"\
          CPU utilization\", \"Memory\"]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"comment\": \"Security updates\",\n      \
          \    \"downtime_type\": \"service\",\n          \"duration\": 60,\n    \
          \      \"end_time\": \"2017-07-21T17:32:28Z\",\n          \"host_name\"\
          : \"example.com\",\n          \"recur\": \"hour\",\n          \"service_descriptions\"\
          : [\n            \"CPU utilization\",\n            \"Memory\"\n        \
          \  ],\n          \"start_time\": \"2017-07-21T17:32:28Z\"\n        }' \\\
          \n  \"$API_URL/domain-types/downtime/collections/service\""
  /objects/dcd/{dcd_id}:
    get:
      tags:
      - Dynamic Configuration Daemon (DCD)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Manage dynamic configuration (`wato.dcd_connections`):\
        \ Manage the Dynamic configuration connections\n"
      summary: Show a dynamic host configuration
      x-badges:
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      - name: CSE
        position: after
        color: '#7e96f3'
      operationId: cmk.gui.cee.dcd._openapi.show_rule
      parameters:
      - in: path
        name: dcd_id
        description: The unique ID of an existing dynamic host configuration.
        schema:
          type: string
          example: MyDcd01
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowDCD'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/dcd/MyDcd01\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/dcd/MyDcd01\",\n    method=\"GET\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n    },\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/dcd/MyDcd01\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/dcd/MyDcd01\""
    delete:
      tags:
      - Dynamic Configuration Daemon (DCD)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Manage dynamic configuration (`wato.dcd_connections`):\
        \ Manage the Dynamic configuration connections\n"
      summary: Delete a dynamic host configuration
      x-badges:
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      - name: CSE
        position: after
        color: '#7e96f3'
      operationId: cmk.gui.cee.dcd._openapi.delete_rule
      parameters:
      - in: path
        name: dcd_id
        description: The unique ID of an existing dynamic host configuration.
        schema:
          type: string
          example: MyDcd01
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The dynamic host configuration was not found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404CustomError2'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/dcd/MyDcd01\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/dcd/MyDcd01\",\n    method=\"DELETE\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n    },\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/dcd/MyDcd01\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/dcd/MyDcd01\""
  /domain-types/dcd/actions/fetch_phase_one/invoke:
    post:
      tags:
      - Dynamic Configuration Daemon (DCD)
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ dynamic configuration (`wato.dcd_connections`): Manage the Dynamic configuration\
        \ connections\n"
      summary: Fetch Phase 1 Result
      x-badges:
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      - name: CSE
        position: after
        color: '#7e96f3'
      operationId: cmk.gui.cee.dcd._openapi.fetch_phase1_result
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id029
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id029
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionFetchPhaseOne'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/dcd/actions/fetch_phase_one/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"site_id\": \"master\",\n        \"connection_id\"\
          : \"connection_id\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/dcd/actions/fetch_phase_one/invoke\",\n \
          \   method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"site_id\": \"master\",\n     \
          \   \"connection_id\": \"connection_id\",\n    }).encode('utf-8'),\n)\n\
          # Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/dcd/actions/fetch_phase_one/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    site_id='master'\\\n    connection_id='connection_id'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"connection_id\": \"connection_id\",\n          \"site_id\"\
          : \"master\"\n        }' \\\n  \"$API_URL/domain-types/dcd/actions/fetch_phase_one/invoke\""
  /domain-types/dcd/collections/all:
    post:
      tags:
      - Dynamic Configuration Daemon (DCD)
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Manage dynamic configuration (`wato.dcd_connections`):\
        \ Manage the Dynamic configuration connections\n"
      summary: Create a dynamic host configuration
      x-badges:
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      - name: CSE
        position: after
        color: '#7e96f3'
      operationId: cmk.gui.cee.dcd._openapi.create_rule
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id030
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowDCD'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id030
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDCD'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/dcd/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"title\": \"My fancy dynamic host configuration\"\
          ,\n        \"comment\": \"This rule updates the host configuration from\
          \ Initech cloud provider.\",\n        \"documentation_url\": \"https://example.com/doc\"\
          ,\n        \"disabled\": False,\n        \"site\": \"global\",\n       \
          \ \"dcd_id\": \"MyDcd01\",\n        \"connector\": {\n            \"connector_type\"\
          : \"piggyback\",\n            \"restrict_source_hosts\": [\n           \
          \     \"host1\",\n                \"host2\",\n                \"regular.+expression\"\
          ,\n            ],\n            \"interval\": 60,\n            \"creation_rules\"\
          : [\n                {\n                    \"folder_path\": \"/\",\n  \
          \                  \"host_attributes\": {\n                        \"tag_snmp_ds\"\
          : \"no-snmp\",\n                        \"tag_agent\": \"no-agent\",\n \
          \                       \"tag_piggyback\": \"piggyback\",\n            \
          \            \"tag_address_family\": \"no-ip\",\n                    },\n\
          \                    \"delete_hosts\": False,\n                },\n    \
          \        ],\n            \"discover_on_creation\": True,\n            \"\
          no_deletion_time_after_init\": 600,\n            \"max_cache_age\": 3600,\n\
          \            \"validity_period\": 60,\n        },\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/dcd/collections/all\",\n    method=\"POST\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"title\": \"My fancy dynamic host configuration\",\n        \"comment\"\
          : \"This rule updates the host configuration from Initech cloud provider.\"\
          ,\n        \"documentation_url\": \"https://example.com/doc\",\n       \
          \ \"disabled\": False,\n        \"site\": \"global\",\n        \"dcd_id\"\
          : \"MyDcd01\",\n        \"connector\": {\n            \"connector_type\"\
          : \"piggyback\",\n            \"restrict_source_hosts\": [\n           \
          \     \"host1\",\n                \"host2\",\n                \"regular.+expression\"\
          ,\n            ],\n            \"interval\": 60,\n            \"creation_rules\"\
          : [\n                {\n                    \"folder_path\": \"/\",\n  \
          \                  \"host_attributes\": {\n                        \"tag_snmp_ds\"\
          : \"no-snmp\",\n                        \"tag_agent\": \"no-agent\",\n \
          \                       \"tag_piggyback\": \"piggyback\",\n            \
          \            \"tag_address_family\": \"no-ip\",\n                    },\n\
          \                    \"delete_hosts\": False,\n                },\n    \
          \        ],\n            \"discover_on_creation\": True,\n            \"\
          no_deletion_time_after_init\": 600,\n            \"max_cache_age\": 3600,\n\
          \            \"validity_period\": 60,\n        },\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/dcd/collections/all\" \\\n \
          \   --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\"\
          \ \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    title='My fancy dynamic host configuration'\\\n    comment='This\
          \ rule updates the host configuration from Initech cloud provider.'\\\n\
          \    documentation_url='https://example.com/doc'\\\n    disabled:=false\\\
          \n    site='global'\\\n    dcd_id='MyDcd01'\\\n    connector[connector_type]='piggyback'\\\
          \n    connector[restrict_source_hosts]:='[\"host1\", \"host2\", \"regular.+expression\"\
          ]'\\\n    connector[interval]:=60\\\n    connector[creation_rules]:='[{\"\
          folder_path\": \"/\", \"host_attributes\": {\"tag_snmp_ds\": \"no-snmp\"\
          , \"tag_agent\": \"no-agent\", \"tag_piggyback\": \"piggyback\", \"tag_address_family\"\
          : \"no-ip\"}, \"delete_hosts\": false}]'\\\n    connector[discover_on_creation]:=true\\\
          \n    connector[no_deletion_time_after_init]:=600\\\n    connector[max_cache_age]:=3600\\\
          \n    connector[validity_period]:=60"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"comment\": \"This rule updates the host configuration from\
          \ Initech cloud provider.\",\n          \"connector\": {\n            \"\
          connector_type\": \"piggyback\",\n            \"creation_rules\": [\n  \
          \            {\n                \"delete_hosts\": false,\n             \
          \   \"folder_path\": \"/\",\n                \"host_attributes\": {\n  \
          \                \"tag_address_family\": \"no-ip\",\n                  \"\
          tag_agent\": \"no-agent\",\n                  \"tag_piggyback\": \"piggyback\"\
          ,\n                  \"tag_snmp_ds\": \"no-snmp\"\n                }\n \
          \             }\n            ],\n            \"discover_on_creation\": true,\n\
          \            \"interval\": 60,\n            \"max_cache_age\": 3600,\n \
          \           \"no_deletion_time_after_init\": 600,\n            \"restrict_source_hosts\"\
          : [\n              \"host1\",\n              \"host2\",\n              \"\
          regular.+expression\"\n            ],\n            \"validity_period\":\
          \ 60\n          },\n          \"dcd_id\": \"MyDcd01\",\n          \"disabled\"\
          : false,\n          \"documentation_url\": \"https://example.com/doc\",\n\
          \          \"site\": \"global\",\n          \"title\": \"My fancy dynamic\
          \ host configuration\"\n        }' \\\n  \"$API_URL/domain-types/dcd/collections/all\""
  /domain-types/event_console/collections/all:
    get:
      tags:
      - Event Console
      description: ''
      summary: Show events
      operationId: cmk.gui.mkeventd._openapi.show_events
      parameters:
      - in: query
        name: query
        description: An query expression of the Livestatus 'eventconsoleevents' table
          in nested dictionary form. If you want to use multiple expressions, nest
          them with the AND/OR operators.
        required: false
        content:
          application/json:
            schema:
              example: '{"op": "=", "left": "eventconsoleevents.event_host", "right":
                "test_host"}'
              $ref: '#/components/schemas/Expr'
      - in: query
        name: host
        description: The host name. No exception is raised when the specified host
          name does not exist
        schema:
          type: string
          example: host_1
          pattern: ^[-0-9a-zA-Z_.]+\Z
        required: false
      - in: query
        name: application
        description: Show events that originated from this app.
        schema:
          type: string
          example: app_1
        required: false
      - in: query
        name: state
        description: The state
        schema:
          type: string
          enum:
          - ok
          - warning
          - critical
          - unknown
          example: ok
        required: false
      - in: query
        name: phase
        description: The event phase, open or ack
        schema:
          type: string
          enum:
          - open
          - ack
          example: open
        required: false
      - in: query
        name: site_id
        description: An existing site id
        schema:
          type: string
          example: heute
        required: false
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventConsoleResponseCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/event_console/collections/all\"\
          ,\n    params={  # goes into query string\n        \"query\": '{\"op\":\
          \ \"=\", \"left\": \"eventconsoleevents.event_host\", \"right\": \"test_host\"\
          }',  # An query expression of the Livestatus 'eventconsoleevents' table\
          \ in nested dictionary form.\n        \"host\": 'host_1',  # The host name.\n\
          \        \"application\": 'app_1',  # Show events that originated from this\
          \ app.\n        \"state\": 'ok',  # The state\n        \"phase\": 'open',\
          \  # The event phase, open or ack\n        \"site_id\": 'heute',  # An existing\
          \ site id\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"query\": '{\"op\": \"=\", \"left\": \"\
          eventconsoleevents.event_host\", \"right\": \"test_host\"}',  # An query\
          \ expression of the Livestatus 'eventconsoleevents' table in nested dictionary\
          \ form.\n    \"host\": 'host_1',  # The host name.\n    \"application\"\
          : 'app_1',  # Show events that originated from this app.\n    \"state\"\
          : 'ok',  # The state\n    \"phase\": 'open',  # The event phase, open or\
          \ ack\n    \"site_id\": 'heute',  # An existing site id\n})\n\nrequest =\
          \ urllib.request.Request(\n    f\"{API_URL}/domain-types/event_console/collections/all?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/event_console/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    query=='{\"op\": \"=\", \"left\": \"\
          eventconsoleevents.event_host\", \"right\": \"test_host\"}' \\\n    host=='host_1'\
          \ \\\n    application=='app_1' \\\n    state=='ok' \\\n    phase=='open'\
          \ \\\n    site_id=='heute' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'query={\"op\": \"=\", \"left\": \"eventconsoleevents.event_host\"\
          , \"right\": \"test_host\"}' \\\n  --data-urlencode 'host=host_1' \\\n \
          \ --data-urlencode 'application=app_1' \\\n  --data-urlencode 'state=ok'\
          \ \\\n  --data-urlencode 'phase=open' \\\n  --data-urlencode 'site_id=heute'\
          \ \\\n  \"$API_URL/domain-types/event_console/collections/all\""
  /objects/event_console/{event_id}:
    get:
      tags:
      - Event Console
      description: ''
      summary: Show an event
      operationId: cmk.gui.mkeventd._openapi.show_event
      parameters:
      - in: query
        name: site_id
        description: An existing site id
        schema:
          type: string
          example: heute
        required: true
      - in: path
        name: event_id
        description: The event console event ID.
        schema:
          type: string
          example: '1'
          pattern: ^[0-9]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ECEventResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/event_console/1\"\
          ,\n    params={  # goes into query string\n        \"site_id\": 'heute',\
          \  # (required) An existing site id\n    },\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"site_id\": 'heute',  # (required) An existing\
          \ site id\n})\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/objects/event_console/1?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/event_console/1\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    \n    site_id=='heute' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'site_id=heute' \\\n  \"$API_URL/objects/event_console/1\""
  /domain-types/event_console/actions/change_state/invoke:
    post:
      tags:
      - Event Console
      description: "\n\nThis endpoint requires the following permissions: \n * Change\
        \ event state (`mkeventd.changestate`): This permission allows to change the\
        \ state classification of an event (e.g. from CRIT to WARN).\n"
      summary: Change multiple event states
      operationId: cmk.gui.mkeventd._openapi.change_multiple_event_states
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEventStateSelector'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/event_console/actions/change_state/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"filter_type\"\
          : \"params\",\n        \"site_id\": \"heute\",\n        \"new_state\": \"\
          ok\",\n        \"query\": \"{\\\"op\\\": \\\"=\\\", \\\"left\\\": \\\"eventconsoleevents.event_host\\\
          \", \\\"right\\\": \\\"test_host\\\"}\",\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 201:\nelif resp.status_code == 204:\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/event_console/actions/change_state/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    data=json.dumps({\n       \
          \ \"filter_type\": \"params\",\n        \"site_id\": \"heute\",\n      \
          \  \"new_state\": \"ok\",\n        \"query\": \"{\\\"op\\\": \\\"=\\\",\
          \ \\\"left\\\": \\\"eventconsoleevents.event_host\\\", \\\"right\\\": \\\
          \"test_host\\\"}\",\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/event_console/actions/change_state/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    filter_type='params'\\\n    site_id='heute'\\\n    new_state='ok'\\\
          \n    query='{\"op\": \"=\", \"left\": \"eventconsoleevents.event_host\"\
          , \"right\": \"test_host\"}'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"filter_type\": \"params\",\n          \"\
          new_state\": \"ok\",\n          \"query\": \"{\\\"op\\\": \\\"=\\\", \\\"\
          left\\\": \\\"eventconsoleevents.event_host\\\", \\\"right\\\": \\\"test_host\\\
          \"}\",\n          \"site_id\": \"heute\"\n        }' \\\n  \"$API_URL/domain-types/event_console/actions/change_state/invoke\""
  /domain-types/event_console/actions/delete/invoke:
    post:
      tags:
      - Event Console
      description: "\n\nThis endpoint requires the following permissions: \n * Archive\
        \ an event (`mkeventd.delete`): Finally archive an event without any further\
        \ action\n"
      summary: Archive events
      operationId: cmk.gui.mkeventd._openapi.archive_events_with_filter
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteECEvents'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/event_console/actions/delete/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"filter_type\"\
          : \"by_id\",\n        \"site_id\": \"heute\",\n        \"event_id\": 1,\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/event_console/actions/delete/invoke\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    data=json.dumps({\n       \
          \ \"filter_type\": \"by_id\",\n        \"site_id\": \"heute\",\n       \
          \ \"event_id\": 1,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/event_console/actions/delete/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    filter_type='by_id'\\\n    site_id='heute'\\\n    event_id:=1"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"event_id\": 1,\n          \"filter_type\"\
          : \"by_id\",\n          \"site_id\": \"heute\"\n        }' \\\n  \"$API_URL/domain-types/event_console/actions/delete/invoke\""
  /domain-types/event_console/actions/update_and_acknowledge/invoke:
    post:
      tags:
      - Event Console
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Update an event (`mkeventd.update`): Needed for acknowledging\
        \ and changing the comment and contact of an event\n   * Update an event:\
        \ change comment (`mkeventd.update_comment`): Needed for changing a comment\
        \ when updating an event\n   * Update an event: change contact (`mkeventd.update_contact`):\
        \ Needed for changing a contact when updating an event\n"
      summary: Update and acknowledge events
      operationId: cmk.gui.mkeventd._openapi.update_and_acknowledge_multiple_events
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAndAcknowledgeSelector'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/event_console/actions/update_and_acknowledge/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"phase\":\
          \ \"ack\",\n        \"change_comment\": \"Comment now acked\",\n       \
          \ \"change_contact\": \"Mr Monitor\",\n        \"filter_type\": \"all\"\
          ,\n        \"site_id\": \"heute\",\n        \"query\": \"{\\\"op\\\": \\\
          \"=\\\", \\\"left\\\": \\\"eventconsoleevents.event_host\\\", \\\"right\\\
          \": \\\"test_host\\\"}\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 201:\nelif resp.status_code == 204:\n    print('Done')\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/event_console/actions/update_and_acknowledge/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    data=json.dumps({\n       \
          \ \"phase\": \"ack\",\n        \"change_comment\": \"Comment now acked\"\
          ,\n        \"change_contact\": \"Mr Monitor\",\n        \"filter_type\"\
          : \"all\",\n        \"site_id\": \"heute\",\n        \"query\": \"{\\\"\
          op\\\": \\\"=\\\", \\\"left\\\": \\\"eventconsoleevents.event_host\\\",\
          \ \\\"right\\\": \\\"test_host\\\"}\",\n    }).encode('utf-8'),\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/event_console/actions/update_and_acknowledge/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    phase='ack'\\\n    change_comment='Comment now acked'\\\n    change_contact='Mr\
          \ Monitor'\\\n    filter_type='all'\\\n    site_id='heute'\\\n    query='{\"\
          op\": \"=\", \"left\": \"eventconsoleevents.event_host\", \"right\": \"\
          test_host\"}'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"change_comment\": \"Comment now acked\",\n\
          \          \"change_contact\": \"Mr Monitor\",\n          \"filter_type\"\
          : \"all\",\n          \"phase\": \"ack\",\n          \"query\": \"{\\\"\
          op\\\": \\\"=\\\", \\\"left\\\": \\\"eventconsoleevents.event_host\\\",\
          \ \\\"right\\\": \\\"test_host\\\"}\",\n          \"site_id\": \"heute\"\
          \n        }' \\\n  \"$API_URL/domain-types/event_console/actions/update_and_acknowledge/invoke\""
  /objects/event_console/{event_id}/actions/change_state/invoke:
    post:
      tags:
      - Event Console
      description: "\n\nThis endpoint requires the following permissions: \n * Change\
        \ event state (`mkeventd.changestate`): This permission allows to change the\
        \ state classification of an event (e.g. from CRIT to WARN).\n"
      summary: Change event state
      operationId: cmk.gui.mkeventd._openapi.change_event_state
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      - in: path
        name: event_id
        description: The event console event ID.
        schema:
          type: string
          example: '1'
          pattern: ^[0-9]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEventState'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/event_console/1/actions/change_state/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"site_id\": \"heute\",\n        \"new_state\"\
          : \"ok\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code ==\
          \ 201:\nelif resp.status_code == 204:\n    print('Done')\nelse:\n    raise\
          \ RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/event_console/1/actions/change_state/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"site_id\": \"heute\",\n      \
          \  \"new_state\": \"ok\",\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/event_console/1/actions/change_state/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    site_id='heute'\\\n    new_state='ok'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"new_state\": \"ok\",\n          \"site_id\": \"heute\"\n  \
          \      }' \\\n  \"$API_URL/objects/event_console/1/actions/change_state/invoke\""
  /objects/event_console/{event_id}/actions/update_and_acknowledge/invoke:
    post:
      tags:
      - Event Console
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Update an event (`mkeventd.update`): Needed for acknowledging\
        \ and changing the comment and contact of an event\n   * Update an event:\
        \ change comment (`mkeventd.update_comment`): Needed for changing a comment\
        \ when updating an event\n   * Update an event: change contact (`mkeventd.update_contact`):\
        \ Needed for changing a contact when updating an event\n"
      summary: Update and acknowledge an event
      operationId: cmk.gui.mkeventd._openapi.update_and_acknowledge_event
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      - in: path
        name: event_id
        description: The event console event ID.
        schema:
          type: string
          example: '1'
          pattern: ^[0-9]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAndAcknowledeEventSiteIDRequired'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/event_console/1/actions/update_and_acknowledge/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"phase\": \"ack\",\n        \"change_comment\"\
          : \"Comment now acked\",\n        \"change_contact\": \"Mr Monitor\",\n\
          \        \"site_id\": \"heute\",\n    },\n    allow_redirects=True,\n)\n\
          if resp.status_code == 201:\nelif resp.status_code == 204:\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/event_console/1/actions/update_and_acknowledge/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"phase\": \"ack\",\n        \"\
          change_comment\": \"Comment now acked\",\n        \"change_contact\": \"\
          Mr Monitor\",\n        \"site_id\": \"heute\",\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/event_console/1/actions/update_and_acknowledge/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    phase='ack'\\\n    change_comment='Comment now acked'\\\n    change_contact='Mr\
          \ Monitor'\\\n    site_id='heute'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"change_comment\": \"Comment now acked\",\n          \"change_contact\"\
          : \"Mr Monitor\",\n          \"phase\": \"ack\",\n          \"site_id\"\
          : \"heute\"\n        }' \\\n  \"$API_URL/objects/event_console/1/actions/update_and_acknowledge/invoke\""
  /domain-types/folder_config/collections/all:
    get:
      tags:
      - Folders
      description: "\n\nThis endpoint requires the following permissions: \n * Optionally:\n\
        \   * Read access to all hosts and folders (`wato.see_all_folders`): Users\
        \ without this permissions can only see folders with a contact group they\
        \ are in.\n"
      summary: Show all folders
      operationId: cmk.gui.openapi.endpoints.folder_config.list_folders
      parameters:
      - in: query
        name: parent
        description: 'Show all sub-folders of this folder. The default is the root-folder.


          Path delimiters can be either `~`, `/` or `\`. Please use the one most appropriate
          for your quoting/escaping needs. A good default choice is `~`.'
        schema:
          type: string
          example: /servers
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        required: false
      - in: query
        name: recursive
        description: 'List the folder (default: root) and all its sub-folders recursively.'
        schema:
          type: boolean
          default: false
          example: false
        required: false
      - in: query
        name: show_hosts
        description: When set, all hosts that are stored in each folder will also
          be shown. On large setups this may come at a performance cost, so by default
          this is switched off.
        schema:
          type: boolean
          default: false
          example: false
        required: false
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/folder_config/collections/all\"\
          ,\n    params={  # goes into query string\n        \"parent\": '/servers',\
          \  # Show all sub-folders of this folder.\n        \"recursive\": False,\
          \  # List the folder (default: root) and all its sub-folders recursively.\n\
          \        \"show_hosts\": False,  # When set, all hosts that are stored in\
          \ each folder will also be shown.\n    },\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"parent\": '/servers',  # Show all sub-folders\
          \ of this folder.\n    \"recursive\": False,  # List the folder (default:\
          \ root) and all its sub-folders recursively.\n    \"show_hosts\": False,\
          \  # When set, all hosts that are stored in each folder will also be shown.\n\
          })\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/domain-types/folder_config/collections/all?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/folder_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    parent=='/servers' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'parent=/servers' \\\n  \"$API_URL/domain-types/folder_config/collections/all\""
    post:
      tags:
      - Folders
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Add & remove folders (`wato.manage_folders`):\
        \ Add new folders and delete existing folders. If a folder to be deleted contains\
        \ hosts then the permission to delete hosts is also required.\n   * Optionally:\n\
        \     * Add & remove hosts (`wato.manage_hosts`): Add hosts to the monitoring\
        \ and remove hosts from the monitoring. Please also add the permission <i>Modify\
        \ existing hosts</i>.\n   * Optionally:\n     * Write access to all hosts\
        \ and folders (`wato.all_folders`): Without this permission, operations on\
        \ folders can only be done by users that are members of one of the folders\
        \ contact groups. This permission grants full access to all folders and hosts.\n"
      summary: Create a folder
      operationId: cmk.gui.openapi.endpoints.folder_config.create
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id031
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id031
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolder'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/folder_config/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"name\": \"production\",\n        \"title\"\
          : \"Production Hosts\",\n        \"parent\": \"/\",\n        \"attributes\"\
          : {\n            \"tag_criticality\": \"prod\",\n        },\n    },\n  \
          \  allow_redirects=True,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          elif resp.status_code == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/folder_config/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    data=json.dumps({\n\
          \        \"name\": \"production\",\n        \"title\": \"Production Hosts\"\
          ,\n        \"parent\": \"/\",\n        \"attributes\": {\n            \"\
          tag_criticality\": \"prod\",\n        },\n    }).encode('utf-8'),\n)\n#\
          \ Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/folder_config/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    name='production'\\\n    title='Production Hosts'\\\n    parent='/'\\\
          \n    attributes[tag_criticality]='prod'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"attributes\": {\n            \"tag_criticality\": \"prod\"\n\
          \          },\n          \"name\": \"production\",\n          \"parent\"\
          : \"/\",\n          \"title\": \"Production Hosts\"\n        }' \\\n  \"\
          $API_URL/domain-types/folder_config/collections/all\""
  /objects/folder_config/{folder}:
    get:
      tags:
      - Folders
      description: "\n\nThis endpoint requires the following permissions: \n * Optionally:\n\
        \   * Read access to all hosts and folders (`wato.see_all_folders`): Users\
        \ without this permissions can only see folders with a contact group they\
        \ are in.\n"
      summary: Show a folder
      operationId: cmk.gui.openapi.endpoints.folder_config.show_folder
      parameters:
      - in: query
        name: show_hosts
        description: When set, all hosts that are stored in this folder will also
          be shown. On large setups this may come at a performance cost, so by default
          this is switched off.
        schema:
          type: boolean
          default: false
          example: false
        required: false
      - in: path
        name: folder
        description: 'The path of the folder being requested. Please be aware that
          slashes can''t be used in the URL. Also, escaping the slashes via %2f will
          not work. Please replace the path delimiters with the tilde character `~`.


          Path delimiters can be either `~`, `/` or `\`. Please use the one most appropriate
          for your quoting/escaping needs. A good default choice is `~`.'
        schema:
          type: string
          example: ~my~fine~folder
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-\w]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/folder_config/~my~fine~folder\"\
          ,\n    params={  # goes into query string\n        \"show_hosts\": False,\
          \  # When set, all hosts that are stored in this folder will also be shown.\n\
          \    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"show_hosts\": False,  # When set, all\
          \ hosts that are stored in this folder will also be shown.\n})\n\nrequest\
          \ = urllib.request.Request(\n    f\"{API_URL}/objects/folder_config/~my~fine~folder?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/folder_config/~my~fine~folder\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/folder_config/~my~fine~folder\""
    put:
      tags:
      - Folders
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Modify existing folders (`wato.edit_folders`):\
        \ Modify the properties of existing folders.\n   * Optionally:\n     * Write\
        \ access to all hosts and folders (`wato.all_folders`): Without this permission,\
        \ operations on folders can only be done by users that are members of one\
        \ of the folders contact groups. This permission grants full access to all\
        \ folders and hosts.\n"
      summary: Update a folder
      operationId: cmk.gui.openapi.endpoints.folder_config.update
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id032
          type: string
        example: application/json
      - in: path
        name: folder
        description: 'The path of the folder being requested. Please be aware that
          slashes can''t be used in the URL. Also, escaping the slashes via %2f will
          not work. Please replace the path delimiters with the tilde character `~`.


          Path delimiters can be either `~`, `/` or `\`. Please use the one most appropriate
          for your quoting/escaping needs. A good default choice is `~`.'
        schema:
          type: string
          example: ~my~fine~folder
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-\w]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id032
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolder'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/folder_config/~my~fine~folder\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"title\"\
          : \"Virtual Servers\",\n        \"attributes\": {\n            \"tag_networking\"\
          : \"wan\",\n        },\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/folder_config/~my~fine~folder\",\n    method=\"\
          PUT\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n        \"Content-Type\": 'application/json', \
          \ # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    data=json.dumps({\n        \"title\": \"Virtual Servers\"\
          ,\n        \"attributes\": {\n            \"tag_networking\": \"wan\",\n\
          \        },\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/folder_config/~my~fine~folder\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n    'Content-Type:application/json'\
          \ \\\n    title='Virtual Servers'\\\n    attributes[tag_networking]='wan'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"attributes\"\
          : {\n            \"tag_networking\": \"wan\"\n          },\n          \"\
          title\": \"Virtual Servers\"\n        }' \\\n  \"$API_URL/objects/folder_config/~my~fine~folder\""
    delete:
      tags:
      - Folders
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Add & remove folders (`wato.manage_folders`):\
        \ Add new folders and delete existing folders. If a folder to be deleted contains\
        \ hosts then the permission to delete hosts is also required.\n   * Optionally:\n\
        \     * Add & remove hosts (`wato.manage_hosts`): Add hosts to the monitoring\
        \ and remove hosts from the monitoring. Please also add the permission <i>Modify\
        \ existing hosts</i>.\n   * Optionally:\n     * Write access to all hosts\
        \ and folders (`wato.all_folders`): Without this permission, operations on\
        \ folders can only be done by users that are members of one of the folders\
        \ contact groups. This permission grants full access to all folders and hosts.\n"
      summary: Delete a folder
      operationId: cmk.gui.openapi.endpoints.folder_config.delete
      parameters:
      - in: query
        name: delete_mode
        description: 'Delete policy: ''recursive'': Deletes the folder and all the
          elements it contains. ''abort_on_nonempty'': Deletes the folder only if
          it is not empty.'
        schema:
          type: string
          default: recursive
          enum:
          - recursive
          - abort_on_nonempty
          example: abort_on_nonempty
        required: false
      - in: path
        name: folder
        description: 'The path of the folder being requested. Please be aware that
          slashes can''t be used in the URL. Also, escaping the slashes via %2f will
          not work. Please replace the path delimiters with the tilde character `~`.


          Path delimiters can be either `~`, `/` or `\`. Please use the one most appropriate
          for your quoting/escaping needs. A good default choice is `~`.'
        schema:
          type: string
          example: ~my~fine~folder
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-\w]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '401':
          description: 'Unauthorized: The user is not authorized to do this request.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api401DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/folder_config/~my~fine~folder\"\
          ,\n    params={  # goes into query string\n        \"delete_mode\": 'abort_on_nonempty',\
          \  # Delete policy: 'recursive': Deletes the folder and all the elements\
          \ it contains.\n    },\n)\nif resp.status_code == 204:\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"delete_mode\": 'abort_on_nonempty',  #\
          \ Delete policy: 'recursive': Deletes the folder and all the elements it\
          \ contains.\n})\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/objects/folder_config/~my~fine~folder?{query_string}\"\
          ,\n    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"\
          Bearer {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\"\
          ,\n        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/folder_config/~my~fine~folder\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    delete_mode=='abort_on_nonempty' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'delete_mode=abort_on_nonempty' \\\n  \"$API_URL/objects/folder_config/~my~fine~folder\""
  /objects/folder_config/{folder}/collections/hosts:
    get:
      tags:
      - Folders
      description: "\n\nThis endpoint requires the following permissions: \n * Optionally:\n\
        \   * Read access to all hosts and folders (`wato.see_all_folders`): Users\
        \ without this permissions can only see folders with a contact group they\
        \ are in.\n"
      summary: Show all hosts in a folder
      operationId: cmk.gui.openapi.endpoints.folder_config.hosts_of_folder
      parameters:
      - in: query
        name: effective_attributes
        description: Show all effective attributes on hosts, not just the attributes
          which were set on this host specifically. This includes all attributes of
          all of this host's parent folders.
        schema:
          type: boolean
          default: false
          example: false
        required: false
      - in: path
        name: folder
        description: 'The path of the folder being requested. Please be aware that
          slashes can''t be used in the URL. Also, escaping the slashes via %2f will
          not work. Please replace the path delimiters with the tilde character `~`.


          Path delimiters can be either `~`, `/` or `\`. Please use the one most appropriate
          for your quoting/escaping needs. A good default choice is `~`.'
        schema:
          type: string
          example: ~my~fine~folder
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-\w]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/folder_config/~my~fine~folder/collections/hosts\"\
          ,\n    params={  # goes into query string\n        \"effective_attributes\"\
          : False,  # Show all effective attributes on hosts, not just the attributes\
          \ which were set on this host specifically.\n    },\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"effective_attributes\": False,  # Show\
          \ all effective attributes on hosts, not just the attributes which were\
          \ set on this host specifically.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/folder_config/~my~fine~folder/collections/hosts?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/folder_config/~my~fine~folder/collections/hosts\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/folder_config/~my~fine~folder/collections/hosts\""
  /domain-types/folder_config/actions/bulk-update/invoke:
    put:
      tags:
      - Folders
      description: "Please be aware that when doing bulk updates, it is not possible\
        \ to prevent the\n[Updating Values](\"lost update problem\"), which is normally\
        \ prevented by the ETag locking\nmechanism. Use at your own riskThis endpoint\
        \ requires the following permissions: \n * All of:\n   * Make changes, perform\
        \ actions (`wato.edit`): This permission is needed in order to make any changes\
        \ or perform any actions at all. Without this permission, the user is only\
        \ able to view data, and that only in modules he has explicit permissions\
        \ for.\n   * Modify existing folders (`wato.edit_folders`): Modify the properties\
        \ of existing folders.\n   * Optionally:\n     * Write access to all hosts\
        \ and folders (`wato.all_folders`): Without this permission, operations on\
        \ folders can only be done by users that are members of one of the folders\
        \ contact groups. This permission grants full access to all folders and hosts.\n"
      summary: Bulk update folders
      operationId: cmk.gui.openapi.endpoints.folder_config.bulk_update
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id033
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id033
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateFolder'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/folder_config/actions/bulk-update/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entries\": [\n            {\n           \
          \     \"remove_attributes\": [\"tag_foobar\"],\n            },\n       \
          \ ],\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/folder_config/actions/bulk-update/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entries\": [\n            {\n\
          \                \"remove_attributes\": [\"tag_foobar\"],\n            },\n\
          \        ],\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/domain-types/folder_config/actions/bulk-update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' \\\n\
          \    entries:='[{\"remove_attributes\": [\"tag_foobar\"]}]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"entries\": [\n            {\n              \"remove_attributes\"\
          : [\n                \"tag_foobar\"\n              ]\n            }\n  \
          \        ]\n        }' \\\n  \"$API_URL/domain-types/folder_config/actions/bulk-update/invoke\""
  /objects/folder_config/{folder}/actions/move/invoke:
    post:
      tags:
      - Folders
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Add & remove folders (`wato.manage_folders`):\
        \ Add new folders and delete existing folders. If a folder to be deleted contains\
        \ hosts then the permission to delete hosts is also required.\n   * Optionally:\n\
        \     * Add & remove hosts (`wato.manage_hosts`): Add hosts to the monitoring\
        \ and remove hosts from the monitoring. Please also add the permission <i>Modify\
        \ existing hosts</i>.\n   * Optionally:\n     * Write access to all hosts\
        \ and folders (`wato.all_folders`): Without this permission, operations on\
        \ folders can only be done by users that are members of one of the folders\
        \ contact groups. This permission grants full access to all folders and hosts.\n"
      summary: Move a folder
      operationId: cmk.gui.openapi.endpoints.folder_config.move
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id034
          type: string
        example: application/json
      - in: path
        name: folder
        description: 'The path of the folder being requested. Please be aware that
          slashes can''t be used in the URL. Also, escaping the slashes via %2f will
          not work. Please replace the path delimiters with the tilde character `~`.


          Path delimiters can be either `~`, `/` or `\`. Please use the one most appropriate
          for your quoting/escaping needs. A good default choice is `~`.'
        schema:
          type: string
          example: ~my~fine~folder
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-\w]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id034
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveFolder'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/folder_config/~my~fine~folder/actions/move/invoke\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"destination\"\
          : \"~my~fine/folder\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/folder_config/~my~fine~folder/actions/move/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required) The\
          \ value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"destination\": \"~my~fine/folder\",\n    }).encode('utf-8'),\n)\n\
          # Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/folder_config/~my~fine~folder/actions/move/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'If-Match:\"\
          a20ceacf346041dc\"' \\\n    'Content-Type:application/json' \\\n    destination='~my~fine/folder'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"destination\"\
          : \"~my~fine/folder\"\n        }' \\\n  \"$API_URL/objects/folder_config/~my~fine~folder/actions/move/invoke\""
  /domain-types/graph_timerange/collections/all:
    get:
      tags:
      - Graph Timeranges
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n"
      summary: List all graph timeranges
      operationId: Graph Timeranges.list_graph_timerange_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphTimerangeCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/graph_timerange/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/graph_timerange/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/graph_timerange/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/graph_timerange/collections/all\""
  /objects/graph_timerange/{index}:
    get:
      tags:
      - Graph Timeranges
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n"
      summary: Show graph timetrange entry
      operationId: Graph Timeranges.show_graph_timerange_v1
      parameters:
      - in: path
        name: index
        content:
          application/json:
            schema:
              description: The index used as an identifier.
              examples:
              - '1'
              minimum: 0
              title: Index
              type: integer
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphTimerangeObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/graph_timerange/1\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/graph_timerange/1\",\n    method=\"GET\",\n  \
          \  headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/graph_timerange/1\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/graph_timerange/1\""
  /domain-types/inventory/collections/all:
    get:
      tags:
      - HW/SW Inventory
      description: "\n\nThis endpoint requires the following permissions: \n * Any\
        \ of:\n   * See all hosts and services (`bi.see_all`): With this permission\
        \ set, the BI aggregation rules are applied to all hosts and services - not\
        \ only those the user is a contact for. If you remove this permissions then\
        \ the user will see incomplete aggregation trees with status based only on\
        \ those items.\n   * See all events (`mkeventd.seeall`): If a user lacks this\
        \ permission then he/she can see only those events that originate from a host\
        \ that he/she is a contact for.\n   * See all host and services (`general.see_all`):\
        \ See all objects regardless of contacts and contact groups. If combined with\
        \ 'perform commands' then commands may be done on all objects.\n   * Read\
        \ access to all hosts and folders (`wato.see_all_folders`): Users without\
        \ this permissions can only see folders with a contact group they are in.\n"
      summary: Get the HW/SW Inventory trees of given hosts.
      operationId: HW/SW Inventory.get_inventory_trees
      parameters:
      - in: query
        name: host_names
        content:
          application/json:
            schema:
              description: List of host names
              examples:
              - hostname
              items:
                type: string
              title: Host Names
              type: array
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryTreesCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/inventory/collections/all\"\
          ,\n    params={  # goes into query string\n        \"host_names\": 'hostname',\n\
          \    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"host_names\": 'hostname',\n})\n\nrequest\
          \ = urllib.request.Request(\n    f\"{API_URL}/domain-types/inventory/collections/all?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/inventory/collections/all\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    host_names=='hostname' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'host_names=hostname' \\\n  \"$API_URL/domain-types/inventory/collections/all\""
  /domain-types/host_group_config/collections/all:
    get:
      tags:
      - Host groups
      description: "\n\nThis endpoint requires the following permissions: \n * Host\
        \ & service groups (`wato.groups`): Access to the modules for managing host\
        \ and service groups.\n"
      summary: Show all host groups
      operationId: cmk.gui.openapi.endpoints.host_group_config.list_groups
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroupCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/host_group_config/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_group_config/collections/all\",\n  \
          \  method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/host_group_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/host_group_config/collections/all\""
    post:
      tags:
      - Host groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Host & service groups (`wato.groups`):\
        \ Access to the modules for managing host and service groups.\n"
      summary: Create a host group
      operationId: cmk.gui.openapi.endpoints.host_group_config.create
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id035
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroup'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id035
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputHostGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/host_group_config/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"customer\": \"provider\",\n        \"name\"\
          : \"windows\",\n        \"alias\": \"Windows Servers\",\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_group_config/collections/all\",\n  \
          \  method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"customer\": \"provider\",\n  \
          \      \"name\": \"windows\",\n        \"alias\": \"Windows Servers\",\n\
          \    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code is\
          \ >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 200:\n\
          \    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status ==\
          \ 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/host_group_config/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    customer='provider'\\\n    name='windows'\\\n    alias='Windows\
          \ Servers'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"alias\": \"Windows Servers\",\n          \"customer\": \"provider\"\
          ,\n          \"name\": \"windows\"\n        }' \\\n  \"$API_URL/domain-types/host_group_config/collections/all\""
  /objects/host_group_config/{name}:
    get:
      tags:
      - Host groups
      description: "\n\nThis endpoint requires the following permissions: \n * Host\
        \ & service groups (`wato.groups`): Access to the modules for managing host\
        \ and service groups.\n"
      summary: Show a host group
      operationId: cmk.gui.openapi.endpoints.host_group_config.get
      parameters:
      - in: path
        name: name
        description: The identifier name of the group.
        schema:
          type: string
          example: pathname
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroup'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/host_group_config/pathname\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_group_config/pathname\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/host_group_config/pathname\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/host_group_config/pathname\""
    put:
      tags:
      - Host groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Host & service groups (`wato.groups`):\
        \ Access to the modules for managing host and service groups.\n"
      summary: Update a host group
      operationId: cmk.gui.openapi.endpoints.host_group_config.update
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id036
          type: string
        example: application/json
      - in: path
        name: name
        description: The identifier name of the group.
        schema:
          type: string
          example: pathname
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroup'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id036
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHostGroupAttributes'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host_group_config/pathname\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"alias\"\
          : \"Example Group\",\n        \"customer\": \"provider\",\n    },\n)\nif\
          \ resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise\
          \ RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_group_config/pathname\",\n    method=\"PUT\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n        \"Content-Type\": 'application/json', \
          \ # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    data=json.dumps({\n        \"alias\": \"Example Group\"\
          ,\n        \"customer\": \"provider\",\n    }).encode('utf-8'),\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/host_group_config/pathname\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n    'Content-Type:application/json'\
          \ \\\n    alias='Example Group'\\\n    customer='provider'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"alias\": \"\
          Example Group\",\n          \"customer\": \"provider\"\n        }' \\\n\
          \  \"$API_URL/objects/host_group_config/pathname\""
    delete:
      tags:
      - Host groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Host & service groups (`wato.groups`):\
        \ Access to the modules for managing host and service groups.\n"
      summary: Delete a host group
      operationId: cmk.gui.openapi.endpoints.host_group_config.delete
      parameters:
      - in: path
        name: name
        description: The identifier name of the group.
        schema:
          type: string
          example: pathname
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/host_group_config/pathname\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_group_config/pathname\",\n    method=\"DELETE\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/host_group_config/pathname\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/host_group_config/pathname\""
  /domain-types/host_group_config/actions/bulk-update/invoke:
    put:
      tags:
      - Host groups
      description: "Please be aware that when doing bulk updates, it is not possible\
        \ to prevent the\n[Updating Values](\"lost update problem\"), which is normally\
        \ prevented by the ETag locking\nmechanism. Use at your own riskThis endpoint\
        \ requires the following permissions: \n * All of:\n   * Make changes, perform\
        \ actions (`wato.edit`): This permission is needed in order to make any changes\
        \ or perform any actions at all. Without this permission, the user is only\
        \ able to view data, and that only in modules he has explicit permissions\
        \ for.\n   * Host & service groups (`wato.groups`): Access to the modules\
        \ for managing host and service groups.\n"
      summary: Bulk update host groups
      operationId: cmk.gui.openapi.endpoints.host_group_config.bulk_update
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id037
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroupCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id037
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateHostGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/host_group_config/actions/bulk-update/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entries\": [\n            {\n           \
          \     \"name\": \"windows\",\n                \"attributes\": {\n      \
          \              \"alias\": \"Windows Servers\",\n                },\n   \
          \         },\n        ],\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_group_config/actions/bulk-update/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entries\": [\n            {\n\
          \                \"name\": \"windows\",\n                \"attributes\"\
          : {\n                    \"alias\": \"Windows Servers\",\n             \
          \   },\n            },\n        ],\n    }).encode('utf-8'),\n)\n# Will raise\
          \ an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/domain-types/host_group_config/actions/bulk-update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' \\\n\
          \    entries:='[{\"name\": \"windows\", \"attributes\": {\"alias\": \"Windows\
          \ Servers\"}}]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"entries\": [\n            {\n              \"attributes\":\
          \ {\n                \"alias\": \"Windows Servers\"\n              },\n\
          \              \"name\": \"windows\"\n            }\n          ]\n     \
          \   }' \\\n  \"$API_URL/domain-types/host_group_config/actions/bulk-update/invoke\""
  /domain-types/host_group_config/actions/bulk-create/invoke:
    post:
      tags:
      - Host groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Host & service groups (`wato.groups`):\
        \ Access to the modules for managing host and service groups.\n"
      summary: Bulk create host groups
      operationId: cmk.gui.openapi.endpoints.host_group_config.bulk_create
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id038
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroupCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id038
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkInputHostGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/host_group_config/actions/bulk-create/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entries\": [\n            {\n           \
          \     \"name\": \"windows\",\n                \"alias\": \"Windows Servers\"\
          ,\n            },\n        ],\n    },\n    allow_redirects=True,\n)\nif\
          \ resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_group_config/actions/bulk-create/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entries\": [\n            {\n\
          \                \"name\": \"windows\",\n                \"alias\": \"Windows\
          \ Servers\",\n            },\n        ],\n    }).encode('utf-8'),\n)\n#\
          \ Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/host_group_config/actions/bulk-create/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    entries:='[{\"name\": \"windows\", \"alias\": \"Windows Servers\"\
          }]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"entries\": [\n            {\n              \"alias\": \"Windows\
          \ Servers\",\n              \"name\": \"windows\"\n            }\n     \
          \     ]\n        }' \\\n  \"$API_URL/domain-types/host_group_config/actions/bulk-create/invoke\""
  /domain-types/host_group_config/actions/bulk-delete/invoke:
    post:
      tags:
      - Host groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Host & service groups (`wato.groups`):\
        \ Access to the modules for managing host and service groups.\n"
      summary: Bulk delete host groups
      operationId: cmk.gui.openapi.endpoints.host_group_config.bulk_delete
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteHostGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/host_group_config/actions/bulk-delete/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entries\": [\"windows\", \"panels\"],\n \
          \   },\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_group_config/actions/bulk-delete/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entries\": [\"windows\", \"panels\"\
          ],\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 201:\n\
          elif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/host_group_config/actions/bulk-delete/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    entries:='[\"windows\", \"panels\"]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"entries\": [\n            \"windows\",\n            \"panels\"\
          \n          ]\n        }' \\\n  \"$API_URL/domain-types/host_group_config/actions/bulk-delete/invoke\""
  /domain-types/host/collections/all:
    get:
      tags:
      - Host status
      description: "`WARNING`: This URL is deprecated, see [Werk 17003](https://checkmk.com/werk/17003)\
        \ for more details.\n\nThis endpoint requires the following permissions: \n"
      summary: Show hosts of specific condition
      deprecated: true
      operationId: cmk.gui.openapi.endpoints.host.list_hosts_deprecated-17003
      parameters:
      - in: query
        name: sites
        description: Restrict the query to this particular site.
        schema:
          type: array
          default: []
          example: &id140
          - heute
          items:
            type: string
        required: false
        explode: true
        style: form
      - in: query
        name: query
        description: An query expression of the Livestatus 'hosts' table in nested
          dictionary form. If you want to use multiple expressions, nest them with
          the AND/OR operators.
        required: false
        content:
          application/json:
            schema:
              example: '{"op": "and", "expr": [{"op": "=", "left": "name", "right":
                "example.com"}, {"op": "!=", "left": "state", "right": "0"}]}'
              $ref: '#/components/schemas/Expr'
      - in: query
        name: columns
        description: The desired columns of the `hosts` table. If left empty, a default
          set of columns is used.
        schema:
          type: array
          default:
          - name
          example: &id141
          - name
          items:
            type: string
        required: false
        explode: true
        style: form
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/host/collections/all\"\
          ,\n    params={  # goes into query string\n        \"sites\": ['heute'],\
          \  # Restrict the query to this particular site.\n        \"query\": '{\"\
          op\": \"and\", \"expr\": [{\"op\": \"=\", \"left\": \"name\", \"right\"\
          : \"example.com\"}, {\"op\": \"!=\", \"left\": \"state\", \"right\": \"\
          0\"}]}',  # An query expression of the Livestatus 'hosts' table in nested\
          \ dictionary form.\n        \"columns\": ['name'],  # The desired columns\
          \ of the `hosts` table.\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"sites\": ['heute'],  # Restrict the query\
          \ to this particular site.\n    \"query\": '{\"op\": \"and\", \"expr\":\
          \ [{\"op\": \"=\", \"left\": \"name\", \"right\": \"example.com\"}, {\"\
          op\": \"!=\", \"left\": \"state\", \"right\": \"0\"}]}',  # An query expression\
          \ of the Livestatus 'hosts' table in nested dictionary form.\n    \"columns\"\
          : ['name'],  # The desired columns of the `hosts` table.\n})\n\nrequest\
          \ = urllib.request.Request(\n    f\"{API_URL}/domain-types/host/collections/all?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/host/collections/all\" \\\n \
          \   \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    sites=='['heute']' \\\n    query=='{\"op\": \"and\", \"\
          expr\": [{\"op\": \"=\", \"left\": \"name\", \"right\": \"example.com\"\
          }, {\"op\": \"!=\", \"left\": \"state\", \"right\": \"0\"}]}' \\\n    columns=='['name']' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'sites=heute' \\\n  --data-urlencode 'query={\"\
          op\": \"and\", \"expr\": [{\"op\": \"=\", \"left\": \"name\", \"right\"\
          : \"example.com\"}, {\"op\": \"!=\", \"left\": \"state\", \"right\": \"\
          0\"}]}' \\\n  --data-urlencode 'columns=name' \\\n  \"$API_URL/domain-types/host/collections/all\""
    post:
      tags:
      - Host status
      description: "\n\nThis endpoint requires the following permissions: \n"
      summary: Show hosts of specific condition
      operationId: cmk.gui.openapi.endpoints.host.list_hosts
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id039
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id039
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HostParameters'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/host/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"sites\": [\"heute\"],\n        \"query\"\
          : \"{\\\"op\\\": \\\"and\\\", \\\"expr\\\": [{\\\"op\\\": \\\"=\\\", \\\"\
          left\\\": \\\"name\\\", \\\"right\\\": \\\"example.com\\\"}, {\\\"op\\\"\
          : \\\"!=\\\", \\\"left\\\": \\\"state\\\", \\\"right\\\": \\\"0\\\"}]}\"\
          ,\n        \"columns\": [\"name\"],\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host/collections/all\",\n    method=\"POST\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"sites\": [\"heute\"],\n        \"query\": \"{\\\"op\\\": \\\"and\\\
          \", \\\"expr\\\": [{\\\"op\\\": \\\"=\\\", \\\"left\\\": \\\"name\\\", \\\
          \"right\\\": \\\"example.com\\\"}, {\\\"op\\\": \\\"!=\\\", \\\"left\\\"\
          : \\\"state\\\", \\\"right\\\": \\\"0\\\"}]}\",\n        \"columns\": [\"\
          name\"],\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/host/collections/all\" \\\n\
          \    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\"\
          \ \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    sites:='[\"heute\"]'\\\n    query='{\"op\": \"and\", \"expr\"\
          : [{\"op\": \"=\", \"left\": \"name\", \"right\": \"example.com\"}, {\"\
          op\": \"!=\", \"left\": \"state\", \"right\": \"0\"}]}'\\\n    columns:='[\"\
          name\"]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"columns\": [\n            \"name\"\n          ],\n        \
          \  \"query\": \"{\\\"op\\\": \\\"and\\\", \\\"expr\\\": [{\\\"op\\\": \\\
          \"=\\\", \\\"left\\\": \\\"name\\\", \\\"right\\\": \\\"example.com\\\"\
          }, {\\\"op\\\": \\\"!=\\\", \\\"left\\\": \\\"state\\\", \\\"right\\\":\
          \ \\\"0\\\"}]}\",\n          \"sites\": [\n            \"heute\"\n     \
          \     ]\n        }' \\\n  \"$API_URL/domain-types/host/collections/all\""
  /objects/host/{host_name}:
    get:
      tags:
      - Host status
      description: "\n\nThis endpoint requires the following permissions: \n"
      summary: Show host
      operationId: cmk.gui.openapi.endpoints.host.show_host
      parameters:
      - in: query
        name: columns
        description: The desired columns of the `hosts` table. If left empty, a default
          set of columns is used.
        schema:
          type: array
          default:
          - name
          example:
          - name
          items:
            type: string
        required: false
        explode: true
        style: form
      - in: path
        name: host_name
        description: The host name
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/host/example.com\"\
          ,\n    params={  # goes into query string\n        \"columns\": ['name'],\
          \  # The desired columns of the `hosts` table.\n    },\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"columns\": ['name'],  # The desired columns\
          \ of the `hosts` table.\n})\n\nrequest = urllib.request.Request(\n    f\"\
          {API_URL}/objects/host/example.com?{query_string}\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/host/example.com\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    \n    columns=='['name']' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'columns=name' \\\n  \"$API_URL/objects/host/example.com\""
  /domain-types/host_tag_group/collections/all:
    get:
      tags:
      - Host tag groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Manage tags (`wato.hosttags`): Create, remove and edit tags. Removing\
        \ tags also might remove rules, so this permission should not be available\
        \ to normal users.\n   * Optionally:\n     * Write access to all hosts and\
        \ folders (`wato.all_folders`): Without this permission, operations on folders\
        \ can only be done by users that are members of one of the folders contact\
        \ groups. This permission grants full access to all folders and hosts.\n"
      summary: Show all host tag groups
      operationId: cmk.gui.openapi.endpoints.host_tag_group.list_host_tag_groups
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostTagGroupCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/host_tag_group/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_tag_group/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/host_tag_group/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/host_tag_group/collections/all\""
    post:
      tags:
      - Host tag groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Manage tags (`wato.hosttags`): Create,\
        \ remove and edit tags. Removing tags also might remove rules, so this permission\
        \ should not be available to normal users.\n   * Optionally:\n     * Write\
        \ access to all hosts and folders (`wato.all_folders`): Without this permission,\
        \ operations on folders can only be done by users that are members of one\
        \ of the folders contact groups. This permission grants full access to all\
        \ folders and hosts.\n"
      summary: Create a host tag group
      operationId: cmk.gui.openapi.endpoints.host_tag_group.create_host_tag_group
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id040
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteHostTagGroup'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id040
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputHostTagGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/host_tag_group/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"id\": \"group_id\",\n        \"title\": \"\
          Kubernetes\",\n        \"topic\": \"Data Sources\",\n        \"help\": \"\
          Kubernetes Pods\",\n        \"tags\": [\n            {\n               \
          \ \"id\": \"pod\",\n                \"title\": \"Pod\",\n            },\n\
          \        ],\n    },\n    allow_redirects=True,\n)\nif resp.status_code ==\
          \ 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_tag_group/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    data=json.dumps({\n\
          \        \"id\": \"group_id\",\n        \"title\": \"Kubernetes\",\n   \
          \     \"topic\": \"Data Sources\",\n        \"help\": \"Kubernetes Pods\"\
          ,\n        \"tags\": [\n            {\n                \"id\": \"pod\",\n\
          \                \"title\": \"Pod\",\n            },\n        ],\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/host_tag_group/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    id='group_id'\\\n    title='Kubernetes'\\\n    topic='Data Sources'\\\
          \n    help='Kubernetes Pods'\\\n    tags:='[{\"id\": \"pod\", \"title\"\
          : \"Pod\"}]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"help\": \"Kubernetes Pods\",\n          \"id\": \"group_id\"\
          ,\n          \"tags\": [\n            {\n              \"id\": \"pod\",\n\
          \              \"title\": \"Pod\"\n            }\n          ],\n       \
          \   \"title\": \"Kubernetes\",\n          \"topic\": \"Data Sources\"\n\
          \        }' \\\n  \"$API_URL/domain-types/host_tag_group/collections/all\""
  /objects/host_tag_group/{name}:
    get:
      tags:
      - Host tag groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Manage tags (`wato.hosttags`): Create, remove and edit tags. Removing\
        \ tags also might remove rules, so this permission should not be available\
        \ to normal users.\n   * Optionally:\n     * Write access to all hosts and\
        \ folders (`wato.all_folders`): Without this permission, operations on folders\
        \ can only be done by users that are members of one of the folders contact\
        \ groups. This permission grants full access to all folders and hosts.\n"
      summary: Show a host tag group
      operationId: cmk.gui.openapi.endpoints.host_tag_group.show_host_tag_group
      parameters:
      - in: path
        name: name
        description: The name of the host tag group
        schema:
          type: string
          example: datasource
          pattern: ^[^\d\W][-\w]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteHostTagGroup'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/host_tag_group/datasource\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_tag_group/datasource\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/host_tag_group/datasource\" \\\n \
          \   \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/host_tag_group/datasource\""
    put:
      tags:
      - Host tag groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Manage tags (`wato.hosttags`): Create,\
        \ remove and edit tags. Removing tags also might remove rules, so this permission\
        \ should not be available to normal users.\n   * Optionally:\n     * Write\
        \ access to all hosts and folders (`wato.all_folders`): Without this permission,\
        \ operations on folders can only be done by users that are members of one\
        \ of the folders contact groups. This permission grants full access to all\
        \ folders and hosts.\n"
      summary: Update a host tag group
      operationId: cmk.gui.openapi.endpoints.host_tag_group.update_host_tag_group
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id041
          type: string
        example: application/json
      - in: path
        name: name
        description: The name of the host tag group
        schema:
          type: string
          example: datasource
          pattern: ^[^\d\W][-\w]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '401':
          description: 'Unauthorized: The user is not authorized to do this request.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api401DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '405':
          description: 'Method Not Allowed: Method not allowed: This request is only
            allowed with other HTTP methods.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api405DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteHostTagGroup'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id041
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHostTagGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host_tag_group/datasource\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"title\"\
          : \"Kubernetes\",\n        \"topic\": \"Data Sources\",\n        \"help\"\
          : \"Kubernetes Pods\",\n        \"tags\": [\n            {\n           \
          \     \"id\": \"pod\",\n                \"title\": \"Pod\",\n          \
          \  },\n        ],\n        \"repair\": False,\n    },\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_tag_group/datasource\",\n    method=\"PUT\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n        \"Content-Type\": 'application/json', \
          \ # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    data=json.dumps({\n        \"title\": \"Kubernetes\"\
          ,\n        \"topic\": \"Data Sources\",\n        \"help\": \"Kubernetes\
          \ Pods\",\n        \"tags\": [\n            {\n                \"id\": \"\
          pod\",\n                \"title\": \"Pod\",\n            },\n        ],\n\
          \        \"repair\": False,\n    }).encode('utf-8'),\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/host_tag_group/datasource\" \\\n \
          \   \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n    'Content-Type:application/json'\
          \ \\\n    title='Kubernetes'\\\n    topic='Data Sources'\\\n    help='Kubernetes\
          \ Pods'\\\n    tags:='[{\"id\": \"pod\", \"title\": \"Pod\"}]'\\\n    repair:=false"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"help\": \"\
          Kubernetes Pods\",\n          \"repair\": false,\n          \"tags\": [\n\
          \            {\n              \"id\": \"pod\",\n              \"title\"\
          : \"Pod\"\n            }\n          ],\n          \"title\": \"Kubernetes\"\
          ,\n          \"topic\": \"Data Sources\"\n        }' \\\n  \"$API_URL/objects/host_tag_group/datasource\""
    delete:
      tags:
      - Host tag groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Manage tags (`wato.hosttags`): Create,\
        \ remove and edit tags. Removing tags also might remove rules, so this permission\
        \ should not be available to normal users.\n   * Optionally:\n     * Write\
        \ access to all hosts and folders (`wato.all_folders`): Without this permission,\
        \ operations on folders can only be done by users that are members of one\
        \ of the folders contact groups. This permission grants full access to all\
        \ folders and hosts.\n"
      summary: Delete a host tag group
      operationId: cmk.gui.openapi.endpoints.host_tag_group.delete_host_tag_group
      parameters:
      - in: query
        name: repair
        description: The host tag group can still be in use. Setting repair to True
          gives permission to automatically remove the tag from the affected hosts.
        schema:
          type: boolean
          default: false
          example: false
        required: false
      - in: query
        name: mode
        description: The host tag group can still be in use. Set mode to determine
          what should happen. Either 'abort' the deletion, 'delete' affected rules
          or 'remove' the tag from affected rules.
        schema:
          type:
          - string
          - 'null'
          default: null
          enum:
          - abort
          - delete
          - remove
          - null
          example: delete
        required: false
      - in: path
        name: name
        description: The name of the host tag group
        schema:
          type: string
          example: datasource
          pattern: ^[^\d\W][-\w]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '401':
          description: 'Unauthorized: The user is not authorized to do this request.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api401DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '405':
          description: 'Method Not Allowed: Method not allowed: This request is only
            allowed with other HTTP methods.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api405DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/host_tag_group/datasource\"\
          ,\n    params={  # goes into query string\n        \"repair\": False,  #\
          \ The host tag group can still be in use.\n        \"mode\": 'delete', \
          \ # The host tag group can still be in use.\n    },\n)\nif resp.status_code\
          \ == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"repair\": False,  # The host tag group\
          \ can still be in use.\n    \"mode\": 'delete',  # The host tag group can\
          \ still be in use.\n})\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/objects/host_tag_group/datasource?{query_string}\"\
          ,\n    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"\
          Bearer {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\"\
          ,\n        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/host_tag_group/datasource\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    mode=='delete' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'mode=delete' \\\n  \"$API_URL/objects/host_tag_group/datasource\""
  /domain-types/host_config/actions/wait-for-completion/invoke:
    get:
      tags:
      - Hosts
      description: This endpoint will redirect on itself to prevent timeouts.
      summary: Wait for renaming process completion
      operationId: cmk.gui.openapi.endpoints.host_config.renaming_job_wait_for_completion
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '302':
          description: 'Found: The renaming job is still running. Redirecting to the
            ''Wait for completion'' endpoint.'
          content: {}
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: There is no running renaming job'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404CustomError3'
        '204':
          description: 'No Content: The renaming job has been completed.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.get(\n    f\"{API_URL}/domain-types/host_config/actions/wait-for-completion/invoke\"\
          ,\n    allow_redirects=True,\n)\nif resp.status_code == 204:\n    print('Done')\n\
          elif resp.status_code == 302:\n    print('Redirected to', resp.headers['location'])\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_config/actions/wait-for-completion/invoke\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 204:\n    print('Done')\n\
          elif resp.status == 302:\n    print('Redirected to', resp.headers['location'])"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/host_config/actions/wait-for-completion/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/host_config/actions/wait-for-completion/invoke\""
  /domain-types/host_config/collections/all:
    get:
      tags:
      - Hosts
      description: "\n\nThis endpoint requires the following permissions: \n * Optionally:\n\
        \   * Read access to all hosts and folders (`wato.see_all_folders`): Users\
        \ without this permissions can only see folders with a contact group they\
        \ are in.\n"
      summary: Show all hosts
      operationId: Hosts.list_hosts_v1
      parameters:
      - in: query
        name: fields
        content:
          application/json:
            schema:
              description: 'The fields to include/exclude.


                The syntax is a comma-separated list of field paths.

                Each field path is a sequence of field names separated by a tilde
                (`~`).

                Field names may contain alphanumeric characters, dashes (`-`) and
                underscores (`_`).

                The field path may be followed by a list of subfields enclosed in
                parentheses (`(` and `)`).


                The outermost fields must be enclosed in parentheses and may be prefixed
                with an exclamation mark (`!`) to negate the selection.


                Examples:

                - `(ipaddress)` selects the field `ipaddress`, all other fields will
                be omitted.

                - `!(ipaddress)` excludes the field `ipaddress`, all other fields
                will be included.

                - `(ipaddress,ipv6address)` selects only the fields `ipaddress` and
                `ipv6address`.

                - `(attributes~ipaddress)` selects the field `ipaddress` within `attributes`,
                all other fields (not just within attributes) will be omitted.

                - `(attributes(ipaddress,ipv6address))` selects the fields `ipaddress`
                and `ipv6address` within `attributes`, again all other fields will
                be omitted.

                - `!(extensions~attributes(ipaddress,ipv6address))` excludes the fields
                `ipaddress` and `ipv6address` within `attributes` under `extensions`,
                all other fields will be included.

                '
              examples:
              - (id)
              type: string
      - in: query
        name: effective_attributes
        content:
          application/json:
            schema:
              default: false
              description: Show all effective attributes on hosts, not just the attributes
                which were set on this host specifically. This includes all attributes
                of all of this host's parent folders.
              examples:
              - 'False'
              title: Effective Attributes
              type: boolean
      - in: query
        name: include_links
        content:
          application/json:
            schema:
              default: false
              description: Flag which toggles whether the links field of the individual
                values should be populated.
              examples:
              - 'False'
              title: Include Links
              type: boolean
      - in: query
        name: hostnames
        content:
          application/json:
            schema:
              description: A list of host names to filter the result by.
              examples:
              - host1
              items:
                type: string
              title: Hostnames
              type: array
      - in: query
        name: site
        content:
          application/json:
            schema:
              description: Filter the result by a specific site.
              examples:
              - site1
              title: Site
              type: string
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/host_config/collections/all\"\
          ,\n    params={  # goes into query string\n        \"fields\": '(id)',\n\
          \        \"effective_attributes\": 'False',\n        \"include_links\":\
          \ 'False',\n        \"hostnames\": 'host1',\n        \"site\": 'site1',\n\
          \    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"fields\": '(id)',\n    \"effective_attributes\"\
          : 'False',\n    \"include_links\": 'False',\n    \"hostnames\": 'host1',\n\
          \    \"site\": 'site1',\n})\n\nrequest = urllib.request.Request(\n    f\"\
          {API_URL}/domain-types/host_config/collections/all?{query_string}\",\n \
          \   method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/host_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    fields=='(id)' \\\n    effective_attributes=='False'\
          \ \\\n    include_links=='False' \\\n    hostnames=='host1' \\\n    site=='site1' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'fields=(id)' \\\n  --data-urlencode 'effective_attributes=False'\
          \ \\\n  --data-urlencode 'include_links=False' \\\n  --data-urlencode 'hostnames=host1'\
          \ \\\n  --data-urlencode 'site=site1' \\\n  \"$API_URL/domain-types/host_config/collections/all\""
    post:
      tags:
      - Hosts
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Add & remove hosts (`wato.manage_hosts`):\
        \ Add hosts to the monitoring and remove hosts from the monitoring. Please\
        \ also add the permission <i>Modify existing hosts</i>.\n   * Optionally:\n\
        \     * Write access to all hosts and folders (`wato.all_folders`): Without\
        \ this permission, operations on folders can only be done by users that are\
        \ members of one of the folders contact groups. This permission grants full\
        \ access to all folders and hosts.\n"
      summary: Create a hosts.
      operationId: Hosts.create_host_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id042
          type: string
        example: application/json
      - in: query
        name: bake_agent
        content:
          application/json:
            schema:
              default: false
              description: Tries to bake the agents for the just created hosts. This
                process is started in the background after configuring the host. Please
                note that the backing may take some time and might block subsequent
                API calls. This only works when using the Enterprise Editions.
              examples:
              - 'True'
              title: Bake Agent
              type: boolean
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id042
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHostModel'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/host_config/collections/all\"\
          ,\n    params={  # goes into query string\n        \"bake_agent\": 'True',\n\
          \    },\n    headers={\n        \"Content-Type\": 'application/json',  #\
          \ (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"bake_agent\": 'True',\n})\n\nrequest =\
          \ urllib.request.Request(\n    f\"{API_URL}/domain-types/host_config/collections/all?{query_string}\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/host_config/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    bake_agent=='True' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data-urlencode\
          \ 'bake_agent=True' \\\n  \"$API_URL/domain-types/host_config/collections/all\""
  /objects/host_config/{host_name}:
    get:
      tags:
      - Hosts
      description: "\n\nThis endpoint requires the following permissions: \n * Optionally:\n\
        \   * Read access to all hosts and folders (`wato.see_all_folders`): Users\
        \ without this permissions can only see folders with a contact group they\
        \ are in.\n"
      summary: Show a host.
      operationId: Hosts.show_host_v1
      parameters:
      - in: path
        name: host_name
        content:
          application/json:
            schema:
              description: Host name
              examples:
              - example.com
              title: Host Name
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/host_config/example.com\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config/example.com\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/host_config/example.com\" \\\n   \
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/host_config/example.com\""
    put:
      tags:
      - Hosts
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Modify existing hosts (`wato.edit_hosts`):\
        \ Modify the properties of existing hosts. Please note: for the management\
        \ of services (inventory) there is a separate permission (see below)\n   *\
        \ Optionally:\n     * Write access to all hosts and folders (`wato.all_folders`):\
        \ Without this permission, operations on folders can only be done by users\
        \ that are members of one of the folders contact groups. This permission grants\
        \ full access to all folders and hosts.\n"
      summary: Update a host
      operationId: Hosts.update_host_v1
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id043
          type: string
        example: application/json
      - in: path
        name: host_name
        content:
          application/json:
            schema:
              description: Host name
              examples:
              - example.com
              title: Host Name
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError5AAAB769ED6D6288'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError26717584F8AADF09'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id043
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHost'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host_config/example.com\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config/example.com\",\n    method=\"PUT\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n        \"Content-Type\": 'application/json', \
          \ # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/host_config/example.com\" \\\n   \
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  \"$API_URL/objects/host_config/example.com\""
    delete:
      tags:
      - Hosts
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Add & remove hosts (`wato.manage_hosts`):\
        \ Add hosts to the monitoring and remove hosts from the monitoring. Please\
        \ also add the permission <i>Modify existing hosts</i>.\n   * Optionally:\n\
        \     * Write access to all hosts and folders (`wato.all_folders`): Without\
        \ this permission, operations on folders can only be done by users that are\
        \ members of one of the folders contact groups. This permission grants full\
        \ access to all folders and hosts.\n"
      summary: Delete a host
      operationId: cmk.gui.openapi.endpoints.host_config.delete
      parameters:
      - in: path
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/host_config/example.com\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config/example.com\",\n    method=\"DELETE\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/host_config/example.com\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/host_config/example.com\""
  /domain-types/host_config/actions/bulk-update/invoke:
    put:
      tags:
      - Hosts
      description: "Please be aware that when doing bulk updates, it is not possible\
        \ to prevent the\n[Updating Values](\"lost update problem\"), which is normally\
        \ prevented by the ETag locking\nmechanism. Use at your own risk.This endpoint\
        \ requires the following permissions: \n * All of:\n   * Make changes, perform\
        \ actions (`wato.edit`): This permission is needed in order to make any changes\
        \ or perform any actions at all. Without this permission, the user is only\
        \ able to view data, and that only in modules he has explicit permissions\
        \ for.\n   * Modify existing hosts (`wato.edit_hosts`): Modify the properties\
        \ of existing hosts. Please note: for the management of services (inventory)\
        \ there is a separate permission (see below)\n   * Optionally:\n     * Write\
        \ access to all hosts and folders (`wato.all_folders`): Without this permission,\
        \ operations on folders can only be done by users that are members of one\
        \ of the folders contact groups. This permission grants full access to all\
        \ folders and hosts.\n"
      summary: Bulk update hosts
      operationId: Hosts.bulk_update_hosts_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id044
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BulkHostActionWithFailedHostsModel'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id044
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateHostModel'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/host_config/actions/bulk-update/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_config/actions/bulk-update/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/domain-types/host_config/actions/bulk-update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/host_config/actions/bulk-update/invoke\""
  /objects/host_config/{host_name}/actions/rename/invoke:
    put:
      tags:
      - Hosts
      description: "This endpoint will start a background job to rename the host.\
        \ Only one rename background job\ncan run at a time.This endpoint requires\
        \ the following permissions: \n * All of:\n   * Write access to all hosts\
        \ and folders (`wato.all_folders`): Without this permission, operations on\
        \ folders can only be done by users that are members of one of the folders\
        \ contact groups. This permission grants full access to all folders and hosts.\n\
        \   * Modify existing hosts (`wato.edit_hosts`): Modify the properties of\
        \ existing hosts. Please note: for the management of services (inventory)\
        \ there is a separate permission (see below)\n   * Rename existing hosts (`wato.rename_hosts`):\
        \ Rename existing hosts. Please also add the permission <i>Modify existing\
        \ hosts</i>.\n   * Read access to all hosts and folders (`wato.see_all_folders`):\
        \ Users without this permissions can only see folders with a contact group\
        \ they are in.\n"
      summary: Rename a host
      operationId: cmk.gui.openapi.endpoints.host_config.rename_host
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id045
          type: string
        example: application/json
      - in: path
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '303':
          description: 'See Other: The host rename process is still running. Redirecting
            to the ''Wait for completion'' endpoint'
          content: {}
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '409':
          description: 'Conflict: There are pending changes not yet activated or a
            rename background job is already running.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409CustomError1'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '422':
          description: 'Unprocessable Entity: The host could not be renamed.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api422CustomError3'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfig'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id045
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameHost'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.put(\n    f\"{API_URL}/objects/host_config/example.com/actions/rename/invoke\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"new_name\"\
          : \"newhost\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 303:\n\
          \    print('Redirected to', resp.headers['location'])\nelse:\n    raise\
          \ RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config/example.com/actions/rename/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required) The\
          \ value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"new_name\": \"newhost\",\n    }).encode('utf-8'),\n)\n# Will raise\
          \ an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 303:\n    print('Redirected to', resp.headers['location'])"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/host_config/example.com/actions/rename/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'If-Match:\"\
          a20ceacf346041dc\"' \\\n    'Content-Type:application/json' \\\n    new_name='newhost'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"new_name\"\
          : \"newhost\"\n        }' \\\n  \"$API_URL/objects/host_config/example.com/actions/rename/invoke\""
  /objects/host_config/{host_name}/properties/nodes:
    put:
      tags:
      - Hosts
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Modify existing hosts (`wato.edit_hosts`):\
        \ Modify the properties of existing hosts. Please note: for the management\
        \ of services (inventory) there is a separate permission (see below)\n   *\
        \ Optionally:\n     * Write access to all hosts and folders (`wato.all_folders`):\
        \ Without this permission, operations on folders can only be done by users\
        \ that are members of one of the folders contact groups. This permission grants\
        \ full access to all folders and hosts.\n"
      summary: Update the nodes of a cluster host
      operationId: Hosts.update_cluster_nodes_v1
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id046
          type: string
        example: application/json
      - in: path
        name: host_name
        content:
          application/json:
            schema:
              description: Host name
              examples:
              - example.com
              title: Host Name
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError5AAAB769ED6D6288'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError26717584F8AADF09'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostNodesProperty'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id046
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNodes'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host_config/example.com/properties/nodes\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config/example.com/properties/nodes\",\n\
          \    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required) The\
          \ value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/host_config/example.com/properties/nodes\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n\
          \    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  \"$API_URL/objects/host_config/example.com/properties/nodes\""
  /domain-types/host_config/actions/bulk-create/invoke:
    post:
      tags:
      - Hosts
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Add & remove hosts (`wato.manage_hosts`):\
        \ Add hosts to the monitoring and remove hosts from the monitoring. Please\
        \ also add the permission <i>Modify existing hosts</i>.\n   * Optionally:\n\
        \     * Write access to all hosts and folders (`wato.all_folders`): Without\
        \ this permission, operations on folders can only be done by users that are\
        \ members of one of the folders contact groups. This permission grants full\
        \ access to all folders and hosts.\n"
      summary: Bulk create hosts
      operationId: Hosts.bulk_create_host_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id047
          type: string
        example: application/json
      - in: query
        name: bake_agent
        content:
          application/json:
            schema:
              description: '[Enterprise, Cloud, Saas, Managed editions only] Tries
                to bake the agents for the just created hosts. This process is started
                in the background after configuring the host. Please note that the
                baking may take some time and might block subsequent API calls.'
              examples:
              - 'True'
              title: Bake Agent
              type: boolean
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/BulkHostActionWithFailedHostsModel'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id047
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateHostModel'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/host_config/actions/bulk-create/invoke\"\
          ,\n    params={  # goes into query string\n        \"bake_agent\": 'True',\n\
          \    },\n    headers={\n        \"Content-Type\": 'application/json',  #\
          \ (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"bake_agent\": 'True',\n})\n\nrequest =\
          \ urllib.request.Request(\n    f\"{API_URL}/domain-types/host_config/actions/bulk-create/invoke?{query_string}\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/host_config/actions/bulk-create/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    bake_agent=='True' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data-urlencode\
          \ 'bake_agent=True' \\\n  \"$API_URL/domain-types/host_config/actions/bulk-create/invoke\""
  /domain-types/host_config/actions/bulk-delete/invoke:
    post:
      tags:
      - Hosts
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Add & remove hosts (`wato.manage_hosts`):\
        \ Add hosts to the monitoring and remove hosts from the monitoring. Please\
        \ also add the permission <i>Modify existing hosts</i>.\n   * Optionally:\n\
        \     * Write access to all hosts and folders (`wato.all_folders`): Without\
        \ this permission, operations on folders can only be done by users that are\
        \ members of one of the folders contact groups. This permission grants full\
        \ access to all folders and hosts.\n"
      summary: Bulk delete hosts
      operationId: cmk.gui.openapi.endpoints.host_config.bulk_delete
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteHost'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/host_config/actions/bulk-delete/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entries\": [\"example\", \"sample\"],\n \
          \   },\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_config/actions/bulk-delete/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entries\": [\"example\", \"sample\"\
          ],\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 201:\n\
          elif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/host_config/actions/bulk-delete/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    entries:='[\"example\", \"sample\"]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"entries\": [\n            \"example\",\n            \"sample\"\
          \n          ]\n        }' \\\n  \"$API_URL/domain-types/host_config/actions/bulk-delete/invoke\""
  /domain-types/host_config/collections/clusters:
    post:
      tags:
      - Hosts
      description: "A cluster host groups many hosts (called nodes in this context)\
        \ into a conceptual cluster.\nAll the services of the individual nodes will\
        \ be collated on the cluster host.This endpoint requires the following permissions:\
        \ \n * All of:\n   * Make changes, perform actions (`wato.edit`): This permission\
        \ is needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Add & remove hosts (`wato.manage_hosts`):\
        \ Add hosts to the monitoring and remove hosts from the monitoring. Please\
        \ also add the permission <i>Modify existing hosts</i>.\n   * Optionally:\n\
        \     * Write access to all hosts and folders (`wato.all_folders`): Without\
        \ this permission, operations on folders can only be done by users that are\
        \ members of one of the folders contact groups. This permission grants full\
        \ access to all folders and hosts.\n"
      summary: Create a cluster host
      operationId: Hosts.create_cluster_host_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id048
          type: string
        example: application/json
      - in: query
        name: bake_agent
        content:
          application/json:
            schema:
              default: false
              description: Tries to bake the agents for the just created hosts. This
                process is started in the background after configuring the host. Please
                note that the backing may take some time and might block subsequent
                API calls. This only works when using the Enterprise Editions.
              examples:
              - 'True'
              title: Bake Agent
              type: boolean
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id048
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterHostModel'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/host_config/collections/clusters\"\
          ,\n    params={  # goes into query string\n        \"bake_agent\": 'True',\n\
          \    },\n    headers={\n        \"Content-Type\": 'application/json',  #\
          \ (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"bake_agent\": 'True',\n})\n\nrequest =\
          \ urllib.request.Request(\n    f\"{API_URL}/domain-types/host_config/collections/clusters?{query_string}\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/host_config/collections/clusters\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    bake_agent=='True' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data-urlencode\
          \ 'bake_agent=True' \\\n  \"$API_URL/domain-types/host_config/collections/clusters\""
  /objects/host_config/{host_name}/actions/move/invoke:
    post:
      tags:
      - Hosts
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Modify existing hosts (`wato.edit_hosts`):\
        \ Modify the properties of existing hosts. Please note: for the management\
        \ of services (inventory) there is a separate permission (see below)\n   *\
        \ Move existing hosts (`wato.move_hosts`): Move existing hosts to other folders.\
        \ Please also add the permission <i>Modify existing hosts</i>.\n   * Make\
        \ changes, perform actions (`wato.edit`): This permission is needed in order\
        \ to make any changes or perform any actions at all. Without this permission,\
        \ the user is only able to view data, and that only in modules he has explicit\
        \ permissions for.\n   * Add & remove hosts (`wato.manage_hosts`): Add hosts\
        \ to the monitoring and remove hosts from the monitoring. Please also add\
        \ the permission <i>Modify existing hosts</i>.\n   * Optionally:\n     * Write\
        \ access to all hosts and folders (`wato.all_folders`): Without this permission,\
        \ operations on folders can only be done by users that are members of one\
        \ of the folders contact groups. This permission grants full access to all\
        \ folders and hosts.\n"
      summary: Move a host to another folder
      operationId: cmk.gui.openapi.endpoints.host_config.move
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id049
          type: string
        example: application/json
      - in: path
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfig'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id049
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveHost'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/host_config/example.com/actions/move/invoke\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"target_folder\"\
          : \"~my~fine~folder\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config/example.com/actions/move/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required) The\
          \ value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"target_folder\": \"~my~fine~folder\",\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/host_config/example.com/actions/move/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'If-Match:\"\
          a20ceacf346041dc\"' \\\n    'Content-Type:application/json' \\\n    target_folder='~my~fine~folder'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"target_folder\"\
          : \"~my~fine~folder\"\n        }' \\\n  \"$API_URL/objects/host_config/example.com/actions/move/invoke\""
  /objects/host_config_internal/{host_name}:
    get:
      tags:
      - Hosts (internal)
      description: "\n\nThis endpoint requires the following permissions: \n * Optionally:\n\
        \   * Read access to all hosts and folders (`wato.see_all_folders`): Users\
        \ without this permissions can only see folders with a contact group they\
        \ are in.\n"
      summary: Show a host
      operationId: cmk.gui.openapi.endpoints.host_internal.show_host
      parameters:
      - in: path
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '401':
          description: 'Unauthorized: You do not have read access to this host.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api401CustomError1'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostConfigSchemaInternal'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/host_config_internal/example.com\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config_internal/example.com\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/host_config_internal/example.com\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/host_config_internal/example.com\""
  /objects/host_config_internal/{host_name}/actions/link_uuid/invoke:
    put:
      tags:
      - Hosts (internal)
      description: "\n\nThis endpoint requires the following permissions: \n * Any\
        \ of:\n   * Write access to all hosts and folders (`wato.all_folders`): Without\
        \ this permission, operations on folders can only be done by users that are\
        \ members of one of the folders contact groups. This permission grants full\
        \ access to all folders and hosts.\n   * Modify existing hosts (`wato.edit_hosts`):\
        \ Modify the properties of existing hosts. Please note: for the management\
        \ of services (inventory) there is a separate permission (see below)\n"
      summary: Link a host to a UUID
      operationId: cmk.gui.openapi.endpoints.host_internal.link_with_uuid
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      - in: path
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '401':
          description: 'Unauthorized: You do not have the permissions to edit this
            host.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api401CustomError2'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkHostUUID'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host_config_internal/example.com/actions/link_uuid/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"uuid\": \"34e4c967-1591-4883-8cdf-0e335b09618d\"\
          ,\n    },\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n  \
          \  raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config_internal/example.com/actions/link_uuid/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"uuid\": \"34e4c967-1591-4883-8cdf-0e335b09618d\"\
          ,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 204:\n\
          \    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/host_config_internal/example.com/actions/link_uuid/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' \\\n\
          \    uuid='34e4c967-1591-4883-8cdf-0e335b09618d'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"uuid\": \"34e4c967-1591-4883-8cdf-0e335b09618d\"\n        }'\
          \ \\\n  \"$API_URL/objects/host_config_internal/example.com/actions/link_uuid/invoke\""
  /objects/host_config_internal/{host_name}/actions/register/invoke:
    put:
      tags:
      - Hosts (internal)
      description: "\n\nThis endpoint requires the following permissions: \n * Any\
        \ of:\n   * Register any existing host (`agent_registration.register_any_existing_host`):\
        \ This permission allows the registration of any existing host.\n   * Register\
        \ managed existing host (`agent_registration.register_managed_existing_host`):\
        \ This permission allows the registration of any existing host the user is\
        \ a contact of.\n   * All of:\n     * Optionally:\n       * Read access to\
        \ all hosts and folders (`wato.see_all_folders`): Users without this permissions\
        \ can only see folders with a contact group they are in.\n     * Any of:\n\
        \       * Write access to all hosts and folders (`wato.all_folders`): Without\
        \ this permission, operations on folders can only be done by users that are\
        \ members of one of the folders contact groups. This permission grants full\
        \ access to all folders and hosts.\n       * Modify existing hosts (`wato.edit_hosts`):\
        \ Modify the properties of existing hosts. Please note: for the management\
        \ of services (inventory) there is a separate permission (see below)\n"
      summary: Register an existing host, ie. link it to a UUID
      operationId: cmk.gui.openapi.endpoints.host_internal.register_host
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id050
          type: string
        example: application/json
      - in: path
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: You do not have the permissions to register this
            host.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403CustomError4'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '405':
          description: 'Method Not Allowed: This host cannot be registered on this
            site.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api405CustomError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionMode'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id050
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterHost'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host_config_internal/example.com/actions/register/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"uuid\": \"34e4c967-1591-4883-8cdf-0e335b09618d\"\
          ,\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config_internal/example.com/actions/register/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"uuid\": \"34e4c967-1591-4883-8cdf-0e335b09618d\"\
          ,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 200:\n\
          \    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/host_config_internal/example.com/actions/register/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' \\\n\
          \    uuid='34e4c967-1591-4883-8cdf-0e335b09618d'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"uuid\": \"34e4c967-1591-4883-8cdf-0e335b09618d\"\n        }'\
          \ \\\n  \"$API_URL/objects/host_config_internal/example.com/actions/register/invoke\""
  /domain-types/ldap_connection/collections/all:
    get:
      tags:
      - LDAP Connections
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Read access to all modules (`wato.seeall`): When this permission\
        \ is set then the user sees also such modules he has no explicit access to\
        \ (see below).\n   * User management (`wato.users`): This permission is needed\
        \ for the modules <b>Users</b>, <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Show all LDAP connections
      operationId: cmk.gui.ldap._openapi.show_ldap_connections
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConnectionResponseCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/ldap_connection/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/ldap_connection/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/ldap_connection/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/ldap_connection/collections/all\""
    post:
      tags:
      - LDAP Connections
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * All of:\n     * Read access to all\
        \ modules (`wato.seeall`): When this permission is set then the user sees\
        \ also such modules he has no explicit access to (see below).\n     * User\
        \ management (`wato.users`): This permission is needed for the modules <b>Users</b>,\
        \ <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Create an LDAP connection
      operationId: cmk.gui.ldap._openapi.create_ldap_connection
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id051
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConnectionResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id051
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConnectionConfigCreateRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/ldap_connection/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"users\": {\n            \"user_base_dn\"\
          : \"ou=OrgUnit,dc=domaincomp,dc=de\",\n            \"search_scope\": \"\
          search_only_base_dn_entry\",\n            \"search_filter\": {\n       \
          \         \"state\": \"enabled\",\n                \"filter\": \"(&(objectclass=user)(objectcategory=person))\"\
          ,\n            },\n            \"filter_group\": {\n                \"state\"\
          : \"enabled\",\n                \"filter\": \"filtergroupexample\",\n  \
          \          },\n            \"user_id_attribute\": {\n                \"\
          state\": \"enabled\",\n                \"attribute\": \"userattributeexample\"\
          ,\n            },\n            \"user_id_case\": \"convert_to_lowercase\"\
          ,\n            \"umlauts_in_user_ids\": \"keep_umlauts\",\n            \"\
          create_users\": \"on_login\",\n        },\n        \"groups\": {\n     \
          \       \"group_base_dn\": \"ou=OrgUnit,dc=domaincomp,dc=de\",\n       \
          \     \"search_scope\": \"search_whole_subtree\",\n            \"search_filter\"\
          : {\n                \"state\": \"enabled\",\n                \"filter\"\
          : \"(objectclass=group)\",\n            },\n            \"member_attribute\"\
          : {\n                \"state\": \"enabled\",\n                \"attribute\"\
          : \"member\",\n            },\n        },\n        \"sync_plugins\": {\n\
          \        },\n        \"other\": {\n            \"sync_interval\": {\n  \
          \              \"days\": 0,\n                \"hours\": 0,\n           \
          \     \"minutes\": 30,\n            },\n        },\n        \"general_properties\"\
          : {\n            \"id\": \"ldap_1\",\n            \"description\": \"1st\
          \ ldap connection\",\n            \"comment\": \"test_comment\",\n     \
          \       \"documentation_url\": \"https://checkmk.com/doc/ldap_connections\"\
          ,\n            \"rule_activation\": \"activated\",\n        },\n       \
          \ \"ldap_connection\": {\n            \"directory_type\": {\n          \
          \      \"type\": \"active_directory_manual\",\n                \"ldap_server\"\
          : \"123.31.12.34\",\n            },\n            \"bind_credentials\": {\n\
          \                \"state\": \"enabled\",\n                \"type\": \"explicit\"\
          ,\n                \"bind_dn\": \"cn=commonname,ou=OrgUnit,dc=domaincomp,dc=de\"\
          ,\n                \"explicit_password\": \"yourpass\",\n            },\n\
          \            \"tcp_port\": {\n                \"state\": \"enabled\",\n\
          \                \"port\": 389,\n            },\n            \"ssl_encryption\"\
          : \"enable_ssl\",\n            \"connect_timeout\": {\n                \"\
          state\": \"enabled\",\n                \"seconds\": 5.0,\n            },\n\
          \            \"ldap_version\": {\n                \"state\": \"enabled\"\
          ,\n                \"version\": 3,\n            },\n            \"page_size\"\
          : {\n                \"state\": \"enabled\",\n                \"size\":\
          \ 1000,\n            },\n            \"response_timeout\": {\n         \
          \       \"state\": \"enabled\",\n                \"seconds\": 60,\n    \
          \        },\n            \"connection_suffix\": {\n                \"state\"\
          : \"enabled\",\n                \"suffix\": \"dc=domaincomp,dc=de\",\n \
          \           },\n        },\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/ldap_connection/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    data=json.dumps({\n\
          \        \"users\": {\n            \"user_base_dn\": \"ou=OrgUnit,dc=domaincomp,dc=de\"\
          ,\n            \"search_scope\": \"search_only_base_dn_entry\",\n      \
          \      \"search_filter\": {\n                \"state\": \"enabled\",\n \
          \               \"filter\": \"(&(objectclass=user)(objectcategory=person))\"\
          ,\n            },\n            \"filter_group\": {\n                \"state\"\
          : \"enabled\",\n                \"filter\": \"filtergroupexample\",\n  \
          \          },\n            \"user_id_attribute\": {\n                \"\
          state\": \"enabled\",\n                \"attribute\": \"userattributeexample\"\
          ,\n            },\n            \"user_id_case\": \"convert_to_lowercase\"\
          ,\n            \"umlauts_in_user_ids\": \"keep_umlauts\",\n            \"\
          create_users\": \"on_login\",\n        },\n        \"groups\": {\n     \
          \       \"group_base_dn\": \"ou=OrgUnit,dc=domaincomp,dc=de\",\n       \
          \     \"search_scope\": \"search_whole_subtree\",\n            \"search_filter\"\
          : {\n                \"state\": \"enabled\",\n                \"filter\"\
          : \"(objectclass=group)\",\n            },\n            \"member_attribute\"\
          : {\n                \"state\": \"enabled\",\n                \"attribute\"\
          : \"member\",\n            },\n        },\n        \"sync_plugins\": {\n\
          \        },\n        \"other\": {\n            \"sync_interval\": {\n  \
          \              \"days\": 0,\n                \"hours\": 0,\n           \
          \     \"minutes\": 30,\n            },\n        },\n        \"general_properties\"\
          : {\n            \"id\": \"ldap_1\",\n            \"description\": \"1st\
          \ ldap connection\",\n            \"comment\": \"test_comment\",\n     \
          \       \"documentation_url\": \"https://checkmk.com/doc/ldap_connections\"\
          ,\n            \"rule_activation\": \"activated\",\n        },\n       \
          \ \"ldap_connection\": {\n            \"directory_type\": {\n          \
          \      \"type\": \"active_directory_manual\",\n                \"ldap_server\"\
          : \"123.31.12.34\",\n            },\n            \"bind_credentials\": {\n\
          \                \"state\": \"enabled\",\n                \"type\": \"explicit\"\
          ,\n                \"bind_dn\": \"cn=commonname,ou=OrgUnit,dc=domaincomp,dc=de\"\
          ,\n                \"explicit_password\": \"yourpass\",\n            },\n\
          \            \"tcp_port\": {\n                \"state\": \"enabled\",\n\
          \                \"port\": 389,\n            },\n            \"ssl_encryption\"\
          : \"enable_ssl\",\n            \"connect_timeout\": {\n                \"\
          state\": \"enabled\",\n                \"seconds\": 5.0,\n            },\n\
          \            \"ldap_version\": {\n                \"state\": \"enabled\"\
          ,\n                \"version\": 3,\n            },\n            \"page_size\"\
          : {\n                \"state\": \"enabled\",\n                \"size\":\
          \ 1000,\n            },\n            \"response_timeout\": {\n         \
          \       \"state\": \"enabled\",\n                \"seconds\": 60,\n    \
          \        },\n            \"connection_suffix\": {\n                \"state\"\
          : \"enabled\",\n                \"suffix\": \"dc=domaincomp,dc=de\",\n \
          \           },\n        },\n    }).encode('utf-8'),\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/ldap_connection/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    users[user_base_dn]='ou=OrgUnit,dc=domaincomp,dc=de'\\\n    users[search_scope]='search_only_base_dn_entry'\\\
          \n    users[search_filter][state]='enabled'\\\n    users[search_filter][filter]='(&(objectclass=user)(objectcategory=person))'\\\
          \n    users[filter_group][state]='enabled'\\\n    users[filter_group][filter]='filtergroupexample'\\\
          \n    users[user_id_attribute][state]='enabled'\\\n    users[user_id_attribute][attribute]='userattributeexample'\\\
          \n    users[user_id_case]='convert_to_lowercase'\\\n    users[umlauts_in_user_ids]='keep_umlauts'\\\
          \n    users[create_users]='on_login'\\\n    groups[group_base_dn]='ou=OrgUnit,dc=domaincomp,dc=de'\\\
          \n    groups[search_scope]='search_whole_subtree'\\\n    groups[search_filter][state]='enabled'\\\
          \n    groups[search_filter][filter]='(objectclass=group)'\\\n    groups[member_attribute][state]='enabled'\\\
          \n    groups[member_attribute][attribute]='member'\\\n    other[sync_interval][days]:=0\\\
          \n    other[sync_interval][hours]:=0\\\n    other[sync_interval][minutes]:=30\\\
          \n    general_properties[id]='ldap_1'\\\n    general_properties[description]='1st\
          \ ldap connection'\\\n    general_properties[comment]='test_comment'\\\n\
          \    general_properties[documentation_url]='https://checkmk.com/doc/ldap_connections'\\\
          \n    general_properties[rule_activation]='activated'\\\n    ldap_connection[directory_type][type]='active_directory_manual'\\\
          \n    ldap_connection[directory_type][ldap_server]='123.31.12.34'\\\n  \
          \  ldap_connection[bind_credentials][state]='enabled'\\\n    ldap_connection[bind_credentials][type]='explicit'\\\
          \n    ldap_connection[bind_credentials][bind_dn]='cn=commonname,ou=OrgUnit,dc=domaincomp,dc=de'\\\
          \n    ldap_connection[bind_credentials][explicit_password]='yourpass'\\\n\
          \    ldap_connection[tcp_port][state]='enabled'\\\n    ldap_connection[tcp_port][port]:=389\\\
          \n    ldap_connection[ssl_encryption]='enable_ssl'\\\n    ldap_connection[connect_timeout][state]='enabled'\\\
          \n    ldap_connection[connect_timeout][seconds]:=5.0\\\n    ldap_connection[ldap_version][state]='enabled'\\\
          \n    ldap_connection[ldap_version][version]:=3\\\n    ldap_connection[page_size][state]='enabled'\\\
          \n    ldap_connection[page_size][size]:=1000\\\n    ldap_connection[response_timeout][state]='enabled'\\\
          \n    ldap_connection[response_timeout][seconds]:=60\\\n    ldap_connection[connection_suffix][state]='enabled'\\\
          \n    ldap_connection[connection_suffix][suffix]='dc=domaincomp,dc=de'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"general_properties\": {\n            \"comment\": \"test_comment\"\
          ,\n            \"description\": \"1st ldap connection\",\n            \"\
          documentation_url\": \"https://checkmk.com/doc/ldap_connections\",\n   \
          \         \"id\": \"ldap_1\",\n            \"rule_activation\": \"activated\"\
          \n          },\n          \"groups\": {\n            \"group_base_dn\":\
          \ \"ou=OrgUnit,dc=domaincomp,dc=de\",\n            \"member_attribute\"\
          : {\n              \"attribute\": \"member\",\n              \"state\":\
          \ \"enabled\"\n            },\n            \"search_filter\": {\n      \
          \        \"filter\": \"(objectclass=group)\",\n              \"state\":\
          \ \"enabled\"\n            },\n            \"search_scope\": \"search_whole_subtree\"\
          \n          },\n          \"ldap_connection\": {\n            \"bind_credentials\"\
          : {\n              \"bind_dn\": \"cn=commonname,ou=OrgUnit,dc=domaincomp,dc=de\"\
          ,\n              \"explicit_password\": \"yourpass\",\n              \"\
          state\": \"enabled\",\n              \"type\": \"explicit\"\n          \
          \  },\n            \"connect_timeout\": {\n              \"seconds\": 5.0,\n\
          \              \"state\": \"enabled\"\n            },\n            \"connection_suffix\"\
          : {\n              \"state\": \"enabled\",\n              \"suffix\": \"\
          dc=domaincomp,dc=de\"\n            },\n            \"directory_type\": {\n\
          \              \"ldap_server\": \"123.31.12.34\",\n              \"type\"\
          : \"active_directory_manual\"\n            },\n            \"ldap_version\"\
          : {\n              \"state\": \"enabled\",\n              \"version\": 3\n\
          \            },\n            \"page_size\": {\n              \"size\": 1000,\n\
          \              \"state\": \"enabled\"\n            },\n            \"response_timeout\"\
          : {\n              \"seconds\": 60,\n              \"state\": \"enabled\"\
          \n            },\n            \"ssl_encryption\": \"enable_ssl\",\n    \
          \        \"tcp_port\": {\n              \"port\": 389,\n              \"\
          state\": \"enabled\"\n            }\n          },\n          \"other\":\
          \ {\n            \"sync_interval\": {\n              \"days\": 0,\n    \
          \          \"hours\": 0,\n              \"minutes\": 30\n            }\n\
          \          },\n          \"sync_plugins\": {},\n          \"users\": {\n\
          \            \"create_users\": \"on_login\",\n            \"filter_group\"\
          : {\n              \"filter\": \"filtergroupexample\",\n              \"\
          state\": \"enabled\"\n            },\n            \"search_filter\": {\n\
          \              \"filter\": \"(&(objectclass=user)(objectcategory=person))\"\
          ,\n              \"state\": \"enabled\"\n            },\n            \"\
          search_scope\": \"search_only_base_dn_entry\",\n            \"umlauts_in_user_ids\"\
          : \"keep_umlauts\",\n            \"user_base_dn\": \"ou=OrgUnit,dc=domaincomp,dc=de\"\
          ,\n            \"user_id_attribute\": {\n              \"attribute\": \"\
          userattributeexample\",\n              \"state\": \"enabled\"\n        \
          \    },\n            \"user_id_case\": \"convert_to_lowercase\"\n      \
          \    }\n        }' \\\n  \"$API_URL/domain-types/ldap_connection/collections/all\""
  /objects/ldap_connection/{ldap_connection_id}:
    get:
      tags:
      - LDAP Connections
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Read access to all modules (`wato.seeall`): When this permission\
        \ is set then the user sees also such modules he has no explicit access to\
        \ (see below).\n   * User management (`wato.users`): This permission is needed\
        \ for the modules <b>Users</b>, <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Show an LDAP connection
      operationId: cmk.gui.ldap._openapi.show_ldap_connection
      parameters:
      - in: path
        name: ldap_connection_id
        description: An LDAP connection ID string.
        schema:
          type: string
          example: LDAP_1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GETLdapConnection404'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConnectionResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/ldap_connection/LDAP_1\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/ldap_connection/LDAP_1\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/ldap_connection/LDAP_1\" \\\n    \"\
          Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/ldap_connection/LDAP_1\""
    put:
      tags:
      - LDAP Connections
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * All of:\n     * Read access to all\
        \ modules (`wato.seeall`): When this permission is set then the user sees\
        \ also such modules he has no explicit access to (see below).\n     * User\
        \ management (`wato.users`): This permission is needed for the modules <b>Users</b>,\
        \ <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Update an ldap connection
      operationId: cmk.gui.ldap._openapi.edit_ldap_connection
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id052
          type: string
        example: application/json
      - in: path
        name: ldap_connection_id
        description: An LDAP connection ID string.
        schema:
          type: string
          example: LDAP_1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/GETLdapConnection404'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LDAPConnectionResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id052
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LDAPConnectionConfigUpdateRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/ldap_connection/LDAP_1\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"users\"\
          : {\n            \"user_base_dn\": \"ou=OrgUnit,dc=domaincomp,dc=de\",\n\
          \            \"search_scope\": \"search_only_base_dn_entry\",\n        \
          \    \"search_filter\": {\n                \"state\": \"enabled\",\n   \
          \             \"filter\": \"(&(objectclass=user)(objectcategory=person))\"\
          ,\n            },\n            \"filter_group\": {\n                \"state\"\
          : \"enabled\",\n                \"filter\": \"filtergroupexample\",\n  \
          \          },\n            \"user_id_attribute\": {\n                \"\
          state\": \"enabled\",\n                \"attribute\": \"userattributeexample\"\
          ,\n            },\n            \"user_id_case\": \"convert_to_lowercase\"\
          ,\n            \"umlauts_in_user_ids\": \"keep_umlauts\",\n            \"\
          create_users\": \"on_login\",\n        },\n        \"groups\": {\n     \
          \       \"group_base_dn\": \"ou=OrgUnit,dc=domaincomp,dc=de\",\n       \
          \     \"search_scope\": \"search_whole_subtree\",\n            \"search_filter\"\
          : {\n                \"state\": \"enabled\",\n                \"filter\"\
          : \"(objectclass=group)\",\n            },\n            \"member_attribute\"\
          : {\n                \"state\": \"enabled\",\n                \"attribute\"\
          : \"member\",\n            },\n        },\n        \"sync_plugins\": {\n\
          \        },\n        \"other\": {\n            \"sync_interval\": {\n  \
          \              \"days\": 0,\n                \"hours\": 0,\n           \
          \     \"minutes\": 30,\n            },\n        },\n        \"general_properties\"\
          : {\n            \"id\": \"ldap_1\",\n            \"description\": \"1st\
          \ ldap connection\",\n            \"comment\": \"test_comment\",\n     \
          \       \"documentation_url\": \"https://checkmk.com/doc/ldap_connections\"\
          ,\n            \"rule_activation\": \"activated\",\n        },\n       \
          \ \"ldap_connection\": {\n            \"directory_type\": {\n          \
          \      \"type\": \"active_directory_manual\",\n                \"ldap_server\"\
          : \"123.31.12.34\",\n            },\n            \"bind_credentials\": {\n\
          \                \"state\": \"enabled\",\n                \"type\": \"explicit\"\
          ,\n                \"bind_dn\": \"cn=commonname,ou=OrgUnit,dc=domaincomp,dc=de\"\
          ,\n                \"explicit_password\": \"yourpass\",\n            },\n\
          \            \"tcp_port\": {\n                \"state\": \"enabled\",\n\
          \                \"port\": 389,\n            },\n            \"ssl_encryption\"\
          : \"enable_ssl\",\n            \"connect_timeout\": {\n                \"\
          state\": \"enabled\",\n                \"seconds\": 5.0,\n            },\n\
          \            \"ldap_version\": {\n                \"state\": \"enabled\"\
          ,\n                \"version\": 3,\n            },\n            \"page_size\"\
          : {\n                \"state\": \"enabled\",\n                \"size\":\
          \ 1000,\n            },\n            \"response_timeout\": {\n         \
          \       \"state\": \"enabled\",\n                \"seconds\": 60,\n    \
          \        },\n            \"connection_suffix\": {\n                \"state\"\
          : \"enabled\",\n                \"suffix\": \"dc=domaincomp,dc=de\",\n \
          \           },\n        },\n    },\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/ldap_connection/LDAP_1\",\n    method=\"PUT\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n        \"Content-Type\": 'application/json', \
          \ # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    data=json.dumps({\n        \"users\": {\n         \
          \   \"user_base_dn\": \"ou=OrgUnit,dc=domaincomp,dc=de\",\n            \"\
          search_scope\": \"search_only_base_dn_entry\",\n            \"search_filter\"\
          : {\n                \"state\": \"enabled\",\n                \"filter\"\
          : \"(&(objectclass=user)(objectcategory=person))\",\n            },\n  \
          \          \"filter_group\": {\n                \"state\": \"enabled\",\n\
          \                \"filter\": \"filtergroupexample\",\n            },\n \
          \           \"user_id_attribute\": {\n                \"state\": \"enabled\"\
          ,\n                \"attribute\": \"userattributeexample\",\n          \
          \  },\n            \"user_id_case\": \"convert_to_lowercase\",\n       \
          \     \"umlauts_in_user_ids\": \"keep_umlauts\",\n            \"create_users\"\
          : \"on_login\",\n        },\n        \"groups\": {\n            \"group_base_dn\"\
          : \"ou=OrgUnit,dc=domaincomp,dc=de\",\n            \"search_scope\": \"\
          search_whole_subtree\",\n            \"search_filter\": {\n            \
          \    \"state\": \"enabled\",\n                \"filter\": \"(objectclass=group)\"\
          ,\n            },\n            \"member_attribute\": {\n               \
          \ \"state\": \"enabled\",\n                \"attribute\": \"member\",\n\
          \            },\n        },\n        \"sync_plugins\": {\n        },\n \
          \       \"other\": {\n            \"sync_interval\": {\n               \
          \ \"days\": 0,\n                \"hours\": 0,\n                \"minutes\"\
          : 30,\n            },\n        },\n        \"general_properties\": {\n \
          \           \"id\": \"ldap_1\",\n            \"description\": \"1st ldap\
          \ connection\",\n            \"comment\": \"test_comment\",\n          \
          \  \"documentation_url\": \"https://checkmk.com/doc/ldap_connections\",\n\
          \            \"rule_activation\": \"activated\",\n        },\n        \"\
          ldap_connection\": {\n            \"directory_type\": {\n              \
          \  \"type\": \"active_directory_manual\",\n                \"ldap_server\"\
          : \"123.31.12.34\",\n            },\n            \"bind_credentials\": {\n\
          \                \"state\": \"enabled\",\n                \"type\": \"explicit\"\
          ,\n                \"bind_dn\": \"cn=commonname,ou=OrgUnit,dc=domaincomp,dc=de\"\
          ,\n                \"explicit_password\": \"yourpass\",\n            },\n\
          \            \"tcp_port\": {\n                \"state\": \"enabled\",\n\
          \                \"port\": 389,\n            },\n            \"ssl_encryption\"\
          : \"enable_ssl\",\n            \"connect_timeout\": {\n                \"\
          state\": \"enabled\",\n                \"seconds\": 5.0,\n            },\n\
          \            \"ldap_version\": {\n                \"state\": \"enabled\"\
          ,\n                \"version\": 3,\n            },\n            \"page_size\"\
          : {\n                \"state\": \"enabled\",\n                \"size\":\
          \ 1000,\n            },\n            \"response_timeout\": {\n         \
          \       \"state\": \"enabled\",\n                \"seconds\": 60,\n    \
          \        },\n            \"connection_suffix\": {\n                \"state\"\
          : \"enabled\",\n                \"suffix\": \"dc=domaincomp,dc=de\",\n \
          \           },\n        },\n    }).encode('utf-8'),\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/ldap_connection/LDAP_1\" \\\n    \"\
          Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n    'Content-Type:application/json'\
          \ \\\n    users[user_base_dn]='ou=OrgUnit,dc=domaincomp,dc=de'\\\n    users[search_scope]='search_only_base_dn_entry'\\\
          \n    users[search_filter][state]='enabled'\\\n    users[search_filter][filter]='(&(objectclass=user)(objectcategory=person))'\\\
          \n    users[filter_group][state]='enabled'\\\n    users[filter_group][filter]='filtergroupexample'\\\
          \n    users[user_id_attribute][state]='enabled'\\\n    users[user_id_attribute][attribute]='userattributeexample'\\\
          \n    users[user_id_case]='convert_to_lowercase'\\\n    users[umlauts_in_user_ids]='keep_umlauts'\\\
          \n    users[create_users]='on_login'\\\n    groups[group_base_dn]='ou=OrgUnit,dc=domaincomp,dc=de'\\\
          \n    groups[search_scope]='search_whole_subtree'\\\n    groups[search_filter][state]='enabled'\\\
          \n    groups[search_filter][filter]='(objectclass=group)'\\\n    groups[member_attribute][state]='enabled'\\\
          \n    groups[member_attribute][attribute]='member'\\\n    other[sync_interval][days]:=0\\\
          \n    other[sync_interval][hours]:=0\\\n    other[sync_interval][minutes]:=30\\\
          \n    general_properties[id]='ldap_1'\\\n    general_properties[description]='1st\
          \ ldap connection'\\\n    general_properties[comment]='test_comment'\\\n\
          \    general_properties[documentation_url]='https://checkmk.com/doc/ldap_connections'\\\
          \n    general_properties[rule_activation]='activated'\\\n    ldap_connection[directory_type][type]='active_directory_manual'\\\
          \n    ldap_connection[directory_type][ldap_server]='123.31.12.34'\\\n  \
          \  ldap_connection[bind_credentials][state]='enabled'\\\n    ldap_connection[bind_credentials][type]='explicit'\\\
          \n    ldap_connection[bind_credentials][bind_dn]='cn=commonname,ou=OrgUnit,dc=domaincomp,dc=de'\\\
          \n    ldap_connection[bind_credentials][explicit_password]='yourpass'\\\n\
          \    ldap_connection[tcp_port][state]='enabled'\\\n    ldap_connection[tcp_port][port]:=389\\\
          \n    ldap_connection[ssl_encryption]='enable_ssl'\\\n    ldap_connection[connect_timeout][state]='enabled'\\\
          \n    ldap_connection[connect_timeout][seconds]:=5.0\\\n    ldap_connection[ldap_version][state]='enabled'\\\
          \n    ldap_connection[ldap_version][version]:=3\\\n    ldap_connection[page_size][state]='enabled'\\\
          \n    ldap_connection[page_size][size]:=1000\\\n    ldap_connection[response_timeout][state]='enabled'\\\
          \n    ldap_connection[response_timeout][seconds]:=60\\\n    ldap_connection[connection_suffix][state]='enabled'\\\
          \n    ldap_connection[connection_suffix][suffix]='dc=domaincomp,dc=de'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"general_properties\"\
          : {\n            \"comment\": \"test_comment\",\n            \"description\"\
          : \"1st ldap connection\",\n            \"documentation_url\": \"https://checkmk.com/doc/ldap_connections\"\
          ,\n            \"id\": \"ldap_1\",\n            \"rule_activation\": \"\
          activated\"\n          },\n          \"groups\": {\n            \"group_base_dn\"\
          : \"ou=OrgUnit,dc=domaincomp,dc=de\",\n            \"member_attribute\"\
          : {\n              \"attribute\": \"member\",\n              \"state\":\
          \ \"enabled\"\n            },\n            \"search_filter\": {\n      \
          \        \"filter\": \"(objectclass=group)\",\n              \"state\":\
          \ \"enabled\"\n            },\n            \"search_scope\": \"search_whole_subtree\"\
          \n          },\n          \"ldap_connection\": {\n            \"bind_credentials\"\
          : {\n              \"bind_dn\": \"cn=commonname,ou=OrgUnit,dc=domaincomp,dc=de\"\
          ,\n              \"explicit_password\": \"yourpass\",\n              \"\
          state\": \"enabled\",\n              \"type\": \"explicit\"\n          \
          \  },\n            \"connect_timeout\": {\n              \"seconds\": 5.0,\n\
          \              \"state\": \"enabled\"\n            },\n            \"connection_suffix\"\
          : {\n              \"state\": \"enabled\",\n              \"suffix\": \"\
          dc=domaincomp,dc=de\"\n            },\n            \"directory_type\": {\n\
          \              \"ldap_server\": \"123.31.12.34\",\n              \"type\"\
          : \"active_directory_manual\"\n            },\n            \"ldap_version\"\
          : {\n              \"state\": \"enabled\",\n              \"version\": 3\n\
          \            },\n            \"page_size\": {\n              \"size\": 1000,\n\
          \              \"state\": \"enabled\"\n            },\n            \"response_timeout\"\
          : {\n              \"seconds\": 60,\n              \"state\": \"enabled\"\
          \n            },\n            \"ssl_encryption\": \"enable_ssl\",\n    \
          \        \"tcp_port\": {\n              \"port\": 389,\n              \"\
          state\": \"enabled\"\n            }\n          },\n          \"other\":\
          \ {\n            \"sync_interval\": {\n              \"days\": 0,\n    \
          \          \"hours\": 0,\n              \"minutes\": 30\n            }\n\
          \          },\n          \"sync_plugins\": {},\n          \"users\": {\n\
          \            \"create_users\": \"on_login\",\n            \"filter_group\"\
          : {\n              \"filter\": \"filtergroupexample\",\n              \"\
          state\": \"enabled\"\n            },\n            \"search_filter\": {\n\
          \              \"filter\": \"(&(objectclass=user)(objectcategory=person))\"\
          ,\n              \"state\": \"enabled\"\n            },\n            \"\
          search_scope\": \"search_only_base_dn_entry\",\n            \"umlauts_in_user_ids\"\
          : \"keep_umlauts\",\n            \"user_base_dn\": \"ou=OrgUnit,dc=domaincomp,dc=de\"\
          ,\n            \"user_id_attribute\": {\n              \"attribute\": \"\
          userattributeexample\",\n              \"state\": \"enabled\"\n        \
          \    },\n            \"user_id_case\": \"convert_to_lowercase\"\n      \
          \    }\n        }' \\\n  \"$API_URL/objects/ldap_connection/LDAP_1\""
    delete:
      tags:
      - LDAP Connections
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * All of:\n     * Read access to all\
        \ modules (`wato.seeall`): When this permission is set then the user sees\
        \ also such modules he has no explicit access to (see below).\n     * User\
        \ management (`wato.users`): This permission is needed for the modules <b>Users</b>,\
        \ <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Delete an LDAP connection
      operationId: cmk.gui.ldap._openapi.delete_ldap_connection
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - in: path
        name: ldap_connection_id
        description: An LDAP connection ID string.
        schema:
          type: string
          example: LDAP_1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/ldap_connection/LDAP_1\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n    },\n)\nif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/ldap_connection/LDAP_1\",\n    method=\"DELETE\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n    },\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/ldap_connection/LDAP_1\" \\\n \
          \   \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'If-Match:\"a20ceacf346041dc\"' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  \"$API_URL/objects/ldap_connection/LDAP_1\""
  /domain-types/license_request/actions/download/invoke:
    get:
      tags:
      - License usage
      description: "\n\nThis endpoint requires the following permissions: \n * Access\
        \ the licensing mode (`wato.licensing`): All related information or settings\
        \ of licensing of Checkmk sites.\n"
      summary: Download a license request for offline verification
      operationId: cmk.gui.cse.licensing._openapi.download_license_request
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationRequest'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/license_request/actions/download/invoke\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/license_request/actions/download/invoke\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/license_request/actions/download/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/license_request/actions/download/invoke\""
  /domain-types/license_usage/actions/download/invoke:
    get:
      tags:
      - License usage
      description: "\n\nThis endpoint requires the following permissions: \n * Access\
        \ the license usage mode (`wato.license_usage`): Show license usage information\
        \ of Checkmk sites.\n"
      summary: Download the license usage of Checkmk
      operationId: cmk.gui.cee.licensing._openapi.download_license_usage
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: You have insufficient permissions for this operation.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403CustomError5'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/x-tgz:
              schema:
                type: string
                format: binary
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/x-tgz'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/license_usage/actions/download/invoke\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/license_usage/actions/download/invoke\",\n\
          \    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/x-tgz\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/license_usage/actions/download/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/x-tgz\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/x-tgz\" \\\n  \n  \"$API_URL/domain-types/license_usage/actions/download/invoke\""
  /domain-types/licensing/actions/configure/invoke:
    put:
      tags:
      - License usage
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Access the licensing mode (`wato.licensing`): All related information\
        \ or settings of licensing of Checkmk sites.\n   * Make changes, perform actions\
        \ (`wato.edit`): This permission is needed in order to make any changes or\
        \ perform any actions at all. Without this permission, the user is only able\
        \ to view data, and that only in modules he has explicit permissions for.\n"
      summary: Configure the licensing settings
      operationId: cmk.gui.cee.licensing._openapi.configure_licensing_settings
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id053
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResultObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id053
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseSettings'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/licensing/actions/configure/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"settings\": {\n            \"mode\": \"online\"\
          ,\n            \"credentials\": {\n                \"username\": \"application-account-id\"\
          ,\n                \"password\": \"application-account-password\",\n   \
          \         },\n        },\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/licensing/actions/configure/invoke\",\n \
          \   method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"settings\": {\n            \"\
          mode\": \"online\",\n            \"credentials\": {\n                \"\
          username\": \"application-account-id\",\n                \"password\": \"\
          application-account-password\",\n            },\n        },\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/domain-types/licensing/actions/configure/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' \\\n\
          \    settings[mode]='online'\\\n    settings[credentials][username]='application-account-id'\\\
          \n    settings[credentials][password]='application-account-password'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"settings\": {\n            \"credentials\": {\n           \
          \   \"password\": \"application-account-password\",\n              \"username\"\
          : \"application-account-id\"\n            },\n            \"mode\": \"online\"\
          \n          }\n        }' \\\n  \"$API_URL/domain-types/licensing/actions/configure/invoke\""
  /domain-types/license_response/actions/upload/invoke:
    post:
      tags:
      - License usage
      description: "\n\nThis endpoint requires the following permissions: \n * Access\
        \ the licensing mode (`wato.licensing`): All related information or settings\
        \ of licensing of Checkmk sites.\n"
      summary: Trigger the offline license verification and receive its results
      operationId: cmk.gui.cee.licensing._openapi.verify_offline
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id054
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '422':
          description: 'Unprocessable Entity: Offline verification procedure was not
            successful'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api422CustomError4'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResultObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id054
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
        '204':
          description: 'No Content: Offline verification procedure was successful'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationResponse'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/license_response/actions/upload/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"VERSION\": \"3.0\",\n        \"request_id\"\
          : \"df17e557-0daf-4b78-b9f2-f3550252a8b5\",\n        \"response_id\": \"\
          6b9e78d1-de99-46ef-9644-32ee33a2b489\",\n        \"created_at\": 1690379907,\n\
          \        \"signature\": \"\",\n        \"certificate\": \"-----BEGIN CERTIFICATE-----...\"\
          ,\n        \"payload\": {\n        },\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelif resp.status_code == 204:\n    print('Done')\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/license_response/actions/upload/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"VERSION\": \"3.0\",\n        \"\
          request_id\": \"df17e557-0daf-4b78-b9f2-f3550252a8b5\",\n        \"response_id\"\
          : \"6b9e78d1-de99-46ef-9644-32ee33a2b489\",\n        \"created_at\": 1690379907,\n\
          \        \"signature\": \"\",\n        \"certificate\": \"-----BEGIN CERTIFICATE-----...\"\
          ,\n        \"payload\": {\n        },\n    }).encode('utf-8'),\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/license_response/actions/upload/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    VERSION='3.0'\\\n    request_id='df17e557-0daf-4b78-b9f2-f3550252a8b5'\\\
          \n    response_id='6b9e78d1-de99-46ef-9644-32ee33a2b489'\\\n    created_at:=1690379907\\\
          \n    signature=''\\\n    certificate='-----BEGIN CERTIFICATE-----...'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"VERSION\": \"3.0\",\n          \"certificate\": \"-----BEGIN\
          \ CERTIFICATE-----...\",\n          \"created_at\": 1690379907,\n      \
          \    \"payload\": {},\n          \"request_id\": \"df17e557-0daf-4b78-b9f2-f3550252a8b5\"\
          ,\n          \"response_id\": \"6b9e78d1-de99-46ef-9644-32ee33a2b489\",\n\
          \          \"signature\": \"\"\n        }' \\\n  \"$API_URL/domain-types/license_response/actions/upload/invoke\""
  /domain-types/licensing/actions/verify/invoke:
    post:
      tags:
      - License usage
      description: "\n\nThis endpoint requires the following permissions: \n * Access\
        \ the licensing mode (`wato.licensing`): All related information or settings\
        \ of licensing of Checkmk sites.\n"
      summary: Trigger the license verification and receive its results
      operationId: cmk.gui.cee.licensing._openapi.verify_online
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '422':
          description: 'Unprocessable Entity: Online verification procedure was not
            successful'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api422CustomError5'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResultObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
        '204':
          description: 'No Content: Online verification procedure was successful'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/licensing/actions/verify/invoke\"\
          ,\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          elif resp.status_code == 201:\nelif resp.status_code == 204:\n    print('Done')\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/licensing/actions/verify/invoke\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \   },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/licensing/actions/verify/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/domain-types/licensing/actions/verify/invoke\""
  /domain-types/metric/actions/filter/invoke:
    post:
      tags:
      - Metric (internal)
      description: 'Select a site, filter for a host and a service to obtain a graph

        (consisting of multiple metrics) or a single metric.

        You can also aggregate the result.

        This endpoint is internal and may change at any point, without notice.

        For a simpler and supported interface see "Get a graph".'
      summary: Get metrics using filters
      x-badges:
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      - name: CSE
        position: after
        color: '#7e96f3'
      operationId: cmk.gui.cee.openapi.endpoints.metric.internal.get_graph_using_filters
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id055
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id055
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filter'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/metric/actions/filter/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"time_range\"\
          : {\n            \"start\": \"2025-10-22 18:03:02.018091\",\n          \
          \  \"end\": \"2025-10-22 18:18:02.018093\",\n        },\n        \"reduce\"\
          : \"max\",\n        \"filter\": {\n            \"siteopt\": {\n        \
          \        \"site\": \"site_name\",\n            },\n            \"host\"\
          : {\n                \"host\": \"host_name\",\n            },\n        \
          \    \"hostregex\": {\n                \"host_regex\": \"windows.*\",\n\
          \                \"neg_host_regex\": \"on\",\n            },\n         \
          \   \"service\": {\n                \"service\": \"Check_MK\",\n       \
          \     },\n            \"serviceregex\": {\n                \"service_regex\"\
          : \".+\",\n            },\n            \"host_labels\": {\n            \
          \    \"host_labels_count\": \"1\",\n                \"host_labels_1_vs_count\"\
          : \"1\",\n                \"host_labels_1_bool\": \"and\",\n           \
          \     \"host_labels_indexof_1\": \"1\",\n                \"host_labels_1_vs_1_bool\"\
          : \"and\",\n                \"host_labels_1_vs_1_vs\": \"cmk/os_family:linux\"\
          ,\n                \"host_labels_1_vs_indexof_1\": \"1\",\n            },\n\
          \            \"opthostgroup\": {\n                \"opthost_group\": \"\
          check_mk\",\n            },\n            \"optservicegroup\": {\n      \
          \          \"optservice_group\": \"APT_Updates\",\n            },\n    \
          \        \"host_tags\": {\n                \"host_tag_0_op\": \"is\",\n\
          \                \"host_tag_0_grp\": \"criticality\",\n                \"\
          host_tag_0_val\": \"test\",\n            },\n        },\n        \"aggregation\"\
          : \"maximum\",\n        \"type\": \"single_metric\",\n        \"graph_id\"\
          : \"cmk_cpu_time_by_phase\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/metric/actions/filter/invoke\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    #\
          \ This schema has multiple variations. Please refer to\n    # the 'Payload'\
          \ section for details.\n    data=json.dumps({\n        \"time_range\": {\n\
          \            \"start\": \"2025-10-22 18:03:02.018091\",\n            \"\
          end\": \"2025-10-22 18:18:02.018093\",\n        },\n        \"reduce\":\
          \ \"max\",\n        \"filter\": {\n            \"siteopt\": {\n        \
          \        \"site\": \"site_name\",\n            },\n            \"host\"\
          : {\n                \"host\": \"host_name\",\n            },\n        \
          \    \"hostregex\": {\n                \"host_regex\": \"windows.*\",\n\
          \                \"neg_host_regex\": \"on\",\n            },\n         \
          \   \"service\": {\n                \"service\": \"Check_MK\",\n       \
          \     },\n            \"serviceregex\": {\n                \"service_regex\"\
          : \".+\",\n            },\n            \"host_labels\": {\n            \
          \    \"host_labels_count\": \"1\",\n                \"host_labels_1_vs_count\"\
          : \"1\",\n                \"host_labels_1_bool\": \"and\",\n           \
          \     \"host_labels_indexof_1\": \"1\",\n                \"host_labels_1_vs_1_bool\"\
          : \"and\",\n                \"host_labels_1_vs_1_vs\": \"cmk/os_family:linux\"\
          ,\n                \"host_labels_1_vs_indexof_1\": \"1\",\n            },\n\
          \            \"opthostgroup\": {\n                \"opthost_group\": \"\
          check_mk\",\n            },\n            \"optservicegroup\": {\n      \
          \          \"optservice_group\": \"APT_Updates\",\n            },\n    \
          \        \"host_tags\": {\n                \"host_tag_0_op\": \"is\",\n\
          \                \"host_tag_0_grp\": \"criticality\",\n                \"\
          host_tag_0_val\": \"test\",\n            },\n        },\n        \"aggregation\"\
          : \"maximum\",\n        \"type\": \"single_metric\",\n        \"graph_id\"\
          : \"cmk_cpu_time_by_phase\",\n    }).encode('utf-8'),\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/metric/actions/filter/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    time_range[start]='2025-10-22 18:03:02.018091'\\\n    time_range[end]='2025-10-22\
          \ 18:18:02.018093'\\\n    reduce='max'\\\n    filter[siteopt][site]='site_name'\\\
          \n    filter[host][host]='host_name'\\\n    filter[hostregex][host_regex]='windows.*'\\\
          \n    filter[hostregex][neg_host_regex]='on'\\\n    filter[service][service]='Check_MK'\\\
          \n    filter[serviceregex][service_regex]='.+'\\\n    filter[host_labels][host_labels_count]='1'\\\
          \n    filter[host_labels][host_labels_1_vs_count]='1'\\\n    filter[host_labels][host_labels_1_bool]='and'\\\
          \n    filter[host_labels][host_labels_indexof_1]='1'\\\n    filter[host_labels][host_labels_1_vs_1_bool]='and'\\\
          \n    filter[host_labels][host_labels_1_vs_1_vs]='cmk/os_family:linux'\\\
          \n    filter[host_labels][host_labels_1_vs_indexof_1]='1'\\\n    filter[opthostgroup][opthost_group]='check_mk'\\\
          \n    filter[optservicegroup][optservice_group]='APT_Updates'\\\n    filter[host_tags][host_tag_0_op]='is'\\\
          \n    filter[host_tags][host_tag_0_grp]='criticality'\\\n    filter[host_tags][host_tag_0_val]='test'\\\
          \n    aggregation='maximum'\\\n    type='single_metric'\\\n    graph_id='cmk_cpu_time_by_phase'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"aggregation\": \"maximum\",\n          \"\
          filter\": {\n            \"host\": {\n              \"host\": \"host_name\"\
          \n            },\n            \"host_labels\": {\n              \"host_labels_1_bool\"\
          : \"and\",\n              \"host_labels_1_vs_1_bool\": \"and\",\n      \
          \        \"host_labels_1_vs_1_vs\": \"cmk/os_family:linux\",\n         \
          \     \"host_labels_1_vs_count\": \"1\",\n              \"host_labels_1_vs_indexof_1\"\
          : \"1\",\n              \"host_labels_count\": \"1\",\n              \"\
          host_labels_indexof_1\": \"1\"\n            },\n            \"host_tags\"\
          : {\n              \"host_tag_0_grp\": \"criticality\",\n              \"\
          host_tag_0_op\": \"is\",\n              \"host_tag_0_val\": \"test\"\n \
          \           },\n            \"hostregex\": {\n              \"host_regex\"\
          : \"windows.*\",\n              \"neg_host_regex\": \"on\"\n           \
          \ },\n            \"opthostgroup\": {\n              \"opthost_group\":\
          \ \"check_mk\"\n            },\n            \"optservicegroup\": {\n   \
          \           \"optservice_group\": \"APT_Updates\"\n            },\n    \
          \        \"service\": {\n              \"service\": \"Check_MK\"\n     \
          \       },\n            \"serviceregex\": {\n              \"service_regex\"\
          : \".+\"\n            },\n            \"siteopt\": {\n              \"site\"\
          : \"site_name\"\n            }\n          },\n          \"graph_id\": \"\
          cmk_cpu_time_by_phase\",\n          \"reduce\": \"max\",\n          \"time_range\"\
          : {\n            \"end\": \"2025-10-22 18:18:02.018093\",\n            \"\
          start\": \"2025-10-22 18:03:02.018091\"\n          },\n          \"type\"\
          : \"single_metric\"\n        }' \\\n  \"$API_URL/domain-types/metric/actions/filter/invoke\""
  /domain-types/metric_backend/actions/update/invoke:
    put:
      tags:
      - Metric backend
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Use WATO (`wato.use`): This permissions allows users to use Setup\
        \ - Checkmk's Web Administration Tool. Without this permission all references\
        \ to Setup (buttons, links, snap-ins) will be invisible.\n   * Make changes,\
        \ perform actions (`wato.edit`): This permission is needed in order to make\
        \ any changes or perform any actions at all. Without this permission, the\
        \ user is only able to view data, and that only in modules he has explicit\
        \ permissions for.\n   * Global settings (`wato.global`): Access to the module\
        \ <i>Global settings</i>\n   * Site management (`wato.sites`): Access to the\
        \ module for managing connections to remote monitoring sites.\n"
      summary: Configure the metric backend for a site.
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: Metric backend._update_metric_backend_config
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_MetricBackendConfig'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\n\n\
          resp = session.put(\n    f\"{API_URL}/domain-types/metric_backend/actions/update/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise\
          \ RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/metric_backend/actions/update/invoke\",\n\
          \    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Content-Type\": 'application/json',\
          \  # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/domain-types/metric_backend/actions/update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Content-Type: application/json\"\
          \ \\\n  \"$API_URL/domain-types/metric_backend/actions/update/invoke\""
  /domain-types/metric/actions/get/invoke:
    post:
      tags:
      - Metrics
      description: This endpoint retrieves a predefined graph (consisting of multiple
        metrics) or a single metric.
      summary: Get metrics
      x-badges:
      - name: CRE
        position: after
        color: '#afb9c2'
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: cmk.gui.openapi.endpoints.metric.get_graph
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id056
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id056
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Get'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/metric/actions/get/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    # This schema has multiple variations. Please refer to\n  \
          \  # the 'Payload' section for details.\n    json={\n        \"time_range\"\
          : {\n            \"start\": \"2025-10-22 18:03:02.018091\",\n          \
          \  \"end\": \"2025-10-22 18:18:02.018093\",\n        },\n        \"reduce\"\
          : \"max\",\n        \"site\": \"heute\",\n        \"host_name\": \"my.cool.host\"\
          ,\n        \"service_description\": \"Check_MK\",\n        \"type\": \"\
          single_metric\",\n        \"graph_id\": \"cmk_cpu_time_by_phase\",\n   \
          \ },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          elif resp.status_code == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/metric/actions/get/invoke\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    #\
          \ This schema has multiple variations. Please refer to\n    # the 'Payload'\
          \ section for details.\n    data=json.dumps({\n        \"time_range\": {\n\
          \            \"start\": \"2025-10-22 18:03:02.018091\",\n            \"\
          end\": \"2025-10-22 18:18:02.018093\",\n        },\n        \"reduce\":\
          \ \"max\",\n        \"site\": \"heute\",\n        \"host_name\": \"my.cool.host\"\
          ,\n        \"service_description\": \"Check_MK\",\n        \"type\": \"\
          single_metric\",\n        \"graph_id\": \"cmk_cpu_time_by_phase\",\n   \
          \ }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code is >=\
          \ 400\nresp = urllib.request.urlopen(request)\nif resp.status == 200:\n\
          \    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status ==\
          \ 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/metric/actions/get/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    time_range[start]='2025-10-22 18:03:02.018091'\\\n    time_range[end]='2025-10-22\
          \ 18:18:02.018093'\\\n    reduce='max'\\\n    site='heute'\\\n    host_name='my.cool.host'\\\
          \n    service_description='Check_MK'\\\n    type='single_metric'\\\n   \
          \ graph_id='cmk_cpu_time_by_phase'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"Content-Type: application/json\"\
          \ \\\n  --data '{\n          \"graph_id\": \"cmk_cpu_time_by_phase\",\n\
          \          \"host_name\": \"my.cool.host\",\n          \"reduce\": \"max\"\
          ,\n          \"service_description\": \"Check_MK\",\n          \"site\"\
          : \"heute\",\n          \"time_range\": {\n            \"end\": \"2025-10-22\
          \ 18:18:02.018093\",\n            \"start\": \"2025-10-22 18:03:02.018091\"\
          \n          },\n          \"type\": \"single_metric\"\n        }' \\\n \
          \ \"$API_URL/domain-types/metric/actions/get/invoke\""
  /version:
    get:
      tags:
      - Miscellaneous
      description: ''
      summary: Display some version information
      operationId: cmk.gui.openapi.endpoints.version.search
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstalledVersions'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/version\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/version\",\n    method=\"GET\",\n    headers={\n     \
          \   \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n        \"Accept\"\
          : \"application/json\",\n        \n    },\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/version\" \\\n    \"Authorization: Bearer\
          \ $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/version\""
  /domain-types/notification_rule/collections/all:
    get:
      tags:
      - Notification Rules
      description: "\n\nThis endpoint requires the following permissions: \n * Edit\
        \ personal notification settings (`general.edit_notifications`): This allows\
        \ a user to edit his personal notification settings. You also need the permission\
        \ <i>Edit the user profile</i> in order to do this.\n"
      summary: Show all notification rules
      operationId: cmk.gui.openapi.endpoints.notification_rules.show_rules
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleResponseCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/notification_rule/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/notification_rule/collections/all\",\n  \
          \  method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/notification_rule/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/notification_rule/collections/all\""
    post:
      tags:
      - Notification Rules
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Read access to all hosts and folders\
        \ (`wato.see_all_folders`): Users without this permissions can only see folders\
        \ with a contact group they are in.\n   * Edit personal notification settings\
        \ (`general.edit_notifications`): This allows a user to edit his personal\
        \ notification settings. You also need the permission <i>Edit the user profile</i>\
        \ in order to do this.\n"
      summary: Create a notification rule
      operationId: cmk.gui.openapi.endpoints.notification_rules.post_rule
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id057
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id057
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/notification_rule/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"rule_config\": {\n            \"rule_properties\"\
          : {\n                \"description\": \"A description or title of this rule.\"\
          ,\n                \"comment\": \"A example comment.\",\n              \
          \  \"documentation_url\": \"http://link/to/documentation\",\n          \
          \      \"do_not_apply_this_rule\": {\n                    \"state\": \"\
          disabled\",\n                },\n                \"allow_users_to_deactivate\"\
          : {\n                    \"state\": \"enabled\",\n                },\n \
          \           },\n            \"notification_method\": {\n               \
          \ \"notify_plugin\": {\n                    \"option\": \"create_notification_with_the_following_parameters\"\
          ,\n                    \"plugin_params\": {\n                        \"\
          plugin_name\": \"mail\",\n                        \"from_details\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                        \"reply_to\": {\n                 \
          \           \"state\": \"disabled\",\n                        },\n     \
          \                   \"subject_for_host_notifications\": {\n            \
          \                \"state\": \"disabled\",\n                        },\n\
          \                        \"subject_for_service_notifications\": {\n    \
          \                        \"state\": \"disabled\",\n                    \
          \    },\n                        \"info_to_be_displayed_in_the_email_body\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"insert_html_section_between_body_and_table\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"url_prefix_for_links_to_checkmk\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"sort_order_for_bulk_notifications\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"send_separate_notification_to_every_recipient\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"enable_sync_smtp\": {\n     \
          \                       \"state\": \"disabled\",\n                     \
          \   },\n                        \"display_graphs_among_each_other\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                        \"graphs_per_notification\": {\n  \
          \                          \"state\": \"disabled\",\n                  \
          \      },\n                        \"bulk_notifications_with_graphs\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                    },\n                },\n              \
          \  \"notification_bulking\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n            },\n            \"contact_selection\"\
          : {\n                \"all_contacts_of_the_notified_object\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"all_users\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"all_users_with_an_email_address\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"the_following_users\": {\n                    \"state\"\
          : \"disabled\",\n                },\n                \"members_of_contact_groups\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"explicit_email_addresses\": {\n                    \"\
          state\": \"disabled\",\n                },\n                \"restrict_by_custom_macros\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"restrict_by_contact_groups\": {\n                   \
          \ \"state\": \"disabled\",\n                },\n            },\n       \
          \     \"conditions\": {\n                \"match_sites\": {\n          \
          \          \"state\": \"disabled\",\n                },\n              \
          \  \"match_folder\": {\n                    \"state\": \"disabled\",\n \
          \               },\n                \"match_host_tags\": {\n           \
          \         \"state\": \"disabled\",\n                },\n               \
          \ \"match_host_labels\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_host_groups\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"match_hosts\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"match_exclude_hosts\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"match_service_labels\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_service_groups\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \         \"match_exclude_service_groups\": {\n                    \"state\"\
          : \"disabled\",\n                },\n                \"match_service_groups_regex\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_exclude_service_groups_regex\": {\n           \
          \         \"state\": \"disabled\",\n                },\n               \
          \ \"match_services\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"match_exclude_services\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \         \"match_check_types\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_plugin_output\": {\n    \
          \                \"state\": \"disabled\",\n                },\n        \
          \        \"match_contact_groups\": {\n                    \"state\": \"\
          disabled\",\n                },\n                \"match_service_levels\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_only_during_time_period\": {\n                \
          \    \"state\": \"disabled\",\n                },\n                \"match_host_event_type\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_service_event_type\": {\n                    \"\
          state\": \"disabled\",\n                },\n                \"restrict_to_notification_numbers\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"throttle_periodic_notifications\": {\n              \
          \      \"state\": \"disabled\",\n                },\n                \"\
          match_notification_comment\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"event_console_alerts\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \     },\n        },\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/notification_rule/collections/all\",\n  \
          \  method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"rule_config\": {\n           \
          \ \"rule_properties\": {\n                \"description\": \"A description\
          \ or title of this rule.\",\n                \"comment\": \"A example comment.\"\
          ,\n                \"documentation_url\": \"http://link/to/documentation\"\
          ,\n                \"do_not_apply_this_rule\": {\n                    \"\
          state\": \"disabled\",\n                },\n                \"allow_users_to_deactivate\"\
          : {\n                    \"state\": \"enabled\",\n                },\n \
          \           },\n            \"notification_method\": {\n               \
          \ \"notify_plugin\": {\n                    \"option\": \"create_notification_with_the_following_parameters\"\
          ,\n                    \"plugin_params\": {\n                        \"\
          plugin_name\": \"mail\",\n                        \"from_details\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                        \"reply_to\": {\n                 \
          \           \"state\": \"disabled\",\n                        },\n     \
          \                   \"subject_for_host_notifications\": {\n            \
          \                \"state\": \"disabled\",\n                        },\n\
          \                        \"subject_for_service_notifications\": {\n    \
          \                        \"state\": \"disabled\",\n                    \
          \    },\n                        \"info_to_be_displayed_in_the_email_body\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"insert_html_section_between_body_and_table\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"url_prefix_for_links_to_checkmk\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"sort_order_for_bulk_notifications\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"send_separate_notification_to_every_recipient\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"enable_sync_smtp\": {\n     \
          \                       \"state\": \"disabled\",\n                     \
          \   },\n                        \"display_graphs_among_each_other\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                        \"graphs_per_notification\": {\n  \
          \                          \"state\": \"disabled\",\n                  \
          \      },\n                        \"bulk_notifications_with_graphs\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                    },\n                },\n              \
          \  \"notification_bulking\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n            },\n            \"contact_selection\"\
          : {\n                \"all_contacts_of_the_notified_object\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"all_users\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"all_users_with_an_email_address\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"the_following_users\": {\n                    \"state\"\
          : \"disabled\",\n                },\n                \"members_of_contact_groups\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"explicit_email_addresses\": {\n                    \"\
          state\": \"disabled\",\n                },\n                \"restrict_by_custom_macros\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"restrict_by_contact_groups\": {\n                   \
          \ \"state\": \"disabled\",\n                },\n            },\n       \
          \     \"conditions\": {\n                \"match_sites\": {\n          \
          \          \"state\": \"disabled\",\n                },\n              \
          \  \"match_folder\": {\n                    \"state\": \"disabled\",\n \
          \               },\n                \"match_host_tags\": {\n           \
          \         \"state\": \"disabled\",\n                },\n               \
          \ \"match_host_labels\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_host_groups\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"match_hosts\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"match_exclude_hosts\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"match_service_labels\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_service_groups\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \         \"match_exclude_service_groups\": {\n                    \"state\"\
          : \"disabled\",\n                },\n                \"match_service_groups_regex\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_exclude_service_groups_regex\": {\n           \
          \         \"state\": \"disabled\",\n                },\n               \
          \ \"match_services\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"match_exclude_services\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \         \"match_check_types\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_plugin_output\": {\n    \
          \                \"state\": \"disabled\",\n                },\n        \
          \        \"match_contact_groups\": {\n                    \"state\": \"\
          disabled\",\n                },\n                \"match_service_levels\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_only_during_time_period\": {\n                \
          \    \"state\": \"disabled\",\n                },\n                \"match_host_event_type\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_service_event_type\": {\n                    \"\
          state\": \"disabled\",\n                },\n                \"restrict_to_notification_numbers\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"throttle_periodic_notifications\": {\n              \
          \      \"state\": \"disabled\",\n                },\n                \"\
          match_notification_comment\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"event_console_alerts\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \     },\n        },\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/notification_rule/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    rule_config[rule_properties][description]='A description or title\
          \ of this rule.'\\\n    rule_config[rule_properties][comment]='A example\
          \ comment.'\\\n    rule_config[rule_properties][documentation_url]='http://link/to/documentation'\\\
          \n    rule_config[rule_properties][do_not_apply_this_rule][state]='disabled'\\\
          \n    rule_config[rule_properties][allow_users_to_deactivate][state]='enabled'\\\
          \n    rule_config[notification_method][notify_plugin][option]='create_notification_with_the_following_parameters'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][plugin_name]='mail'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][from_details][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][reply_to][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][subject_for_host_notifications][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][subject_for_service_notifications][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][info_to_be_displayed_in_the_email_body][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][insert_html_section_between_body_and_table][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][url_prefix_for_links_to_checkmk][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][sort_order_for_bulk_notifications][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][send_separate_notification_to_every_recipient][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][enable_sync_smtp][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][display_graphs_among_each_other][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][graphs_per_notification][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][bulk_notifications_with_graphs][state]='disabled'\\\
          \n    rule_config[notification_method][notification_bulking][state]='disabled'\\\
          \n    rule_config[contact_selection][all_contacts_of_the_notified_object][state]='disabled'\\\
          \n    rule_config[contact_selection][all_users][state]='disabled'\\\n  \
          \  rule_config[contact_selection][all_users_with_an_email_address][state]='disabled'\\\
          \n    rule_config[contact_selection][the_following_users][state]='disabled'\\\
          \n    rule_config[contact_selection][members_of_contact_groups][state]='disabled'\\\
          \n    rule_config[contact_selection][explicit_email_addresses][state]='disabled'\\\
          \n    rule_config[contact_selection][restrict_by_custom_macros][state]='disabled'\\\
          \n    rule_config[contact_selection][restrict_by_contact_groups][state]='disabled'\\\
          \n    rule_config[conditions][match_sites][state]='disabled'\\\n    rule_config[conditions][match_folder][state]='disabled'\\\
          \n    rule_config[conditions][match_host_tags][state]='disabled'\\\n   \
          \ rule_config[conditions][match_host_labels][state]='disabled'\\\n    rule_config[conditions][match_host_groups][state]='disabled'\\\
          \n    rule_config[conditions][match_hosts][state]='disabled'\\\n    rule_config[conditions][match_exclude_hosts][state]='disabled'\\\
          \n    rule_config[conditions][match_service_labels][state]='disabled'\\\n\
          \    rule_config[conditions][match_service_groups][state]='disabled'\\\n\
          \    rule_config[conditions][match_exclude_service_groups][state]='disabled'\\\
          \n    rule_config[conditions][match_service_groups_regex][state]='disabled'\\\
          \n    rule_config[conditions][match_exclude_service_groups_regex][state]='disabled'\\\
          \n    rule_config[conditions][match_services][state]='disabled'\\\n    rule_config[conditions][match_exclude_services][state]='disabled'\\\
          \n    rule_config[conditions][match_check_types][state]='disabled'\\\n \
          \   rule_config[conditions][match_plugin_output][state]='disabled'\\\n \
          \   rule_config[conditions][match_contact_groups][state]='disabled'\\\n\
          \    rule_config[conditions][match_service_levels][state]='disabled'\\\n\
          \    rule_config[conditions][match_only_during_time_period][state]='disabled'\\\
          \n    rule_config[conditions][match_host_event_type][state]='disabled'\\\
          \n    rule_config[conditions][match_service_event_type][state]='disabled'\\\
          \n    rule_config[conditions][restrict_to_notification_numbers][state]='disabled'\\\
          \n    rule_config[conditions][throttle_periodic_notifications][state]='disabled'\\\
          \n    rule_config[conditions][match_notification_comment][state]='disabled'\\\
          \n    rule_config[conditions][event_console_alerts][state]='disabled'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"rule_config\": {\n            \"conditions\": {\n         \
          \     \"event_console_alerts\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"match_check_types\": {\n           \
          \     \"state\": \"disabled\"\n              },\n              \"match_contact_groups\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_exclude_hosts\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"match_exclude_service_groups\": {\n\
          \                \"state\": \"disabled\"\n              },\n           \
          \   \"match_exclude_service_groups_regex\": {\n                \"state\"\
          : \"disabled\"\n              },\n              \"match_exclude_services\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_folder\": {\n                \"state\": \"disabled\"\n \
          \             },\n              \"match_host_event_type\": {\n         \
          \       \"state\": \"disabled\"\n              },\n              \"match_host_groups\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_host_labels\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"match_host_tags\": {\n             \
          \   \"state\": \"disabled\"\n              },\n              \"match_hosts\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_notification_comment\": {\n                \"state\": \"\
          disabled\"\n              },\n              \"match_only_during_time_period\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_plugin_output\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"match_service_event_type\": {\n    \
          \            \"state\": \"disabled\"\n              },\n              \"\
          match_service_groups\": {\n                \"state\": \"disabled\"\n   \
          \           },\n              \"match_service_groups_regex\": {\n      \
          \          \"state\": \"disabled\"\n              },\n              \"match_service_labels\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_service_levels\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"match_services\": {\n              \
          \  \"state\": \"disabled\"\n              },\n              \"match_sites\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"restrict_to_notification_numbers\": {\n                \"state\"\
          : \"disabled\"\n              },\n              \"throttle_periodic_notifications\"\
          : {\n                \"state\": \"disabled\"\n              }\n        \
          \    },\n            \"contact_selection\": {\n              \"all_contacts_of_the_notified_object\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"all_users\": {\n                \"state\": \"disabled\"\n    \
          \          },\n              \"all_users_with_an_email_address\": {\n  \
          \              \"state\": \"disabled\"\n              },\n             \
          \ \"explicit_email_addresses\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"members_of_contact_groups\": {\n   \
          \             \"state\": \"disabled\"\n              },\n              \"\
          restrict_by_contact_groups\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"restrict_by_custom_macros\": {\n   \
          \             \"state\": \"disabled\"\n              },\n              \"\
          the_following_users\": {\n                \"state\": \"disabled\"\n    \
          \          }\n            },\n            \"notification_method\": {\n \
          \             \"notification_bulking\": {\n                \"state\": \"\
          disabled\"\n              },\n              \"notify_plugin\": {\n     \
          \           \"option\": \"create_notification_with_the_following_parameters\"\
          ,\n                \"plugin_params\": {\n                  \"bulk_notifications_with_graphs\"\
          : {\n                    \"state\": \"disabled\"\n                  },\n\
          \                  \"display_graphs_among_each_other\": {\n            \
          \        \"state\": \"disabled\"\n                  },\n               \
          \   \"enable_sync_smtp\": {\n                    \"state\": \"disabled\"\
          \n                  },\n                  \"from_details\": {\n        \
          \            \"state\": \"disabled\"\n                  },\n           \
          \       \"graphs_per_notification\": {\n                    \"state\": \"\
          disabled\"\n                  },\n                  \"info_to_be_displayed_in_the_email_body\"\
          : {\n                    \"state\": \"disabled\"\n                  },\n\
          \                  \"insert_html_section_between_body_and_table\": {\n \
          \                   \"state\": \"disabled\"\n                  },\n    \
          \              \"plugin_name\": \"mail\",\n                  \"reply_to\"\
          : {\n                    \"state\": \"disabled\"\n                  },\n\
          \                  \"send_separate_notification_to_every_recipient\": {\n\
          \                    \"state\": \"disabled\"\n                  },\n   \
          \               \"sort_order_for_bulk_notifications\": {\n             \
          \       \"state\": \"disabled\"\n                  },\n                \
          \  \"subject_for_host_notifications\": {\n                    \"state\"\
          : \"disabled\"\n                  },\n                  \"subject_for_service_notifications\"\
          : {\n                    \"state\": \"disabled\"\n                  },\n\
          \                  \"url_prefix_for_links_to_checkmk\": {\n            \
          \        \"state\": \"disabled\"\n                  }\n                }\n\
          \              }\n            },\n            \"rule_properties\": {\n \
          \             \"allow_users_to_deactivate\": {\n                \"state\"\
          : \"enabled\"\n              },\n              \"comment\": \"A example\
          \ comment.\",\n              \"description\": \"A description or title of\
          \ this rule.\",\n              \"do_not_apply_this_rule\": {\n         \
          \       \"state\": \"disabled\"\n              },\n              \"documentation_url\"\
          : \"http://link/to/documentation\"\n            }\n          }\n       \
          \ }' \\\n  \"$API_URL/domain-types/notification_rule/collections/all\""
  /objects/notification_rule/{rule_id}:
    get:
      tags:
      - Notification Rules
      description: "\n\nThis endpoint requires the following permissions: \n * Edit\
        \ personal notification settings (`general.edit_notifications`): This allows\
        \ a user to edit his personal notification settings. You also need the permission\
        \ <i>Edit the user profile</i> in order to do this.\n"
      summary: Show a notification rule
      operationId: cmk.gui.openapi.endpoints.notification_rules.show_rule
      parameters:
      - in: path
        name: rule_id
        description: The notification rule ID.
        schema:
          type: string
          example: 5425d554-5741-4bbf-b907-1a391dfab5bb
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb\""
    put:
      tags:
      - Notification Rules
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Read access to all hosts and folders\
        \ (`wato.see_all_folders`): Users without this permissions can only see folders\
        \ with a contact group they are in.\n   * Edit personal notification settings\
        \ (`general.edit_notifications`): This allows a user to edit his personal\
        \ notification settings. You also need the permission <i>Edit the user profile</i>\
        \ in order to do this.\n"
      summary: Update a notification rule
      operationId: cmk.gui.openapi.endpoints.notification_rules.put_rule
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id058
          type: string
        example: application/json
      - in: path
        name: rule_id
        description: The notification rule ID.
        schema:
          type: string
          example: 5425d554-5741-4bbf-b907-1a391dfab5bb
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id058
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"rule_config\": {\n            \"rule_properties\"\
          : {\n                \"description\": \"A description or title of this rule.\"\
          ,\n                \"comment\": \"A example comment.\",\n              \
          \  \"documentation_url\": \"http://link/to/documentation\",\n          \
          \      \"do_not_apply_this_rule\": {\n                    \"state\": \"\
          disabled\",\n                },\n                \"allow_users_to_deactivate\"\
          : {\n                    \"state\": \"enabled\",\n                },\n \
          \           },\n            \"notification_method\": {\n               \
          \ \"notify_plugin\": {\n                    \"option\": \"create_notification_with_the_following_parameters\"\
          ,\n                    \"plugin_params\": {\n                        \"\
          plugin_name\": \"mail\",\n                        \"from_details\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                        \"reply_to\": {\n                 \
          \           \"state\": \"disabled\",\n                        },\n     \
          \                   \"subject_for_host_notifications\": {\n            \
          \                \"state\": \"disabled\",\n                        },\n\
          \                        \"subject_for_service_notifications\": {\n    \
          \                        \"state\": \"disabled\",\n                    \
          \    },\n                        \"info_to_be_displayed_in_the_email_body\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"insert_html_section_between_body_and_table\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"url_prefix_for_links_to_checkmk\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"sort_order_for_bulk_notifications\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"send_separate_notification_to_every_recipient\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"enable_sync_smtp\": {\n     \
          \                       \"state\": \"disabled\",\n                     \
          \   },\n                        \"display_graphs_among_each_other\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                        \"graphs_per_notification\": {\n  \
          \                          \"state\": \"disabled\",\n                  \
          \      },\n                        \"bulk_notifications_with_graphs\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                    },\n                },\n              \
          \  \"notification_bulking\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n            },\n            \"contact_selection\"\
          : {\n                \"all_contacts_of_the_notified_object\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"all_users\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"all_users_with_an_email_address\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"the_following_users\": {\n                    \"state\"\
          : \"disabled\",\n                },\n                \"members_of_contact_groups\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"explicit_email_addresses\": {\n                    \"\
          state\": \"disabled\",\n                },\n                \"restrict_by_custom_macros\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"restrict_by_contact_groups\": {\n                   \
          \ \"state\": \"disabled\",\n                },\n            },\n       \
          \     \"conditions\": {\n                \"match_sites\": {\n          \
          \          \"state\": \"disabled\",\n                },\n              \
          \  \"match_folder\": {\n                    \"state\": \"disabled\",\n \
          \               },\n                \"match_host_tags\": {\n           \
          \         \"state\": \"disabled\",\n                },\n               \
          \ \"match_host_labels\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_host_groups\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"match_hosts\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"match_exclude_hosts\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"match_service_labels\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_service_groups\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \         \"match_exclude_service_groups\": {\n                    \"state\"\
          : \"disabled\",\n                },\n                \"match_service_groups_regex\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_exclude_service_groups_regex\": {\n           \
          \         \"state\": \"disabled\",\n                },\n               \
          \ \"match_services\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"match_exclude_services\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \         \"match_check_types\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_plugin_output\": {\n    \
          \                \"state\": \"disabled\",\n                },\n        \
          \        \"match_contact_groups\": {\n                    \"state\": \"\
          disabled\",\n                },\n                \"match_service_levels\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_only_during_time_period\": {\n                \
          \    \"state\": \"disabled\",\n                },\n                \"match_host_event_type\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_service_event_type\": {\n                    \"\
          state\": \"disabled\",\n                },\n                \"restrict_to_notification_numbers\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"throttle_periodic_notifications\": {\n              \
          \      \"state\": \"disabled\",\n                },\n                \"\
          match_notification_comment\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"event_console_alerts\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \     },\n        },\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"rule_config\": {\n           \
          \ \"rule_properties\": {\n                \"description\": \"A description\
          \ or title of this rule.\",\n                \"comment\": \"A example comment.\"\
          ,\n                \"documentation_url\": \"http://link/to/documentation\"\
          ,\n                \"do_not_apply_this_rule\": {\n                    \"\
          state\": \"disabled\",\n                },\n                \"allow_users_to_deactivate\"\
          : {\n                    \"state\": \"enabled\",\n                },\n \
          \           },\n            \"notification_method\": {\n               \
          \ \"notify_plugin\": {\n                    \"option\": \"create_notification_with_the_following_parameters\"\
          ,\n                    \"plugin_params\": {\n                        \"\
          plugin_name\": \"mail\",\n                        \"from_details\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                        \"reply_to\": {\n                 \
          \           \"state\": \"disabled\",\n                        },\n     \
          \                   \"subject_for_host_notifications\": {\n            \
          \                \"state\": \"disabled\",\n                        },\n\
          \                        \"subject_for_service_notifications\": {\n    \
          \                        \"state\": \"disabled\",\n                    \
          \    },\n                        \"info_to_be_displayed_in_the_email_body\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"insert_html_section_between_body_and_table\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"url_prefix_for_links_to_checkmk\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"sort_order_for_bulk_notifications\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"send_separate_notification_to_every_recipient\"\
          : {\n                            \"state\": \"disabled\",\n            \
          \            },\n                        \"enable_sync_smtp\": {\n     \
          \                       \"state\": \"disabled\",\n                     \
          \   },\n                        \"display_graphs_among_each_other\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                        \"graphs_per_notification\": {\n  \
          \                          \"state\": \"disabled\",\n                  \
          \      },\n                        \"bulk_notifications_with_graphs\": {\n\
          \                            \"state\": \"disabled\",\n                \
          \        },\n                    },\n                },\n              \
          \  \"notification_bulking\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n            },\n            \"contact_selection\"\
          : {\n                \"all_contacts_of_the_notified_object\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"all_users\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"all_users_with_an_email_address\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"the_following_users\": {\n                    \"state\"\
          : \"disabled\",\n                },\n                \"members_of_contact_groups\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"explicit_email_addresses\": {\n                    \"\
          state\": \"disabled\",\n                },\n                \"restrict_by_custom_macros\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"restrict_by_contact_groups\": {\n                   \
          \ \"state\": \"disabled\",\n                },\n            },\n       \
          \     \"conditions\": {\n                \"match_sites\": {\n          \
          \          \"state\": \"disabled\",\n                },\n              \
          \  \"match_folder\": {\n                    \"state\": \"disabled\",\n \
          \               },\n                \"match_host_tags\": {\n           \
          \         \"state\": \"disabled\",\n                },\n               \
          \ \"match_host_labels\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_host_groups\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"match_hosts\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"match_exclude_hosts\": {\n      \
          \              \"state\": \"disabled\",\n                },\n          \
          \      \"match_service_labels\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_service_groups\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \         \"match_exclude_service_groups\": {\n                    \"state\"\
          : \"disabled\",\n                },\n                \"match_service_groups_regex\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_exclude_service_groups_regex\": {\n           \
          \         \"state\": \"disabled\",\n                },\n               \
          \ \"match_services\": {\n                    \"state\": \"disabled\",\n\
          \                },\n                \"match_exclude_services\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \         \"match_check_types\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"match_plugin_output\": {\n    \
          \                \"state\": \"disabled\",\n                },\n        \
          \        \"match_contact_groups\": {\n                    \"state\": \"\
          disabled\",\n                },\n                \"match_service_levels\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_only_during_time_period\": {\n                \
          \    \"state\": \"disabled\",\n                },\n                \"match_host_event_type\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"match_service_event_type\": {\n                    \"\
          state\": \"disabled\",\n                },\n                \"restrict_to_notification_numbers\"\
          : {\n                    \"state\": \"disabled\",\n                },\n\
          \                \"throttle_periodic_notifications\": {\n              \
          \      \"state\": \"disabled\",\n                },\n                \"\
          match_notification_comment\": {\n                    \"state\": \"disabled\"\
          ,\n                },\n                \"event_console_alerts\": {\n   \
          \                 \"state\": \"disabled\",\n                },\n       \
          \     },\n        },\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' \\\n\
          \    rule_config[rule_properties][description]='A description or title of\
          \ this rule.'\\\n    rule_config[rule_properties][comment]='A example comment.'\\\
          \n    rule_config[rule_properties][documentation_url]='http://link/to/documentation'\\\
          \n    rule_config[rule_properties][do_not_apply_this_rule][state]='disabled'\\\
          \n    rule_config[rule_properties][allow_users_to_deactivate][state]='enabled'\\\
          \n    rule_config[notification_method][notify_plugin][option]='create_notification_with_the_following_parameters'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][plugin_name]='mail'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][from_details][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][reply_to][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][subject_for_host_notifications][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][subject_for_service_notifications][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][info_to_be_displayed_in_the_email_body][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][insert_html_section_between_body_and_table][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][url_prefix_for_links_to_checkmk][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][sort_order_for_bulk_notifications][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][send_separate_notification_to_every_recipient][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][enable_sync_smtp][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][display_graphs_among_each_other][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][graphs_per_notification][state]='disabled'\\\
          \n    rule_config[notification_method][notify_plugin][plugin_params][bulk_notifications_with_graphs][state]='disabled'\\\
          \n    rule_config[notification_method][notification_bulking][state]='disabled'\\\
          \n    rule_config[contact_selection][all_contacts_of_the_notified_object][state]='disabled'\\\
          \n    rule_config[contact_selection][all_users][state]='disabled'\\\n  \
          \  rule_config[contact_selection][all_users_with_an_email_address][state]='disabled'\\\
          \n    rule_config[contact_selection][the_following_users][state]='disabled'\\\
          \n    rule_config[contact_selection][members_of_contact_groups][state]='disabled'\\\
          \n    rule_config[contact_selection][explicit_email_addresses][state]='disabled'\\\
          \n    rule_config[contact_selection][restrict_by_custom_macros][state]='disabled'\\\
          \n    rule_config[contact_selection][restrict_by_contact_groups][state]='disabled'\\\
          \n    rule_config[conditions][match_sites][state]='disabled'\\\n    rule_config[conditions][match_folder][state]='disabled'\\\
          \n    rule_config[conditions][match_host_tags][state]='disabled'\\\n   \
          \ rule_config[conditions][match_host_labels][state]='disabled'\\\n    rule_config[conditions][match_host_groups][state]='disabled'\\\
          \n    rule_config[conditions][match_hosts][state]='disabled'\\\n    rule_config[conditions][match_exclude_hosts][state]='disabled'\\\
          \n    rule_config[conditions][match_service_labels][state]='disabled'\\\n\
          \    rule_config[conditions][match_service_groups][state]='disabled'\\\n\
          \    rule_config[conditions][match_exclude_service_groups][state]='disabled'\\\
          \n    rule_config[conditions][match_service_groups_regex][state]='disabled'\\\
          \n    rule_config[conditions][match_exclude_service_groups_regex][state]='disabled'\\\
          \n    rule_config[conditions][match_services][state]='disabled'\\\n    rule_config[conditions][match_exclude_services][state]='disabled'\\\
          \n    rule_config[conditions][match_check_types][state]='disabled'\\\n \
          \   rule_config[conditions][match_plugin_output][state]='disabled'\\\n \
          \   rule_config[conditions][match_contact_groups][state]='disabled'\\\n\
          \    rule_config[conditions][match_service_levels][state]='disabled'\\\n\
          \    rule_config[conditions][match_only_during_time_period][state]='disabled'\\\
          \n    rule_config[conditions][match_host_event_type][state]='disabled'\\\
          \n    rule_config[conditions][match_service_event_type][state]='disabled'\\\
          \n    rule_config[conditions][restrict_to_notification_numbers][state]='disabled'\\\
          \n    rule_config[conditions][throttle_periodic_notifications][state]='disabled'\\\
          \n    rule_config[conditions][match_notification_comment][state]='disabled'\\\
          \n    rule_config[conditions][event_console_alerts][state]='disabled'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"rule_config\": {\n            \"conditions\": {\n         \
          \     \"event_console_alerts\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"match_check_types\": {\n           \
          \     \"state\": \"disabled\"\n              },\n              \"match_contact_groups\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_exclude_hosts\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"match_exclude_service_groups\": {\n\
          \                \"state\": \"disabled\"\n              },\n           \
          \   \"match_exclude_service_groups_regex\": {\n                \"state\"\
          : \"disabled\"\n              },\n              \"match_exclude_services\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_folder\": {\n                \"state\": \"disabled\"\n \
          \             },\n              \"match_host_event_type\": {\n         \
          \       \"state\": \"disabled\"\n              },\n              \"match_host_groups\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_host_labels\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"match_host_tags\": {\n             \
          \   \"state\": \"disabled\"\n              },\n              \"match_hosts\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_notification_comment\": {\n                \"state\": \"\
          disabled\"\n              },\n              \"match_only_during_time_period\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_plugin_output\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"match_service_event_type\": {\n    \
          \            \"state\": \"disabled\"\n              },\n              \"\
          match_service_groups\": {\n                \"state\": \"disabled\"\n   \
          \           },\n              \"match_service_groups_regex\": {\n      \
          \          \"state\": \"disabled\"\n              },\n              \"match_service_labels\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"match_service_levels\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"match_services\": {\n              \
          \  \"state\": \"disabled\"\n              },\n              \"match_sites\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"restrict_to_notification_numbers\": {\n                \"state\"\
          : \"disabled\"\n              },\n              \"throttle_periodic_notifications\"\
          : {\n                \"state\": \"disabled\"\n              }\n        \
          \    },\n            \"contact_selection\": {\n              \"all_contacts_of_the_notified_object\"\
          : {\n                \"state\": \"disabled\"\n              },\n       \
          \       \"all_users\": {\n                \"state\": \"disabled\"\n    \
          \          },\n              \"all_users_with_an_email_address\": {\n  \
          \              \"state\": \"disabled\"\n              },\n             \
          \ \"explicit_email_addresses\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"members_of_contact_groups\": {\n   \
          \             \"state\": \"disabled\"\n              },\n              \"\
          restrict_by_contact_groups\": {\n                \"state\": \"disabled\"\
          \n              },\n              \"restrict_by_custom_macros\": {\n   \
          \             \"state\": \"disabled\"\n              },\n              \"\
          the_following_users\": {\n                \"state\": \"disabled\"\n    \
          \          }\n            },\n            \"notification_method\": {\n \
          \             \"notification_bulking\": {\n                \"state\": \"\
          disabled\"\n              },\n              \"notify_plugin\": {\n     \
          \           \"option\": \"create_notification_with_the_following_parameters\"\
          ,\n                \"plugin_params\": {\n                  \"bulk_notifications_with_graphs\"\
          : {\n                    \"state\": \"disabled\"\n                  },\n\
          \                  \"display_graphs_among_each_other\": {\n            \
          \        \"state\": \"disabled\"\n                  },\n               \
          \   \"enable_sync_smtp\": {\n                    \"state\": \"disabled\"\
          \n                  },\n                  \"from_details\": {\n        \
          \            \"state\": \"disabled\"\n                  },\n           \
          \       \"graphs_per_notification\": {\n                    \"state\": \"\
          disabled\"\n                  },\n                  \"info_to_be_displayed_in_the_email_body\"\
          : {\n                    \"state\": \"disabled\"\n                  },\n\
          \                  \"insert_html_section_between_body_and_table\": {\n \
          \                   \"state\": \"disabled\"\n                  },\n    \
          \              \"plugin_name\": \"mail\",\n                  \"reply_to\"\
          : {\n                    \"state\": \"disabled\"\n                  },\n\
          \                  \"send_separate_notification_to_every_recipient\": {\n\
          \                    \"state\": \"disabled\"\n                  },\n   \
          \               \"sort_order_for_bulk_notifications\": {\n             \
          \       \"state\": \"disabled\"\n                  },\n                \
          \  \"subject_for_host_notifications\": {\n                    \"state\"\
          : \"disabled\"\n                  },\n                  \"subject_for_service_notifications\"\
          : {\n                    \"state\": \"disabled\"\n                  },\n\
          \                  \"url_prefix_for_links_to_checkmk\": {\n            \
          \        \"state\": \"disabled\"\n                  }\n                }\n\
          \              }\n            },\n            \"rule_properties\": {\n \
          \             \"allow_users_to_deactivate\": {\n                \"state\"\
          : \"enabled\"\n              },\n              \"comment\": \"A example\
          \ comment.\",\n              \"description\": \"A description or title of\
          \ this rule.\",\n              \"do_not_apply_this_rule\": {\n         \
          \       \"state\": \"disabled\"\n              },\n              \"documentation_url\"\
          : \"http://link/to/documentation\"\n            }\n          }\n       \
          \ }' \\\n  \"$API_URL/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb\""
  /objects/notification_rule/{rule_id}/actions/delete/invoke:
    post:
      tags:
      - Notification Rules
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Read access to all hosts and folders\
        \ (`wato.see_all_folders`): Users without this permissions can only see folders\
        \ with a contact group they are in.\n   * Edit personal notification settings\
        \ (`general.edit_notifications`): This allows a user to edit his personal\
        \ notification settings. You also need the permission <i>Edit the user profile</i>\
        \ in order to do this.\n"
      summary: Delete a notification rule
      operationId: cmk.gui.openapi.endpoints.notification_rules.delete_rule
      parameters:
      - in: path
        name: rule_id
        description: The notification rule ID.
        schema:
          type: string
          example: 5425d554-5741-4bbf-b907-1a391dfab5bb
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb/actions/delete/invoke\"\
          ,\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif resp.status_code\
          \ == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb/actions/delete/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 201:\nelif resp.status\
          \ == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb/actions/delete/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/notification_rule/5425d554-5741-4bbf-b907-1a391dfab5bb/actions/delete/invoke\""
  /objects/onboarding/agent:
    get:
      tags:
      - Onboarding helper
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Register all hosts & download all monitoring agents (`wato.download_all_agents`):\
        \ Register all hosts with the Agent Bakery and download all monitoring agents\
        \ that have been created with the Agent Bakery, even if you are not a contact\
        \ for the host in question. Please note that these agents might contain confidential\
        \ information such as passwords.\n   * Manage monitoring agents (`wato.agents`):\
        \ Manage customized packaged monitoring agents for Linux, Windows and other\
        \ operating systems\n"
      summary: get info to download an agent for the onboarding
      operationId: cmk.gui.cse.onboarding.get_agent_download_info
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response1'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/onboarding/agent\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/onboarding/agent\",\n    method=\"GET\",\n   \
          \ headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/onboarding/agent\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/onboarding/agent\""
  /domain-types/pagetype_topic/collections/all:
    get:
      tags:
      - Pagetype Topics
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Some permissions starting with `pagetype_topic`:\n   * Optionally:\n\
        \     * All of:\n       * See user topics (`general.see_user_pagetype_topic`):\
        \ Is needed for seeing topics that other users have created.\n       * Any\
        \ of:\n         * Publish topics (`general.publish_pagetype_topic`): Make\
        \ topics visible and usable for all users.\n         * Publish topics to allowed\
        \ contact groups (`general.publish_to_groups_pagetype_topic`): Make topics\
        \ visible and usable for users of contact groups the publishing user is a\
        \ member of.\n         * Publish topics to foreign contact groups (`general.publish_to_foreign_groups_pagetype_topic`):\
        \ Make topics visible and usable for users of contact groups the publishing\
        \ user is not a member of.\n         * Publish topics to users of selected\
        \ sites (`general.publish_to_sites_pagetype_topic`): Make topics visible and\
        \ usable for users of sites the publishing user has selected.\n"
      summary: Show all pagetype topics the user has access to.
      operationId: Pagetype Topics.list_topics_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagetypeTopicCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/pagetype_topic/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/pagetype_topic/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/pagetype_topic/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/pagetype_topic/collections/all\""
  /domain-types/parent_scan/actions/start/invoke:
    post:
      tags:
      - Parent scan
      description: ''
      summary: Start the parent scan background job
      operationId: cmk.gui.openapi.endpoints.parent_scan.start_parent_scan_background_job
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id059
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackgroundJobStatusObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id059
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParentScan'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/parent_scan/actions/start/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"host_names\": [\"host1\", \"host2\"],\n \
          \       \"performance\": {\n            \"responses_timeout\": 8,\n    \
          \        \"hop_probes\": 2,\n            \"max_gateway_distance\": 10,\n\
          \            \"ping_probes\": 5,\n        },\n        \"configuration\"\
          : {\n            \"force_explicit_parents\": False,\n        },\n      \
          \  \"gateway_hosts\": {\n            \"option\": \"no_gateway_hosts\",\n\
          \        },\n    },\n    allow_redirects=True,\n)\nif resp.status_code ==\
          \ 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/parent_scan/actions/start/invoke\",\n   \
          \ method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"host_names\": [\"host1\", \"host2\"\
          ],\n        \"performance\": {\n            \"responses_timeout\": 8,\n\
          \            \"hop_probes\": 2,\n            \"max_gateway_distance\": 10,\n\
          \            \"ping_probes\": 5,\n        },\n        \"configuration\"\
          : {\n            \"force_explicit_parents\": False,\n        },\n      \
          \  \"gateway_hosts\": {\n            \"option\": \"no_gateway_hosts\",\n\
          \        },\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/parent_scan/actions/start/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    host_names:='[\"host1\", \"host2\"]'\\\n    performance[responses_timeout]:=8\\\
          \n    performance[hop_probes]:=2\\\n    performance[max_gateway_distance]:=10\\\
          \n    performance[ping_probes]:=5\\\n    configuration[force_explicit_parents]:=false\\\
          \n    gateway_hosts[option]='no_gateway_hosts'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"configuration\": {\n            \"force_explicit_parents\"\
          : false\n          },\n          \"gateway_hosts\": {\n            \"option\"\
          : \"no_gateway_hosts\"\n          },\n          \"host_names\": [\n    \
          \        \"host1\",\n            \"host2\"\n          ],\n          \"performance\"\
          : {\n            \"hop_probes\": 2,\n            \"max_gateway_distance\"\
          : 10,\n            \"ping_probes\": 5,\n            \"responses_timeout\"\
          : 8\n          }\n        }' \\\n  \"$API_URL/domain-types/parent_scan/actions/start/invoke\""
  /domain-types/password/collections/all:
    get:
      tags:
      - Passwords
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Password management (`wato.passwords`): This permission is needed\
        \ for the module <i>Passwords</i>.\n   * Optionally:\n     * Write access\
        \ to all passwords (`wato.edit_all_passwords`): Without this permission, users\
        \ can only edit passwords which are shared with a contact group they are member\
        \ of. This permission grants full access to all passwords.\n"
      summary: Show all passwords
      operationId: Passwords.list_passwords_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/password/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/password/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/password/collections/all\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/password/collections/all\""
    post:
      tags:
      - Passwords
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Password management (`wato.passwords`):\
        \ This permission is needed for the module <i>Passwords</i>.\n   * Optionally:\n\
        \     * Write access to all passwords (`wato.edit_all_passwords`): Without\
        \ this permission, users can only edit passwords which are shared with a contact\
        \ group they are member of. This permission grants full access to all passwords.\n"
      summary: Create a password
      operationId: Passwords.create_password_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id060
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id060
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePassword'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/password/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/password/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/password/collections/all\" \\\
          \n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\"\
          \ \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/password/collections/all\""
  /objects/password/{name}:
    get:
      tags:
      - Passwords
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Password management (`wato.passwords`): This permission is needed\
        \ for the module <i>Passwords</i>.\n   * Optionally:\n     * Write access\
        \ to all passwords (`wato.edit_all_passwords`): Without this permission, users\
        \ can only edit passwords which are shared with a contact group they are member\
        \ of. This permission grants full access to all passwords.\n"
      summary: Show password store entry
      operationId: Passwords.show_password_v1
      parameters:
      - in: path
        name: name
        content:
          application/json:
            schema:
              description: A name used as an identifier. Can be of arbitrary (sensible)
                length.
              examples:
              - pathname
              title: Name
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/password/pathname\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/password/pathname\",\n    method=\"GET\",\n  \
          \  headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/password/pathname\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/password/pathname\""
    put:
      tags:
      - Passwords
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Password management (`wato.passwords`):\
        \ This permission is needed for the module <i>Passwords</i>.\n   * Optionally:\n\
        \     * Write access to all passwords (`wato.edit_all_passwords`): Without\
        \ this permission, users can only edit passwords which are shared with a contact\
        \ group they are member of. This permission grants full access to all passwords.\n"
      summary: Update a password
      operationId: Passwords.update_password_v1
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id061
          type: string
        example: application/json
      - in: path
        name: name
        content:
          application/json:
            schema:
              description: A name used as an identifier. Can be of arbitrary (sensible)
                length.
              examples:
              - pathname
              title: Name
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError5AAAB769ED6D6288'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError26717584F8AADF09'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id061
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/password/pathname\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/password/pathname\",\n    method=\"PUT\",\n  \
          \  headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n        \"Content-Type\": 'application/json', \
          \ # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/password/pathname\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    \n    'If-Match:\"a20ceacf346041dc\"' \\\n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  \"$API_URL/objects/password/pathname\""
    delete:
      tags:
      - Passwords
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Password management (`wato.passwords`):\
        \ This permission is needed for the module <i>Passwords</i>.\n   * Optionally:\n\
        \     * Write access to all passwords (`wato.edit_all_passwords`): Without\
        \ this permission, users can only edit passwords which are shared with a contact\
        \ group they are member of. This permission grants full access to all passwords.\n"
      summary: Delete a password
      operationId: Passwords.delete_password_v1
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - in: path
        name: name
        content:
          application/json:
            schema:
              description: A name used as an identifier. Can be of arbitrary (sensible)
                length.
              examples:
              - pathname
              title: Name
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError5AAAB769ED6D6288'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError26717584F8AADF09'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\n\n\
          resp = session.delete(\n    f\"{API_URL}/objects/password/pathname\",\n\
          \    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n    },\n)\nif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/password/pathname\",\n    method=\"DELETE\",\n\
          \    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required) The value\
          \ of the, to be modified, object's ETag header.\n    },\n)\n# Will raise\
          \ an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/password/pathname\" \\\n    \"\
          Authorization: Bearer $USERNAME $PASSWORD\" \\\n    'If-Match:\"a20ceacf346041dc\"\
          ' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"If-Match: \"a20ceacf346041dc\"\
          \" \\\n  \"$API_URL/objects/password/pathname\""
  /objects/quick_setup/{quick_setup_id}:
    get:
      tags:
      - Quick setup
      description: ''
      summary: Get guided stages or overview stages
      operationId: cmk.gui.openapi.endpoints.quick_setup.get_guided_stages_or_overview_stages
      parameters:
      - in: query
        name: mode
        description: The quick setup mode
        schema:
          type: string
          default: guided
          enum: &id063
          - guided
          - overview
          example: overview
        required: false
      - in: query
        name: object_id
        description: Select object id to prefill data for the quick setup
        schema:
          type: string
          default: ''
          example: 8558f956-3e45-4c4f-bd02-e88da17c99dd
        required: false
      - in: path
        name: quick_setup_id
        description: The quick setup id
        schema:
          type: string
          example: aws
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickSetupResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/quick_setup/aws\"\
          ,\n    params={  # goes into query string\n        \"mode\": 'overview',\
          \  # The quick setup mode\n        \"object_id\": '8558f956-3e45-4c4f-bd02-e88da17c99dd',\
          \  # Select object id to prefill data for the quick setup\n    },\n)\nif\
          \ resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise\
          \ RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"mode\": 'overview',  # The quick setup\
          \ mode\n    \"object_id\": '8558f956-3e45-4c4f-bd02-e88da17c99dd',  # Select\
          \ object id to prefill data for the quick setup\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/quick_setup/aws?{query_string}\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/quick_setup/aws\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    \n    mode=='overview' \\\n    object_id=='8558f956-3e45-4c4f-bd02-e88da17c99dd' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'mode=overview' \\\n  --data-urlencode 'object_id=8558f956-3e45-4c4f-bd02-e88da17c99dd'\
          \ \\\n  \"$API_URL/objects/quick_setup/aws\""
  /objects/quick_setup/{quick_setup_id}/quick_setup_stage/{stage_index}:
    get:
      tags:
      - Quick setup
      description: ''
      summary: Get a Quick setup stage structure
      operationId: cmk.gui.openapi.endpoints.quick_setup.quick_setup_get_stage_structure
      parameters:
      - in: query
        name: object_id
        description: Select object id to prefill data for the quick setup
        schema:
          type: string
          default: ''
          example: 8558f956-3e45-4c4f-bd02-e88da17c99dd
        required: false
      - in: path
        name: quick_setup_id
        description: The quick setup id
        schema:
          type: string
          example: aws
        required: true
      - in: path
        name: stage_index
        description: The stage index
        schema:
          type: string
          example: '1'
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickSetupStageStructure'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/quick_setup/aws/quick_setup_stage/1\"\
          ,\n    params={  # goes into query string\n        \"object_id\": '8558f956-3e45-4c4f-bd02-e88da17c99dd',\
          \  # Select object id to prefill data for the quick setup\n    },\n)\nif\
          \ resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise\
          \ RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"object_id\": '8558f956-3e45-4c4f-bd02-e88da17c99dd',\
          \  # Select object id to prefill data for the quick setup\n})\n\nrequest\
          \ = urllib.request.Request(\n    f\"{API_URL}/objects/quick_setup/aws/quick_setup_stage/1?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/quick_setup/aws/quick_setup_stage/1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    object_id=='8558f956-3e45-4c4f-bd02-e88da17c99dd' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'object_id=8558f956-3e45-4c4f-bd02-e88da17c99dd'\
          \ \\\n  \"$API_URL/objects/quick_setup/aws/quick_setup_stage/1\""
  /objects/quick_setup_action_result/{job_id}:
    get:
      tags:
      - Quick setup
      description: ''
      summary: Fetch the Quick action background job result
      operationId: cmk.gui.openapi.endpoints.quick_setup.fetch_quick_setup_action_result
      parameters:
      - in: path
        name: job_id
        description: The id of the action job result to be fetched
        schema:
          type: string
          example: quick_setup
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickSetupCompleteResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/quick_setup_action_result/quick_setup\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/quick_setup_action_result/quick_setup\",\n   \
          \ method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \   },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/quick_setup_action_result/quick_setup\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/quick_setup_action_result/quick_setup\""
  /objects/quick_setup_stage_action_result/{job_id}:
    get:
      tags:
      - Quick setup
      description: ''
      summary: Fetch the Quick setup stage action background job result
      operationId: cmk.gui.openapi.endpoints.quick_setup.fetch_quick_setup_stage_action_result
      parameters:
      - in: query
        name: site_id
        description: The site where the quick setup stage action result is located.
          Defaults to local site
        schema:
          type: string
          example: foobar
        required: false
      - in: path
        name: job_id
        description: The id of the action job result to be fetched
        schema:
          type: string
          example: quick_setup
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickSetupStageActionResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/quick_setup_stage_action_result/quick_setup\"\
          ,\n    params={  # goes into query string\n        \"site_id\": 'foobar',\
          \  # The site where the quick setup stage action result is located.\n  \
          \  },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"site_id\": 'foobar',  # The site where\
          \ the quick setup stage action result is located.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/quick_setup_stage_action_result/quick_setup?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/quick_setup_stage_action_result/quick_setup\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    site_id=='foobar' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'site_id=foobar' \\\n  \"$API_URL/objects/quick_setup_stage_action_result/quick_setup\""
  /objects/quick_setup/{quick_setup_id}/actions/edit/invoke:
    put:
      tags:
      - Quick setup
      description: ''
      summary: Edit the quick setup
      operationId: cmk.gui.openapi.endpoints.quick_setup.edit_quick_setup_action
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id062
          type: string
        example: application/json
      - in: query
        name: object_id
        description: Select object id to prefill data for the quick setup
        schema:
          type: string
          example: 8558f956-3e45-4c4f-bd02-e88da17c99dd
        required: true
      - in: path
        name: quick_setup_id
        description: The quick setup id
        schema:
          type: string
          example: aws
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '303':
          description: 'See Other: The validation and complete action has been started
            in the background. Redirecting to the ''Get background job status snapshot''
            endpoint.'
          content: {}
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickSetupCompleteResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id062
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickSetupFinalActionRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.put(\n    f\"{API_URL}/objects/quick_setup/aws/actions/edit/invoke\"\
          ,\n    params={  # goes into query string\n        \"object_id\": '8558f956-3e45-4c4f-bd02-e88da17c99dd',\
          \  # (required) Select object id to prefill data for the quick setup\n \
          \   },\n    headers={\n        \"Content-Type\": 'application/json',  #\
          \ (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    json={\n        \"button_id\": \"save\",\n        \"\
          stages\": [\n            {\n                \"stage_data\": [],\n      \
          \      },\n            {\n                \"stage_data\": [],\n        \
          \    },\n        ],\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          elif resp.status_code == 303:\n    print('Redirected to', resp.headers['location'])\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"object_id\": '8558f956-3e45-4c4f-bd02-e88da17c99dd',\
          \  # (required) Select object id to prefill data for the quick setup\n})\n\
          \nrequest = urllib.request.Request(\n    f\"{API_URL}/objects/quick_setup/aws/actions/edit/invoke?{query_string}\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"button_id\": \"save\",\n     \
          \   \"stages\": [\n            {\n                \"stage_data\": [],\n\
          \            },\n            {\n                \"stage_data\": [],\n  \
          \          },\n        ],\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:\nelif resp.status == 303:\n    print('Redirected to', resp.headers['location'])"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/quick_setup/aws/actions/edit/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    object_id=='8558f956-3e45-4c4f-bd02-e88da17c99dd' \\\n    button_id='save'\\\
          \n    stages:='[{\"stage_data\": []}, {\"stage_data\": []}]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data-urlencode\
          \ 'object_id=8558f956-3e45-4c4f-bd02-e88da17c99dd' \\\n  --data '{\n   \
          \       \"button_id\": \"save\",\n          \"stages\": [\n            {\n\
          \              \"stage_data\": []\n            },\n            {\n     \
          \         \"stage_data\": []\n            }\n          ]\n        }' \\\n\
          \  \"$API_URL/objects/quick_setup/aws/actions/edit/invoke\""
  /objects/quick_setup/{quick_setup_id}/actions/run-action/invoke:
    post:
      tags:
      - Quick setup
      description: ''
      summary: Run a quick setup action
      operationId: cmk.gui.openapi.endpoints.quick_setup.quick_setup_run_action
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id064
          type: string
        example: application/json
      - in: query
        name: mode
        description: The quick setup mode
        schema:
          type: string
          default: guided
          enum: *id063
          example: overview
        required: false
      - in: path
        name: quick_setup_id
        description: The quick setup id
        schema:
          type: string
          example: aws
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '303':
          description: 'See Other: The validation and complete action has been started
            in the background. Redirecting to the ''Get background job status snapshot''
            endpoint.'
          content: {}
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickSetupCompleteResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id064
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickSetupFinalActionRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/quick_setup/aws/actions/run-action/invoke\"\
          ,\n    params={  # goes into query string\n        \"mode\": 'overview',\
          \  # The quick setup mode\n    },\n    headers={\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"button_id\"\
          : \"save\",\n        \"stages\": [\n            {\n                \"stage_data\"\
          : [],\n            },\n            {\n                \"stage_data\": [],\n\
          \            },\n        ],\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          elif resp.status_code == 303:\n    print('Redirected to', resp.headers['location'])\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"mode\": 'overview',  # The quick setup\
          \ mode\n})\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/objects/quick_setup/aws/actions/run-action/invoke?{query_string}\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"button_id\": \"save\",\n     \
          \   \"stages\": [\n            {\n                \"stage_data\": [],\n\
          \            },\n            {\n                \"stage_data\": [],\n  \
          \          },\n        ],\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:\nelif resp.status == 303:\n    print('Redirected to', resp.headers['location'])"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/quick_setup/aws/actions/run-action/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    mode=='overview' \\\n    button_id='save'\\\n    stages:='[{\"\
          stage_data\": []}, {\"stage_data\": []}]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data-urlencode\
          \ 'mode=overview' \\\n  --data '{\n          \"button_id\": \"save\",\n\
          \          \"stages\": [\n            {\n              \"stage_data\": []\n\
          \            },\n            {\n              \"stage_data\": []\n     \
          \       }\n          ]\n        }' \\\n  \"$API_URL/objects/quick_setup/aws/actions/run-action/invoke\""
  /objects/quick_setup/{quick_setup_id}/actions/run-stage-action/invoke:
    post:
      tags:
      - Quick setup
      description: ''
      summary: Run a Quick setup stage validation and recap action
      operationId: cmk.gui.openapi.endpoints.quick_setup.quicksetup_run_stage_action
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id065
          type: string
        example: application/json
      - in: path
        name: quick_setup_id
        description: The quick setup id
        schema:
          type: string
          example: aws
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '303':
          description: 'See Other: The stage validation and recap action has been
            started in the background. Redirecting to the ''Get background job status
            snapshot'' endpoint.'
          content: {}
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuickSetupStageActionResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id065
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickSetupStageActionRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/quick_setup/aws/actions/run-stage-action/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"stage_action_id\": \"test_connection\",\n\
          \        \"stages\": [\n            {\n                \"form_data\": {\n\
          \                },\n            },\n            {\n                \"form_data\"\
          : {\n                },\n            },\n        ],\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelif resp.status_code == 303:\n    print('Redirected to', resp.headers['location'])\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/quick_setup/aws/actions/run-stage-action/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"stage_action_id\": \"test_connection\"\
          ,\n        \"stages\": [\n            {\n                \"form_data\":\
          \ {\n                },\n            },\n            {\n               \
          \ \"form_data\": {\n                },\n            },\n        ],\n   \
          \ }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code is >=\
          \ 400\nresp = urllib.request.urlopen(request)\nif resp.status == 200:\n\
          \    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status ==\
          \ 201:\nelif resp.status == 303:\n    print('Redirected to', resp.headers['location'])"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/quick_setup/aws/actions/run-stage-action/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    stage_action_id='test_connection'\\\n    stages:='[{\"form_data\"\
          : {}}, {\"form_data\": {}}]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"stage_action_id\": \"test_connection\",\n          \"stages\"\
          : [\n            {\n              \"form_data\": {}\n            },\n  \
          \          {\n              \"form_data\": {}\n            }\n         \
          \ ]\n        }' \\\n  \"$API_URL/objects/quick_setup/aws/actions/run-stage-action/invoke\""
  /domain-types/relay/collections/all:
    get:
      tags:
      - Relays
      description: ''
      summary: Show all relays
      operationId: Relays.list_relays_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/relay/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/relay/collections/all\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/relay/collections/all\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/relay/collections/all\""
    post:
      tags:
      - Relays
      description: ''
      summary: Create a relay
      operationId: Relays.create_relay_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id066
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id066
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelayConfigModel'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/relay/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/relay/collections/all\",\n    method=\"POST\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/relay/collections/all\" \\\n\
          \    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\"\
          \ \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/relay/collections/all\""
  /objects/relay/{relay_id}:
    get:
      tags:
      - Relays
      description: ''
      summary: Show a relay
      operationId: Relays.show_relay_v1
      parameters:
      - in: path
        name: relay_id
        content:
          application/json:
            schema:
              description: A unique identifier of the relay
              examples:
              - 97ee81ac-f552-4b5d-8818-73bda9dedf5f
              title: Relay Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\",\n\
          \    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\""
    put:
      tags:
      - Relays
      description: ''
      summary: Edit a relay
      operationId: Relays.edit_relay_v1
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id067
          type: string
        example: application/json
      - in: path
        name: relay_id
        content:
          application/json:
            schema:
              description: An existing relay that you want to edit.
              examples:
              - 97ee81ac-f552-4b5d-8818-73bda9dedf5f
              title: Relay Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError5AAAB769ED6D6288'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError26717584F8AADF09'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelayModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id067
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelayConfigModel'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\",\n\
          \    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required) The\
          \ value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n\
          \    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  \"$API_URL/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\""
    delete:
      tags:
      - Relays
      description: ''
      summary: Delete a relay
      operationId: Relays.delete_relay_v1
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - in: path
        name: relay_id
        content:
          application/json:
            schema:
              description: An existing relay that you want to delete.
              examples:
              - 97ee81ac-f552-4b5d-8818-73bda9dedf5f
              title: Relay Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError5AAAB769ED6D6288'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError26717584F8AADF09'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\n\n\
          resp = session.delete(\n    f\"{API_URL}/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n    },\n)\nif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\",\n\
          \    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"If-Match\": '\"a20ceacf346041dc\"\
          ',  # (required) The value of the, to be modified, object's ETag header.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    'If-Match:\"\
          a20ceacf346041dc\"' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"If-Match: \"a20ceacf346041dc\"\
          \" \\\n  \"$API_URL/objects/relay/97ee81ac-f552-4b5d-8818-73bda9dedf5f\""
  /domain-types/rule/collections/all:
    get:
      tags:
      - Rules
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Rulesets (`wato.rulesets`): Access to the module for managing\
        \ Checkmk rules. Please note that a user can only manage rules in folders\
        \ he has permissions to.\n   * Optionally:\n     * Write access to all hosts\
        \ and folders (`wato.all_folders`): Without this permission, operations on\
        \ folders can only be done by users that are members of one of the folders\
        \ contact groups. This permission grants full access to all folders and hosts.\n"
      summary: List rules
      operationId: cmk.gui.openapi.endpoints.rule.list_rules
      parameters:
      - in: query
        name: ruleset_name
        description: The name of the ruleset.
        schema:
          type: string
          example: host_groups
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/rule/collections/all\"\
          ,\n    params={  # goes into query string\n        \"ruleset_name\": 'host_groups',\
          \  # (required) The name of the ruleset.\n    },\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"ruleset_name\": 'host_groups',  # (required)\
          \ The name of the ruleset.\n})\n\nrequest = urllib.request.Request(\n  \
          \  f\"{API_URL}/domain-types/rule/collections/all?{query_string}\",\n  \
          \  method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/rule/collections/all\" \\\n \
          \   \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    ruleset_name=='host_groups' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'ruleset_name=host_groups' \\\n  \"$API_URL/domain-types/rule/collections/all\""
    post:
      tags:
      - Rules
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Rulesets (`wato.rulesets`): Access\
        \ to the module for managing Checkmk rules. Please note that a user can only\
        \ manage rules in folders he has permissions to.\n   * Optionally:\n     *\
        \ Write access to all hosts and folders (`wato.all_folders`): Without this\
        \ permission, operations on folders can only be done by users that are members\
        \ of one of the folders contact groups. This permission grants full access\
        \ to all folders and hosts.\n"
      summary: Create rule
      operationId: cmk.gui.openapi.endpoints.rule.create_rule
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id068
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id068
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRuleObject'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/rule/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"properties\": {\n            \"disabled\"\
          : False,\n        },\n        \"value_raw\": \"{'cmk/os_family': 'linux'}\"\
          ,\n        \"conditions\": {\n            \"host_name\": {\n           \
          \     \"match_on\": [\"host1\", \"host2\"],\n                \"operator\"\
          : \"one_of\",\n            },\n            \"host_tags\": [\n          \
          \      {\n                    \"key\": \"criticality\",\n              \
          \      \"operator\": \"is\",\n                    \"value\": \"prod\",\n\
          \                },\n            ],\n            \"host_labels\": [\n  \
          \              {\n                    \"key\": \"os\",\n               \
          \     \"operator\": \"is\",\n                    \"value\": \"windows\"\
          ,\n                },\n            ],\n            \"service_labels\": [\n\
          \                {\n                    \"key\": \"os\",\n             \
          \       \"operator\": \"is\",\n                    \"value\": \"windows\"\
          ,\n                },\n            ],\n            \"host_label_groups\"\
          : [\n                {\n                    \"operator\": \"and\",\n   \
          \                 \"label_group\": [\n                        {\n      \
          \                      \"operator\": \"and\",\n                        \
          \    \"label\": \"os:windows\",\n                        },\n          \
          \          ],\n                },\n            ],\n            \"service_label_groups\"\
          : [\n                {\n                    \"operator\": \"and\",\n   \
          \                 \"label_group\": [\n                        {\n      \
          \                      \"operator\": \"and\",\n                        \
          \    \"label\": \"os:windows\",\n                        },\n          \
          \          ],\n                },\n            ],\n            \"service_description\"\
          : {\n                \"match_on\": [\"foo1\", \"bar2\"],\n             \
          \   \"operator\": \"none_of\",\n            },\n        },\n        \"ruleset\"\
          : \"host_label_rules\",\n        \"folder\": \"~hosts~linux\",\n    },\n\
          \    allow_redirects=True,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          elif resp.status_code == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/rule/collections/all\",\n    method=\"POST\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"properties\": {\n            \"disabled\": False,\n        },\n \
          \       \"value_raw\": \"{'cmk/os_family': 'linux'}\",\n        \"conditions\"\
          : {\n            \"host_name\": {\n                \"match_on\": [\"host1\"\
          , \"host2\"],\n                \"operator\": \"one_of\",\n            },\n\
          \            \"host_tags\": [\n                {\n                    \"\
          key\": \"criticality\",\n                    \"operator\": \"is\",\n   \
          \                 \"value\": \"prod\",\n                },\n           \
          \ ],\n            \"host_labels\": [\n                {\n              \
          \      \"key\": \"os\",\n                    \"operator\": \"is\",\n   \
          \                 \"value\": \"windows\",\n                },\n        \
          \    ],\n            \"service_labels\": [\n                {\n        \
          \            \"key\": \"os\",\n                    \"operator\": \"is\"\
          ,\n                    \"value\": \"windows\",\n                },\n   \
          \         ],\n            \"host_label_groups\": [\n                {\n\
          \                    \"operator\": \"and\",\n                    \"label_group\"\
          : [\n                        {\n                            \"operator\"\
          : \"and\",\n                            \"label\": \"os:windows\",\n   \
          \                     },\n                    ],\n                },\n \
          \           ],\n            \"service_label_groups\": [\n              \
          \  {\n                    \"operator\": \"and\",\n                    \"\
          label_group\": [\n                        {\n                          \
          \  \"operator\": \"and\",\n                            \"label\": \"os:windows\"\
          ,\n                        },\n                    ],\n                },\n\
          \            ],\n            \"service_description\": {\n              \
          \  \"match_on\": [\"foo1\", \"bar2\"],\n                \"operator\": \"\
          none_of\",\n            },\n        },\n        \"ruleset\": \"host_label_rules\"\
          ,\n        \"folder\": \"~hosts~linux\",\n    }).encode('utf-8'),\n)\n#\
          \ Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/rule/collections/all\" \\\n\
          \    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\"\
          \ \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    properties[disabled]:=false\\\n    value_raw='{'cmk/os_family':\
          \ 'linux'}'\\\n    conditions[host_name][match_on]:='[\"host1\", \"host2\"\
          ]'\\\n    conditions[host_name][operator]='one_of'\\\n    conditions[host_tags]:='[{\"\
          key\": \"criticality\", \"operator\": \"is\", \"value\": \"prod\"}]'\\\n\
          \    conditions[host_labels]:='[{\"key\": \"os\", \"operator\": \"is\",\
          \ \"value\": \"windows\"}]'\\\n    conditions[service_labels]:='[{\"key\"\
          : \"os\", \"operator\": \"is\", \"value\": \"windows\"}]'\\\n    conditions[host_label_groups]:='[{\"\
          operator\": \"and\", \"label_group\": [{\"operator\": \"and\", \"label\"\
          : \"os:windows\"}]}]'\\\n    conditions[service_label_groups]:='[{\"operator\"\
          : \"and\", \"label_group\": [{\"operator\": \"and\", \"label\": \"os:windows\"\
          }]}]'\\\n    conditions[service_description][match_on]:='[\"foo1\", \"bar2\"\
          ]'\\\n    conditions[service_description][operator]='none_of'\\\n    ruleset='host_label_rules'\\\
          \n    folder='~hosts~linux'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"conditions\": {\n            \"host_label_groups\": [\n   \
          \           {\n                \"label_group\": [\n                  {\n\
          \                    \"label\": \"os:windows\",\n                    \"\
          operator\": \"and\"\n                  }\n                ],\n         \
          \       \"operator\": \"and\"\n              }\n            ],\n       \
          \     \"host_labels\": [\n              {\n                \"key\": \"os\"\
          ,\n                \"operator\": \"is\",\n                \"value\": \"\
          windows\"\n              }\n            ],\n            \"host_name\": {\n\
          \              \"match_on\": [\n                \"host1\",\n           \
          \     \"host2\"\n              ],\n              \"operator\": \"one_of\"\
          \n            },\n            \"host_tags\": [\n              {\n      \
          \          \"key\": \"criticality\",\n                \"operator\": \"is\"\
          ,\n                \"value\": \"prod\"\n              }\n            ],\n\
          \            \"service_description\": {\n              \"match_on\": [\n\
          \                \"foo1\",\n                \"bar2\"\n              ],\n\
          \              \"operator\": \"none_of\"\n            },\n            \"\
          service_label_groups\": [\n              {\n                \"label_group\"\
          : [\n                  {\n                    \"label\": \"os:windows\"\
          ,\n                    \"operator\": \"and\"\n                  }\n    \
          \            ],\n                \"operator\": \"and\"\n              }\n\
          \            ],\n            \"service_labels\": [\n              {\n  \
          \              \"key\": \"os\",\n                \"operator\": \"is\",\n\
          \                \"value\": \"windows\"\n              }\n            ]\n\
          \          },\n          \"folder\": \"~hosts~linux\",\n          \"properties\"\
          : {\n            \"disabled\": false\n          },\n          \"ruleset\"\
          : \"host_label_rules\",\n          \"value_raw\": \"{'\\''cmk/os_family'\\\
          '': '\\''linux'\\''}\"\n        }' \\\n  \"$API_URL/domain-types/rule/collections/all\""
  /objects/rule/{rule_id}:
    get:
      tags:
      - Rules
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Rulesets (`wato.rulesets`): Access to the module for managing\
        \ Checkmk rules. Please note that a user can only manage rules in folders\
        \ he has permissions to.\n   * Optionally:\n     * Write access to all hosts\
        \ and folders (`wato.all_folders`): Without this permission, operations on\
        \ folders can only be done by users that are members of one of the folders\
        \ contact groups. This permission grants full access to all folders and hosts.\n"
      summary: Show a rule
      operationId: cmk.gui.openapi.endpoints.rule.show_rule
      parameters:
      - in: path
        name: rule_id
        description: The ID of the rule.
        schema:
          type: string
          example: 0a168697-14a2-48d0-9c3c-ca65569a39e2
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\",\n\
          \    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\""
    put:
      tags:
      - Rules
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Rulesets (`wato.rulesets`): Access\
        \ to the module for managing Checkmk rules. Please note that a user can only\
        \ manage rules in folders he has permissions to.\n   * Optionally:\n     *\
        \ Write access to all hosts and folders (`wato.all_folders`): Without this\
        \ permission, operations on folders can only be done by users that are members\
        \ of one of the folders contact groups. This permission grants full access\
        \ to all folders and hosts.\n"
      summary: Modify a rule
      operationId: cmk.gui.openapi.endpoints.rule.edit_rule
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id069
          type: string
        example: application/json
      - in: path
        name: rule_id
        description: The ID of the rule.
        schema:
          type: string
          example: 0a168697-14a2-48d0-9c3c-ca65569a39e2
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id069
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRuleObject'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"properties\"\
          : {\n            \"disabled\": False,\n        },\n        \"value_raw\"\
          : \"{'cmk/os_family': 'linux'}\",\n        \"conditions\": {\n         \
          \   \"host_name\": {\n                \"match_on\": [\"host1\", \"host2\"\
          ],\n                \"operator\": \"one_of\",\n            },\n        \
          \    \"host_tags\": [\n                {\n                    \"key\": \"\
          criticality\",\n                    \"operator\": \"is\",\n            \
          \        \"value\": \"prod\",\n                },\n            ],\n    \
          \        \"host_labels\": [\n                {\n                    \"key\"\
          : \"os\",\n                    \"operator\": \"is\",\n                 \
          \   \"value\": \"windows\",\n                },\n            ],\n      \
          \      \"service_labels\": [\n                {\n                    \"\
          key\": \"os\",\n                    \"operator\": \"is\",\n            \
          \        \"value\": \"windows\",\n                },\n            ],\n \
          \           \"host_label_groups\": [\n                {\n              \
          \      \"operator\": \"and\",\n                    \"label_group\": [\n\
          \                        {\n                            \"operator\": \"\
          and\",\n                            \"label\": \"os:windows\",\n       \
          \                 },\n                    ],\n                },\n     \
          \       ],\n            \"service_label_groups\": [\n                {\n\
          \                    \"operator\": \"and\",\n                    \"label_group\"\
          : [\n                        {\n                            \"operator\"\
          : \"and\",\n                            \"label\": \"os:windows\",\n   \
          \                     },\n                    ],\n                },\n \
          \           ],\n            \"service_description\": {\n               \
          \ \"match_on\": [\"foo1\", \"bar2\"],\n                \"operator\": \"\
          none_of\",\n            },\n        },\n    },\n)\nif resp.status_code ==\
          \ 200:\n    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\",\n\
          \    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required) The\
          \ value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    data=json.dumps({\n    \
          \    \"properties\": {\n            \"disabled\": False,\n        },\n \
          \       \"value_raw\": \"{'cmk/os_family': 'linux'}\",\n        \"conditions\"\
          : {\n            \"host_name\": {\n                \"match_on\": [\"host1\"\
          , \"host2\"],\n                \"operator\": \"one_of\",\n            },\n\
          \            \"host_tags\": [\n                {\n                    \"\
          key\": \"criticality\",\n                    \"operator\": \"is\",\n   \
          \                 \"value\": \"prod\",\n                },\n           \
          \ ],\n            \"host_labels\": [\n                {\n              \
          \      \"key\": \"os\",\n                    \"operator\": \"is\",\n   \
          \                 \"value\": \"windows\",\n                },\n        \
          \    ],\n            \"service_labels\": [\n                {\n        \
          \            \"key\": \"os\",\n                    \"operator\": \"is\"\
          ,\n                    \"value\": \"windows\",\n                },\n   \
          \         ],\n            \"host_label_groups\": [\n                {\n\
          \                    \"operator\": \"and\",\n                    \"label_group\"\
          : [\n                        {\n                            \"operator\"\
          : \"and\",\n                            \"label\": \"os:windows\",\n   \
          \                     },\n                    ],\n                },\n \
          \           ],\n            \"service_label_groups\": [\n              \
          \  {\n                    \"operator\": \"and\",\n                    \"\
          label_group\": [\n                        {\n                          \
          \  \"operator\": \"and\",\n                            \"label\": \"os:windows\"\
          ,\n                        },\n                    ],\n                },\n\
          \            ],\n            \"service_description\": {\n              \
          \  \"match_on\": [\"foo1\", \"bar2\"],\n                \"operator\": \"\
          none_of\",\n            },\n        },\n    }).encode('utf-8'),\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n\
          \    'Content-Type:application/json' \\\n    properties[disabled]:=false\\\
          \n    value_raw='{'cmk/os_family': 'linux'}'\\\n    conditions[host_name][match_on]:='[\"\
          host1\", \"host2\"]'\\\n    conditions[host_name][operator]='one_of'\\\n\
          \    conditions[host_tags]:='[{\"key\": \"criticality\", \"operator\": \"\
          is\", \"value\": \"prod\"}]'\\\n    conditions[host_labels]:='[{\"key\"\
          : \"os\", \"operator\": \"is\", \"value\": \"windows\"}]'\\\n    conditions[service_labels]:='[{\"\
          key\": \"os\", \"operator\": \"is\", \"value\": \"windows\"}]'\\\n    conditions[host_label_groups]:='[{\"\
          operator\": \"and\", \"label_group\": [{\"operator\": \"and\", \"label\"\
          : \"os:windows\"}]}]'\\\n    conditions[service_label_groups]:='[{\"operator\"\
          : \"and\", \"label_group\": [{\"operator\": \"and\", \"label\": \"os:windows\"\
          }]}]'\\\n    conditions[service_description][match_on]:='[\"foo1\", \"bar2\"\
          ]'\\\n    conditions[service_description][operator]='none_of'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"conditions\"\
          : {\n            \"host_label_groups\": [\n              {\n           \
          \     \"label_group\": [\n                  {\n                    \"label\"\
          : \"os:windows\",\n                    \"operator\": \"and\"\n         \
          \         }\n                ],\n                \"operator\": \"and\"\n\
          \              }\n            ],\n            \"host_labels\": [\n     \
          \         {\n                \"key\": \"os\",\n                \"operator\"\
          : \"is\",\n                \"value\": \"windows\"\n              }\n   \
          \         ],\n            \"host_name\": {\n              \"match_on\":\
          \ [\n                \"host1\",\n                \"host2\"\n           \
          \   ],\n              \"operator\": \"one_of\"\n            },\n       \
          \     \"host_tags\": [\n              {\n                \"key\": \"criticality\"\
          ,\n                \"operator\": \"is\",\n                \"value\": \"\
          prod\"\n              }\n            ],\n            \"service_description\"\
          : {\n              \"match_on\": [\n                \"foo1\",\n        \
          \        \"bar2\"\n              ],\n              \"operator\": \"none_of\"\
          \n            },\n            \"service_label_groups\": [\n            \
          \  {\n                \"label_group\": [\n                  {\n        \
          \            \"label\": \"os:windows\",\n                    \"operator\"\
          : \"and\"\n                  }\n                ],\n                \"operator\"\
          : \"and\"\n              }\n            ],\n            \"service_labels\"\
          : [\n              {\n                \"key\": \"os\",\n               \
          \ \"operator\": \"is\",\n                \"value\": \"windows\"\n      \
          \        }\n            ]\n          },\n          \"properties\": {\n \
          \           \"disabled\": false\n          },\n          \"value_raw\":\
          \ \"{'\\''cmk/os_family'\\'': '\\''linux'\\''}\"\n        }' \\\n  \"$API_URL/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\""
    delete:
      tags:
      - Rules
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Rulesets (`wato.rulesets`): Access\
        \ to the module for managing Checkmk rules. Please note that a user can only\
        \ manage rules in folders he has permissions to.\n   * Optionally:\n     *\
        \ Write access to all hosts and folders (`wato.all_folders`): Without this\
        \ permission, operations on folders can only be done by users that are members\
        \ of one of the folders contact groups. This permission grants full access\
        \ to all folders and hosts.\n"
      summary: Delete a rule
      operationId: cmk.gui.openapi.endpoints.rule.delete_rule
      parameters:
      - in: path
        name: rule_id
        description: The ID of the rule.
        schema:
          type: string
          example: 0a168697-14a2-48d0-9c3c-ca65569a39e2
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The rule to be deleted was not found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404CustomError4'
        '400':
          description: 'Bad Request: The rule is locked and cannot be deleted.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400CustomError'
        '204':
          description: 'No Content: Rule was deleted successfully.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\",\n\
          \    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2\""
  /objects/rule/{rule_id}/actions/move/invoke:
    post:
      tags:
      - Rules
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Rulesets (`wato.rulesets`): Access\
        \ to the module for managing Checkmk rules. Please note that a user can only\
        \ manage rules in folders he has permissions to.\n   * Optionally:\n     *\
        \ Write access to all hosts and folders (`wato.all_folders`): Without this\
        \ permission, operations on folders can only be done by users that are members\
        \ of one of the folders contact groups. This permission grants full access\
        \ to all folders and hosts.\n"
      summary: Move a rule to a specific location
      operationId: cmk.gui.openapi.endpoints.rule.move_rule_to
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id070
          type: string
        example: application/json
      - in: path
        name: rule_id
        description: The ID of the rule.
        schema:
          type: string
          example: 0a168697-14a2-48d0-9c3c-ca65569a39e2
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id070
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveRuleTo'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2/actions/move/invoke\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    # This schema has multiple\
          \ variations. Please refer to\n    # the 'Payload' section for details.\n\
          \    json={\n        \"position\": \"top_of_folder\",\n        \"folder\"\
          : \"/\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2/actions/move/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required) The\
          \ value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    # This schema has multiple\
          \ variations. Please refer to\n    # the 'Payload' section for details.\n\
          \    data=json.dumps({\n        \"position\": \"top_of_folder\",\n     \
          \   \"folder\": \"/\",\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\n# This schema has multiple variations. Please refer to the\n#\
          \ 'Payload' section for details.\nhttp POST \"$API_URL/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2/actions/move/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'If-Match:\"\
          a20ceacf346041dc\"' \\\n    'Content-Type:application/json' \\\n    position='top_of_folder'\\\
          \n    folder='/'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\n# This schema has multiple variations.\
          \ Please refer to the\n# 'Payload' section for details.\ncurl \\\n  --request\
          \ POST \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header\
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept:\
          \ application/json\" \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\
          \" \\\n  --header \"Content-Type: application/json\" \\\n  --data '{\n \
          \         \"folder\": \"/\",\n          \"position\": \"top_of_folder\"\n\
          \        }' \\\n  \"$API_URL/objects/rule/0a168697-14a2-48d0-9c3c-ca65569a39e2/actions/move/invoke\""
  /domain-types/ruleset/collections/all:
    get:
      tags:
      - Rulesets
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Rulesets (`wato.rulesets`): Access to the module for managing\
        \ Checkmk rules. Please note that a user can only manage rules in folders\
        \ he has permissions to.\n   * Optionally:\n     * Write access to all passwords\
        \ (`wato.edit_all_passwords`): Without this permission, users can only edit\
        \ passwords which are shared with a contact group they are member of. This\
        \ permission grants full access to all passwords.\n"
      summary: Search rule sets
      operationId: cmk.gui.openapi.endpoints.ruleset.list_rulesets
      parameters:
      - in: query
        name: fulltext
        description: Search all keys (like `name`, `title`, `help`, etc.) for this
          text. Regex allowed.
        schema:
          type: string
          example: name
        required: false
      - in: query
        name: folder
        description: 'The folder in which to search for rules.


          Path delimiters can be either `~`, `/` or `\`. Please use the one most appropriate
          for your quoting/escaping needs. A good default choice is `~`.'
        schema:
          type: string
          example: '~'
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        required: false
      - in: query
        name: deprecated
        description: Only show deprecated rulesets. Defaults to False.
        schema:
          type: boolean
          default: false
          example: false
        required: false
      - in: query
        name: used
        description: Only show used rulesets. Defaults to True.
        schema:
          type: boolean
          default: true
          example: true
        required: false
      - in: query
        name: name
        description: A regex of the name.
        schema:
          type: string
          example: Some regex
        required: false
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesetCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/ruleset/collections/all\"\
          ,\n    params={  # goes into query string\n        \"fulltext\": 'name',\
          \  # Search all keys (like `name`, `title`, `help`, etc.\n        \"folder\"\
          : '~',  # The folder in which to search for rules.\n        \"deprecated\"\
          : False,  # Only show deprecated rulesets.\n        \"used\": True,  # Only\
          \ show used rulesets.\n        \"name\": 'Some regex',  # A regex of the\
          \ name.\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"fulltext\": 'name',  # Search all keys\
          \ (like `name`, `title`, `help`, etc.\n    \"folder\": '~',  # The folder\
          \ in which to search for rules.\n    \"deprecated\": False,  # Only show\
          \ deprecated rulesets.\n    \"used\": True,  # Only show used rulesets.\n\
          \    \"name\": 'Some regex',  # A regex of the name.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/ruleset/collections/all?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/ruleset/collections/all\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    fulltext=='name' \\\n    folder=='~' \\\n    used=='True'\
          \ \\\n    name=='Some regex' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'fulltext=name' \\\n  --data-urlencode 'folder=~'\
          \ \\\n  --data-urlencode 'used=True' \\\n  --data-urlencode 'name=Some regex'\
          \ \\\n  \"$API_URL/domain-types/ruleset/collections/all\""
  /objects/ruleset/{ruleset_name}:
    get:
      tags:
      - Rulesets
      description: "\n\nThis endpoint requires the following permissions: \n * Rulesets\
        \ (`wato.rulesets`): Access to the module for managing Checkmk rules. Please\
        \ note that a user can only manage rules in folders he has permissions to.\n"
      summary: Show a ruleset
      operationId: cmk.gui.openapi.endpoints.ruleset.show_ruleset
      parameters:
      - in: path
        name: ruleset_name
        description: The name of the ruleset.
        schema:
          type: string
          example: host_groups
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesetObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/ruleset/host_groups\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/ruleset/host_groups\",\n    method=\"GET\",\n\
          \    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/ruleset/host_groups\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/ruleset/host_groups\""
  /domain-types/saml_connection/collections/all:
    get:
      tags:
      - SAML connections
      description: "\n\nThis endpoint requires the following permissions: \n * Global\
        \ settings (`wato.global`): Access to the module <i>Global settings</i>\n"
      summary: Show all SAML connections
      operationId: cmk.gui.cee.saml2._openapi.show_saml_connections
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLConnectionResponseCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/saml_connection/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/saml_connection/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/saml_connection/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/saml_connection/collections/all\""
    post:
      tags:
      - SAML connections
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Global settings (`wato.global`):\
        \ Access to the module <i>Global settings</i>\n"
      summary: Create a SAML connection
      operationId: cmk.gui.cee.saml2._openapi.create_saml_connection
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id071
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLConnectionResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id071
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SAMLConnectionCreateRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/saml_connection/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"general_properties\": {\n            \"id\"\
          : \"saml_1\",\n            \"name\": \"SAML Auth\",\n            \"description\"\
          : \"1st saml connection\",\n            \"comment\": \"test_comment\",\n\
          \            \"documentation_url\": \"https://docs.checkmk.com/latest/en/saml.html\"\
          ,\n            \"rule_activation\": \"activated\",\n        },\n       \
          \ \"connection_config\": {\n            \"checkmk_server_url\": \"https://localhost\"\
          ,\n            \"identity_provider_metadata\": {\n                \"type\"\
          : \"url\",\n                \"url\": \"https://localhost/saml\",\n     \
          \       },\n            \"identity_provider_timeout\": {\n             \
          \   \"connect\": 12,\n                \"read\": 12,\n            },\n  \
          \      },\n        \"security\": {\n            \"signing_certificate\"\
          : {\n                \"type\": \"builtin\",\n            },\n          \
          \  \"decrypt_auth_certificate\": {\n                \"type\": \"builtin\"\
          ,\n            },\n        },\n        \"users\": {\n            \"id_attribute\"\
          : \"user_id\",\n            \"full_name_attribute\": \"\",\n           \
          \ \"email_attribute\": \"\",\n            \"contact_groups\": {\n      \
          \          \"type\": \"from_attribute_value\",\n                \"attribute\"\
          : \"contact_group_attribute\",\n            },\n            \"roles\": {\n\
          \                \"type\": \"map\",\n                \"attribute\": \"roles_attribute\"\
          ,\n                \"roles\": {\n                    \"user\": [\"value1\"\
          ],\n                    \"guest\": [\"value2\", \"value3\"],\n         \
          \       },\n            },\n        },\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/saml_connection/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    data=json.dumps({\n\
          \        \"general_properties\": {\n            \"id\": \"saml_1\",\n  \
          \          \"name\": \"SAML Auth\",\n            \"description\": \"1st\
          \ saml connection\",\n            \"comment\": \"test_comment\",\n     \
          \       \"documentation_url\": \"https://docs.checkmk.com/latest/en/saml.html\"\
          ,\n            \"rule_activation\": \"activated\",\n        },\n       \
          \ \"connection_config\": {\n            \"checkmk_server_url\": \"https://localhost\"\
          ,\n            \"identity_provider_metadata\": {\n                \"type\"\
          : \"url\",\n                \"url\": \"https://localhost/saml\",\n     \
          \       },\n            \"identity_provider_timeout\": {\n             \
          \   \"connect\": 12,\n                \"read\": 12,\n            },\n  \
          \      },\n        \"security\": {\n            \"signing_certificate\"\
          : {\n                \"type\": \"builtin\",\n            },\n          \
          \  \"decrypt_auth_certificate\": {\n                \"type\": \"builtin\"\
          ,\n            },\n        },\n        \"users\": {\n            \"id_attribute\"\
          : \"user_id\",\n            \"full_name_attribute\": \"\",\n           \
          \ \"email_attribute\": \"\",\n            \"contact_groups\": {\n      \
          \          \"type\": \"from_attribute_value\",\n                \"attribute\"\
          : \"contact_group_attribute\",\n            },\n            \"roles\": {\n\
          \                \"type\": \"map\",\n                \"attribute\": \"roles_attribute\"\
          ,\n                \"roles\": {\n                    \"user\": [\"value1\"\
          ],\n                    \"guest\": [\"value2\", \"value3\"],\n         \
          \       },\n            },\n        },\n    }).encode('utf-8'),\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/saml_connection/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    general_properties[id]='saml_1'\\\n    general_properties[name]='SAML\
          \ Auth'\\\n    general_properties[description]='1st saml connection'\\\n\
          \    general_properties[comment]='test_comment'\\\n    general_properties[documentation_url]='https://docs.checkmk.com/latest/en/saml.html'\\\
          \n    general_properties[rule_activation]='activated'\\\n    connection_config[checkmk_server_url]='https://localhost'\\\
          \n    connection_config[identity_provider_metadata][type]='url'\\\n    connection_config[identity_provider_metadata][url]='https://localhost/saml'\\\
          \n    connection_config[identity_provider_timeout][connect]:=12\\\n    connection_config[identity_provider_timeout][read]:=12\\\
          \n    security[signing_certificate][type]='builtin'\\\n    security[decrypt_auth_certificate][type]='builtin'\\\
          \n    users[id_attribute]='user_id'\\\n    users[full_name_attribute]=''\\\
          \n    users[email_attribute]=''\\\n    users[contact_groups][type]='from_attribute_value'\\\
          \n    users[contact_groups][attribute]='contact_group_attribute'\\\n   \
          \ users[roles][type]='map'\\\n    users[roles][attribute]='roles_attribute'\\\
          \n    users[roles][roles][user]:='[\"value1\"]'\\\n    users[roles][roles][guest]:='[\"\
          value2\", \"value3\"]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"connection_config\": {\n            \"checkmk_server_url\"\
          : \"https://localhost\",\n            \"identity_provider_metadata\": {\n\
          \              \"type\": \"url\",\n              \"url\": \"https://localhost/saml\"\
          \n            },\n            \"identity_provider_timeout\": {\n       \
          \       \"connect\": 12,\n              \"read\": 12\n            }\n  \
          \        },\n          \"general_properties\": {\n            \"comment\"\
          : \"test_comment\",\n            \"description\": \"1st saml connection\"\
          ,\n            \"documentation_url\": \"https://docs.checkmk.com/latest/en/saml.html\"\
          ,\n            \"id\": \"saml_1\",\n            \"name\": \"SAML Auth\"\
          ,\n            \"rule_activation\": \"activated\"\n          },\n      \
          \    \"security\": {\n            \"decrypt_auth_certificate\": {\n    \
          \          \"type\": \"builtin\"\n            },\n            \"signing_certificate\"\
          : {\n              \"type\": \"builtin\"\n            }\n          },\n\
          \          \"users\": {\n            \"contact_groups\": {\n           \
          \   \"attribute\": \"contact_group_attribute\",\n              \"type\"\
          : \"from_attribute_value\"\n            },\n            \"email_attribute\"\
          : \"\",\n            \"full_name_attribute\": \"\",\n            \"id_attribute\"\
          : \"user_id\",\n            \"roles\": {\n              \"attribute\": \"\
          roles_attribute\",\n              \"roles\": {\n                \"guest\"\
          : [\n                  \"value2\",\n                  \"value3\"\n     \
          \           ],\n                \"user\": [\n                  \"value1\"\
          \n                ]\n              },\n              \"type\": \"map\"\n\
          \            }\n          }\n        }' \\\n  \"$API_URL/domain-types/saml_connection/collections/all\""
  /objects/saml_connection/{saml_connection_id}:
    get:
      tags:
      - SAML connections
      description: "\n\nThis endpoint requires the following permissions: \n * Global\
        \ settings (`wato.global`): Access to the module <i>Global settings</i>\n"
      summary: Show a SAML connection
      operationId: cmk.gui.cee.saml2._openapi.show_saml_connection
      parameters:
      - in: path
        name: saml_connection_id
        description: The SAML connection ID.
        schema:
          type: string
          example: saml_connection_1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SAMLConnectionResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/saml_connection/saml_connection_1\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/saml_connection/saml_connection_1\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/saml_connection/saml_connection_1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/saml_connection/saml_connection_1\""
    delete:
      tags:
      - SAML connections
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Global settings (`wato.global`):\
        \ Access to the module <i>Global settings</i>\n"
      summary: Delete a SAML connection
      operationId: cmk.gui.cee.saml2._openapi.delete_saml_connection
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - in: path
        name: saml_connection_id
        description: The SAML connection ID.
        schema:
          type: string
          example: saml_connection_1
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/saml_connection/saml_connection_1\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n    },\n)\nif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/saml_connection/saml_connection_1\",\n    method=\"\
          DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"If-Match\": '\"a20ceacf346041dc\"',  # (required) The value of\
          \ the, to be modified, object's ETag header.\n    },\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/saml_connection/saml_connection_1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'If-Match:\"a20ceacf346041dc\"' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  \"$API_URL/objects/saml_connection/saml_connection_1\""
  /domain-types/sla/actions/compute/invoke:
    post:
      tags:
      - Service Level Agreements
      description: ''
      summary: Compute the SLA data
      operationId: cmk.gui.cee.sla._openapi.compute_sla_rows
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id072
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SLAComputedResultCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id072
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SLAComputeRequest'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/sla/actions/compute/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"sla_compute_targets\": [\n            {\n\
          \                \"sla_ids\": [\"sla_configuration_1\"],\n             \
          \   \"time_ranges\": [\n                    {\n                        \"\
          range_type\": \"pre_defined\",\n                        \"range\": \"today\"\
          ,\n                    },\n                ],\n                \"services\"\
          : [\n                    {\n                        \"host_name\": \"heute\"\
          ,\n                        \"service_description\": \"CPU load\",\n    \
          \                },\n                ],\n            },\n        ],\n  \
          \  },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          elif resp.status_code == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/sla/actions/compute/invoke\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    data=json.dumps({\n\
          \        \"sla_compute_targets\": [\n            {\n                \"sla_ids\"\
          : [\"sla_configuration_1\"],\n                \"time_ranges\": [\n     \
          \               {\n                        \"range_type\": \"pre_defined\"\
          ,\n                        \"range\": \"today\",\n                    },\n\
          \                ],\n                \"services\": [\n                 \
          \   {\n                        \"host_name\": \"heute\",\n             \
          \           \"service_description\": \"CPU load\",\n                   \
          \ },\n                ],\n            },\n        ],\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/sla/actions/compute/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    sla_compute_targets:='[{\"sla_ids\": [\"sla_configuration_1\"\
          ], \"time_ranges\": [{\"range_type\": \"pre_defined\", \"range\": \"today\"\
          }], \"services\": [{\"host_name\": \"heute\", \"service_description\": \"\
          CPU load\"}]}]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"sla_compute_targets\": [\n            {\n              \"services\"\
          : [\n                {\n                  \"host_name\": \"heute\",\n  \
          \                \"service_description\": \"CPU load\"\n               \
          \ }\n              ],\n              \"sla_ids\": [\n                \"\
          sla_configuration_1\"\n              ],\n              \"time_ranges\":\
          \ [\n                {\n                  \"range\": \"today\",\n      \
          \            \"range_type\": \"pre_defined\"\n                }\n      \
          \        ]\n            }\n          ]\n        }' \\\n  \"$API_URL/domain-types/sla/actions/compute/invoke\""
  /objects/service_discovery/{host_name}:
    get:
      tags:
      - Service discovery
      description: ''
      summary: Show the current service discovery result
      operationId: cmk.gui.openapi.endpoints.service_discovery.show_service_discovery_result
      parameters:
      - in: path
        name: host_name
        description: The host of the service discovery result
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDiscoveryResult'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/service_discovery/example.com\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/service_discovery/example.com\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/service_discovery/example.com\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/service_discovery/example.com\""
  /objects/service_discovery_run/{host_name}:
    get:
      tags:
      - Service discovery
      description: ''
      summary: Show the last service discovery background job on a host
      operationId: cmk.gui.openapi.endpoints.service_discovery.show_service_discovery_run
      parameters:
      - in: path
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDiscoveryRun'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/service_discovery_run/example.com\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/service_discovery_run/example.com\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/service_discovery_run/example.com\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/service_discovery_run/example.com\""
  /objects/service_discovery_run/{host_name}/actions/wait-for-completion/invoke:
    get:
      tags:
      - Service discovery
      description: This endpoint will periodically redirect on itself to prevent timeouts.
      summary: Wait for service discovery completion
      operationId: cmk.gui.openapi.endpoints.service_discovery.service_discovery_run_wait_for_completion
      parameters:
      - in: path
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '302':
          description: 'Found: The service discovery is still running. Redirecting
            to the ''Wait for completion'' endpoint.'
          content: {}
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: There is no running service discovery'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404CustomError5'
        '204':
          description: 'No Content: The service discovery has been completed.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.get(\n    f\"{API_URL}/objects/service_discovery_run/example.com/actions/wait-for-completion/invoke\"\
          ,\n    allow_redirects=True,\n)\nif resp.status_code == 204:\n    print('Done')\n\
          elif resp.status_code == 302:\n    print('Redirected to', resp.headers['location'])\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/service_discovery_run/example.com/actions/wait-for-completion/invoke\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 204:\n    print('Done')\n\
          elif resp.status == 302:\n    print('Redirected to', resp.headers['location'])"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/service_discovery_run/example.com/actions/wait-for-completion/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/service_discovery_run/example.com/actions/wait-for-completion/invoke\""
  /objects/host/{host_name}/actions/update_discovery_phase/invoke:
    put:
      tags:
      - Service discovery
      description: "\n\nThis endpoint requires the following permissions: \n * Optionally:\n\
        \   * Any of:\n     * Service discovery: Move to monitored services (`wato.service_discovery_to_monitored`):\
        \ Service discovery: Move to monitored services\n     * Service discovery:\
        \ Disabled services (`wato.service_discovery_to_ignored`): Service discovery:\
        \ Disabled services\n     * Service discovery: Move to undecided services\
        \ (`wato.service_discovery_to_undecided`): Service discovery: Move to undecided\
        \ services\n     * Service discovery: Remove services (`wato.service_discovery_to_removed`):\
        \ Service discovery: Remove services\n"
      summary: Update the phase of a service
      operationId: cmk.gui.openapi.endpoints.service_discovery.update_service_phase
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      - in: path
        name: host_name
        description: The host of the service which shall be updated.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: Host could not be found'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404CustomError6'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDiscoveryPhase'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host/example.com/actions/update_discovery_phase/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"check_type\": \"df\",\n        \"service_item\"\
          : \"/home\",\n        \"target_phase\": \"monitored\",\n    },\n)\nif resp.status_code\
          \ == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host/example.com/actions/update_discovery_phase/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"check_type\": \"df\",\n      \
          \  \"service_item\": \"/home\",\n        \"target_phase\": \"monitored\"\
          ,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 204:\n\
          \    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/host/example.com/actions/update_discovery_phase/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' \\\n\
          \    check_type='df'\\\n    service_item='/home'\\\n    target_phase='monitored'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"check_type\": \"df\",\n          \"service_item\": \"/home\"\
          ,\n          \"target_phase\": \"monitored\"\n        }' \\\n  \"$API_URL/objects/host/example.com/actions/update_discovery_phase/invoke\""
  /domain-types/discovery_run/actions/bulk-discovery-start/invoke:
    post:
      tags:
      - Service discovery
      description: 'This endpoint will start a bulk discovery background job. Only
        one bulk discovery job can run

        at a time. An active bulk discovery job will block other bulk discovery jobs
        from running until

        the active job is finished.'
      summary: Start a bulk discovery job
      operationId: cmk.gui.openapi.endpoints.service_discovery.execute_bulk_discovery
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '303':
          description: 'See Other: The bulk discovery job has been started in the
            background.Redirecting to the ''Get background job status snapshot'' endpoint.'
          content: {}
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDiscovery'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/discovery_run/actions/bulk-discovery-start/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"hostnames\": [\"example\", \"sample\"],\n\
          \        \"options\": {\n            \"monitor_undecided_services\": True,\n\
          \            \"remove_vanished_services\": True,\n            \"update_service_labels\"\
          : True,\n            \"update_service_parameters\": True,\n            \"\
          update_host_labels\": True,\n        },\n        \"do_full_scan\": True,\n\
          \        \"bulk_size\": 10,\n        \"ignore_errors\": True,\n    },\n\
          \    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif resp.status_code\
          \ == 204:\n    print('Done')\nelif resp.status_code == 303:\n    print('Redirected\
          \ to', resp.headers['location'])\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/discovery_run/actions/bulk-discovery-start/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"hostnames\": [\"example\", \"\
          sample\"],\n        \"options\": {\n            \"monitor_undecided_services\"\
          : True,\n            \"remove_vanished_services\": True,\n            \"\
          update_service_labels\": True,\n            \"update_service_parameters\"\
          : True,\n            \"update_host_labels\": True,\n        },\n       \
          \ \"do_full_scan\": True,\n        \"bulk_size\": 10,\n        \"ignore_errors\"\
          : True,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 201:\nelif resp.status == 204:\n    print('Done')\nelif resp.status\
          \ == 303:\n    print('Redirected to', resp.headers['location'])"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/discovery_run/actions/bulk-discovery-start/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    hostnames:='[\"example\", \"sample\"]'\\\n    options[monitor_undecided_services]:=true\\\
          \n    options[remove_vanished_services]:=true\\\n    options[update_service_labels]:=true\\\
          \n    options[update_service_parameters]:=true\\\n    options[update_host_labels]:=true\\\
          \n    do_full_scan:=true\\\n    bulk_size:=10\\\n    ignore_errors:=true"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"bulk_size\": 10,\n          \"do_full_scan\": true,\n     \
          \     \"hostnames\": [\n            \"example\",\n            \"sample\"\
          \n          ],\n          \"ignore_errors\": true,\n          \"options\"\
          : {\n            \"monitor_undecided_services\": true,\n            \"remove_vanished_services\"\
          : true,\n            \"update_host_labels\": true,\n            \"update_service_labels\"\
          : true,\n            \"update_service_parameters\": true\n          }\n\
          \        }' \\\n  \"$API_URL/domain-types/discovery_run/actions/bulk-discovery-start/invoke\""
  /domain-types/service_discovery_run/actions/start/invoke:
    post:
      tags:
      - Service discovery
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Optionally:\n     * Service discovery:\
        \ Move to undecided services (`wato.service_discovery_to_undecided`): Service\
        \ discovery: Move to undecided services\n   * Optionally:\n     * Service\
        \ discovery: Move to monitored services (`wato.service_discovery_to_monitored`):\
        \ Service discovery: Move to monitored services\n   * Optionally:\n     *\
        \ Service discovery: Disabled services (`wato.service_discovery_to_ignored`):\
        \ Service discovery: Disabled services\n   * Optionally:\n     * Service discovery:\
        \ Remove services (`wato.service_discovery_to_removed`): Service discovery:\
        \ Remove services\n   * Optionally:\n     * Manage services (`wato.services`):\
        \ Do inventory and service configuration on existing hosts.\n"
      summary: Execute a service discovery on a host
      operationId: cmk.gui.openapi.endpoints.service_discovery.execute_service_discovery
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id073
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '303':
          description: 'See Other: The service discovery background job has been initialized.
            Redirecting to the ''Wait for service discovery completion'' endpoint.'
          content: {}
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '409':
          description: 'Conflict: A service discovery background job is currently
            running'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409CustomError2'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id073
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoverServices'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/service_discovery_run/actions/start/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"host_name\": \"example.com\",\n        \"\
          mode\": \"refresh\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          elif resp.status_code == 303:\n    print('Redirected to', resp.headers['location'])\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service_discovery_run/actions/start/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"host_name\": \"example.com\",\n\
          \        \"mode\": \"refresh\",\n    }).encode('utf-8'),\n)\n# Will raise\
          \ an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:\nelif resp.status == 303:\n    print('Redirected\
          \ to', resp.headers['location'])"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/service_discovery_run/actions/start/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    host_name='example.com'\\\n    mode='refresh'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"host_name\": \"example.com\",\n          \"mode\": \"refresh\"\
          \n        }' \\\n  \"$API_URL/domain-types/service_discovery_run/actions/start/invoke\""
  /domain-types/service_group_config/collections/all:
    get:
      tags:
      - Service groups
      description: "\n\nThis endpoint requires the following permissions: \n * Host\
        \ & service groups (`wato.groups`): Access to the modules for managing host\
        \ and service groups.\n"
      summary: Show all service groups
      operationId: cmk.gui.openapi.endpoints.service_group_config.list_groups
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGroupCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/service_group_config/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service_group_config/collections/all\",\n\
          \    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/service_group_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/service_group_config/collections/all\""
    post:
      tags:
      - Service groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Host & service groups (`wato.groups`):\
        \ Access to the modules for managing host and service groups.\n"
      summary: Create a service group
      operationId: cmk.gui.openapi.endpoints.service_group_config.create
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id074
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id074
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputServiceGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/service_group_config/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"customer\": \"provider\",\n        \"name\"\
          : \"windows\",\n        \"alias\": \"Environment Sensors\",\n    },\n  \
          \  allow_redirects=True,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          elif resp.status_code == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service_group_config/collections/all\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"customer\": \"provider\",\n  \
          \      \"name\": \"windows\",\n        \"alias\": \"Environment Sensors\"\
          ,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 200:\n\
          \    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status ==\
          \ 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/service_group_config/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    customer='provider'\\\n    name='windows'\\\n    alias='Environment\
          \ Sensors'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"alias\": \"Environment Sensors\",\n          \"customer\":\
          \ \"provider\",\n          \"name\": \"windows\"\n        }' \\\n  \"$API_URL/domain-types/service_group_config/collections/all\""
  /objects/service_group_config/{name}:
    get:
      tags:
      - Service groups
      description: "\n\nThis endpoint requires the following permissions: \n * Host\
        \ & service groups (`wato.groups`): Access to the modules for managing host\
        \ and service groups.\n"
      summary: Show a service group
      operationId: cmk.gui.openapi.endpoints.service_group_config.show_group
      parameters:
      - in: path
        name: name
        description: The identifier name of the group.
        schema:
          type: string
          example: pathname
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGroup'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/service_group_config/pathname\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/service_group_config/pathname\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/service_group_config/pathname\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/service_group_config/pathname\""
    put:
      tags:
      - Service groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Host & service groups (`wato.groups`):\
        \ Access to the modules for managing host and service groups.\n"
      summary: Update a service group
      operationId: cmk.gui.openapi.endpoints.service_group_config.update
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id075
          type: string
        example: application/json
      - in: path
        name: name
        description: The identifier name of the group.
        schema:
          type: string
          example: pathname
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGroup'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id075
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceGroupAttributes'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/service_group_config/pathname\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"alias\"\
          : \"Example Group\",\n        \"customer\": \"provider\",\n    },\n)\nif\
          \ resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n    raise\
          \ RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/service_group_config/pathname\",\n    method=\"\
          PUT\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n        \"Content-Type\": 'application/json', \
          \ # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    data=json.dumps({\n        \"alias\": \"Example Group\"\
          ,\n        \"customer\": \"provider\",\n    }).encode('utf-8'),\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/service_group_config/pathname\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n    'Content-Type:application/json'\
          \ \\\n    alias='Example Group'\\\n    customer='provider'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"alias\": \"\
          Example Group\",\n          \"customer\": \"provider\"\n        }' \\\n\
          \  \"$API_URL/objects/service_group_config/pathname\""
    delete:
      tags:
      - Service groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Host & service groups (`wato.groups`):\
        \ Access to the modules for managing host and service groups.\n"
      summary: Delete a service group
      operationId: cmk.gui.openapi.endpoints.service_group_config.delete
      parameters:
      - in: path
        name: name
        description: The identifier name of the group.
        schema:
          type: string
          example: pathname
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/service_group_config/pathname\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/service_group_config/pathname\",\n    method=\"\
          DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \   },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/service_group_config/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/service_group_config/pathname\""
  /domain-types/service_group_config/actions/bulk-update/invoke:
    put:
      tags:
      - Service groups
      description: "Please be aware that when doing bulk updates, it is not possible\
        \ to prevent the\n[Updating Values](\"lost update problem\"), which is normally\
        \ prevented by the ETag locking\nmechanism. Use at your own risk.This endpoint\
        \ requires the following permissions: \n * All of:\n   * Make changes, perform\
        \ actions (`wato.edit`): This permission is needed in order to make any changes\
        \ or perform any actions at all. Without this permission, the user is only\
        \ able to view data, and that only in modules he has explicit permissions\
        \ for.\n   * Host & service groups (`wato.groups`): Access to the modules\
        \ for managing host and service groups.\n"
      summary: Bulk update service groups
      operationId: cmk.gui.openapi.endpoints.service_group_config.bulk_update
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id076
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGroupCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id076
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateServiceGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/service_group_config/actions/bulk-update/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entries\": [\n            {\n           \
          \     \"name\": \"windows\",\n                \"attributes\": {\n      \
          \              \"alias\": \"Windows Servers\",\n                },\n   \
          \         },\n        ],\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service_group_config/actions/bulk-update/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entries\": [\n            {\n\
          \                \"name\": \"windows\",\n                \"attributes\"\
          : {\n                    \"alias\": \"Windows Servers\",\n             \
          \   },\n            },\n        ],\n    }).encode('utf-8'),\n)\n# Will raise\
          \ an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/domain-types/service_group_config/actions/bulk-update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' \\\n\
          \    entries:='[{\"name\": \"windows\", \"attributes\": {\"alias\": \"Windows\
          \ Servers\"}}]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"entries\": [\n            {\n              \"attributes\":\
          \ {\n                \"alias\": \"Windows Servers\"\n              },\n\
          \              \"name\": \"windows\"\n            }\n          ]\n     \
          \   }' \\\n  \"$API_URL/domain-types/service_group_config/actions/bulk-update/invoke\""
  /domain-types/service_group_config/actions/bulk-create/invoke:
    post:
      tags:
      - Service groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Host & service groups (`wato.groups`):\
        \ Access to the modules for managing host and service groups.\n"
      summary: Bulk create service groups
      operationId: cmk.gui.openapi.endpoints.service_group_config.bulk_create
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id077
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGroupCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id077
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkInputServiceGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/service_group_config/actions/bulk-create/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entries\": [\n            {\n           \
          \     \"name\": \"environment\",\n                \"alias\": \"Environment\
          \ Sensors\",\n            },\n        ],\n    },\n    allow_redirects=True,\n\
          )\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service_group_config/actions/bulk-create/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entries\": [\n            {\n\
          \                \"name\": \"environment\",\n                \"alias\":\
          \ \"Environment Sensors\",\n            },\n        ],\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/service_group_config/actions/bulk-create/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    entries:='[{\"name\": \"environment\", \"alias\": \"Environment\
          \ Sensors\"}]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"entries\": [\n            {\n              \"alias\": \"Environment\
          \ Sensors\",\n              \"name\": \"environment\"\n            }\n \
          \         ]\n        }' \\\n  \"$API_URL/domain-types/service_group_config/actions/bulk-create/invoke\""
  /domain-types/service_group_config/actions/bulk-delete/invoke:
    post:
      tags:
      - Service groups
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Host & service groups (`wato.groups`):\
        \ Access to the modules for managing host and service groups.\n"
      summary: Bulk delete service groups
      operationId: cmk.gui.openapi.endpoints.service_group_config.bulk_delete
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteServiceGroup'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/service_group_config/actions/bulk-delete/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"entries\": [\"windows\", \"panels\"],\n \
          \   },\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service_group_config/actions/bulk-delete/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"entries\": [\"windows\", \"panels\"\
          ],\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 201:\n\
          elif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/service_group_config/actions/bulk-delete/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    entries:='[\"windows\", \"panels\"]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"entries\": [\n            \"windows\",\n            \"panels\"\
          \n          ]\n        }' \\\n  \"$API_URL/domain-types/service_group_config/actions/bulk-delete/invoke\""
  /domain-types/service/collections/all:
    get:
      tags:
      - Service status
      description: "`WARNING`: This URL is deprecated, see [Werk 17512](https://checkmk.com/werk/17512)\
        \ for more details.\n\nThis list is filterable by various parameters.This\
        \ endpoint requires the following permissions: \n"
      summary: Show all monitored services
      deprecated: true
      operationId: cmk.gui.openapi.endpoints.service._list_all_services_deprecated-17512
      parameters:
      - in: query
        name: sites
        description: Restrict the query to this particular site.
        schema:
          type: array
          default: []
          example: &id079
          - heute
          items:
            type: string
        required: false
        explode: true
        style: form
      - in: query
        name: columns
        description: The desired columns of the `services` table. If left empty, a
          default set of columns is used.
        schema:
          type: array
          default:
          - host_name
          - description
          example: &id080
          - host_name
          - description
          items:
            type: string
        required: false
        explode: true
        style: form
      - in: query
        name: query
        description: An query expression of the Livestatus 'services' table in nested
          dictionary form. If you want to use multiple expressions, nest them with
          the AND/OR operators.
        required: false
        content:
          application/json:
            schema:
              example: '{"op": "=", "left": "host_name", "right": "example.com"}'
              $ref: '#/components/schemas/Expr'
      - in: query
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: false
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/service/collections/all\"\
          ,\n    params={  # goes into query string\n        \"sites\": ['heute'],\
          \  # Restrict the query to this particular site.\n        \"columns\": ['host_name',\
          \ 'description'],  # The desired columns of the `services` table.\n    \
          \    \"query\": '{\"op\": \"=\", \"left\": \"host_name\", \"right\": \"\
          example.com\"}',  # An query expression of the Livestatus 'services' table\
          \ in nested dictionary form.\n        \"host_name\": 'example.com',  # A\
          \ host name.\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"sites\": ['heute'],  # Restrict the query\
          \ to this particular site.\n    \"columns\": ['host_name', 'description'],\
          \  # The desired columns of the `services` table.\n    \"query\": '{\"op\"\
          : \"=\", \"left\": \"host_name\", \"right\": \"example.com\"}',  # An query\
          \ expression of the Livestatus 'services' table in nested dictionary form.\n\
          \    \"host_name\": 'example.com',  # A host name.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service/collections/all?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/service/collections/all\" \\\n\
          \    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    sites=='['heute']' \\\n    columns=='['host_name', 'description']'\
          \ \\\n    query=='{\"op\": \"=\", \"left\": \"host_name\", \"right\": \"\
          example.com\"}' \\\n    host_name=='example.com' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'sites=heute' \\\n  --data-urlencode 'columns=host_name'\
          \ \\\n  --data-urlencode 'columns=description' \\\n  --data-urlencode 'query={\"\
          op\": \"=\", \"left\": \"host_name\", \"right\": \"example.com\"}' \\\n\
          \  --data-urlencode 'host_name=example.com' \\\n  \"$API_URL/domain-types/service/collections/all\""
    post:
      tags:
      - Service status
      description: "This list is filterable by various parameters.This endpoint requires\
        \ the following permissions: \n"
      summary: Show all monitored services
      operationId: cmk.gui.openapi.endpoints.service._list_all_services
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id078
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id078
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceParametersWithHost'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/service/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"sites\": [\"heute\"],\n        \"columns\"\
          : [\"host_name\", \"description\"],\n        \"query\": {\n            \"\
          op\": \"=\",\n            \"left\": \"host_name\",\n            \"right\"\
          : \"example.com\",\n        },\n        \"host_name\": \"example.com\",\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    data=json.dumps({\n\
          \        \"sites\": [\"heute\"],\n        \"columns\": [\"host_name\", \"\
          description\"],\n        \"query\": {\n            \"op\": \"=\",\n    \
          \        \"left\": \"host_name\",\n            \"right\": \"example.com\"\
          ,\n        },\n        \"host_name\": \"example.com\",\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/service/collections/all\" \\\
          \n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\"\
          \ \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    sites:='[\"heute\"]'\\\n    columns:='[\"host_name\", \"description\"\
          ]'\\\n    query[op]='='\\\n    query[left]='host_name'\\\n    query[right]='example.com'\\\
          \n    host_name='example.com'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"columns\": [\n            \"host_name\",\n            \"description\"\
          \n          ],\n          \"host_name\": \"example.com\",\n          \"\
          query\": {\n            \"left\": \"host_name\",\n            \"op\": \"\
          =\",\n            \"right\": \"example.com\"\n          },\n          \"\
          sites\": [\n            \"heute\"\n          ]\n        }' \\\n  \"$API_URL/domain-types/service/collections/all\""
  /objects/host/{host_name}/actions/show_service/invoke:
    get:
      tags:
      - Service status
      description: "\n\nThis endpoint requires the following permissions: \n"
      summary: Show a single service of a specific host
      operationId: cmk.gui.openapi.endpoints.service.show_service
      parameters:
      - in: query
        name: service_description
        description: The service name of the selected host
        schema:
          type: string
          example: Filesystem /boot
        required: true
      - in: query
        name: columns
        description: The desired columns of the `services` table. If left empty, a
          default set of columns is used.
        schema:
          type: array
          default:
          - host_name
          - description
          - state
          - state_type
          - last_check
          example:
          - state
          - state_type
          items:
            type: string
        required: false
        explode: true
        style: form
      - in: path
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/host/example.com/actions/show_service/invoke\"\
          ,\n    params={  # goes into query string\n        \"service_description\"\
          : 'Filesystem /boot',  # (required) The service name of the selected host\n\
          \        \"columns\": ['state', 'state_type'],  # The desired columns of\
          \ the `services` table.\n    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"service_description\": 'Filesystem /boot',\
          \  # (required) The service name of the selected host\n    \"columns\":\
          \ ['state', 'state_type'],  # The desired columns of the `services` table.\n\
          })\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/objects/host/example.com/actions/show_service/invoke?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/host/example.com/actions/show_service/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    service_description=='Filesystem /boot'\
          \ \\\n    columns=='['state', 'state_type']' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'service_description=Filesystem /boot' \\\n\
          \  --data-urlencode 'columns=state' \\\n  --data-urlencode 'columns=state_type'\
          \ \\\n  \"$API_URL/objects/host/example.com/actions/show_service/invoke\""
  /objects/host/{host_name}/collections/services:
    get:
      tags:
      - Service status
      description: "`WARNING`: This URL is deprecated, see [Werk 17512](https://checkmk.com/werk/17512)\
        \ for more details.\n\nThis list is filterable by various parameters.This\
        \ endpoint requires the following permissions: \n"
      summary: Show the monitored services of a host
      deprecated: true
      operationId: cmk.gui.openapi.endpoints.service._list_host_services_deprecated-17512
      parameters:
      - in: query
        name: sites
        description: Restrict the query to this particular site.
        schema:
          type: array
          default: []
          example: *id079
          items:
            type: string
        required: false
        explode: true
        style: form
      - in: query
        name: columns
        description: The desired columns of the `services` table. If left empty, a
          default set of columns is used.
        schema:
          type: array
          default:
          - host_name
          - description
          example: *id080
          items:
            type: string
        required: false
        explode: true
        style: form
      - in: query
        name: query
        description: An query expression of the Livestatus 'services' table in nested
          dictionary form. If you want to use multiple expressions, nest them with
          the AND/OR operators.
        required: false
        content:
          application/json:
            schema:
              example: '{"op": "=", "left": "host_name", "right": "example.com"}'
              $ref: '#/components/schemas/Expr'
      - in: path
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/host/example.com/collections/services\"\
          ,\n    params={  # goes into query string\n        \"sites\": ['heute'],\
          \  # Restrict the query to this particular site.\n        \"columns\": ['host_name',\
          \ 'description'],  # The desired columns of the `services` table.\n    \
          \    \"query\": '{\"op\": \"=\", \"left\": \"host_name\", \"right\": \"\
          example.com\"}',  # An query expression of the Livestatus 'services' table\
          \ in nested dictionary form.\n    },\n)\nif resp.status_code == 200:\n \
          \   pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.parse\n\
          import urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\
          \nPROTO = \"http\" #[http|https]\nAPI_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nquery_string =\
          \ urllib.parse.urlencode({\n    \"sites\": ['heute'],  # Restrict the query\
          \ to this particular site.\n    \"columns\": ['host_name', 'description'],\
          \  # The desired columns of the `services` table.\n    \"query\": '{\"op\"\
          : \"=\", \"left\": \"host_name\", \"right\": \"example.com\"}',  # An query\
          \ expression of the Livestatus 'services' table in nested dictionary form.\n\
          })\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/objects/host/example.com/collections/services?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/host/example.com/collections/services\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    sites=='['heute']' \\\n    columns=='['host_name',\
          \ 'description']' \\\n    query=='{\"op\": \"=\", \"left\": \"host_name\"\
          , \"right\": \"example.com\"}' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --get \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --data-urlencode 'sites=heute' \\\n  --data-urlencode 'columns=host_name'\
          \ \\\n  --data-urlencode 'columns=description' \\\n  --data-urlencode 'query={\"\
          op\": \"=\", \"left\": \"host_name\", \"right\": \"example.com\"}' \\\n\
          \  \"$API_URL/objects/host/example.com/collections/services\""
    post:
      tags:
      - Service status
      description: "This list is filterable by various parameters.This endpoint requires\
        \ the following permissions: \n"
      summary: Show the monitored services of a host
      operationId: cmk.gui.openapi.endpoints.service._list_host_services
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id081
          type: string
        example: application/json
      - in: path
        name: host_name
        description: A host name.
        schema:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id081
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceParameters'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/objects/host/example.com/collections/services\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"sites\": [\"heute\"],\n        \"columns\"\
          : [\"host_name\", \"description\"],\n        \"query\": {\n            \"\
          op\": \"=\",\n            \"left\": \"host_name\",\n            \"right\"\
          : \"example.com\",\n        },\n    },\n    allow_redirects=True,\n)\nif\
          \ resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host/example.com/collections/services\",\n   \
          \ method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"sites\": [\"heute\"],\n      \
          \  \"columns\": [\"host_name\", \"description\"],\n        \"query\": {\n\
          \            \"op\": \"=\",\n            \"left\": \"host_name\",\n    \
          \        \"right\": \"example.com\",\n        },\n    }).encode('utf-8'),\n\
          )\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/host/example.com/collections/services\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    sites:='[\"heute\"]'\\\n    columns:='[\"host_name\", \"description\"\
          ]'\\\n    query[op]='='\\\n    query[left]='host_name'\\\n    query[right]='example.com'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"columns\": [\n            \"host_name\",\n            \"description\"\
          \n          ],\n          \"query\": {\n            \"left\": \"host_name\"\
          ,\n            \"op\": \"=\",\n            \"right\": \"example.com\"\n\
          \          },\n          \"sites\": [\n            \"heute\"\n         \
          \ ]\n        }' \\\n  \"$API_URL/objects/host/example.com/collections/services\""
  /domain-types/sidebar_element/collections/all:
    get:
      tags:
      - Sidebar Element
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n"
      summary: List all sidebar elements from snapins
      operationId: Sidebar Element.list_sidebar_element_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SidebarElementModelCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/sidebar_element/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/sidebar_element/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/sidebar_element/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/sidebar_element/collections/all\""
  /domain-types/site_connection/collections/all:
    get:
      tags:
      - Site management
      description: "\n\nThis endpoint requires the following permissions: \n * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Show all site connections
      operationId: Site management.list_sites_connections_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteManagementCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/site_connection/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/site_connection/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/site_connection/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/site_connection/collections/all\""
    post:
      tags:
      - Site management
      description: "\n\nThis endpoint requires the following permissions: \n * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Create a site connection
      operationId: Site management.create_site_connection_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id082
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConnectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id082
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteConnectionCreateModel'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/site_connection/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/site_connection/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/site_connection/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/site_connection/collections/all\""
  /objects/site_connection/{site_id}:
    get:
      tags:
      - Site management
      description: "\n\nThis endpoint requires the following permissions: \n * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Show a site connection
      operationId: Site management.show_site_connection_v1
      parameters:
      - in: path
        name: site_id
        content:
          application/json:
            schema:
              description: An existing site ID.
              examples:
              - prod
              title: Site Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConnectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/site_connection/prod\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/site_connection/prod\",\n    method=\"GET\",\n\
          \    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/site_connection/prod\" \\\n    \"\
          Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/site_connection/prod\""
    put:
      tags:
      - Site management
      description: "\n\nThis endpoint requires the following permissions: \n * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Edit a site connection
      operationId: Site management.edit_site_connection_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id083
          type: string
        example: application/json
      - in: path
        name: site_id
        content:
          application/json:
            schema:
              description: An existing site ID.
              examples:
              - prod
              title: Site Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConnectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id083
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteConnectionEditModel'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/site_connection/prod\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/site_connection/prod\",\n    method=\"PUT\",\n\
          \    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/site_connection/prod\" \\\n    \"\
          Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/objects/site_connection/prod\""
  /objects/site_connection/{site_id}/actions/delete/invoke:
    post:
      tags:
      - Site management
      description: "\n\nThis endpoint requires the following permissions: \n * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Delete a site connection
      operationId: Site management.delete_site_connection_v1
      parameters:
      - in: path
        name: site_id
        content:
          application/json:
            schema:
              description: An existing site ID.
              examples:
              - prod
              title: Site Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.max_redirects\
          \ = 100  # increase if necessary\n\nresp = session.post(\n    f\"{API_URL}/objects/site_connection/prod/actions/delete/invoke\"\
          ,\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif resp.status_code\
          \ == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/site_connection/prod/actions/delete/invoke\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n    },\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/site_connection/prod/actions/delete/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  \"$API_URL/objects/site_connection/prod/actions/delete/invoke\""
  /objects/site_connection/{site_id}/actions/login/invoke:
    post:
      tags:
      - Site management
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * User management (`wato.users`): This permission is needed for\
        \ the modules <b>Users</b>, <b>Roles</b> and <b>Contact groups</b>\n   * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Login to a remote site
      operationId: Site management.site_connection_login_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      - in: path
        name: site_id
        content:
          application/json:
            schema:
              description: An existing site ID.
              examples:
              - prod
              title: Site Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteLoginCredentials'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.max_redirects\
          \ = 100  # increase if necessary\n\nresp = session.post(\n    f\"{API_URL}/objects/site_connection/prod/actions/login/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/site_connection/prod/actions/login/invoke\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Content-Type\": 'application/json',\
          \  # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 201:\nelif resp.status\
          \ == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/site_connection/prod/actions/login/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Content-Type: application/json\"\
          \ \\\n  \"$API_URL/objects/site_connection/prod/actions/login/invoke\""
  /objects/site_connection/{site_id}/actions/logout/invoke:
    post:
      tags:
      - Site management
      description: "\n\nThis endpoint requires the following permissions: \n * Site\
        \ management (`wato.sites`): Access to the module for managing connections\
        \ to remote monitoring sites.\n"
      summary: Logout from a remote site
      operationId: Site management.site_connection_logout_v1
      parameters:
      - in: path
        name: site_id
        content:
          application/json:
            schema:
              description: An existing site ID.
              examples:
              - prod
              title: Site Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.max_redirects\
          \ = 100  # increase if necessary\n\nresp = session.post(\n    f\"{API_URL}/objects/site_connection/prod/actions/logout/invoke\"\
          ,\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif resp.status_code\
          \ == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/site_connection/prod/actions/logout/invoke\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n    },\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/site_connection/prod/actions/logout/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  \"$API_URL/objects/site_connection/prod/actions/logout/invoke\""
  /domain-types/time_period/collections/all:
    get:
      tags:
      - Time periods
      description: "\n\nThis endpoint requires the following permissions: \n * Time\
        \ periods (`wato.timeperiods`): Access to the module <i>Time periods</i>\n"
      summary: Show all time periods
      operationId: cmk.gui.openapi.endpoints.time_periods.list_time_periods
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePeriodResponseCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/time_period/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/time_period/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/time_period/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/time_period/collections/all\""
    post:
      tags:
      - Time periods
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Optionally:\n     * Write access\
        \ to all passwords (`wato.edit_all_passwords`): Without this permission, users\
        \ can only edit passwords which are shared with a contact group they are member\
        \ of. This permission grants full access to all passwords.\n   * Time periods\
        \ (`wato.timeperiods`): Access to the module <i>Time periods</i>\n"
      summary: Create a time period
      operationId: cmk.gui.openapi.endpoints.time_periods.create_timeperiod
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id084
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePeriodResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id084
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTimePeriod'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/time_period/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"name\": \"first\",\n        \"alias\": \"\
          alias\",\n        \"active_time_ranges\": [\n            {\n           \
          \     \"day\": \"monday\",\n                \"time_ranges\": [\n       \
          \             {\n                        \"start\": \"12:00:00\",\n    \
          \                    \"end\": \"14:00:00\",\n                    },\n  \
          \              ],\n            },\n        ],\n        \"exceptions\": [\n\
          \            {\n                \"date\": \"2020-01-01\",\n            \
          \    \"time_ranges\": [\n                    {\n                       \
          \ \"start\": \"14:00:00\",\n                        \"end\": \"18:00:00\"\
          ,\n                    },\n                ],\n            },\n        ],\n\
          \        \"exclude\": [\"name\"],\n    },\n    allow_redirects=True,\n)\n\
          if resp.status_code == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code\
          \ == 201:\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/time_period/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    data=json.dumps({\n\
          \        \"name\": \"first\",\n        \"alias\": \"alias\",\n        \"\
          active_time_ranges\": [\n            {\n                \"day\": \"monday\"\
          ,\n                \"time_ranges\": [\n                    {\n         \
          \               \"start\": \"12:00:00\",\n                        \"end\"\
          : \"14:00:00\",\n                    },\n                ],\n          \
          \  },\n        ],\n        \"exceptions\": [\n            {\n          \
          \      \"date\": \"2020-01-01\",\n                \"time_ranges\": [\n \
          \                   {\n                        \"start\": \"14:00:00\",\n\
          \                        \"end\": \"18:00:00\",\n                    },\n\
          \                ],\n            },\n        ],\n        \"exclude\": [\"\
          name\"],\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\nelif resp.status\
          \ == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/time_period/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    name='first'\\\n    alias='alias'\\\n    active_time_ranges:='[{\"\
          day\": \"monday\", \"time_ranges\": [{\"start\": \"12:00:00\", \"end\":\
          \ \"14:00:00\"}]}]'\\\n    exceptions:='[{\"date\": \"2020-01-01\", \"time_ranges\"\
          : [{\"start\": \"14:00:00\", \"end\": \"18:00:00\"}]}]'\\\n    exclude:='[\"\
          name\"]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"active_time_ranges\": [\n            {\n              \"day\"\
          : \"monday\",\n              \"time_ranges\": [\n                {\n   \
          \               \"end\": \"14:00:00\",\n                  \"start\": \"\
          12:00:00\"\n                }\n              ]\n            }\n        \
          \  ],\n          \"alias\": \"alias\",\n          \"exceptions\": [\n  \
          \          {\n              \"date\": \"2020-01-01\",\n              \"\
          time_ranges\": [\n                {\n                  \"end\": \"18:00:00\"\
          ,\n                  \"start\": \"14:00:00\"\n                }\n      \
          \        ]\n            }\n          ],\n          \"exclude\": [\n    \
          \        \"name\"\n          ],\n          \"name\": \"first\"\n       \
          \ }' \\\n  \"$API_URL/domain-types/time_period/collections/all\""
  /objects/time_period/{name}:
    get:
      tags:
      - Time periods
      description: "\n\nThis endpoint requires the following permissions: \n * Time\
        \ periods (`wato.timeperiods`): Access to the module <i>Time periods</i>\n"
      summary: Show a time period
      operationId: cmk.gui.openapi.endpoints.time_periods.show_time_period
      parameters:
      - in: path
        name: name
        description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        schema:
          type: string
          example: pathname
          pattern: ^[-a-z0-9A-Z_]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePeriodResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/time_period/pathname\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/time_period/pathname\",\n    method=\"GET\",\n\
          \    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/time_period/pathname\" \\\n    \"\
          Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/time_period/pathname\""
    put:
      tags:
      - Time periods
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Optionally:\n     * Write access\
        \ to all passwords (`wato.edit_all_passwords`): Without this permission, users\
        \ can only edit passwords which are shared with a contact group they are member\
        \ of. This permission grants full access to all passwords.\n   * Time periods\
        \ (`wato.timeperiods`): Access to the module <i>Time periods</i>\n"
      summary: Update a time period
      operationId: cmk.gui.openapi.endpoints.time_periods.update_timeperiod
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id085
          type: string
        example: application/json
      - in: path
        name: name
        description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        schema:
          type: string
          example: pathname
          pattern: ^[-a-z0-9A-Z_]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '405':
          description: 'Method Not Allowed: Method not allowed: This request is only
            allowed with other HTTP methods.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api405DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimePeriodResponse'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id085
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimePeriod'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/time_period/pathname\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"alias\"\
          : \"new_alias\",\n        \"active_time_ranges\": [\n            {\n   \
          \             \"day\": \"monday\",\n                \"time_ranges\": [\n\
          \                    {\n                        \"start\": \"12:00:00\"\
          ,\n                        \"end\": \"14:00:00\",\n                    },\n\
          \                ],\n            },\n        ],\n        \"exceptions\"\
          : [\n            {\n                \"date\": \"2020-01-01\",\n        \
          \        \"time_ranges\": [\n                    {\n                   \
          \     \"start\": \"14:00:00\",\n                        \"end\": \"18:00:00\"\
          ,\n                    },\n                ],\n            },\n        ],\n\
          \        \"exclude\": [\"time_name\"],\n    },\n)\nif resp.status_code ==\
          \ 200:\n    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/time_period/pathname\",\n    method=\"PUT\",\n\
          \    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n        \"Content-Type\": 'application/json', \
          \ # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    data=json.dumps({\n        \"alias\": \"new_alias\"\
          ,\n        \"active_time_ranges\": [\n            {\n                \"\
          day\": \"monday\",\n                \"time_ranges\": [\n               \
          \     {\n                        \"start\": \"12:00:00\",\n            \
          \            \"end\": \"14:00:00\",\n                    },\n          \
          \      ],\n            },\n        ],\n        \"exceptions\": [\n     \
          \       {\n                \"date\": \"2020-01-01\",\n                \"\
          time_ranges\": [\n                    {\n                        \"start\"\
          : \"14:00:00\",\n                        \"end\": \"18:00:00\",\n      \
          \              },\n                ],\n            },\n        ],\n    \
          \    \"exclude\": [\"time_name\"],\n    }).encode('utf-8'),\n)\n# Will raise\
          \ an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/time_period/pathname\" \\\n    \"\
          Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'If-Match:\"a20ceacf346041dc\"' \\\n    'Content-Type:application/json'\
          \ \\\n    alias='new_alias'\\\n    active_time_ranges:='[{\"day\": \"monday\"\
          , \"time_ranges\": [{\"start\": \"12:00:00\", \"end\": \"14:00:00\"}]}]'\\\
          \n    exceptions:='[{\"date\": \"2020-01-01\", \"time_ranges\": [{\"start\"\
          : \"14:00:00\", \"end\": \"18:00:00\"}]}]'\\\n    exclude:='[\"time_name\"\
          ]'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"active_time_ranges\"\
          : [\n            {\n              \"day\": \"monday\",\n              \"\
          time_ranges\": [\n                {\n                  \"end\": \"14:00:00\"\
          ,\n                  \"start\": \"12:00:00\"\n                }\n      \
          \        ]\n            }\n          ],\n          \"alias\": \"new_alias\"\
          ,\n          \"exceptions\": [\n            {\n              \"date\": \"\
          2020-01-01\",\n              \"time_ranges\": [\n                {\n   \
          \               \"end\": \"18:00:00\",\n                  \"start\": \"\
          14:00:00\"\n                }\n              ]\n            }\n        \
          \  ],\n          \"exclude\": [\n            \"time_name\"\n          ]\n\
          \        }' \\\n  \"$API_URL/objects/time_period/pathname\""
    delete:
      tags:
      - Time periods
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * Optionally:\n     * Write access\
        \ to all passwords (`wato.edit_all_passwords`): Without this permission, users\
        \ can only edit passwords which are shared with a contact group they are member\
        \ of. This permission grants full access to all passwords.\n   * Time periods\
        \ (`wato.timeperiods`): Access to the module <i>Time periods</i>\n"
      summary: Delete a time period
      operationId: cmk.gui.openapi.endpoints.time_periods.delete
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - in: path
        name: name
        description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        schema:
          type: string
          example: pathname
          pattern: ^[-a-z0-9A-Z_]+$
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '405':
          description: 'Method Not Allowed: Method not allowed: This request is only
            allowed with other HTTP methods.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api405DefaultError'
        '409':
          description: 'Conflict: The request is in conflict with the stored resource.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api409DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/time_period/pathname\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n    },\n)\nif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/time_period/pathname\",\n    method=\"DELETE\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n    },\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/time_period/pathname\" \\\n   \
          \ \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    \n    'If-Match:\"a20ceacf346041dc\"' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  \"$API_URL/objects/time_period/pathname\""
  /objects/user_message/{message_id}/actions/acknowledge/invoke:
    post:
      tags:
      - User Messages
      description: ''
      summary: Acknowledge a message
      operationId: User Messages.acknowledge_user_message_v1
      parameters:
      - in: path
        name: message_id
        content:
          application/json:
            schema:
              description: Message id
              examples:
              - id
              title: Message Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.max_redirects\
          \ = 100  # increase if necessary\n\nresp = session.post(\n    f\"{API_URL}/objects/user_message/id/actions/acknowledge/invoke\"\
          ,\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif resp.status_code\
          \ == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/user_message/id/actions/acknowledge/invoke\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n    },\n)\n# Will raise an HTTPError if status\
          \ code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 201:\nelif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/objects/user_message/id/actions/acknowledge/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  \"$API_URL/objects/user_message/id/actions/acknowledge/invoke\""
  /objects/user_message/{message_id}:
    delete:
      tags:
      - User Messages
      description: ''
      summary: Delete a message.
      operationId: User Messages.delete_user_message_v1
      parameters:
      - in: path
        name: message_id
        content:
          application/json:
            schema:
              description: Message ID
              examples:
              - id
              title: Message Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\n\n\
          resp = session.delete(\n    f\"{API_URL}/objects/user_message/id\",\n)\n\
          if resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/user_message/id\",\n    method=\"DELETE\",\n \
          \   headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp =\
          \ urllib.request.urlopen(request)\nif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/user_message/id\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  \"$API_URL/objects/user_message/id\""
  /domain-types/user_role/collections/all:
    get:
      tags:
      - User Roles
      description: "\n\nThis endpoint requires the following permissions: \n * User\
        \ management (`wato.users`): This permission is needed for the modules <b>Users</b>,\
        \ <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Show all user roles
      operationId: User Roles.list_user_roles_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/user_role/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/user_role/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/user_role/collections/all\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/user_role/collections/all\""
    post:
      tags:
      - User Roles
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * User management (`wato.users`): This\
        \ permission is needed for the modules <b>Users</b>, <b>Roles</b> and <b>Contact\
        \ groups</b>\n"
      summary: Create a user role
      operationId: User Roles.create_user_role_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id086
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id086
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRoleModel'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/user_role/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/user_role/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/user_role/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/user_role/collections/all\""
  /objects/user_role/{role_id}:
    get:
      tags:
      - User Roles
      description: "\n\nThis endpoint requires the following permissions: \n * User\
        \ management (`wato.users`): This permission is needed for the modules <b>Users</b>,\
        \ <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Show a user role
      operationId: User Roles.show_user_role_v1
      parameters:
      - in: path
        name: role_id
        content:
          application/json:
            schema:
              description: An existing user role.
              examples:
              - userx
              title: Role Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/user_role/userx\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/user_role/userx\",\n    method=\"GET\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n    },\n)\n# Will raise an\
          \ HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/user_role/userx\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/user_role/userx\""
    put:
      tags:
      - User Roles
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * User management (`wato.users`): This\
        \ permission is needed for the modules <b>Users</b>, <b>Roles</b> and <b>Contact\
        \ groups</b>\n"
      summary: Edit a user role
      operationId: User Roles.edit_user_role_v1
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id087
          type: string
        example: application/json
      - in: path
        name: role_id
        content:
          application/json:
            schema:
              description: An existing user role.
              examples:
              - userx
              title: Role Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id087
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUserRoleModel'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/user_role/userx\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/user_role/userx\",\n    method=\"PUT\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n        \n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n)\n# Will raise an HTTPError\
          \ if status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/user_role/userx\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/objects/user_role/userx\""
    delete:
      tags:
      - User Roles
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * User management (`wato.users`): This\
        \ permission is needed for the modules <b>Users</b>, <b>Roles</b> and <b>Contact\
        \ groups</b>\n"
      summary: Delete a user role
      operationId: User Roles.delete_user_role_v1
      parameters:
      - in: path
        name: role_id
        content:
          application/json:
            schema:
              description: An existing custom user role that you want to delete.
              examples:
              - userx
              title: Role Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\n\n\
          resp = session.delete(\n    f\"{API_URL}/objects/user_role/userx\",\n)\n\
          if resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/user_role/userx\",\n    method=\"DELETE\",\n \
          \   headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp =\
          \ urllib.request.urlopen(request)\nif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/user_role/userx\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  \"$API_URL/objects/user_role/userx\""
  /domain-types/user_config/collections/all:
    get:
      tags:
      - Users
      description: "\n\nThis endpoint requires the following permissions: \n * User\
        \ management (`wato.users`): This permission is needed for the modules <b>Users</b>,\
        \ <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Show all users
      operationId: cmk.gui.openapi.endpoints.user_config.list_users
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/user_config/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/user_config/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/user_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/user_config/collections/all\""
    post:
      tags:
      - Users
      description: "You can pass custom attributes you defined directly in the top\
        \ level JSON object of the request.This endpoint requires the following permissions:\
        \ \n * All of:\n   * Make changes, perform actions (`wato.edit`): This permission\
        \ is needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * User management (`wato.users`): This\
        \ permission is needed for the modules <b>Users</b>, <b>Roles</b> and <b>Contact\
        \ groups</b>\n   * Optionally:\n     * Host & service groups (`wato.groups`):\
        \ Access to the modules for managing host and service groups.\n"
      summary: Create a user
      operationId: cmk.gui.openapi.endpoints.user_config.create_user
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id088
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id088
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/user_config/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"username\": \"cmkuser\",\n        \"fullname\"\
          : \"Mathias Kettner\",\n        \"customer\": \"provider\",\n        \"\
          auth_option\": {\n            \"auth_type\": \"password\",\n           \
          \ \"password\": \"password\",\n        },\n        \"disable_login\": False,\n\
          \        \"contact_options\": {\n            \"email\": \"user@example.com\"\
          ,\n        },\n        \"pager_address\": \"\",\n        \"idle_timeout\"\
          : {\n            \"option\": \"global\",\n        },\n        \"roles\"\
          : [\"user\"],\n        \"authorized_sites\": [\"heute\"],\n        \"contactgroups\"\
          : [\"all\"],\n        \"disable_notifications\": {\n            \"disable\"\
          : False,\n        },\n        \"language\": \"en\",\n        \"temperature_unit\"\
          : \"celsius\",\n        \"interface_options\": {\n            \"interface_theme\"\
          : \"dark\",\n        },\n        \"start_url\": \"default_start_url\",\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/user_config/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \n \
          \       \"Content-Type\": 'application/json',  # (required) A header specifying\
          \ which type of content is in the request/response body.\n    },\n    data=json.dumps({\n\
          \        \"username\": \"cmkuser\",\n        \"fullname\": \"Mathias Kettner\"\
          ,\n        \"customer\": \"provider\",\n        \"auth_option\": {\n   \
          \         \"auth_type\": \"password\",\n            \"password\": \"password\"\
          ,\n        },\n        \"disable_login\": False,\n        \"contact_options\"\
          : {\n            \"email\": \"user@example.com\",\n        },\n        \"\
          pager_address\": \"\",\n        \"idle_timeout\": {\n            \"option\"\
          : \"global\",\n        },\n        \"roles\": [\"user\"],\n        \"authorized_sites\"\
          : [\"heute\"],\n        \"contactgroups\": [\"all\"],\n        \"disable_notifications\"\
          : {\n            \"disable\": False,\n        },\n        \"language\":\
          \ \"en\",\n        \"temperature_unit\": \"celsius\",\n        \"interface_options\"\
          : {\n            \"interface_theme\": \"dark\",\n        },\n        \"\
          start_url\": \"default_start_url\",\n    }).encode('utf-8'),\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/user_config/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    username='cmkuser'\\\n    fullname='Mathias Kettner'\\\n    customer='provider'\\\
          \n    auth_option[auth_type]='password'\\\n    auth_option[password]='password'\\\
          \n    disable_login:=false\\\n    contact_options[email]='user@example.com'\\\
          \n    pager_address=''\\\n    idle_timeout[option]='global'\\\n    roles:='[\"\
          user\"]'\\\n    authorized_sites:='[\"heute\"]'\\\n    contactgroups:='[\"\
          all\"]'\\\n    disable_notifications[disable]:=false\\\n    language='en'\\\
          \n    temperature_unit='celsius'\\\n    interface_options[interface_theme]='dark'\\\
          \n    start_url='default_start_url'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"auth_option\": {\n            \"auth_type\": \"password\",\n\
          \            \"password\": \"password\"\n          },\n          \"authorized_sites\"\
          : [\n            \"heute\"\n          ],\n          \"contact_options\"\
          : {\n            \"email\": \"user@example.com\"\n          },\n       \
          \   \"contactgroups\": [\n            \"all\"\n          ],\n          \"\
          customer\": \"provider\",\n          \"disable_login\": false,\n       \
          \   \"disable_notifications\": {\n            \"disable\": false\n     \
          \     },\n          \"fullname\": \"Mathias Kettner\",\n          \"idle_timeout\"\
          : {\n            \"option\": \"global\"\n          },\n          \"interface_options\"\
          : {\n            \"interface_theme\": \"dark\"\n          },\n         \
          \ \"language\": \"en\",\n          \"pager_address\": \"\",\n          \"\
          roles\": [\n            \"user\"\n          ],\n          \"start_url\"\
          : \"default_start_url\",\n          \"temperature_unit\": \"celsius\",\n\
          \          \"username\": \"cmkuser\"\n        }' \\\n  \"$API_URL/domain-types/user_config/collections/all\""
  /objects/user_config/{username}:
    get:
      tags:
      - Users
      description: "\n\nThis endpoint requires the following permissions: \n * User\
        \ management (`wato.users`): This permission is needed for the modules <b>Users</b>,\
        \ <b>Roles</b> and <b>Contact groups</b>\n"
      summary: Show a user
      operationId: cmk.gui.openapi.endpoints.user_config.show_user
      parameters:
      - in: path
        name: username
        description: An unique username for the user
        schema:
          type: string
          example: cmkuser
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/user_config/cmkuser\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/user_config/cmkuser\",\n    method=\"GET\",\n\
          \    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/user_config/cmkuser\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/user_config/cmkuser\""
    put:
      tags:
      - Users
      description: "You can pass custom attributes you defined directly in the top\
        \ level JSON object of the request.This endpoint requires the following permissions:\
        \ \n * All of:\n   * Make changes, perform actions (`wato.edit`): This permission\
        \ is needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * User management (`wato.users`): This\
        \ permission is needed for the modules <b>Users</b>, <b>Roles</b> and <b>Contact\
        \ groups</b>\n"
      summary: Edit a user
      operationId: cmk.gui.openapi.endpoints.user_config.edit_user
      parameters:
      - name: If-Match
        description: The value of the, to be modified, object's ETag header. You can
          get this value by displaying the object it individually. When ETag validation
          is enabled in the REST API, update operations require that the ETag value
          you provide matches the object's current server-side ETag. The content of
          the ETag can potentially be anything and should be treated as semantically
          opaque.
        in: header
        required: true
        schema:
          type: string
        example: '"a20ceacf346041dc"'
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id089
          type: string
        example: application/json
      - in: path
        name: username
        description: An unique username for the user
        schema:
          type: string
          example: cmkuser
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '412':
          description: 'Precondition Failed: The value of the If-Match header doesn''t
            match the object''s ETag.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api412DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '428':
          description: 'Precondition Required: The required If-Match header is missing.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api428DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id089
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
            ETag:
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications. Please note that the
                actual ETag returned by some endpoints may look different than the
                one shown in this example.
              schema:
                type: string
              example: '"a20ceacf346041dc"'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/user_config/cmkuser\"\
          ,\n    headers={\n        \"If-Match\": '\"a20ceacf346041dc\"',  # (required)\
          \ The value of the, to be modified, object's ETag header.\n        \"Content-Type\"\
          : 'application/json',  # (required) A header specifying which type of content\
          \ is in the request/response body.\n    },\n    json={\n        \"fullname\"\
          : \"Mathias Kettner\",\n        \"customer\": \"provider\",\n        \"\
          auth_option\": {\n            \"auth_type\": \"password\",\n           \
          \ \"password\": \"password\",\n        },\n        \"disable_login\": False,\n\
          \        \"contact_options\": {\n            \"email\": \"user@example.com\"\
          ,\n        },\n        \"pager_address\": \"\",\n        \"idle_timeout\"\
          : {\n        },\n        \"roles\": [\"user\"],\n        \"authorized_sites\"\
          : [\"heute\"],\n        \"contactgroups\": [\"all\"],\n        \"disable_notifications\"\
          : {\n            \"disabled\": False,\n        },\n        \"language\"\
          : \"en\",\n        \"temperature_unit\": \"celsius\",\n        \"interface_options\"\
          : {\n            \"interface_theme\": \"dark\",\n        },\n        \"\
          start_url\": \"default_start_url\",\n    },\n)\nif resp.status_code == 200:\n\
          \    pprint.pprint(resp.json())\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/user_config/cmkuser\",\n    method=\"PUT\",\n\
          \    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n        \"If-Match\"\
          : '\"a20ceacf346041dc\"',  # (required) The value of the, to be modified,\
          \ object's ETag header.\n        \"Content-Type\": 'application/json', \
          \ # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n    data=json.dumps({\n        \"fullname\": \"Mathias\
          \ Kettner\",\n        \"customer\": \"provider\",\n        \"auth_option\"\
          : {\n            \"auth_type\": \"password\",\n            \"password\"\
          : \"password\",\n        },\n        \"disable_login\": False,\n       \
          \ \"contact_options\": {\n            \"email\": \"user@example.com\",\n\
          \        },\n        \"pager_address\": \"\",\n        \"idle_timeout\"\
          : {\n        },\n        \"roles\": [\"user\"],\n        \"authorized_sites\"\
          : [\"heute\"],\n        \"contactgroups\": [\"all\"],\n        \"disable_notifications\"\
          : {\n            \"disabled\": False,\n        },\n        \"language\"\
          : \"en\",\n        \"temperature_unit\": \"celsius\",\n        \"interface_options\"\
          : {\n            \"interface_theme\": \"dark\",\n        },\n        \"\
          start_url\": \"default_start_url\",\n    }).encode('utf-8'),\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/user_config/cmkuser\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    \n    'If-Match:\"a20ceacf346041dc\"' \\\n    'Content-Type:application/json'\
          \ \\\n    fullname='Mathias Kettner'\\\n    customer='provider'\\\n    auth_option[auth_type]='password'\\\
          \n    auth_option[password]='password'\\\n    disable_login:=false\\\n \
          \   contact_options[email]='user@example.com'\\\n    pager_address=''\\\n\
          \    roles:='[\"user\"]'\\\n    authorized_sites:='[\"heute\"]'\\\n    contactgroups:='[\"\
          all\"]'\\\n    disable_notifications[disabled]:=false\\\n    language='en'\\\
          \n    temperature_unit='celsius'\\\n    interface_options[interface_theme]='dark'\\\
          \n    start_url='default_start_url'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"If-Match: \"a20ceacf346041dc\"\" \\\n  --header \"\
          Content-Type: application/json\" \\\n  --data '{\n          \"auth_option\"\
          : {\n            \"auth_type\": \"password\",\n            \"password\"\
          : \"password\"\n          },\n          \"authorized_sites\": [\n      \
          \      \"heute\"\n          ],\n          \"contact_options\": {\n     \
          \       \"email\": \"user@example.com\"\n          },\n          \"contactgroups\"\
          : [\n            \"all\"\n          ],\n          \"customer\": \"provider\"\
          ,\n          \"disable_login\": false,\n          \"disable_notifications\"\
          : {\n            \"disabled\": false\n          },\n          \"fullname\"\
          : \"Mathias Kettner\",\n          \"idle_timeout\": {},\n          \"interface_options\"\
          : {\n            \"interface_theme\": \"dark\"\n          },\n         \
          \ \"language\": \"en\",\n          \"pager_address\": \"\",\n          \"\
          roles\": [\n            \"user\"\n          ],\n          \"start_url\"\
          : \"default_start_url\",\n          \"temperature_unit\": \"celsius\"\n\
          \        }' \\\n  \"$API_URL/objects/user_config/cmkuser\""
    delete:
      tags:
      - Users
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Make changes, perform actions (`wato.edit`): This permission is\
        \ needed in order to make any changes or perform any actions at all. Without\
        \ this permission, the user is only able to view data, and that only in modules\
        \ he has explicit permissions for.\n   * User management (`wato.users`): This\
        \ permission is needed for the modules <b>Users</b>, <b>Roles</b> and <b>Contact\
        \ groups</b>\n"
      summary: Delete a user
      operationId: cmk.gui.openapi.endpoints.user_config.delete_user
      parameters:
      - in: path
        name: username
        description: An unique username for the user
        schema:
          type: string
          example: cmkuser
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/user_config/cmkuser\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/user_config/cmkuser\",\n    method=\"DELETE\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/user_config/cmkuser\" \\\n    \"\
          Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  \"$API_URL/objects/user_config/cmkuser\""
  /domain-types/user_config/actions/dismiss-warning/invoke:
    post:
      tags:
      - Users
      description: ''
      summary: Save a warning dismissal for the current user.
      operationId: cmk.gui.openapi.endpoints.user_config.dismiss_user_warning
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDismissWarning'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/user_config/actions/dismiss-warning/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"warning\": \"notification_fallback\",\n \
          \   },\n    allow_redirects=True,\n)\nif resp.status_code == 201:\nelif\
          \ resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/user_config/actions/dismiss-warning/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"warning\": \"notification_fallback\"\
          ,\n    }).encode('utf-8'),\n)\n# Will raise an HTTPError if status code\
          \ is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status == 201:\n\
          elif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/user_config/actions/dismiss-warning/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    warning='notification_fallback'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"warning\": \"notification_fallback\"\n        }' \\\n  \"$API_URL/domain-types/user_config/actions/dismiss-warning/invoke\""
  /domain-types/view/collections/all:
    get:
      tags:
      - Views
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Customize views and use them (`general.edit_views`): Allows to\
        \ create own views, customize built-in views and use them.\n   * Optionally:\n\
        \     * See user views (`general.see_user_views`): Is needed for seeing views\
        \ that other users have created.\n   * Optionally:\n     * See packaged views\
        \ (`general.see_packaged_views`): Is needed for seeing views that are provided\
        \ via extension packages.\n   * Some permissions starting with `view`:\n"
      summary: List views.
      operationId: Views.list_views_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/view/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/view/collections/all\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/view/collections/all\" \\\n \
          \   \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/view/collections/all\""
  /domain-types/visual_filter/collections/all:
    get:
      tags:
      - Visual Filters
      description: "\n\nThis endpoint requires the following permissions: \n * Optionally:\n\
        \   * All of:\n     * See all host and services (`general.see_all`): See all\
        \ objects regardless of contacts and contact groups. If combined with 'perform\
        \ commands' then commands may be done on all objects.\n     * See all hosts\
        \ and services (`bi.see_all`): With this permission set, the BI aggregation\
        \ rules are applied to all hosts and services - not only those the user is\
        \ a contact for. If you remove this permissions then the user will see incomplete\
        \ aggregation trees with status based only on those items.\n     * See all\
        \ events (`mkeventd.seeall`): If a user lacks this permission then he/she\
        \ can see only those events that originate from a host that he/she is a contact\
        \ for.\n"
      summary: Show all filter configurations.
      operationId: Visual Filters.list_filters_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/visual_filter/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/visual_filter/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/visual_filter/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/visual_filter/collections/all\""
  /objects/constant/visual_info/collections/all:
    get:
      tags:
      - Visual Info
      description: ''
      summary: List infos.
      operationId: Visual Info.list_infos_v1
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisualInfoCollectionModel'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/constant/visual_info/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/constant/visual_info/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \n    },\n)\n# Will\
          \ raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/objects/constant/visual_info/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/objects/constant/visual_info/collections/all\""
  /domain-types/otel_collector_config/collections/all:
    get:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: List all configurations for OpenTelemetry collector
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_list
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTelCollectorCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/otel_collector_config/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/otel_collector_config/collections/all\",\n\
          \    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/otel_collector_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/otel_collector_config/collections/all\""
    post:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: Create a new OpenTelemetry collector configuration
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_create
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id090
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTelCollectorObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id090
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTelCollectorMemLimitSpec'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/otel_collector_config/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/otel_collector_config/collections/all\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/otel_collector_config/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/otel_collector_config/collections/all\""
  /domain-types/otel_collector_config_prom_scrape/collections/all:
    get:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: List all prometheus scrape configurations for OpenTelemetry collector
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_list_prom_scrapes
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTelCollectorPromScrapeCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/otel_collector_config_prom_scrape/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/otel_collector_config_prom_scrape/collections/all\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/otel_collector_config_prom_scrape/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/otel_collector_config_prom_scrape/collections/all\""
    post:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: Create a new OpenTelemetry collector prometheus scrape configuration
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_create_prom_scrape
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id091
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTelCollectorPromScrapeObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id091
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTelCollectorPromScrapeSpec'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/otel_collector_config_prom_scrape/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/otel_collector_config_prom_scrape/collections/all\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/otel_collector_config_prom_scrape/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/otel_collector_config_prom_scrape/collections/all\""
  /domain-types/otel_collector_config_receivers/collections/all:
    get:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: List all receivers configurations for OpenTelemetry collector
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_list_receivers
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTelCollectorReceiversCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema:
                type: string
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/otel_collector_config_receivers/collections/all\"\
          ,\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\nelse:\n\
          \    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/otel_collector_config_receivers/collections/all\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp GET \"$API_URL/domain-types/otel_collector_config_receivers/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --write-out \"\\nxxx-status_code=%{http_code}\\\
          n\" \\\n  --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n  --header\
          \ \"Accept: application/json\" \\\n  \n  \"$API_URL/domain-types/otel_collector_config_receivers/collections/all\""
    post:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: Create a new OpenTelemetry collector receiver configuration
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_create_receivers
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id092
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTelCollectorReceiverObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id092
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTelCollectorReceiverSpec'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/otel_collector_config_receivers/collections/all\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    allow_redirects=True,\n)\nif resp.status_code == 200:\n   \
          \ pprint.pprint(resp.json())\nelif resp.status_code == 201:\nelse:\n   \
          \ raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/otel_collector_config_receivers/collections/all\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/otel_collector_config_receivers/collections/all\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/domain-types/otel_collector_config_receivers/collections/all\""
  /domain-types/otel_collector/actions/update/invoke:
    put:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * All\
        \ of:\n   * Use WATO (`wato.use`): This permissions allows users to use Setup\
        \ - Checkmk's Web Administration Tool. Without this permission all references\
        \ to Setup (buttons, links, snap-ins) will be invisible.\n   * Make changes,\
        \ perform actions (`wato.edit`): This permission is needed in order to make\
        \ any changes or perform any actions at all. Without this permission, the\
        \ user is only able to view data, and that only in modules he has explicit\
        \ permissions for.\n   * Global settings (`wato.global`): Access to the module\
        \ <i>Global settings</i>\n   * Site management (`wato.sites`): Access to the\
        \ module for managing connections to remote monitoring sites.\n"
      summary: Manage OpenTelemetry collector activation
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_enable_collector
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema:
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTelCollectorActivation'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\n\n\
          resp = session.put(\n    f\"{API_URL}/domain-types/otel_collector/actions/update/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise\
          \ RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/otel_collector/actions/update/invoke\",\n\
          \    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Content-Type\": 'application/json',\
          \  # (required) A header specifying which type of content is in the request/response\
          \ body.\n    },\n)\n# Will raise an HTTPError if status code is >= 400\n\
          resp = urllib.request.urlopen(request)\nif resp.status == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/domain-types/otel_collector/actions/update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Content-Type: application/json\"\
          \ \\\n  \"$API_URL/domain-types/otel_collector/actions/update/invoke\""
  /objects/otel_collector_config/{config_id}:
    put:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: Update an OpenTelemetry collector configuration
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_update
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id093
          type: string
        example: application/json
      - in: path
        name: config_id
        content:
          application/json:
            schema:
              description: Collector configuration ID
              examples:
              - opentelemetry_collector_1
              title: Config Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTelCollectorObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id093
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTelCollectorMemLimitSpec'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/otel_collector_config/opentelemetry_collector_1\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/otel_collector_config/opentelemetry_collector_1\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/otel_collector_config/opentelemetry_collector_1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/objects/otel_collector_config/opentelemetry_collector_1\""
    delete:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: Delete an OpenTelemetry collector configuration
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_delete
      parameters:
      - in: path
        name: config_id
        content:
          application/json:
            schema:
              description: Collector configuration ID
              examples:
              - opentelemetry_collector_1
              title: Config Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\n\n\
          resp = session.delete(\n    f\"{API_URL}/objects/otel_collector_config/opentelemetry_collector_1\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/otel_collector_config/opentelemetry_collector_1\"\
          ,\n    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"\
          Bearer {USERNAME} {PASSWORD}\",\n    },\n)\n# Will raise an HTTPError if\
          \ status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/otel_collector_config/opentelemetry_collector_1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  \"$API_URL/objects/otel_collector_config/opentelemetry_collector_1\""
  /objects/otel_collector_config_prom_scrape/{config_id}:
    put:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: Update an OpenTelemetry collector prometheus scraping configuration
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_update_prom_scrape
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id094
          type: string
        example: application/json
      - in: path
        name: config_id
        content:
          application/json:
            schema:
              description: Collector prometheus scraping configuration ID
              examples:
              - opentelemetry_collector_prom_scrape_1
              title: Config Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTelCollectorPromScrapeObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id094
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTelCollectorPromScrapeSpec'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/otel_collector_config_prom_scrape/opentelemetry_collector_prom_scrape_1\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/otel_collector_config_prom_scrape/opentelemetry_collector_prom_scrape_1\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/otel_collector_config_prom_scrape/opentelemetry_collector_prom_scrape_1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/objects/otel_collector_config_prom_scrape/opentelemetry_collector_prom_scrape_1\""
    delete:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: Delete an OpenTelemetry collector prometheus scraping configuration
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_delete_prom_scrape
      parameters:
      - in: path
        name: config_id
        content:
          application/json:
            schema:
              description: Collector prometheus scraping configuration ID
              examples:
              - opentelemetry_collector_prom_scrape_1
              title: Config Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\n\n\
          resp = session.delete(\n    f\"{API_URL}/objects/otel_collector_config_prom_scrape/opentelemetry_collector_prom_scrape_1\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/otel_collector_config_prom_scrape/opentelemetry_collector_prom_scrape_1\"\
          ,\n    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"\
          Bearer {USERNAME} {PASSWORD}\",\n    },\n)\n# Will raise an HTTPError if\
          \ status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/otel_collector_config_prom_scrape/opentelemetry_collector_prom_scrape_1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  \"$API_URL/objects/otel_collector_config_prom_scrape/opentelemetry_collector_prom_scrape_1\""
  /objects/otel_collector_config_receivers/{config_id}:
    put:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: Update an OpenTelemetry collector receiver configuration
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_update_receivers
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id095
          type: string
        example: application/json
      - in: path
        name: config_id
        content:
          application/json:
            schema:
              description: Collector receiver configuration ID
              examples:
              - opentelemetry_collector_receiver_1
              title: Config Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultErrorD03BB5FCEF54BF65'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultErrorDF0CB1680D945D0C'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OTelCollectorReceiverObject'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id095
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTelCollectorReceiverSpec'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/otel_collector_config_receivers/opentelemetry_collector_receiver_1\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n)\nif resp.status_code == 200:\n    pprint.pprint(resp.json())\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/otel_collector_config_receivers/opentelemetry_collector_receiver_1\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n)\n# Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp PUT \"$API_URL/objects/otel_collector_config_receivers/opentelemetry_collector_receiver_1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    \n    'Content-Type:application/json' "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request PUT \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  \"$API_URL/objects/otel_collector_config_receivers/opentelemetry_collector_receiver_1\""
    delete:
      tags:
      - open-telemetry
      description: "\n\nThis endpoint requires the following permissions: \n * Manage\
        \ OpenTelemetry configurations (experimental) (`wato.otel_collector`): Add,\
        \ edit and delete OpenTelemetry configurations.\n"
      summary: Delete an OpenTelemetry collector receiver configuration
      x-badges:
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: open-telemetry.handler_delete_receiver
      parameters:
      - in: path
        name: config_id
        content:
          application/json:
            schema:
              description: Collector receiver configuration ID
              examples:
              - opentelemetry_collector_receiver_1
              title: Config Id
              type: string
        required: true
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError8B5D843281F47B25'
        '403':
          description: 'Forbidden: Configuration via Setup is disabled.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api403DefaultError7302D605273DB63C'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError40DD4E5A06F59F4F'
        '204':
          description: 'No Content: Operation done successfully. No further output.'
          content: {}
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\n\n\
          resp = session.delete(\n    f\"{API_URL}/objects/otel_collector_config_receivers/opentelemetry_collector_receiver_1\"\
          ,\n)\nif resp.status_code == 204:\n    print('Done')\nelse:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/otel_collector_config_receivers/opentelemetry_collector_receiver_1\"\
          ,\n    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"\
          Bearer {USERNAME} {PASSWORD}\",\n    },\n)\n# Will raise an HTTPError if\
          \ status code is >= 400\nresp = urllib.request.urlopen(request)\nif resp.status\
          \ == 204:\n    print('Done')"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp DELETE \"$API_URL/objects/otel_collector_config_receivers/opentelemetry_collector_receiver_1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" "
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request DELETE \\\n \
          \ --write-out \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  \"$API_URL/objects/otel_collector_config_receivers/opentelemetry_collector_receiver_1\""
  /domain-types/metric/actions/get_custom_graph/invoke:
    post:
      tags:
      - Metrics
      description: 'Custom graphs can be created within Checkmk, see [Checkmk

        guide](https://docs.checkmk.com/latest/en/graphing.html#custom_graphs) for

        an introduction.'
      summary: Get a custom graph
      x-badges:
      - name: CEE
        position: after
        color: '#74ebdd'
      - name: CCE
        position: after
        color: '#586aa2'
      - name: CME
        position: after
        color: '#70a8db'
      operationId: cmk.gui.cee.openapi.endpoints.metric.get_custom_graph
      parameters:
      - name: Content-Type
        description: A header specifying which type of content is in the request/response
          body. This is required when sending encoded data in a POST/PUT body. When
          the request body is empty, this header should not be sent.
        in: header
        required: true
        schema: &id096
          type: string
        example: application/json
      responses:
        '406':
          description: 'Not Acceptable: The requests accept headers can not be satisfied.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api406DefaultError'
        '404':
          description: 'Not Found: The requested object has not be found.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api404DefaultError'
        '400':
          description: 'Bad Request: Parameter or validation failure.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api400DefaultError'
        '415':
          description: 'Unsupported Media Type: The submitted content-type is not
            supported.'
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Api415DefaultError'
        '200':
          description: 'OK: The operation was done successfully.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphCollection'
          headers:
            Content-Type:
              description: A header specifying which type of content is in the request/response
                body. This is required when sending encoded data in a POST/PUT body.
                When the request body is empty, this header should not be sent.
              required: true
              schema: *id096
              example: application/json
            X-Checkmk-Edition:
              description: The checkmk edition.
              required: true
              schema:
                type: string
              example: cre
            X-Checkmk-Version:
              description: The checkmk version.
              required: true
              schema:
                type: string
              example: 2.2.0p10
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCustomGraph'
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport pprint\nimport requests\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\nsession.max_redirects = 100  # increase if necessary\n\
          \nresp = session.post(\n    f\"{API_URL}/domain-types/metric/actions/get_custom_graph/invoke\"\
          ,\n    headers={\n        \"Content-Type\": 'application/json',  # (required)\
          \ A header specifying which type of content is in the request/response body.\n\
          \    },\n    json={\n        \"time_range\": {\n            \"start\": \"\
          2025-10-22 18:03:02.018091\",\n            \"end\": \"2025-10-22 18:18:02.018093\"\
          ,\n        },\n        \"reduce\": \"max\",\n        \"custom_graph_id\"\
          : \"my_cool_graph\",\n    },\n    allow_redirects=True,\n)\nif resp.status_code\
          \ == 200:\n    pprint.pprint(resp.json())\nelif resp.status_code == 201:\n\
          else:\n    raise RuntimeError(pprint.pformat(resp.json()))"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport pprint\nimport urllib.request\n\
          \nHOST_NAME = \"localhost\"\nSITE_NAME = \"checkmk\"\nPROTO = \"http\" #[http|https]\n\
          API_URL = f\"{PROTO}://{HOST_NAME}/{SITE_NAME}/check_mk/api/1.0\"\n\nUSERNAME\
          \ = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/metric/actions/get_custom_graph/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \n        \"Content-Type\": 'application/json',  # (required) A\
          \ header specifying which type of content is in the request/response body.\n\
          \    },\n    data=json.dumps({\n        \"time_range\": {\n            \"\
          start\": \"2025-10-22 18:03:02.018091\",\n            \"end\": \"2025-10-22\
          \ 18:18:02.018093\",\n        },\n        \"reduce\": \"max\",\n       \
          \ \"custom_graph_id\": \"my_cool_graph\",\n    }).encode('utf-8'),\n)\n\
          # Will raise an HTTPError if status code is >= 400\nresp = urllib.request.urlopen(request)\n\
          if resp.status == 200:\n    pprint.pprint(json.loads(resp.read().decode()))\n\
          elif resp.status == 201:"
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"\
          http\" #[http|https]\nAPI_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\
          \n\nUSERNAME=\"automation\"\nPASSWORD=\"test123\"\n\n# Requires httpie version\
          \ >= 3\n\nhttp POST \"$API_URL/domain-types/metric/actions/get_custom_graph/invoke\"\
          \ \\\n    --follow \\\n    --all \\\n    \"Authorization: Bearer $USERNAME\
          \ $PASSWORD\" \\\n    \"Accept: application/json\" \\\n    \n    'Content-Type:application/json'\
          \ \\\n    time_range[start]='2025-10-22 18:03:02.018091'\\\n    time_range[end]='2025-10-22\
          \ 18:18:02.018093'\\\n    reduce='max'\\\n    custom_graph_id='my_cool_graph'"
      - label: curl
        lang: bash
        source: "#!/bin/bash\n\n# NOTE: We recommend all shell users to use the \"\
          httpie\" examples instead.\n#       `curl` should not be used for writing\
          \ large scripts.\n#       This code is provided for debugging purposes only.\n\
          \nHOST_NAME=\"localhost\"\nSITE_NAME=\"checkmk\"\nPROTO=\"http\" #[http|https]\n\
          API_URL=\"$PROTO://$HOST_NAME/$SITE_NAME/check_mk/api/1.0\"\n\nUSERNAME=\"\
          automation\"\nPASSWORD=\"test123\"\n\ncurl \\\n  --request POST \\\n  --write-out\
          \ \"\\nxxx-status_code=%{http_code}\\n\" \\\n  --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n  --header \"Accept: application/json\"\
          \ \\\n  \n  --header \"Content-Type: application/json\" \\\n  --data '{\n\
          \          \"custom_graph_id\": \"my_cool_graph\",\n          \"reduce\"\
          : \"max\",\n          \"time_range\": {\n            \"end\": \"2025-10-22\
          \ 18:18:02.018093\",\n            \"start\": \"2025-10-22 18:03:02.018091\"\
          \n          }\n        }' \\\n  \"$API_URL/domain-types/metric/actions/get_custom_graph/invoke\""
tags:
- name: Business intelligence (BI)
  x-displayName: Business intelligence (BI)
  description: '# mypy: disable-error-code="comparison-overlap"


    # mypy: disable-error-code="no-untyped-call"

    # mypy: disable-error-code="no-untyped-def"


    BI is used in Checkmk to set up a tree based on the status of hosts and services
    as branches and to

    extend with higher level nodes summarizing (or aggregating) the status of the
    contained objects.

    A BI pack contains the configuration data by means of BI aggregations and BI rules.

    A BI aggregation is a tree of nodes and a BI rule is used to define a node and
    its status.


    You can find an introduction to BI in the

    [Checkmk guide](https://docs.checkmk.com/latest/en/bi.html).'
- name: Acknowledge problems
  x-displayName: Acknowledge problems
  description: 'A problem occurs if a host is not UP or a service ist not OK.

    The acknowledgement of the problem is the indication that the reported issue is
    known and that

    somebody is attending to it.


    You can find an introduction to the acknowledgement of problems in the

    [Checkmk guide](https://docs.checkmk.com/latest/en/basics_ackn.html).'
- name: Activate changes
  x-displayName: Activate changes
  description: 'When changes are activated, Checkmk transfers the current configuration
    status to the ongoing

    monitoring.


    Changes in the configuration - adding a new host, for example - will initially
    have no effect

    on the monitoring. Changes must first be activated, which will bring all changes
    that you have

    accumulated since the last activation as a "bundle" into the operational monitoring.


    You can find an introduction to the configuration of Checkmk including activation
    of changes in the

    [Checkmk guide](https://docs.checkmk.com/latest/en/wato.html).'
- name: Agents
  x-displayName: Agents
  description: 'An agent is a small program that is installed on a host in order for
    Checkmk to be able query

    data from the host.


    An introduction to agents can be found in the

    [Checkmk guide](https://docs.checkmk.com/latest/en/wato_monitoringagents.html).


    You can find more about the Agent Bakery and automatic agent updates of checkmk
    enterprise

    in [Agent Deployment](https://docs.checkmk.com/latest/en/agent_deployment.html).'
- name: Audit logs
  x-displayName: Audit logs
  description: The audit log records the activities taking place in CheckMK. These
    endpoints allow you to read and clean these logs
- name: Aux Tags
  x-displayName: Aux Tags
  description: 'Auxiliary tags solve the following problem: Imagine that you define
    a host tag group Operating

    System, with the tags Linux, AIX, Windows 2016, and Windows 2019. Now you want
    to define a rule

    that should apply to all Windows hosts.


    One way to do this is to define an auxiliary tag named Windows. Assign this auxiliary
    tag to

    both Windows 2016 and Windows 2019. A host that has either tag will then always
    automatically

    receive the auxiliary tag Windows from Checkmk. In the rules, Windows will appear
    as a separate

    tag for resolving conditions.'
- name: Background Jobs
  x-displayName: Background Jobs
  description: 'A background job allows certain tasks to be run as background processes.
    It should be kept in

    mind that some jobs lock certain areas in the Setup to prevent further configurations
    as long

    as the background process is running.'
- name: Certificates
  x-displayName: Certificates
  description: 'WARNING: Use at your own risk, not supported.


    Checkmk uses TLS certificates to secure agent communication.'
- name: Comments
  x-displayName: Comments
  description: "# mypy: disable-error-code=\"exhaustive-match\"\n\nIn Checkmk you\
    \ can add comments to hosts and services to store textual information related\
    \ to the object.\nThe comments can later be viewed through the user interface\
    \ or read via API. You could e.g.\nadd maintenance information about the related\
    \ host or service to help your colleagues in case problems occur.\n\nThe comment\
    \ endpoints allow for:\n* POST creating comments for both hosts and services.\n\
    * LIST for getting all host & service comments.\n* GET for getting a comment using\
    \ its ID.\n* DELETE for deleting a comment or comments.\n\nEach host or service\
    \ can have multiple comments.\n\nRelated documentation\n    https://docs.checkmk.com/latest/en/commands.html#commands"
- name: Contact groups
  x-displayName: Contact groups
  description: "Contact groups are the link between hosts and services on one side\
    \ and users on the other.\nEvery contact group represents a responsibility for\
    \ a specific area in the IT landscape.\n\nYou can find an introduction to user\
    \ management including contact groups in the\n[Checkmk guide](https://docs.checkmk.com/latest/en/wato_user.html).\n\
    \n### Relations\n\nA contact group object can have the following relations present\
    \ in `links`:\n\n * `self` - The contact group itself.\n * `urn:org.restfulobject/rels:update`\
    \ - An endpoint to change this contact group.\n * `urn:org.restfulobject/rels:delete`\
    \ - An endpoint to delete this contact group."
- name: Downtimes
  x-displayName: Downtimes
  description: "A (scheduled) downtime is a planned maintenance period.\nHosts and\
    \ services are handled differently by Checkmk during a downtime, for example,\n\
    notifications are disabled.\n\n### Related documentation\n\nHow to use the query\
    \ DSL used in the `query` parameters of these endpoints, have a look at the\n\
    [Querying Status Data](#section/Querying-Status-Data) section of this documentation.\n\
    \nThese endpoints support all [Livestatus filter operators](https://docs.checkmk.com/latest/en/livestatus_references.html#heading_filter),\n\
    which you can look up in the Checkmk documentation.\n\nFor a detailed list of\
    \ columns, please take a look at the [downtimes table](#section/Table-definitions/Downtimes-Table)\
    \ definition.\n\n### Relations\n\nDowntime object can have the following relations:\n\
    \n * `self` - The downtime itself.\n * `urn:com.checkmk:rels/host_config` - The\
    \ host the downtime applies to.\n * `urn:org.restfulobjects/delete` - The endpoint\
    \ to delete downtimes."
- name: Folders
  x-displayName: Folders
  description: "# mypy: disable-error-code=\"no-untyped-call\"\n\nFolders are used\
    \ in Checkmk to organize the hosts in a tree structure.\nThe root (or main) folder\
    \ is always existing, other folders can be created manually.\nIf you build the\
    \ tree cleverly you can use it to pass on attributes in a meaningful manner.\n\
    \nYou can find an introduction to hosts including folders in the\n[Checkmk guide](https://docs.checkmk.com/latest/en/wato_hosts.html).\n\
    \nDue to HTTP escaping folders are represented with the tilde character (`~`)\
    \ as the path separator.\n\n### Host and Folder attributes\n\nEvery host and folder\
    \ can have \"attributes\" set, which determine the behavior of Checkmk. Each\n\
    host inherits all attributes of its folder and the folder's parent folders. So\
    \ setting an SNMP\ncommunity in a folder is equivalent to setting the same on\
    \ all hosts in said folder.\n\nSome host endpoints allow one to view the \"effective\
    \ attributes\", which is an aggregation of all\nattributes up to the root.\n\n\
    ### Relations\n\nA folder_config object can have the following relations present\
    \ in `links`:\n\n * `self` - The folder itself.\n * `urn:org.restfulobjects:rels/update`\
    \ - The endpoint to update this folder.\n * `urn:org.restfulobjects:rels/delete`\
    \ - The endpoint to delete this folder."
- name: Configuration entities
  x-displayName: Configuration entities
  description: 'Configuration entities are single objects corresponding to configurations
    in Checkmk.

    Which entities can be configured like this is defined by the configuration entity
    type.'
- name: Configuration entities / Notification Parameter
  x-displayName: Configuration entities / Notification Parameter
  description: '# mypy: disable-error-code="mutable-override"


    These endpoints can be used to manipulate notification parameter via the configuration

    entity API, for more information see "Configuration entities" endpoints.'
- name: Configuration entities / Folder
  x-displayName: Configuration entities / Folder
  description: '# mypy: disable-error-code="mutable-override"


    These endpoints can be used to manipulate folders via the configuration entity
    API,

    for more information see "Configuration entities" endpoints.'
- name: Host status
  x-displayName: Host status
  description: "# mypy: disable-error-code=\"type-arg\"\n\nThe host status provides\
    \ the host's \"health\" information.\n\n### Related documentation\n\nHow to use\
    \ the query DSL used in the `query` parameters of these endpoints, have a look\
    \ at the\n[Querying Status Data](#section/Querying-Status-Data) section of this\
    \ documentation.\n\nThese endpoints support all [Livestatus filter operators](https://docs.checkmk.com/latest/en/livestatus_references.html#heading_filter),\n\
    which you can look up in the Checkmk documentation.\n\nFor a detailed list of\
    \ columns, please take a look at the [hosts table](#section/Table-definitions/Hosts-Table)\
    \ definition.\n\n### Examples\n\nThe query expression for all non-OK hosts would\
    \ be:\n\n    {'op': '!=', 'left': 'state', 'right': '0'}\n\nTo search for unreachable\
    \ hosts:\n\n    {'op': '=', 'left': 'state', 'right': '2'}\n\nTo search for all\
    \ hosts with their host name or alias starting with 'location1-':\n\n    {'op':\
    \ '~', 'left': 'name', 'right': 'location1-.*'}\n\n    {'op': '~', 'left': 'alias',\
    \ 'right': 'location1-.*'}\n\nTo search for hosts with specific tags set on them:\n\
    \n    {'op': '~', 'left': 'tag_names', 'right': 'windows'}"
- name: Hosts
  x-displayName: Hosts
  description: "\n\nA host is an object that is monitored by Checkmk, for example,\
    \ a server or a network device.\nA host belongs to a certain folder, is usually\
    \ connected to a data source (agent or SNMP) and\nprovides one or more services.\n\
    \nA cluster host is a special host type containing the nodes the cluster consists\
    \ of and having\nthe services assigned that are provided by the cluster.\n\nYou\
    \ can find an introduction to hosts in the\n[Checkmk guide](https://docs.checkmk.com/latest/en/wato_hosts.html).\n\
    \nPlease note that every host always resides in a folder. The folder is included\
    \ twice\nin the host's links: Once based upon the canonical path and once based\
    \ upon the folder's\nunique id. You can never remove a host from a folder, just\
    \ move it to a different one.\n\n### Host and Folder attributes\n\nEvery host\
    \ and folder can have \"attributes\" set, which determine the behavior of Checkmk.\
    \ Each\nhost inherits all attributes of its folder and the folder's parent folders.\
    \ So setting an SNMP\ncommunity in a folder is equivalent to setting the same\
    \ on all hosts in said folder.\n\nSome host endpoints allow one to view the \"\
    effective attributes\", which is an aggregation of all\nattributes up to the root.\n\
    \n### Relations\n\nA host_config object can have the following relations present\
    \ in `links`:\n\n * `self` - The host itself.\n * `urn:com.checkmk:rels/folder_config`\
    \ - The folder object this host resides in.\n * `urn:org.restfulobjects:rels/update`\
    \ - The endpoint to update this host.\n * `urn:org.restfulobjects:rels/delete`\
    \ - The endpoint to delete this host.\n\n"
- name: Host groups
  x-displayName: Host groups
  description: "Host groups are a way to organize hosts in Checkmk for monitoring.\n\
    By using a host group you can generate suitable views for overview and/or analysis.\n\
    \nThe hosts part of a host group can be queried using the Monitoring's relevant\
    \ host_status endpoints.\n\nYou can find an introduction to hosts including host\
    \ groups in the\n[Checkmk guide](https://docs.checkmk.com/latest/en/wato_hosts.html).\n\
    \nA host group object can have the following relations present in `links`:\n\n\
    \ * `self` - The host group itself.\n * `urn:org.restfulobject/rels:update` -\
    \ An endpoint to change this host group.\n * `urn:org.restfulobject/rels:delete`\
    \ - An endpoint to delete this host group."
- name: Hosts (internal)
  x-displayName: Hosts (internal)
  description: 'WARNING: Use at your own risk, not supported.'
- name: Host tag groups
  x-displayName: Host tag groups
  description: '# mypy: disable-error-code="no-untyped-def"


    Host tag groups are, besides the static folder structure, another more flexible
    way to

    organize hosts in Checkmk for configuration.

    A host tag group is a collection of different host tags, with each host receiving
    exactly one

    tag from the group.


    You can find an introduction to hosts including host tags and host tag groups
    in the

    [Checkmk guide](https://docs.checkmk.com/latest/en/wato_hosts.html).'
- name: Notification Rules
  x-displayName: Notification Rules
  description: 'The notification rules endpoints give you the flexibility to create,
    edit, delete and show

    all notification rules configured.


    * POST for creating new notification rules.

    * PUT for updating current notification rules.

    * LIST for listing all current notification rules.

    * GET for getting a single notification rule.

    * DELETE for deleting a single notification rule.'
- name: Parent scan
  x-displayName: Parent scan
  description: 'For the monitoring to be able to determine the UNREACH state, it must
    know which path it can use to

    contact each individual host. For this purpose, one or more so-called parent hosts
    can be specified

    for each host. Parents can be set up automatically via the Parent scan.


    Additional information about the parents and the parent scan can be found in the

    [Checkmk documentation](https://docs.checkmk.com/latest/en/hosts_structure.html#parents).'
- name: Rules
  x-displayName: Rules
- name: Rulesets
  x-displayName: Rulesets
- name: Service status
  x-displayName: Service status
  description: 'The service status provides the service''s "health" information.


    A service (for example, a file system or a process) is a property of a certain
    host that

    is monitored by Checkmk.


    ### Related documentation


    How to use the query DSL used in the `query` parameters of these endpoints, have
    a look at the

    [Querying Status Data](#section/Querying-Status-Data) section of this documentation.


    These endpoints support all [Livestatus filter operators](https://docs.checkmk.com/latest/en/livestatus_references.html#heading_filter),

    which you can look up in the Checkmk documentation.


    For a detailed list of columns, have a look at the [services table](#section/Table-definitions/Services-Table)
    definition.'
- name: Service discovery
  x-displayName: Service discovery
  description: 'A service discovery is the automatic and reliable detection of all
    services to be monitored on

    a host.


    You can find an introduction to services including service discovery in the

    [Checkmk guide](https://docs.checkmk.com/latest/en/wato_services.html).'
- name: Service groups
  x-displayName: Service groups
  description: "Service groups are a way to organize services in Checkmk for monitoring.\n\
    By using a service group you can generate suitable views for overview and/or analysis,\n\
    for example, file system services of multiple hosts.\n\nYou can find an introduction\
    \ to services including service groups in the\n[Checkmk guide](https://docs.checkmk.com/latest/en/wato_services.html).\n\
    \nA service group object can have the following relations present in `links`:\n\
    \n * `self` - The service group itself.\n * `urn:org.restfulobject/rels:update`\
    \ - An endpoint to change this service group.\n * `urn:org.restfulobject/rels:delete`\
    \ - An endpoint to delete this service group."
- name: Time periods
  x-displayName: Time periods
  description: 'With time periods the monitoring with Checkmk can be adapted to recurring
    conditions, for

    example, to avoid senseless notifications.


    You can find an introduction to time periods in the

    [Checkmk guide](https://docs.checkmk.com/latest/en/timeperiods.html).'
- name: Users
  x-displayName: Users
- name: Miscellaneous
  x-displayName: Miscellaneous
  description: '# mypy: disable-error-code="no-untyped-def"


    This folder collects individual endpoints not fitting into the other endpoint
    folders.'
- name: Quick setup
  x-displayName: Quick setup
  description: '# mypy: disable-error-code="type-arg"


    * GET quick setup guided stages or overview stages

    * GET a quick setup stage structure

    * POST validate stage

    * POST complete the quick setup and save'
- name: Broker Connection
  x-displayName: Broker Connection
  description: 'The broker connection endpoints give you the flexibility to configure
    peer to

    peer broker connections with distributed sites the same way you would via the
    web interface.


    The broker connection endpoints allow for:


    * LIST for getting the list of broker connections.

    * GET for getting a broker connection.

    * POST for creating a new broker connection.

    * PUT for updating an existing broker connection.

    * DELETE for deleting an existing broker connection.'
- name: LDAP Connections
  x-displayName: LDAP Connections
  description: '# mypy: disable-error-code="comparison-overlap"


    Checkmk provides a facility for using LDAP-based services for managing users,
    automatically

    synchronizing users from the home directories, and for assigning contact groups,
    roles and

    other attributes to these users in Checkmk automatically. Checkmk is not restricted
    to a

    single LDAP source, and it can also distribute the users to other connected sites
    if required.


    The following endpoints provide a way to manage LDAP connections via the REST-API
    in the

    same way the user interface does.  This includes creating, updating, deleting
    and listing LDAP

    connections.


    If you need help during configuration or experience problems, please refer to
    the LDAP

    Documentation: https://docs.checkmk.com/latest/en/ldap.html.'
- name: Event Console
  x-displayName: Event Console
  description: "# mypy: disable-error-code=\"exhaustive-match\"\n\n# mypy: disable-error-code=\"\
    possibly-undefined\"\n\nWith the Event Console (EC for short), Checkmk provides\
    \ a fully integrated system for monitoring events\nfrom sources including syslog,\
    \ SNMP traps, Windows Event Logs, log files and own applications. Events are\n\
    not simply defined as states, but they form a category of their own and are in\
    \ fact displayed as separate\ninformation by Checkmk in the sidebar\u2019s Overview.\n\
    \nThe event console endpoints allow for\n* Show event console event/s.\n    *\
    \ Query the event console table using filters, id or live status query.\n* Update\
    \ & Acknowledge event/s.\n    * Query the event console table using filters, id\
    \ or live status query and set the phase to ack or open.\n* Change State of event/s.\n\
    \    * Query the event console table using filters, id or live status query and\
    \ set the state for those events.\n* Archive event/s.\n    * Query the event console\
    \ table using filters, id or live status query and archive those events."
- name: Autocomplete (internal)
  x-displayName: Autocomplete (internal)
  description: 'This provides access to autocomplete functionality. This currently
    is mostly used

    internally by the Grafana''s data source plug-in and relies on data sent by it
    that

    is not fully documented and specified yet.'
- name: Metrics
  x-displayName: Metrics
  description: '# mypy: disable-error-code="no-untyped-def"


    Metrics visible in the Checkmk user interface can also be retrieved via the

    REST-API.'
- name: Service Level Agreements
  x-displayName: Service Level Agreements
  description: "A service level agreement configuration can be generally defined in\
    \ Checkmk and be used\nto generate availability analysis data for the multiple\
    \ services. Further information on the\navailability concept and SLA can be found\
    \ in the [Checkmk documentation](https://docs.checkmk.com/latest/en/sla.html).\n\
    \nCurrently, this endpoint family only offers the computation of SLA data:\n*\
    \ Compute SLA\n    * use existing sla configurations to determine the SLA data\
    \ for a set of services"
- name: Dynamic Configuration Daemon (DCD)
  x-displayName: Dynamic Configuration Daemon (DCD)
  description: '# mypy: disable-error-code="no-any-return"

    # mypy: disable-error-code="no-untyped-def"


    The dynamic configuration daemon allows to add and remove hosts from the monitoring
    in a

    fully-automated procedure


    The DCD is generic, and can support multiple types of connectors. The Piggyback
    data connector

    is currently the only supported connector within Checkmk.


    You can find a more detailed overview of the DCD

    in the [Checkmk guide](https://docs.checkmk.com/latest/en/dcd.html)'
- name: License usage
  x-displayName: License usage
  description: 'The license usage contains the number of hosts or services and other
    meta information of Checkmk

    setups resp. sites.'
- name: SAML connections
  x-displayName: SAML connections
- name: Metric (internal)
  x-displayName: Metric (internal)
  description: '# mypy: disable-error-code="mutable-override"


    # mypy: disable-error-code="no-untyped-call"

    # mypy: disable-error-code="no-untyped-def"


    This is a more powerful version of the metric endpoints that can be used to query

    checkmk for metrics using a wide array of filters. This currently relies on a
    filter

    language that is mostly used internally and not fully documented and specified
    yet.'
- name: Onboarding helper
  x-displayName: Onboarding helper
  description: '# mypy: disable-error-code="no-untyped-def"

    # mypy: disable-error-code="type-arg"


    Endpoints to make the onboarding nicer'
- name: User Roles
  x-displayName: User Roles
  description: "\n\nUser Roles\n\nCheckmk always assigns permissions to users via\
    \ roles \u2014 never directly. A role is nothing more than a list of permissions.\n\
    It is important that you understand that roles define the level of permissions\
    \ and not the reference to any hosts or services.\nThat is what contact groups\
    \ are for.\n\nAs standard Checkmk comes with the following three predefined roles,\
    \ which can never be deleted, but can be customised at will:\n\nWhen adding a\
    \ new custom role, it will be a clone of one of the default roles, i.e it will\
    \ automatically inherit all of the\npermissions of that default role.  Also, when\
    \ new permissions are added, built-in roles will automatically be permitted or\
    \ not\npermitted and the custom roles will also inherit those permission settings.\n\
    \n* Role: admin\nPermissions:  All permissions - especially the right to change\
    \ permissions.\nFunction: The Checkmk administrator who is in charge of the monitoring\
    \ system itself.\n\n* Role: user\nPermissions: May only see their own hosts and\
    \ services, may only make changes in the web interface in folders\nauthorized\
    \ for them and generally may not do anything that affects other users.\nFunction:\
    \ The normal Checkmk user who uses monitoring and responds to notifications.\n\
    \n* Role: guest\nPermissions: May see everything but not change anything.\nFunction:\
    \ 'Guest' is intended simply for 'watching', with all guests sharing a common\
    \ account.\nFor example, useful for public status monitors hanging on a wall.\n\
    \n\n"
- name: Passwords
  x-displayName: Passwords
  description: '

    Passwords intended for authentication of certain checks can be stored in the Checkmk

    password store. You can use a stored password in a rule without knowing or entering

    the password.


    These endpoints provide a way to manage stored passwords via the REST-API in the

    same way the user interface does. This includes being able to create, update and
    delete

    stored passwords. You are also able to fetch a list of passwords or individual
    passwords,

    however, the password itself is not returned for security reasons.

    '
- name: Site management
  x-displayName: Site management
  description: '


    Site Management


    The site management endpoints give you the flexibility to configure connections
    with

    distributed sites the same way you would via the web interface.


    The site management endpoints allow for:


    * POST for creating new site configurations.

    * PUT for updating current site configurations.

    * LIST for listing all current site configurations.

    * GET for getting a single site configuration.

    * DELETE for deleting a single site configuration via its site id.

    * LOGIN for logging into an existing site.

    * LOGOUT for logging out of an existing site.


    '
- name: Relays
  x-displayName: Relays
  description: '

    Relays are satellite systems deployed within private networks to gather monitoring
    data (e.g., via SNMP queries) from hosts that cannot be directly accessed by the
    Checkmk site.


    This family of endpoints provides operations to register and manage Relays.

    They allow you to create and update Relay configurations on disk, as well as remove
    them when no longer needed.

    '
- name: HW/SW Inventory
  x-displayName: HW/SW Inventory
  description: '

    The HW/SW Inventory of a host shows static or dynamic data organized as a tree.
    The data comes

    from different data sources like the Linux agent and is handled by inventory plug-ins.

    '
- name: Dashboards
  x-displayName: Dashboards
  description: 'Dashboards are a collection of widgets that display information about
    hosts,

    services, and other metrics in Checkmk.'
- name: User Messages
  x-displayName: User Messages
  description: "User Messages are separate from notifications and are used to inform\
    \ users\n    about important events or actions that require their attention."
- name: Graph Timeranges
  x-displayName: Graph Timeranges
  description: '

    With graph timeranges you can get defined timeranges for dashboards.

    Currently, this is readonly for internal use only.

    '
- name: Sidebar Element
  x-displayName: Sidebar Element
  description: '

    With sidebar elements you can get all sidebar elements for usage in a dropdown
    within widget configurations.

    Currently, this is readonly for internal use only.

    '
- name: Visual Filters
  x-displayName: Visual Filters
  description: Information about supported filters.
- name: Data Sources
  x-displayName: Data Sources
  description: Data sources provide data for views.
- name: Views
  x-displayName: Views
  description: Views visualize data from data sources in different layouts.
- name: Pagetype Topics
  x-displayName: Pagetype Topics
  description: Pagetype topics are the different topics that Dashboards, Views etc.
    can be grouped into.
- name: Visual Info
  x-displayName: Visual Info
  description: Info objects provided by data sources for use in views and dashboards.
- name: open-telemetry
  x-displayName: Open Telemetry
  description: Manage the configuration of the Open Telemetry integration
- name: Metric backend
  x-displayName: Metric backend
  description: '

    The metric backend is a specialized component designed to efficiently store and
    manage large volumes of time-series data, for example OpenTelemetry data.


    This family of endpoints provides operations to manage the metric backend.

    '
openapi: 3.1.1
components:
  schemas:
    ViaSpecificHost:
      type: object
      properties:
        acknowledge_type:
          type: string
          description: Select a specific host.
          enum: &id097
          - host
          example: host
        host_name:
          type: string
          description: The name of the host.
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
      required:
      - acknowledge_type
      - host_name
      additionalProperties: false
    ViaHostGroup:
      type: object
      properties:
        acknowledge_type:
          type: string
          description: Select all hosts in a host group.
          enum: &id098
          - hostgroup
          example: hostgroup
        hostgroup_name:
          type: string
          description: Host group name for which this acknowledgement is for.
          example: Servers
      required:
      - acknowledge_type
      - hostgroup_name
      additionalProperties: false
    BinaryExpr:
      type: object
      properties:
        op:
          type: string
          description: The operator.
        left:
          type: string
          description: The LiveStatus column name.
          example: name
          pattern: ^([a-z]+\.)?[_a-z]+$
        right:
          type: string
          description: The value to compare the column to.
      additionalProperties: false
    Expr:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LogicalExpr'
      - $ref: '#/components/schemas/LogicalExpr'
      - $ref: '#/components/schemas/NotExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      discriminator:
        propertyName: op
        mapping:
          and: '#/components/schemas/LogicalExpr'
          or: '#/components/schemas/LogicalExpr'
          not: '#/components/schemas/NotExpr'
          '=': '#/components/schemas/BinaryExpr'
          '~': '#/components/schemas/BinaryExpr'
          ~~: '#/components/schemas/BinaryExpr'
          <: '#/components/schemas/BinaryExpr'
          '>': '#/components/schemas/BinaryExpr'
          '>=': '#/components/schemas/BinaryExpr'
          <=: '#/components/schemas/BinaryExpr'
          '!=': '#/components/schemas/BinaryExpr'
          '!~': '#/components/schemas/BinaryExpr'
          '!~~': '#/components/schemas/BinaryExpr'
          '!<': '#/components/schemas/BinaryExpr'
          '!>': '#/components/schemas/BinaryExpr'
          '!>=': '#/components/schemas/BinaryExpr'
          '!<=': '#/components/schemas/BinaryExpr'
    NotExpr:
      type: object
      properties:
        op:
          type: string
          description: The operator. In this case `not`.
        expr:
          description: The query expression to negate.
          $ref: '#/components/schemas/Expr'
      additionalProperties: false
    LogicalExpr:
      type: object
      properties:
        op:
          type: string
          description: The operator.
        expr:
          type: array
          items:
            description: A list of query expressions to combine.
            $ref: '#/components/schemas/Expr'
      additionalProperties: false
    ViaHostQuery:
      type: object
      properties:
        acknowledge_type:
          type: string
          description: Select hosts with a query.
          enum: &id099
          - host_by_query
          example: host_by_query
        query:
          description: An query expression of the Livestatus 'hosts' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: '{"op": "and", "expr": [{"op": "=", "left": "name", "right": "example.com"},
            {"op": "!=", "left": "state", "right": "0"}]}'
          $ref: '#/components/schemas/Expr'
      required:
      - acknowledge_type
      - query
      additionalProperties: false
    ViaSpecificService:
      type: object
      properties:
        acknowledge_type:
          type: string
          description: Select a specific service on a host.
          enum: &id100
          - service
          example: service
        host_name:
          type: string
          description: The name of the host.
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
        service_description:
          type: string
          description: The acknowledgement process will be applied to all matching
            service names
          example: CPU load
      required:
      - acknowledge_type
      - host_name
      - service_description
      additionalProperties: false
    ViaServiceGroup:
      type: object
      properties:
        acknowledge_type:
          type: string
          description: Select all services in a service group.
          enum: &id101
          - servicegroup
          example: servicegroup
        servicegroup_name:
          type: string
          description: The name of the service group. Any host having a service in
            this group will be A downtime will be scheduled for all hosts in this
            group.
          example: windows
      required:
      - acknowledge_type
      - servicegroup_name
      additionalProperties: false
    ViaServiceQuery:
      type: object
      properties:
        acknowledge_type:
          type: string
          description: Select services with a query.
          enum: &id102
          - service_by_query
          example: service_by_query
        query:
          description: An query expression of the Livestatus 'services' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: '{"op": "=", "left": "description", "right": "Service description"}'
          $ref: '#/components/schemas/Expr'
      required:
      - acknowledge_type
      - query
      additionalProperties: false
    RemoveProblemAcknowledgement:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/ViaSpecificHost'
      - $ref: '#/components/schemas/ViaHostGroup'
      - $ref: '#/components/schemas/ViaHostQuery'
      - $ref: '#/components/schemas/ViaSpecificService'
      - $ref: '#/components/schemas/ViaServiceGroup'
      - $ref: '#/components/schemas/ViaServiceQuery'
      discriminator:
        propertyName: acknowledge_type
        mapping:
          host: '#/components/schemas/ViaSpecificHost'
          hostgroup: '#/components/schemas/ViaHostGroup'
          host_by_query: '#/components/schemas/ViaHostQuery'
          service: '#/components/schemas/ViaSpecificService'
          servicegroup: '#/components/schemas/ViaServiceGroup'
          service_by_query: '#/components/schemas/ViaServiceQuery'
    Api406DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 406
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The requests accept headers can not be satisfied.
        title:
          type: string
          description: A summary of the problem.
          example: Not Acceptable
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api400DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 400
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: Parameter or validation failure.
        title:
          type: string
          description: A summary of the problem.
          example: Bad Request
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api415DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 415
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The submitted content-type is not supported.
        title:
          type: string
          description: A summary of the problem.
          example: Unsupported Media Type
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    AcknowledgeHostProblem:
      type: object
      properties:
        sticky:
          type: boolean
          default: true
          description: If set, only a state-change to the UP/OK state will discard
            the acknowledgement. Otherwise, it will be discarded on any state-change.
          example: false
        persistent:
          type: boolean
          default: false
          description: If set, the comment will persist a restart.
          example: false
        notify:
          type: boolean
          default: true
          description: If set, notifications will be sent out to the configured contacts.
          example: false
        comment:
          type: string
          description: Comment to be stored alongside the acknowledgement.
          example: This was expected.
        expire_on:
          type: string
          format: date-time
          description: If set, the acknowledgement will expire at this time. The timezone
            will default to UTC.
          example: '2025-05-20T07:30:00Z'
        acknowledge_type:
          type: string
          description: Select a specific host.
          enum: *id097
          example: host
        host_name:
          type: string
          description: The name of the host.
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
      required:
      - acknowledge_type
      - comment
      - host_name
      additionalProperties: false
    AcknowledgeHostGroupProblem:
      type: object
      properties:
        sticky:
          type: boolean
          default: true
          description: If set, only a state-change to the UP/OK state will discard
            the acknowledgement. Otherwise, it will be discarded on any state-change.
          example: false
        persistent:
          type: boolean
          default: false
          description: If set, the comment will persist a restart.
          example: false
        notify:
          type: boolean
          default: true
          description: If set, notifications will be sent out to the configured contacts.
          example: false
        comment:
          type: string
          description: Comment to be stored alongside the acknowledgement.
          example: This was expected.
        expire_on:
          type: string
          format: date-time
          description: If set, the acknowledgement will expire at this time. The timezone
            will default to UTC.
          example: '2025-05-20T07:30:00Z'
        acknowledge_type:
          type: string
          description: Select all hosts in a host group.
          enum: *id098
          example: hostgroup
        hostgroup_name:
          type: string
          description: Host group name for which this acknowledgement is for.
          example: Servers
      required:
      - acknowledge_type
      - comment
      - hostgroup_name
      additionalProperties: false
    AcknowledgeHostQueryProblem:
      type: object
      properties:
        sticky:
          type: boolean
          default: true
          description: If set, only a state-change to the UP/OK state will discard
            the acknowledgement. Otherwise, it will be discarded on any state-change.
          example: false
        persistent:
          type: boolean
          default: false
          description: If set, the comment will persist a restart.
          example: false
        notify:
          type: boolean
          default: true
          description: If set, notifications will be sent out to the configured contacts.
          example: false
        comment:
          type: string
          description: Comment to be stored alongside the acknowledgement.
          example: This was expected.
        expire_on:
          type: string
          format: date-time
          description: If set, the acknowledgement will expire at this time. The timezone
            will default to UTC.
          example: '2025-05-20T07:30:00Z'
        acknowledge_type:
          type: string
          description: Select hosts with a query.
          enum: *id099
          example: host_by_query
        query:
          description: An query expression of the Livestatus 'hosts' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: '{"op": "and", "expr": [{"op": "=", "left": "name", "right": "example.com"},
            {"op": "!=", "left": "state", "right": "0"}]}'
          $ref: '#/components/schemas/Expr'
      required:
      - acknowledge_type
      - comment
      - query
      additionalProperties: false
    AcknowledgeHostRelatedProblem:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/AcknowledgeHostProblem'
      - $ref: '#/components/schemas/AcknowledgeHostGroupProblem'
      - $ref: '#/components/schemas/AcknowledgeHostQueryProblem'
      discriminator:
        propertyName: acknowledge_type
        mapping:
          host: '#/components/schemas/AcknowledgeHostProblem'
          hostgroup: '#/components/schemas/AcknowledgeHostGroupProblem'
          host_by_query: '#/components/schemas/AcknowledgeHostQueryProblem'
    Api422CustomError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 422
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The query yielded no result.
        title:
          type: string
          description: A summary of the problem.
          example: Unprocessable Entity
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    AcknowledgeSpecificServiceProblem:
      type: object
      properties:
        sticky:
          type: boolean
          default: true
          description: If set, only a state-change to the UP/OK state will discard
            the acknowledgement. Otherwise, it will be discarded on any state-change.
          example: false
        persistent:
          type: boolean
          default: false
          description: If set, the comment will persist a restart.
          example: false
        notify:
          type: boolean
          default: true
          description: If set, notifications will be sent out to the configured contacts.
          example: false
        comment:
          type: string
          description: Comment to be stored alongside the acknowledgement.
          example: This was expected.
        expire_on:
          type: string
          format: date-time
          description: If set, the acknowledgement will expire at this time. The timezone
            will default to UTC.
          example: '2025-05-20T07:30:00Z'
        acknowledge_type:
          type: string
          description: Select a specific service on a host.
          enum: *id100
          example: service
        host_name:
          type: string
          description: The name of the host.
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
        service_description:
          type: string
          description: The acknowledgement process will be applied to all matching
            service names
          example: CPU load
      required:
      - acknowledge_type
      - comment
      - host_name
      - service_description
      additionalProperties: false
    AcknowledgeServiceGroupProblem:
      type: object
      properties:
        sticky:
          type: boolean
          default: true
          description: If set, only a state-change to the UP/OK state will discard
            the acknowledgement. Otherwise, it will be discarded on any state-change.
          example: false
        persistent:
          type: boolean
          default: false
          description: If set, the comment will persist a restart.
          example: false
        notify:
          type: boolean
          default: true
          description: If set, notifications will be sent out to the configured contacts.
          example: false
        comment:
          type: string
          description: Comment to be stored alongside the acknowledgement.
          example: This was expected.
        expire_on:
          type: string
          format: date-time
          description: If set, the acknowledgement will expire at this time. The timezone
            will default to UTC.
          example: '2025-05-20T07:30:00Z'
        acknowledge_type:
          type: string
          description: Select all services in a service group.
          enum: *id101
          example: servicegroup
        servicegroup_name:
          type: string
          description: The name of the service group. Any host having a service in
            this group will be A downtime will be scheduled for all hosts in this
            group.
          example: windows
      required:
      - acknowledge_type
      - comment
      - servicegroup_name
      additionalProperties: false
    AcknowledgeServiceQueryProblem:
      type: object
      properties:
        sticky:
          type: boolean
          default: true
          description: If set, only a state-change to the UP/OK state will discard
            the acknowledgement. Otherwise, it will be discarded on any state-change.
          example: false
        persistent:
          type: boolean
          default: false
          description: If set, the comment will persist a restart.
          example: false
        notify:
          type: boolean
          default: true
          description: If set, notifications will be sent out to the configured contacts.
          example: false
        comment:
          type: string
          description: Comment to be stored alongside the acknowledgement.
          example: This was expected.
        expire_on:
          type: string
          format: date-time
          description: If set, the acknowledgement will expire at this time. The timezone
            will default to UTC.
          example: '2025-05-20T07:30:00Z'
        acknowledge_type:
          type: string
          description: Select services with a query.
          enum: *id102
          example: service_by_query
        query:
          description: An query expression of the Livestatus 'services' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: '{"op": "=", "left": "description", "right": "Service description"}'
          $ref: '#/components/schemas/Expr'
      required:
      - acknowledge_type
      - comment
      - query
      additionalProperties: false
    AcknowledgeServiceRelatedProblem:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/AcknowledgeSpecificServiceProblem'
      - $ref: '#/components/schemas/AcknowledgeServiceGroupProblem'
      - $ref: '#/components/schemas/AcknowledgeServiceQueryProblem'
      discriminator:
        propertyName: acknowledge_type
        mapping:
          service: '#/components/schemas/AcknowledgeSpecificServiceProblem'
          servicegroup: '#/components/schemas/AcknowledgeServiceGroupProblem'
          service_by_query: '#/components/schemas/AcknowledgeServiceQueryProblem'
    Api422CustomError1:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 422
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: Service was not in a problem state.
        title:
          type: string
          description: A summary of the problem.
          example: Unprocessable Entity
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api403DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 403
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: Configuration via Setup is disabled.
        title:
          type: string
          description: A summary of the problem.
          example: Forbidden
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Link:
      type: object
      properties:
        domainType:
          default: link
        rel:
          type: string
          description: Indicates the nature of the relationship of the related resource
            to the resource that generated this representation
          example: self
        href:
          type: string
          description: The (absolute) address of the related resource. Any characters
            that are invalid in URLs must be URL encoded.
          example: https://.../api_resource
        method:
          type: string
          description: The HTTP method to use to traverse the link (get, post, put
            or delete)
          enum:
          - GET
          - PUT
          - POST
          - DELETE
          example: GET
        type:
          type: string
          description: The content-type that the linked resource will return
          example: application/json
        title:
          type:
          - string
          - 'null'
          description: string that the consuming application may use to render the
            link without having to traverse the link in advance
          example: The object itself
        body_params:
          type: object
          description: A map of values that shall be sent in the request body. If
            this is present,the request has to be sent with a content-type of 'application/json'.
          additionalProperties: {}
      required:
      - domainType
      - href
      - method
      - rel
      - type
      additionalProperties: false
    ChangesFields:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The change identifier
          example: ad9c9b13-52f2-4fb8-8f4f-7b2ae48c7984
        user_id:
          type:
          - string
          - 'null'
          description: The user who made the change
          example: cmkadmin
        action_name:
          type: string
          description: The action carried out
          example: edit-host
        text:
          type: string
          description: ''
          example: Modified host heute.
        time:
          type: string
          format: date-time
          description: The date and time the change was made.
          example: '2023-02-21T17:32:28+00:00'
      additionalProperties: false
    PendingChangesCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: activation_run
          description: The domain type of the objects in the collection.
        value:
          type: array
          description: The changes that are pending
          example:
          - id: da5430a5-6d0a-48ae-9efd-0563482a3b36
            action_name: create-host
            text: Created new host foobar.
            user_id: cmkadmin
            time: '2023-01-20T16:31:51.362057+00:00'
          - id: 4ba28393-567e-4a9a-9368-e600d28c2a7e
            action_name: edit-host
            text: Modified host foobar.
            user_id: cmkadmin
            time: '2023-01-20T16:32:12.362057+00:00'
          items:
            $ref: '#/components/schemas/ChangesFields'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    ActivationSiteStatus:
      type: object
      properties:
        site:
          type: string
          description: The site affected by this activation
          example: heute
        phase:
          type:
          - string
          - 'null'
          description: The phase
          enum:
          - initialized
          - queued
          - started
          - sync
          - activate
          - finishing
          - done
          example: done
        state:
          type:
          - string
          - 'null'
          description: The state
          enum:
          - success
          - error
          - warning
          example: success
        status_text:
          type:
          - string
          - 'null'
          description: The status text
          example: Activating
        status_details:
          type: string
          description: The status details
          example: 'Started at: 15:23:10. Finished at: 15:23:12.'
        start_time:
          type: string
          format: date-time
          description: The date and time the activation started.
          example: '2025-03-03T17:31:24+00:00'
        end_time:
          type:
          - string
          - 'null'
          format: date-time
          description: The date and time the activation ended.
          example: '2023-03-03T17:31:41+00:00'
      additionalProperties: false
    ActivationExtensionStatusFields:
      type: object
      properties:
        sites:
          type: array
          description: Sites affected by this activation
          example: &id104
          - site1
          - site2
          items:
            type: string
        is_running:
          type: boolean
          description: If the activation is still running
          example: false
        force_foreign_changes:
          type: boolean
          description: A boolean flag indicating that even changes which do not originate
            from the user requesting the activation shall be activated
          example: false
        time_started:
          type: string
          format: date-time
          description: The date and time the activation started.
          example: '2023-02-21T17:34:12+00:00'
        changes:
          type: array
          description: The changes in this activation
          items:
            $ref: '#/components/schemas/ChangesFields'
        status_per_site:
          type: array
          description: A list of sites with their activation status.
          example: &id103
          - site: heute
            status_text: Activating
            status_details: 'Started at: 15:23:09. Finished at: 15:23:13.'
            start_time: '2025-01-20T15:23:09.306846+00:00'
            end_time: '2025-01-20T15:23:13.306846+00:00'
          - site: morgen
            status_text: Activating
            status_details: 'Started at: 12:45:05. Finished at: 12:46:12.'
            start_time: '2025-01-20T12:45:05.306846+00:00'
            end_time: '2025-01-20T12:45:12.306846+00:00'
          items:
            $ref: '#/components/schemas/ActivationSiteStatus'
      additionalProperties: false
    ActivationStatusResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: activation_run
          description: The domain type of the object.
        id:
          type: string
          format: uuid
          description: The unique identifier for this activation run.
          example: 84b18e42-355e-4f13-80b6-404bd8f21149
        title:
          type: string
          description: The activation run status.
          example: 'Activation status: In progress.'
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The activation run attributes with status.
          example:
            changes:
            - id: da5430a5-6d0a-48ae-9efd-0563482a3b36
              action_name: edit-host
              text: Modified host heute.
              user_id: cmkadmin
              time: '2023-01-20T16:31:51.362057+00:00'
            is_running: false
            activate_foreign: true
            time_started: '2023-01-20T16:31:54.306846+00:00'
            sites:
            - heute
            comment: ''
            status_per_site: *id103
          $ref: '#/components/schemas/ActivationExtensionStatusFields'
      required:
      - links
      additionalProperties: false
    ActivationRunCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          description: The name of this collection.
        domainType:
          default: activation_run
          description: The domain type of the objects in the collection.
        value:
          type: array
          description: A list of activation runs.
          example:
          - links:
            - domainType: link
              rel: self
              href: http://localhost/heute/check_mk/api/1.0/objects/activation_run/b0a0bf49-ff5f-454b-a5d5-9731cb0fb5fa
              method: GET
              type: application/json
            domainType: activation_run
            id: b0a0bf49-ff5f-454b-a5d5-9731cb0fb5fa
            title: test-title
            members: {}
            extensions:
              changes:
              - id: da5430a5-6d0a-48ae-9efd-0563482a3b36
                action_name: edit-host
                text: Modified host heute.
                user_id: cmkadmin
                time: '2023-01-20T16:31:51.362057+00:00'
              is_running: false
              activate_foreign: true
              time_started: '2023-01-20T16:31:54.306846+00:00'
              sites:
              - heute
              comment: ''
              status_per_site: *id103
          items:
            $ref: '#/components/schemas/ActivationStatusResponse'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    Api404CustomError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: There is no running activation with this activation_id.
        title:
          type: string
          description: A summary of the problem.
          example: Not Found
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api404CustomError1:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: There is no running activation with this activation_id.
        title:
          type: string
          description: A summary of the problem.
          example: Not Found
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    ActivateChanges:
      type: object
      properties:
        redirect:
          type: boolean
          default: false
          description: After starting the activation, redirect immediately to the
            'Wait for completion' endpoint.
          example: false
        sites:
          type: array
          description: The names of the sites on which the configuration shall be
            activated. An empty list means all sites which have pending changes.
          example:
          - production
          items:
            type: string
        force_foreign_changes:
          type: boolean
          default: false
          description: Will activate changes even if the user who made those changes
            is not the currently logged in user.
          example: false
      additionalProperties: false
    Api401CustomError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 401
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The API user may not activate another users changes, or the user
            may and activation was not forced explicitly.
        title:
          type: string
          description: A summary of the problem.
          example: Unauthorized
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api403CustomError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 403
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: Activation not possible because of licensing issues.
        title:
          type: string
          description: A summary of the problem.
          example: Forbidden
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api409CustomError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 409
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: Some sites could not be activated.
        title:
          type: string
          description: A summary of the problem.
          example: Conflict
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api412DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 412
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The value of the If-Match header doesn't match the object's ETag.
        title:
          type: string
          description: A summary of the problem.
          example: Precondition Failed
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api422CustomError2:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 422
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: There are no changes to be activated.
        title:
          type: string
          description: A summary of the problem.
          example: Unprocessable Entity
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api423CustomError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 423
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: There is already an activation running.
        title:
          type: string
          description: A summary of the problem.
          example: Locked
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api428DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 428
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The required If-Match header is missing.
        title:
          type: string
          description: A summary of the problem.
          example: Precondition Required
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    ActivationExtensionFields:
      type: object
      properties:
        sites:
          type: array
          description: Sites affected by this activation
          example: *id104
          items:
            type: string
        is_running:
          type: boolean
          description: If the activation is still running
          example: false
        force_foreign_changes:
          type: boolean
          description: A boolean flag indicating that even changes which do not originate
            from the user requesting the activation shall be activated
          example: false
        time_started:
          type: string
          format: date-time
          description: The date and time the activation started.
          example: '2023-02-21T17:34:12+00:00'
        changes:
          type: array
          description: The changes in this activation
          items:
            $ref: '#/components/schemas/ChangesFields'
      additionalProperties: false
    ActivationRunResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: activation_run
          description: The domain type of the object.
        id:
          type: string
          format: uuid
          description: The unique identifier for this activation run.
          example: 84b18e42-355e-4f13-80b6-404bd8f21149
        title:
          type: string
          description: The activation run status.
          example: 'Activation status: In progress.'
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The activation run attributes.
          example:
            changes:
            - id: da5430a5-6d0a-48ae-9efd-0563482a3b36
              action_name: edit-host
              text: Modified host heute.
              user_id: cmkadmin
              time: '2023-01-20T16:31:51.362057+00:00'
            is_running: false
            activate_foreign: true
            time_started: '2023-01-20T16:31:54.306846+00:00'
            sites:
            - heute
            comment: ''
          $ref: '#/components/schemas/ActivationExtensionFields'
      required:
      - links
      additionalProperties: false
    ActionResultObjectValue:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        value:
          type: object
          example:
            duration: 5 seconds.
          additionalProperties: {}
      required:
      - links
      - value
      additionalProperties: false
    ActionResultObject:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        resultType:
          type: string
          description: The type of the result.
          enum: &id105
          - object
          - scalar
        extensions:
          type: object
          description: Some attributes alongside the result.
          example: &id106
            some: values
          additionalProperties: {}
        result:
          description: The result of the action. In this case, an object.
          $ref: '#/components/schemas/ActionResultObjectValue'
      required:
      - links
      additionalProperties: false
    Api404DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The requested object has not be found.
        title:
          type: string
          description: A summary of the problem.
          example: Not Found
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    AgentObject:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: agent
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          type: object
          description: All the attributes of the domain object.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    AgentCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: agent
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of agent objects.
          items:
            $ref: '#/components/schemas/AgentObject'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    DomainObject:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          type: string
          description: The "domain-type" of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          type: object
          description: All the attributes of the domain object.
          additionalProperties: {}
      required:
      - domainType
      - links
      additionalProperties: false
    Api409DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 409
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The request is in conflict with the stored resource.
        title:
          type: string
          description: A summary of the problem.
          example: Conflict
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    ActionResultScalarValue:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        value:
          type: string
          example: Done.
      required:
      - links
      - value
      additionalProperties: false
    ActionResultScalar:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        resultType:
          type: string
          description: The type of the result.
          enum: *id105
        extensions:
          type: object
          description: Some attributes alongside the result.
          example: *id106
          additionalProperties: {}
        result:
          description: The scalar result of the action.
          $ref: '#/components/schemas/ActionResultScalarValue'
      required:
      - links
      additionalProperties: false
    AgentSign:
      type: object
      properties:
        key_id:
          type: integer
          description: The id under that the desired agent signature key is stored
          example: 42
          minimum: 1
        passphrase:
          type: string
          description: The password to unlock the agent signature key
          example: sw0rdfish
      required:
      - key_id
      - passphrase
      additionalProperties: false
    AuditLogExtension:
      type: object
      properties:
        time:
          type: integer
          description: Timestamp of when the event occurred
        user_id:
          type: string
          description: User id of whom provoked the event
        action:
          type: string
          description: Action that was performed
        summary:
          type: string
          description: Summary of the event
        details:
          type: string
          description: Details of the event
        object_type:
          type:
          - string
          - 'null'
          description: Object type associated to the event
        object_name:
          type:
          - string
          - 'null'
          description: Object name associated to the event
      additionalProperties: false
    AuditLogEntry:
      type: object
      properties:
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        extensions:
          description: Data and Meta-Data of this audit log entry.
          $ref: '#/components/schemas/AuditLogExtension'
      additionalProperties: false
    AuditLogEntryCollection:
      type: object
      properties:
        value:
          type: array
          description: A list of audit log objects.
          items:
            $ref: '#/components/schemas/AuditLogEntry'
      additionalProperties: false
    Params:
      type: object
      properties:
        strict:
          description: Whether to use strict matching
          example: true
        group_type:
          type: string
          description: The group type
          example: host
        group_id:
          type: string
          description: The group id
          example: my_group
        world:
          type: string
          description: World field
          example: Earth
        presentation:
          type: string
          description: Presentation field
          example: lines
        mode:
          type: string
          description: Mode field
          example: template
        datasource:
          type: string
          description: Datasource field
          example: services
        single_infos:
          type: array
          description: Single infos field
          example:
          - my_info
          items:
            type: string
      additionalProperties: true
    Request:
      type: object
      properties:
        value:
          type: string
          default: ''
          description: Value used for filtering autocomplete results
          example: central_site
        parameters:
          description: Parameters related to the autocompleter being invoked
          example:
            strict: false
            context: {}
          $ref: '#/components/schemas/Params'
      additionalProperties: false
    Choice:
      type: object
      properties:
        id:
          type: string
          description: The id of the choice.
        value:
          type: string
          description: The display value of the choice.
      additionalProperties: false
    Response:
      type: object
      properties:
        choices:
          type: array
          description: A list of choices.
          items:
            $ref: '#/components/schemas/Choice'
      additionalProperties: false
    AuxTagAttrsResponse:
      type: object
      properties:
        topic:
          type: string
          description: Different tags can be grouped in topics to make the visualization
            and selections in the GUI more comfortable
          example: Monitoring agents
          minLength: 1
        help:
          type: string
          description: The help of the Auxiliary tag
          example: AuxTagExampleHelp
      required:
      - help
      - topic
      additionalProperties: false
    AuxTagResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: aux_tag
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The Auxiliary Tag attributes.
          example: &id107
            id: snmp
            title: Monitoring via SNMP
            topic: Monitoring agents
            help: Your help text
          $ref: '#/components/schemas/AuxTagAttrsResponse'
      required:
      - links
      additionalProperties: false
    AuxTagResponseCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: aux_tag
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of site configuration objects.
          example:
          - links: []
            domainType: aux_tag
            id: snmp
            title: Monitoring via SNMP
            members: {}
            extensions: *id107
          items:
            $ref: '#/components/schemas/AuxTagResponse'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    AuxTagAttrsUpdate:
      type: object
      properties:
        topic:
          type: string
          description: Different tags can be grouped in topics to make the visualization
            and selections in the GUI more comfortable
          example: Monitoring agents
          minLength: 1
        title:
          type: string
          description: The title of the Auxiliary tag
          example: AuxTagExampleTitle
          minLength: 1
        help:
          type: string
          description: The help of the Auxiliary tag
          example: AuxTagExampleHelp
      additionalProperties: false
    AuxTagAttrsCreate:
      type: object
      properties:
        aux_tag_id:
          type:
          - string
          - 'null'
          description: An auxiliary tag id
          example: ip-v4
          pattern: ^[-0-9a-zA-Z_]+\Z
        topic:
          type: string
          description: Different tags can be grouped in topics to make the visualization
            and selections in the GUI more comfortable
          example: Monitoring agents
          minLength: 1
        title:
          type: string
          description: The title of the Auxiliary tag
          example: AuxTagExampleTitle
          minLength: 1
        help:
          type: string
          default: ''
          description: The help of the Auxiliary tag
          example: AuxTagExampleHelp
      required:
      - aux_tag_id
      - title
      - topic
      additionalProperties: false
    StatusLogInfo:
      type: object
      properties:
        JobProgressUpdate:
          type: array
          description: The progress update logs of the background job
          example:
          - Parsed configuration
          - Saved configuration
          items:
            type: string
        JobResult:
          type: array
          description: The result logs of the background job
          example:
          - Job finished
          items:
            type: string
        JobException:
          type: array
          description: The exception logs of the background job
          example:
          - error_1
          - error_2
          items:
            type: string
      additionalProperties: false
    BackgroundJobStatus:
      type: object
      properties:
        state:
          type: string
          description: The state of the background job
          example: finished
        log_info:
          description: The logs of the background job
          example:
            JobProgressUpdate:
            - Parsed configuration
            - Saved configuration
            JobResult:
            - Job finished
            JobException:
            - error_1
            - error_2
          $ref: '#/components/schemas/StatusLogInfo'
      required:
      - state
      additionalProperties: false
    BackgroundJobSnapshot:
      type: object
      properties:
        site_id:
          type: string
          description: The site ID where the background job is located
          example: foobar
        status:
          description: The status of the background job
          example: {}
          $ref: '#/components/schemas/BackgroundJobStatus'
        active:
          type: boolean
          description: This field indicates if the background job is running.
          example: true
      required:
      - active
      - site_id
      additionalProperties: false
    BackgroundJobSnapshotObject:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: background_job
          description: The domain type of the object
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The attributes of the background job
          $ref: '#/components/schemas/BackgroundJobSnapshot'
      required:
      - links
      additionalProperties: false
    ConnectedSiteAttributes:
      type: object
      properties:
        site_id:
          type: string
          description: The site id.
          example: heute_remote_1
      required:
      - site_id
      additionalProperties: false
    BrokerConnectionExtension:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier of the connection.
        connecter:
          description: The attributes of the site initiating the connection.
          example:
            site_id: heute_remote_1
          $ref: '#/components/schemas/ConnectedSiteAttributes'
        connectee:
          description: The attributes of the site accepting the connection.
          example:
            site_id: heute_remote_2
          $ref: '#/components/schemas/ConnectedSiteAttributes'
      additionalProperties: false
    BrokerConnectionResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: broker_connection
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The configuration attributes of a broker peer to peer connection.
          example:
            domainType: broker_connection
            id: connection_1
            connecter:
              site_id: heute_remote_1
            connectee:
              site_id: heute_remote_2
          $ref: '#/components/schemas/BrokerConnectionExtension'
      required:
      - links
      additionalProperties: false
    BrokerConnectionResponseCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: broker_connection
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of broker peer to peer configuration objects.
          example:
          - domainType: broker_connection
            id: connection_1
            connecter:
              site_id: heute_remote_1
            connectee:
              site_id: heute_remote_2
          items:
            $ref: '#/components/schemas/BrokerConnectionResponse'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    SiteId:
      type: object
      properties:
        site_id:
          type: string
          description: The site ID.
          example: prod
      required:
      - site_id
      additionalProperties: false
    BrokerConnectionConfig:
      type: object
      properties:
        connecter:
          description: The ID of the site initiating the connection.
          example:
            site_id: remote_1
          $ref: '#/components/schemas/SiteId'
        connectee:
          description: The ID of the site accepting the connection.
          example:
            site_id: remote_2
          $ref: '#/components/schemas/SiteId'
      required:
      - connectee
      - connecter
      additionalProperties: false
    BrokerConnectionRequestUpdate:
      type: object
      properties:
        connection_config:
          description: The connection configuration.
          example:
            connecter:
              site_id: remote_1
            connectee:
              site_id: remote_2
          $ref: '#/components/schemas/BrokerConnectionConfig'
      required:
      - connection_config
      additionalProperties: false
    BrokerConnectionRequestCreate:
      type: object
      properties:
        connection_id:
          type: string
          description: An unique connection id for the broker connection
          example: connection_1
          pattern: ^[-a-z0-9A-Z_]+$
        connection_config:
          description: The connection configuration.
          example:
            connecter:
              site_id: remote_1
            connectee:
              site_id: remote_2
          $ref: '#/components/schemas/BrokerConnectionConfig'
      required:
      - connection_config
      - connection_id
      additionalProperties: false
    BIAggregationStateResponse:
      type: object
      properties:
        aggregations:
          type: object
          description: The Aggregation state
          example: {}
          additionalProperties: {}
        missing_sites:
          type: array
          description: The missing sites
          example:
          - beta
          - heute
          items:
            type: string
        missing_aggr:
          type: array
          description: the missing aggregations
          example:
          - Host heute
          items:
            type: string
      additionalProperties: false
    CollectionItem:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Link'
      discriminator:
        propertyName: domainType
        mapping:
          link: '#/components/schemas/Link'
    DomainObjectCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          type: string
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          description: The collection itself. Each entry in here is part of the collection.
          type: array
          items:
            $ref: '#/components/schemas/CollectionItem'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    BIAggregationGroups:
      type: object
      properties:
        names:
          type: array
          description: List of group names.
          example:
          - group1
          - group2
          items:
            type: string
        paths:
          type: array
          description: List of group paths.
          example:
          - - path
            - of
            - group1
          items:
            type: array
            description: List of group path segments.
            items:
              type: string
      additionalProperties: false
    BIEmptySearch:
      type: object
      properties:
        type:
          default: empty
          description: Empty search.
      required:
      - type
      additionalProperties: false
    LabelCondition:
      type: object
      properties:
        operator:
          type: string
          description: Condition operator.
          enum:
          - and
          - or
          - not
        label:
          type: string
          description: Label name and value.
      required:
      - label
      - operator
      additionalProperties: false
    LabelGroupCondition:
      type: object
      properties:
        operator:
          type: string
          default: and
          description: Condition operator.
          enum:
          - and
          - or
          - not
        label_group:
          type: array
          description: Label conditions.
          items:
            $ref: '#/components/schemas/LabelCondition'
      required:
      - label_group
      additionalProperties: false
    BIAllHostsChoice:
      type: object
      properties:
        type:
          default: all_hosts
          description: Select all hosts.
      required:
      - type
      additionalProperties: false
    BIHostNameRegexChoice:
      type: object
      properties:
        type:
          default: host_name_regex
          description: Select hosts based on a regex against their host name.
        pattern:
          type: string
          description: Regex pattern.
          example: testhostn.*
      required:
      - pattern
      - type
      additionalProperties: false
    BIHostAliasRegexChoice:
      type: object
      properties:
        type:
          default: host_alias_regex
          description: Select hosts based on a regex against their alias.
        pattern:
          type: string
          description: Regex pattern.
          example: testali.*
      required:
      - pattern
      - type
      additionalProperties: false
    BIHostChoice:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/BIAllHostsChoice'
      - $ref: '#/components/schemas/BIHostNameRegexChoice'
      - $ref: '#/components/schemas/BIHostAliasRegexChoice'
      discriminator:
        propertyName: type
        mapping:
          all_hosts: '#/components/schemas/BIAllHostsChoice'
          host_name_regex: '#/components/schemas/BIHostNameRegexChoice'
          host_alias_regex: '#/components/schemas/BIHostAliasRegexChoice'
    HostConditions:
      type: object
      properties:
        host_folder:
          type: string
          description: Host folder.
          example: servers/groupA
        host_label_groups:
          type: array
          description: Host label conditions. Although all items in this list have
            a default operator value, the operator value for the the first item in
            the list does not have any effect.
          example: &id108
          - label_group:
            - operator: and
              label: db:mssql
          - operator: and
            label_group:
            - operator: and
              label: network/primary:yes
          items:
            $ref: '#/components/schemas/LabelGroupCondition'
        host_tags:
          type: object
          description: Host tags.
          example: &id109 {}
          additionalProperties: {}
        host_choice:
          description: Host selection.
          example: &id110
            type: all_hosts
          $ref: '#/components/schemas/BIHostChoice'
      required:
      - host_choice
      - host_folder
      - host_label_groups
      - host_tags
      additionalProperties: false
    Host:
      type: object
      properties:
        type:
          default: host
          description: Create nodes from the matched hosts themselves.
      required:
      - type
      additionalProperties: false
    Parent:
      type: object
      properties:
        type:
          default: parent
          description: Create nodes for all the parents of matched hosts.
      required:
      - type
      additionalProperties: false
    Child:
      type: object
      properties:
        type:
          default: child
          description: Create nodes for all the children of matched hosts.
      required:
      - type
      additionalProperties: false
    ChildWith:
      type: object
      properties:
        type:
          default: child_with
          description: Create nodes for all the children of matched hosts that also
            match other conditions.
        conditions:
          description: Extra conditions for the child.
          $ref: '#/components/schemas/HostConditions'
        host_choice:
          description: Child host selector.
          example:
            type: all_hosts
          $ref: '#/components/schemas/BIHostChoice'
      required:
      - conditions
      - host_choice
      - type
      additionalProperties: false
    ReferTo:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Host'
      - $ref: '#/components/schemas/Parent'
      - $ref: '#/components/schemas/Child'
      - $ref: '#/components/schemas/ChildWith'
      discriminator:
        propertyName: type
        mapping:
          host: '#/components/schemas/Host'
          parent: '#/components/schemas/Parent'
          child: '#/components/schemas/Child'
          child_with: '#/components/schemas/ChildWith'
    BIHostSearch:
      type: object
      properties:
        type:
          default: host_search
          description: Host search.
        conditions:
          description: Host conditions.
          $ref: '#/components/schemas/HostConditions'
        refer_to:
          description: Create nodes based on the matched hosts, their parents or their
            children.
          $ref: '#/components/schemas/ReferTo'
      required:
      - conditions
      - refer_to
      - type
      additionalProperties: false
    ServiceConditions:
      type: object
      properties:
        host_folder:
          type: string
          description: Host folder.
          example: servers/groupA
        host_label_groups:
          type: array
          description: Host label conditions. Although all items in this list have
            a default operator value, the operator value for the the first item in
            the list does not have any effect.
          example: *id108
          items:
            $ref: '#/components/schemas/LabelGroupCondition'
        host_tags:
          type: object
          description: Host tags.
          example: *id109
          additionalProperties: {}
        host_choice:
          description: Host selection.
          example: *id110
          $ref: '#/components/schemas/BIHostChoice'
        service_regex:
          type: string
          description: Service name regex.
          example: Filesystem.*
        service_label_groups:
          type: array
          description: Service label conditions. Although all items in this list have
            a default operator value, the operator value for the the first item in
            the list does not have any effect.
          example:
          - label_group:
            - operator: and
              label: db:mssql
          - operator: and
            label_group:
            - operator: and
              label: network/primary:yes
          items:
            $ref: '#/components/schemas/LabelGroupCondition'
      required:
      - host_choice
      - host_folder
      - host_label_groups
      - host_tags
      - service_label_groups
      - service_regex
      additionalProperties: false
    BIServiceSearch:
      type: object
      properties:
        type:
          default: service_search
          description: Service search.
        conditions:
          description: Service conditions.
          $ref: '#/components/schemas/ServiceConditions'
      required:
      - conditions
      - type
      additionalProperties: false
    BIFixedArgumentsSearchToken:
      type: object
      properties:
        key:
          type: string
          description: Argument name.
        values:
          type: array
          description: Argument value.
          items:
            type: string
      required:
      - key
      - values
      additionalProperties: false
    BIFixedArgumentsSearch:
      type: object
      properties:
        type:
          default: fixed_arguments
          description: Fixed search arguments.
        arguments:
          type: array
          description: Search arguments.
          items:
            $ref: '#/components/schemas/BIFixedArgumentsSearchToken'
      required:
      - arguments
      - type
      additionalProperties: false
    BISearch:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/BIEmptySearch'
      - $ref: '#/components/schemas/BIHostSearch'
      - $ref: '#/components/schemas/BIServiceSearch'
      - $ref: '#/components/schemas/BIFixedArgumentsSearch'
      discriminator:
        propertyName: type
        mapping:
          empty: '#/components/schemas/BIEmptySearch'
          host_search: '#/components/schemas/BIHostSearch'
          service_search: '#/components/schemas/BIServiceSearch'
          fixed_arguments: '#/components/schemas/BIFixedArgumentsSearch'
    BIParams:
      type: object
      properties:
        arguments:
          type: array
          description: List of arguments.
          example:
          - testhostParams
          items:
            type: string
      required:
      - arguments
      additionalProperties: false
    BICallARuleAction:
      type: object
      properties:
        type:
          default: call_a_rule
          description: Call a BI rule to create nodes.
        rule_id:
          type: string
          description: ID of the rule.
          example: test_rule_1
        params:
          description: Parameters for the rule.
          example:
            arguments: []
          $ref: '#/components/schemas/BIParams'
      required:
      - params
      - rule_id
      - type
      additionalProperties: false
    BIStateOfHostAction:
      type: object
      properties:
        type:
          default: state_of_host
          description: Create nodes representing the state of hosts.
        host_regex:
          type: string
          description: Host name regex.
          example: testhost
      required:
      - host_regex
      - type
      additionalProperties: false
    BIStateOfServiceAction:
      type: object
      properties:
        type:
          default: state_of_service
          description: Create nodes representing the state of services.
        host_regex:
          type: string
          description: Host name regex.
          example: testhost
        service_regex:
          type: string
          description: Service name regex.
          example: testservice
      required:
      - host_regex
      - service_regex
      - type
      additionalProperties: false
    BIStateOfRemainingServicesAction:
      type: object
      properties:
        type:
          default: state_of_remaining_services
          description: Create nodes for each service that is not contained in any
            other node of this aggregation.
        host_regex:
          type: string
          description: Host name regex.
          example: testhost
      required:
      - host_regex
      - type
      additionalProperties: false
    BIAction:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/BICallARuleAction'
      - $ref: '#/components/schemas/BIStateOfHostAction'
      - $ref: '#/components/schemas/BIStateOfServiceAction'
      - $ref: '#/components/schemas/BIStateOfRemainingServicesAction'
      discriminator:
        propertyName: type
        mapping:
          call_a_rule: '#/components/schemas/BICallARuleAction'
          state_of_host: '#/components/schemas/BIStateOfHostAction'
          state_of_service: '#/components/schemas/BIStateOfServiceAction'
          state_of_remaining_services: '#/components/schemas/BIStateOfRemainingServicesAction'
    BINodeGenerator:
      type: object
      properties:
        search:
          description: Search criteria.
          example:
            type: empty
          $ref: '#/components/schemas/BISearch'
        action:
          description: Action on search results.
          example:
            type: state_of_host
            host_regex: ''
          $ref: '#/components/schemas/BIAction'
      required:
      - action
      - search
      additionalProperties: false
    BIAggregationVisualization:
      type: object
      properties:
        ignore_rule_styles:
          type: boolean
          description: Ignore rule styles.
          example: false
        layout_id:
          type: string
          description: ID of the layout.
          example: radial_layout2
        line_style:
          type: string
          description: Line style to use.
          example: round
      required:
      - ignore_rule_styles
      - layout_id
      - line_style
      additionalProperties: false
    BIAggregationComputationOptions:
      type: object
      properties:
        disabled:
          type: boolean
          description: Enable or disable this computation option.
          example: false
        use_hard_states:
          type: boolean
          description: Bases state computation only on hard states instead of hard
            and soft states.
          example: false
        escalate_downtimes_as_warn:
          type: boolean
          description: Escalates downtimes based on aggregated WARN state instead
            of CRIT state.
          example: false
        freeze_aggregations:
          type: boolean
          description: Generates the aggregations initially, then doesn't update them
            automatically.
          example: false
      required:
      - disabled
      - escalate_downtimes_as_warn
      - use_hard_states
      additionalProperties: false
    BIAggregationEndpoint:
      type: object
      properties:
        id:
          type: string
          description: The unique aggregation id
          example: aggr1
        comment:
          type:
          - string
          - 'null'
          description: An optional comment that may be used to explain the purpose
            of this object.
          example: Rule comment
        customer:
          type:
          - string
          - 'null'
          description: 'CME Edition only: The customer id for this aggregation.'
          example: customer1
        groups:
          description: Groups.
          example:
            names:
            - groupA
            - groupB
            paths:
            - - path
              - group
              - a
            - - path
              - group
              - b
          $ref: '#/components/schemas/BIAggregationGroups'
        node:
          description: Node generation.
          example:
            search:
              type: empty
            action:
              type: state_of_host
              host_regex: ''
          $ref: '#/components/schemas/BINodeGenerator'
        aggregation_visualization:
          description: Aggregation visualization options.
          example:
            ignore_rule_styles: false
            layout_id: builtin_default
            line_style: round
          $ref: '#/components/schemas/BIAggregationVisualization'
        computation_options:
          description: Computation options.
          example:
            disabled: false
            use_hard_states: false
            escalate_downtimes_as_warn: false
            freeze_aggregations: false
          $ref: '#/components/schemas/BIAggregationComputationOptions'
        pack_id:
          type: string
          description: The identifier of the BI pack.
          example: pack1
      required:
      - aggregation_visualization
      - computation_options
      - groups
      - id
      - node
      - pack_id
      additionalProperties: false
    BINodeVisNoneStyle:
      type: object
      properties:
        type:
          default: none
          description: No specific child node visualization.
        style_config:
          default: {}
          description: No configuration options for this style.
      required:
      - style_config
      - type
      additionalProperties: false
    BINodeVisBlockStyle:
      type: object
      properties:
        type:
          default: block
          description: Visualize child nodes as a block.
        style_config:
          default: &id111 {}
          description: No configuration options for this style.
      required:
      - style_config
      - type
      additionalProperties: false
    BINodeVisHierarchyStyleConfig:
      type: object
      properties:
        layer_height:
          type: integer
          description: Distance between layers.
          example: 85
        node_size:
          type: integer
          description: Distance between nodes within the same layer.
          example: 40
        rotation:
          type: integer
          description: Rotation of the hierarchy, in degrees.
          example: 180
      required:
      - layer_height
      - node_size
      - rotation
      additionalProperties: false
    BINodeVisHierarchyStyle:
      type: object
      properties:
        type:
          default: hierarchy
          description: Visualize child nodes in a hierarchy.
        style_config:
          description: Configuration options for this style.
          $ref: '#/components/schemas/BINodeVisHierarchyStyleConfig'
      required:
      - style_config
      - type
      additionalProperties: false
    BINodeVisRadialStyleConfig:
      type: object
      properties:
        degree:
          type: integer
          description: Limits the child nodes to be within this angle.
        radius:
          type: integer
          description: Distance between nodes.
        rotation:
          type: integer
          description: Starting point of the angle, in degrees.
      required:
      - degree
      - radius
      - rotation
      additionalProperties: false
    BINodeVisRadialStyle:
      type: object
      properties:
        type:
          default: radial
          description: Visualize child nodes radially.
        style_config:
          description: Configuration options for this style.
          $ref: '#/components/schemas/BINodeVisRadialStyleConfig'
      required:
      - style_config
      - type
      additionalProperties: false
    BINodeVisForceStyle:
      type: object
      properties:
        type:
          default: force
          description: Visualize child nodes based on force between them.
        style_config:
          default: {}
          description: No configuration options for this style.
      required:
      - style_config
      - type
      additionalProperties: false
    BINodeVisLayoutStyle:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/BINodeVisNoneStyle'
      - $ref: '#/components/schemas/BINodeVisBlockStyle'
      - $ref: '#/components/schemas/BINodeVisHierarchyStyle'
      - $ref: '#/components/schemas/BINodeVisRadialStyle'
      - $ref: '#/components/schemas/BINodeVisForceStyle'
      discriminator:
        propertyName: type
        mapping:
          none: '#/components/schemas/BINodeVisNoneStyle'
          block: '#/components/schemas/BINodeVisBlockStyle'
          hierarchy: '#/components/schemas/BINodeVisHierarchyStyle'
          radial: '#/components/schemas/BINodeVisRadialStyle'
          force: '#/components/schemas/BINodeVisForceStyle'
    BIRuleProperties:
      type: object
      properties:
        title:
          type: string
          description: Title of the rule.
          example: Rule title
        comment:
          type: string
          description: Rule comment.
          example: Rule comment
        docu_url:
          type: string
          description: URL to more documentation.
          example: Rule documentation
        icon:
          type: string
          description: Icon name for the rule.
          example: icon1.png
        state_messages:
          type: object
          description: State messages.
          example: {}
          additionalProperties: {}
      required:
      - comment
      - docu_url
      - icon
      - state_messages
      - title
      additionalProperties: false
    BIAggregationFunctionBest:
      type: object
      properties:
        type:
          default: best
          description: Take the best state from all child nodes.
        count:
          type: integer
          description: Take the nth best state.
        restrict_state:
          type: integer
          enum:
          - 0
          - 1
          - 2
          description: Maximum severity for this node.
      required:
      - count
      - restrict_state
      - type
      additionalProperties: false
    BIAggregationFunctionWorst:
      type: object
      properties:
        type:
          default: worst
          description: Take the worst state from all child nodes.
        count:
          type: integer
          description: Take the nth worst state.
          example: 2
        restrict_state:
          type: integer
          enum:
          - 0
          - 1
          - 2
          description: Maximum severity for this node.
      required:
      - count
      - restrict_state
      - type
      additionalProperties: false
    BIAggregationFunctionCountSettings:
      type: object
      properties:
        type:
          type: string
          enum:
          - count
          - percentage
          description: Explicit number or percentage.
        value:
          type: integer
          description: Value.
      required:
      - type
      - value
      additionalProperties: false
    BIAggregationFunctionCountOK:
      type: object
      properties:
        type:
          default: count_ok
          description: Count states from child nodes, defaulting to CRIT if both levels
            aren't met.
        levels_ok:
          description: Required number of OK child nodes for total state of OK.
          $ref: '#/components/schemas/BIAggregationFunctionCountSettings'
        levels_warn:
          description: Required number of OK child nodes for total state of WARN.
          $ref: '#/components/schemas/BIAggregationFunctionCountSettings'
      required:
      - levels_ok
      - levels_warn
      - type
      additionalProperties: false
    BIAggregationFunction:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/BIAggregationFunctionBest'
      - $ref: '#/components/schemas/BIAggregationFunctionWorst'
      - $ref: '#/components/schemas/BIAggregationFunctionCountOK'
      discriminator:
        propertyName: type
        mapping:
          best: '#/components/schemas/BIAggregationFunctionBest'
          worst: '#/components/schemas/BIAggregationFunctionWorst'
          count_ok: '#/components/schemas/BIAggregationFunctionCountOK'
    BIRuleComputationOptions:
      type: object
      properties:
        disabled:
          type: boolean
          description: Enable or disable this computation option.
          example: false
      required:
      - disabled
      additionalProperties: false
    BIRuleEndpoint:
      type: object
      properties:
        id:
          type: string
          description: The unique rule id
          example: rule1
        nodes:
          type: array
          description: A list of nodes for for this rule
          example: []
          items:
            $ref: '#/components/schemas/BINodeGenerator'
        params:
          description: Parameters.
          example:
            arguments:
            - foo
            - bar
          $ref: '#/components/schemas/BIParams'
        node_visualization:
          description: Node visualization.
          example:
            type: block
            style_config: *id111
          $ref: '#/components/schemas/BINodeVisLayoutStyle'
        properties:
          description: Rule properties.
          example:
            title: ''
            comment: ''
            docu_url: ''
            icon: ''
            state_messages: {}
          $ref: '#/components/schemas/BIRuleProperties'
        aggregation_function:
          description: Aggregation function.
          example:
            type: best
            count: 1
            restrict_state: 2
          $ref: '#/components/schemas/BIAggregationFunction'
        computation_options:
          description: Computation options.
          example:
            disabled: false
          $ref: '#/components/schemas/BIRuleComputationOptions'
        pack_id:
          type: string
          description: The identifier of the BI pack.
          example: pack1
      required:
      - aggregation_function
      - computation_options
      - id
      - node_visualization
      - nodes
      - pack_id
      - params
      - properties
      additionalProperties: false
    BIPackEndpoint:
      type: object
      properties:
        title:
          type: string
          description: The title of the BI pack.
          example: BI Title
        contact_groups:
          type: array
          description: A list of contact group identifiers.
          example:
          - contact
          - contactgroup_b
          items:
            type: string
            example: important_persons
        public:
          type: boolean
          description: Should the BI pack be public or not.
          example: 'false'
      required:
      - contact_groups
      - public
      - title
      additionalProperties: false
    BIAggregationStateRequest:
      type: object
      properties:
        filter_names:
          type: array
          description: Filter by names
          example: *id112
          items:
            type: string
        filter_groups:
          type: array
          description: Filter by group
          example: *id113
          items:
            type: string
      additionalProperties: false
    Api403CustomError1:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 403
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: Unauthorized to read the global settings
        title:
          type: string
          description: A summary of the problem.
          example: Forbidden
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    AgentControllerCertificateSettings:
      type: object
      properties:
        lifetime_in_months:
          type: integer
          description: Lifetime of agent controller certificates in months
          example: 60
      required:
      - lifetime_in_months
      additionalProperties: false
    Api403CustomError2:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 403
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: You do not have the permission for agent pairing.
        title:
          type: string
          description: A summary of the problem.
          example: Forbidden
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    X509PEM:
      type: object
      properties:
        cert:
          type: string
          description: PEM-encoded X.509 certificate.
      required:
      - cert
      additionalProperties: false
    X509ReqPEMUUID:
      type: object
      properties:
        csr:
          type: string
          description: PEM-encoded X.509 CSR. The CN must a valid version-4 UUID.
          example: '-----BEGIN CERTIFICATE REQUEST-----

            ...

            -----END CERTIFICATE REQUEST-----

            '
      required:
      - csr
      additionalProperties: false
    Api403CustomError3:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 403
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: You do not have the permission for agent pairing.
        title:
          type: string
          description: A summary of the problem.
          example: Forbidden
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    CommentAttributes:
      type: object
      properties:
        host_name:
          type: string
          description: The host name.
        id:
          type: integer
          description: The comment ID
        author:
          type: string
          description: The author of the comment
        comment:
          type: string
          description: The comment itself
        persistent:
          type: boolean
          description: If true, the comment will be persisted
        entry_time:
          type: string
          description: The timestamp from when the comment was created.
        service_description:
          type: string
          description: The service name the comment belongs to.
        is_service:
          type: boolean
          description: True if the comment is from a service or else it's False.
        site_id:
          type: string
          description: The site id of the downtime.
          example: production
      required:
      - author
      - comment
      - entry_time
      - host_name
      - id
      - is_service
      - persistent
      - site_id
      additionalProperties: false
    CommentObject:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: comment
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The attributes of a service/host comment.
          $ref: '#/components/schemas/CommentAttributes'
      required:
      - links
      additionalProperties: false
    CommentCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: comment
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of comment objects.
          items:
            $ref: '#/components/schemas/CommentObject'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    DeleteCommentById:
      type: object
      properties:
        delete_type:
          type: string
          description: How you would like to delete comments.
          enum: &id114
          - by_id
          - query
          - params
          example: delete_by_query
        comment_id:
          type: integer
          description: An integer representing a comment ID.
          example: 21
        site_id:
          type: string
          description: The ID of an existing site
          example: production
      required:
      - delete_type
      - site_id
      additionalProperties: false
    DeleteCommentsByQuery:
      type: object
      properties:
        delete_type:
          type: string
          description: How you would like to delete comments.
          enum: *id114
          example: delete_by_query
        query:
          description: An query expression of the Livestatus 'comments' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: '{"op": "=", "left": "host_name", "right": "example.com"}'
          $ref: '#/components/schemas/Expr'
      required:
      - delete_type
      additionalProperties: false
    DeleteCommentsByParams:
      type: object
      properties:
        delete_type:
          type: string
          description: How you would like to delete comments.
          enum: *id114
          example: delete_by_query
        host_name:
          type: string
          description: The host name
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
        service_descriptions:
          type: array
          description: If set, the comments for the listed services of the specified
            host will be removed. If a service has multiple comments then all will
            be removed
          example:
          - CPU load
          - Memory
          items:
            type: string
            example: CPU utilization
      required:
      - delete_type
      - host_name
      additionalProperties: false
    DeleteComments:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/DeleteCommentById'
      - $ref: '#/components/schemas/DeleteCommentsByQuery'
      - $ref: '#/components/schemas/DeleteCommentsByParams'
      discriminator:
        propertyName: delete_type
        mapping:
          by_id: '#/components/schemas/DeleteCommentById'
          query: '#/components/schemas/DeleteCommentsByQuery'
          params: '#/components/schemas/DeleteCommentsByParams'
    CreateHostComment:
      type: object
      properties:
        comment:
          type: string
          description: The comment which will be stored for the host.
          example: Windows
        persistent:
          type: boolean
          default: false
          description: If set, the comment will persist a restart.
          example: false
        comment_type:
          type: string
          description: How you would like to leave a comment.
          enum: &id115
          - host
          - host_by_query
          example: host
        host_name:
          type: string
          description: The host name
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
      required:
      - comment
      - comment_type
      - host_name
      additionalProperties: false
    CreateHostQueryComment:
      type: object
      properties:
        comment:
          type: string
          description: The comment which will be stored for the host.
          example: Windows
        persistent:
          type: boolean
          default: false
          description: If set, the comment will persist a restart.
          example: false
        comment_type:
          type: string
          description: How you would like to leave a comment.
          enum: *id115
          example: host
        query:
          description: An query expression of the Livestatus 'hosts' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: '{"op": "and", "expr": [{"op": "=", "left": "name", "right": "example.com"},
            {"op": "!=", "left": "state", "right": "0"}]}'
          $ref: '#/components/schemas/Expr'
      required:
      - comment
      - comment_type
      additionalProperties: false
    CreateHostRelatedComment:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/CreateHostComment'
      - $ref: '#/components/schemas/CreateHostQueryComment'
      discriminator:
        propertyName: comment_type
        mapping:
          host: '#/components/schemas/CreateHostComment'
          host_by_query: '#/components/schemas/CreateHostQueryComment'
    CreateServiceComment:
      type: object
      properties:
        comment:
          type: string
          description: The comment which will be stored for the host.
          example: Windows
        persistent:
          type: boolean
          default: false
          description: If set, the comment will persist a restart.
          example: false
        comment_type:
          type: string
          description: How you would like to leave a comment.
          enum: &id116
          - service
          - service_by_query
          example: service
        host_name:
          type: string
          description: The host name
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
        service_description:
          type: string
          description: The service name for which the comment is for. No exception
            is raised when the specified service name does not exist
          example: Memory
      required:
      - comment
      - comment_type
      - host_name
      - service_description
      additionalProperties: false
    CreateServiceQueryComment:
      type: object
      properties:
        comment:
          type: string
          description: The comment which will be stored for the host.
          example: Windows
        persistent:
          type: boolean
          default: false
          description: If set, the comment will persist a restart.
          example: false
        comment_type:
          type: string
          description: How you would like to leave a comment.
          enum: *id116
          example: service
        query:
          description: An query expression of the Livestatus 'services' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: '{"op": "=", "left": "description", "right": "Service description"}'
          $ref: '#/components/schemas/Expr'
      required:
      - comment
      - comment_type
      - query
      additionalProperties: false
    CreateServiceRelatedComment:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/CreateServiceComment'
      - $ref: '#/components/schemas/CreateServiceQueryComment'
      discriminator:
        propertyName: comment_type
        mapping:
          service: '#/components/schemas/CreateServiceComment'
          service_by_query: '#/components/schemas/CreateServiceQueryComment'
    UpdateConfigurationEntity:
      type: object
      properties:
        entity_type:
          type: string
          description: Type of configuration entity
          enum:
          - notification_parameter
          - folder
          example: notification_parameter
        entity_type_specifier:
          type: string
          description: Specifier for the entity type
          example: mail
        entity_id:
          type: string
          description: Object id of the configuration entity
          example: b43b060b-3b8c-41cf-8405-dddc6dd02575
        data:
          type: object
          description: The data of the configuration entity
          example: {}
          additionalProperties: {}
      required:
      - data
      - entity_id
      - entity_type
      - entity_type_specifier
      additionalProperties: false
    Api422DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 422
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The request could not be processed.
        title:
          type: string
          description: A summary of the problem.
          example: Unprocessable Entity
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    ValidationMessage:
      type: object
      properties:
        location:
          type: array
          description: Location of the error
          example: []
          items:
            type: string
        message:
          type: string
          description: Error message
          example: ''
        replacement_value:
          type: string
          description: Invalid value
          example: ''
      additionalProperties: false
    ResponseData:
      type: object
      properties:
        validation_errors:
          type:
          - array
          - 'null'
          description: All form spec validation errors
          example: []
          items:
            $ref: '#/components/schemas/ValidationMessage'
      additionalProperties: false
    EditConfigurationEntityResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: configuration_entity
          description: Domain type of the configuration entity
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: Response data for entity creation
          $ref: '#/components/schemas/ResponseData'
      required:
      - links
      additionalProperties: false
    CreateConfigurationEntity:
      type: object
      properties:
        entity_type:
          type: string
          description: Type of configuration entity
          enum:
          - notification_parameter
          - folder
          example: notification_parameter
        entity_type_specifier:
          type: string
          description: Specifier for the entity type
          example: mail
        data:
          type: object
          description: The data of the configuration entity
          example: {}
          additionalProperties: {}
      required:
      - data
      - entity_type
      - entity_type_specifier
      additionalProperties: false
    FolderResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: folder
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          type: object
          description: All the attributes of the domain object.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    FolderResponseCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: folder
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of folder objects.
          items:
            $ref: '#/components/schemas/FolderResponse'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    NotificationParamResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: notification_parameter
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          type: object
          description: All the attributes of the domain object.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    NotificationParamResponseCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: notification_parameter
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of notification parameter objects.
          items:
            $ref: '#/components/schemas/NotificationParamResponse'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    InventoryPathAllowAll:
      type: object
      properties:
        type:
          default: allow_all
          description: Allowed to see the whole tree.
      additionalProperties: false
    InventoryPathForbidAll:
      type: object
      properties:
        type:
          default: forbid_all
          description: Forbidden to see the whole tree.
      additionalProperties: false
    NoRestriction:
      type: object
      properties:
        type:
          default: no_restriction
          description: No restriction on the path.
      additionalProperties: false
    RestrictAll:
      type: object
      properties:
        type:
          default: restrict_all
          description: Restrict all values.
      additionalProperties: false
    RestrictValues:
      type: object
      properties:
        type:
          default: restrict_values
          description: Restrict specific values.
        values:
          type: array
          description: A list of values to be allowed.
          minLength: 1
          items:
            type: string
      required:
      - values
      additionalProperties: false
    PathRestriction:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/NoRestriction'
      - $ref: '#/components/schemas/RestrictAll'
      - $ref: '#/components/schemas/RestrictValues'
      discriminator:
        propertyName: type
        mapping:
          no_restriction: '#/components/schemas/NoRestriction'
          restrict_all: '#/components/schemas/RestrictAll'
          restrict_values: '#/components/schemas/RestrictValues'
    InventoryPathSpecificPath:
      type: object
      properties:
        path:
          type: string
          description: Path to category.
        attributes:
          description: Restrict single values.
          $ref: '#/components/schemas/PathRestriction'
        columns:
          description: Restrict table columns.
          $ref: '#/components/schemas/PathRestriction'
        nodes:
          description: Restrict subcategories.
          $ref: '#/components/schemas/PathRestriction'
      required:
      - path
      additionalProperties: false
    InventoryPathSpecificPaths:
      type: object
      properties:
        type:
          default: specific_paths
          description: Allowed to see parts of the tree.
        paths:
          type: array
          description: A list of paths to be allowed.
          items:
            $ref: '#/components/schemas/InventoryPathSpecificPath'
      required:
      - paths
      additionalProperties: false
    InventoryPaths:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/InventoryPathAllowAll'
      - $ref: '#/components/schemas/InventoryPathForbidAll'
      - $ref: '#/components/schemas/InventoryPathSpecificPaths'
      discriminator:
        propertyName: type
        mapping:
          allow_all: '#/components/schemas/InventoryPathAllowAll'
          forbid_all: '#/components/schemas/InventoryPathForbidAll'
          specific_paths: '#/components/schemas/InventoryPathSpecificPaths'
    ContactGroupExtensions:
      type: object
      properties:
        customer:
          type: string
          description: '[Managed edition only] The customer for which the object is
            configured. This field is required for the following editions: Managed.'
          example: provider
        inventory_paths:
          description: Permitted HW/SW Inventory paths.
          $ref: '#/components/schemas/InventoryPaths'
      additionalProperties: false
    ContactGroup:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: contact_group_config
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: All the attributes of the domain object.
          $ref: '#/components/schemas/ContactGroupExtensions'
      required:
      - links
      additionalProperties: false
    ContactGroupCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: contact_group_config
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of contact group objects.
          items:
            $ref: '#/components/schemas/ContactGroup'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    UpdateContactGroupAttributes:
      type: object
      properties:
        alias:
          type: string
          description: The name used for displaying in the GUI.
          example: Example Group
        inventory_paths:
          description: Permitted HW/SW Inventory paths.
          example:
            type: allow_all
          $ref: '#/components/schemas/InventoryPaths'
        customer:
          type: string
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites.'
          example: provider
      required:
      - alias
      additionalProperties: false
    UpdateContactGroup:
      type: object
      properties:
        name:
          type: string
          description: The name of the contact group.
          example: OnCall
        attributes:
          $ref: '#/components/schemas/UpdateContactGroupAttributes'
      required:
      - attributes
      - name
      additionalProperties: false
    BulkUpdateContactGroup:
      type: object
      properties:
        entries:
          type: array
          description: A list of contact group entries.
          example:
          - name: OnCall
            attributes:
              alias: Not on Sundays
          items:
            $ref: '#/components/schemas/UpdateContactGroup'
      required:
      - entries
      additionalProperties: false
    InputContactGroup:
      type: object
      properties:
        name:
          type: string
          description: The name of the contact group.
          example: OnCall
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*\Z
        alias:
          type: string
          description: The name used for displaying in the GUI.
          example: Not on Sundays.
        inventory_paths:
          description: Permitted HW/SW Inventory paths.
          example:
            type: allow_all
          $ref: '#/components/schemas/InventoryPaths'
        customer:
          type: string
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites. This field is required for the following
            editions: Managed.'
          example: provider
      required:
      - alias
      - name
      additionalProperties: false
    BulkInputContactGroup:
      type: object
      properties:
        entries:
          type: array
          description: A collection of contact group entries.
          example:
          - name: OnCall
            alias: Not on Sundays
          uniqueItems: true
          items:
            $ref: '#/components/schemas/InputContactGroup'
      required:
      - entries
      additionalProperties: false
    BulkDeleteContactGroup:
      type: object
      properties:
        entries:
          type: array
          description: A list of contract group names.
          example:
          - windows
          - panels
          items:
            type: string
            description: The name of the contact group config
            example: windows
      required:
      - entries
      additionalProperties: false
    Api406DefaultError8B5D843281F47B25:
      properties:
        status:
          description: The HTTP status code.
          examples:
          - 406
          title: Status
          type: integer
        title:
          description: A summary of the problem.
          examples:
          - Not Acceptable
          title: Title
          type: string
        detail:
          description: Detailed information on what exactly went wrong.
          examples:
          - The requests accept headers can not be satisfied.
          title: Detail
          type: string
        fields:
          additionalProperties:
            type: string
          description: Detailed error messages on all fields failing validation.
          examples:
          - field: error message
          title: Validation errors
          type: object
        ext:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - {}
          description: Additional information about the error.
          examples:
          - key: value
          title: Error extensions
      required:
      - status
      - title
      - detail
      title: Api406DefaultError8B5D843281F47B25
      type: object
    BreadcrumbItem:
      properties:
        title:
          description: The title of the breadcrumb item
          title: Title
          type: string
        link:
          anyOf:
          - type: string
          - type: 'null'
          description: The link of the breadcrumb item
          title: Link
      required:
      - title
      - link
      title: BreadcrumbItem
      type: object
    DashboardDisplay:
      properties:
        title:
          description: The title of the dashboard
          title: Title
          type: string
        topic:
          $ref: '#/components/schemas/Topic'
          description: Topic area the dashboard covers
        hidden:
          description: Whether the dashboard is hidden from general listings
          title: Hidden
          type: boolean
        sort_index:
          description: Numeric value used for ordering dashboards in lists.
          title: Sort Index
          type: integer
      required:
      - title
      - topic
      - hidden
      - sort_index
      title: DashboardDisplay
      type: object
    DashboardLayoutType:
      enum:
      - relative_grid
      - responsive_grid
      type: string
    DashboardMetadata:
      properties:
        name:
          description: Unique identifier for the dashboard.
          title: Name
          type: string
        owner:
          anyOf:
          - type: string
          - type: 'null'
          description: Owner of the dashboard or null if the dashboard is built-in.
          title: Owner
        is_built_in:
          description: Whether the dashboard is a built-in (system) dashboard.
          title: Is Built In
          type: boolean
        is_editable:
          description: Whether the user can edit the dashboard.
          title: Is Editable
          type: boolean
        layout_type:
          $ref: '#/components/schemas/DashboardLayoutType'
          description: 'Layout system used: ''relative'' for absolute positioning,
            ''responsive'' for adaptive design.'
        display:
          $ref: '#/components/schemas/DashboardDisplay'
          description: Display and presentation preferences.
      required:
      - name
      - owner
      - is_built_in
      - is_editable
      - layout_type
      - display
      title: DashboardMetadata
      type: object
    DashboardMetadataModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: dashboard_metadata
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/DashboardMetadata'
          description: The metadata of this dashboard.
      required:
      - links
      - domainType
      - extensions
      title: DashboardMetadataModel
      type: object
    LinkModel:
      properties:
        rel:
          description: Indicates the nature of the relationship of the related resource
            to the resource that generated this representation
          examples:
          - self
          title: Relation
          type: string
        href:
          description: The (absolute) address of the related resource. Any characters
            that are invalid in URLs must be URL encoded.
          examples:
          - https://.../api_resource
          title: URL
          type: string
        method:
          description: The HTTP method to use to traverse the link (get, post, put
            or delete)
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          examples:
          - GET
          title: Method
          type: string
        type:
          description: The content-type that the linked resource will return
          examples:
          - application/json
          title: Content-Type
          type: string
        domainType:
          const: link
          description: The domain type of the linked resource
          title: Domain Type
          type: string
        title:
          description: string that the consuming application may use to render the
            link without having to traverse the link in advance
          examples:
          - The object itself
          title: Title
          type: string
        body_params:
          description: A map of values that shall be sent in the request body. If
            this is present, the request has to be sent with a content-type of 'application/json'.
          examples:
          - key: value
          title: Body Parameters
          type: object
      required:
      - rel
      - href
      - method
      - type
      - domainType
      title: LinkModel
      type: object
    Topic:
      properties:
        name:
          description: Id of the topic
          title: Name
          type: string
        breadcrumb:
          description: Breadcrumb navigation for the topic.
          items:
            $ref: '#/components/schemas/BreadcrumbItem'
          title: Breadcrumb
          type: array
      required:
      - name
      - breadcrumb
      title: Topic
      type: object
    DashboardMetadataCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: dashboard_metadata
          description: The domain type of the objects in the collection
          examples:
          - dashboard
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of host objects
          items:
            $ref: '#/components/schemas/DashboardMetadataModel'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: DashboardMetadataCollectionModel
      type: object
    AnnotatedInfoName:
      type: string
    DashboardConstantsResponse:
      properties:
        widgets:
          additionalProperties:
            $ref: '#/components/schemas/WidgetConstraints'
          description: All widget types and their respective constraints
          title: Widgets
          type: object
        responsive_grid_breakpoints:
          additionalProperties:
            $ref: '#/components/schemas/ResponsiveGridBreakpointConfig'
          description: The responsive grid breakpoint configuration.
          propertyNames:
            $ref: '#/components/schemas/ResponsiveGridBreakpoint'
          title: Responsive Grid Breakpoints
          type: object
      required:
      - widgets
      - responsive_grid_breakpoints
      title: DashboardConstantsResponse
      type: object
    FilterContextConstants:
      properties:
        restricted_to_single:
          description: A list of single infos that this widget content is restricted
            to. This means that the widget must be filtered to exactly one item for
            each info name.
          items:
            $ref: '#/components/schemas/AnnotatedInfoName'
          title: Restricted To Single
          type: array
      required:
      - restricted_to_single
      title: FilterContextConstants
      type: object
    LayoutConstraints:
      properties:
        relative:
          $ref: '#/components/schemas/RelativeLayoutConstraints'
      required:
      - relative
      title: LayoutConstraints
      type: object
    RelativeLayoutConstraints:
      properties:
        initial_size:
          $ref: '#/components/schemas/WidgetRelativeGridSize'
          description: Initial size as (width, height) in relative grid units.
        initial_position:
          $ref: '#/components/schemas/WidgetRelativeGridPosition'
          description: Initial position as (x, y) in relative grid units.
        is_resizable:
          description: Whether the widget is resizable.
          title: Is Resizable
          type: boolean
      required:
      - initial_size
      - initial_position
      - is_resizable
      title: RelativeLayoutConstraints
      type: object
    ResponsiveGridBreakpoint:
      enum:
      - XS
      - S
      - M
      - L
      - XL
      type: string
    ResponsiveGridBreakpointConfig:
      properties:
        min_width:
          description: Minimum width of the breakpoint in pixels.
          minimum: 0
          title: Min Width
          type: integer
        columns:
          description: Number of columns available at this breakpoint.
          minimum: 0
          title: Columns
          type: integer
      required:
      - min_width
      - columns
      title: ResponsiveGridBreakpointConfig
      type: object
    WidgetConstraints:
      properties:
        layout:
          $ref: '#/components/schemas/LayoutConstraints'
          description: Layout constraints for the widget.
        filter_context:
          $ref: '#/components/schemas/FilterContextConstants'
          description: Filter context constraints for the widget type.
      required:
      - layout
      - filter_context
      title: WidgetConstraints
      type: object
    WidgetRelativeGridPosition:
      properties:
        x:
          description: X position of the widget.
          title: X
          type: integer
        y:
          description: Y position of the widget.
          title: Y
          type: integer
      required:
      - x
      - y
      title: WidgetRelativeGridPosition
      type: object
    WidgetRelativeGridSize:
      properties:
        width:
          $ref: '#/components/schemas/WidgetSizeValue'
          description: Width of the widget.
        height:
          $ref: '#/components/schemas/WidgetSizeValue'
          description: Height of the widget.
      required:
      - width
      - height
      title: WidgetRelativeGridSize
      type: object
    WidgetSizeValue:
      anyOf:
      - enum:
        - auto
        - max
        type: string
      - $ref: '#/components/schemas/_PositiveInt'
    _PositiveInt:
      minimum: 1
      type: integer
    DashboardConstantsObject:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: constant
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/DashboardConstantsResponse'
          description: All the constants data of a dashboard.
      required:
      - links
      - domainType
      - extensions
      title: DashboardConstantsObject
      type: object
    WidgetAvailableInventoryModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: constant
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
      required:
      - links
      - domainType
      title: WidgetAvailableInventoryModel
      type: object
    WidgetAvailableInventoryCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: constant
          description: The domain type of the objects in the collection
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: The list of available inventory objects for widgets
          examples:
          - "Static list of e.g. - { id: '.hardware.cpu.cores', title: 'Processor\
            \ \u27A4 #Cores' }- { id: '.hardware.system.model', title: 'System \u27A4\
            \ Model name' }"
          items:
            $ref: '#/components/schemas/WidgetAvailableInventoryModel'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: WidgetAvailableInventoryCollectionModel
      type: object
    Api404DefaultError40DD4E5A06F59F4F:
      properties:
        status:
          description: The HTTP status code.
          examples:
          - 404
          title: Status
          type: integer
        title:
          description: A summary of the problem.
          examples:
          - Not Found
          title: Title
          type: string
        detail:
          description: Detailed information on what exactly went wrong.
          examples:
          - The requested object has not be found.
          title: Detail
          type: string
        fields:
          additionalProperties:
            type: string
          description: Detailed error messages on all fields failing validation.
          examples:
          - field: error message
          title: Validation errors
          type: object
        ext:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - {}
          description: Additional information about the error.
          examples:
          - key: value
          title: Error extensions
      required:
      - status
      - title
      - detail
      title: Api404DefaultError40DD4E5A06F59F4F
      type: object
    AlertOverviewContent:
      properties:
        type:
          const: alert_overview
          description: Displays hosts and services producing the most notifications
          title: Type
          type: string
        time_range:
          $ref: '#/components/schemas/TimerangeModel'
          description: The time range for which the alert overview is displayed.
        limit_objects:
          description: The maximum number of objects to display in the alert overview.
          title: Limit Objects
          type: integer
      required:
      - type
      - time_range
      title: AlertOverviewContent
      type: object
    AlertTimelineContent:
      properties:
        render_mode:
          $ref: '#/components/schemas/RenderMode'
          description: Defines how the timeline should be rendered.
        log_target:
          description: Defines which log target to use for the timeline.
          enum:
          - both
          - host
          - service
          title: Log Target
          type: string
        type:
          const: alert_timeline
          description: Displays host and service alerts.
          title: Type
          type: string
      required:
      - render_mode
      - log_target
      - type
      title: AlertTimelineContent
      type: object
    ApiVisualLink:
      properties:
        type:
          description: The type of the link, e.g. 'views' for a link to another view.
          enum:
          - dashboards
          - views
          - reports
          title: Type
          type: string
        name:
          description: The name of the linked entity.
          title: Name
          type: string
      required:
      - type
      - name
      title: ApiVisualLink
      type: object
    AverageScatterplotContent:
      properties:
        metric:
          description: Name of the metric.
          title: Metric
          type: string
        type:
          const: average_scatterplot
          description: Display a scatterplot of average values over time.
          title: Type
          type: string
        time_range:
          $ref: '#/components/schemas/TimerangeModel'
          description: Time range to select values from.
        metric_color:
          $ref: '#/components/schemas/DefaultOrColor'
          description: Color of the scattered dots.
        average_color:
          $ref: '#/components/schemas/DefaultOrColor'
          description: Color of the average.
        median_color:
          $ref: '#/components/schemas/DefaultOrColor'
          description: Color of the median.
      required:
      - metric
      - type
      - time_range
      - metric_color
      - average_color
      - median_color
      title: AverageScatterplotContent
      type: object
    BarChartRenderMode:
      properties:
        type:
          const: bar_chart
          description: Renders a bar chart.
          title: Type
          type: string
        time_range:
          $ref: '#/components/schemas/TimerangeModel'
          description: The time range for the bar chart.
        time_resolution:
          $ref: '#/components/schemas/TimeResolution'
          description: Select a time period over which the alerts or notifications
            are added up
      required:
      - type
      - time_range
      - time_resolution
      title: BarChartRenderMode
      type: object
    BarplotContent:
      properties:
        metric:
          description: Name of the metric.
          title: Metric
          type: string
        type:
          const: barplot
          description: Display a single metric as a barplot.
          title: Type
          type: string
        display_range:
          $ref: '#/components/schemas/MetricDisplayRangeModel'
          description: Range of values to display.
      required:
      - metric
      - type
      - display_range
      title: BarplotContent
      type: object
    ColorHex:
      pattern: ^#(?:[0-9A-F]{3}){1,2}$
      type: string
    CombinedGraphContent:
      properties:
        timerange:
          $ref: '#/components/schemas/TimerangeModel'
          description: The time range for the graph, e.g. '25h' for last 25 hours.
        graph_render_options:
          $ref: '#/components/schemas/GraphRenderOptions'
          description: Graph render options
          title: Graph Render Options
        type:
          const: combined_graph
          description: Displays a combined graph
          title: Type
          type: string
        graph_template:
          description: The graph template to use for the combined graph.
          title: Graph Template
          type: string
        presentation:
          description: The format of the combined graph.
          enum:
          - lines
          - stacked
          - sum
          - average
          - min
          - max
          title: Presentation
          type: string
      required:
      - timerange
      - type
      - graph_template
      - presentation
      title: CombinedGraphContent
      type: object
    CustomGraphContent:
      properties:
        timerange:
          $ref: '#/components/schemas/TimerangeModel'
          description: The time range for the graph, e.g. '25h' for last 25 hours.
        graph_render_options:
          $ref: '#/components/schemas/GraphRenderOptions'
          description: Graph render options
          title: Graph Render Options
        type:
          const: custom_graph
          description: Displays a custom graph designed with the graph designer.
          title: Type
          type: string
        custom_graph:
          description: Name of the custom graph.
          title: Custom Graph
          type: string
      required:
      - timerange
      - type
      - custom_graph
      title: CustomGraphContent
      type: object
    DashboardFilterContextResponse:
      properties:
        restricted_to_single:
          description: A list of single infos that this dashboard is restricted to.
            This means that the dashboard must be filtered to exactly one item for
            each info name.
          items:
            $ref: '#/components/schemas/AnnotatedInfoName'
          title: Restricted To Single
          type: array
        filters:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          description: Active filters in the format filter_id -> (variable -> value)
          title: Filters
          type: object
        mandatory_context_filters:
          description: Filters that are required to use this dashboard.
          items:
            type: string
          title: Mandatory Context Filters
          type: array
        uses_infos:
          description: A list of info names that this dashboard uses. This is used
            to determine the available filters.
          items:
            $ref: '#/components/schemas/AnnotatedInfoName'
          title: Uses Infos
          type: array
      required:
      - restricted_to_single
      - filters
      - mandatory_context_filters
      - uses_infos
      title: DashboardFilterContextResponse
      type: object
    DashboardGeneralSettings:
      properties:
        title:
          $ref: '#/components/schemas/DashboardTitle'
          description: Title settings.
          examples:
          - render: true
            text: My Dashboard
        description:
          description: Description of the dashboard.
          examples:
          - This dashboard shows ...
          title: Description
          type: string
        menu:
          $ref: '#/components/schemas/DashboardMenuSettings'
          description: Settings relating to the main menu.
        visibility:
          $ref: '#/components/schemas/DashboardVisibility'
          description: Settings relating to the dashboards visibility.
      required:
      - title
      - menu
      - visibility
      title: DashboardGeneralSettings
      type: object
    DashboardIcon:
      properties:
        name:
          description: The icon name.
          title: Name
          type: string
        emblem:
          description: Additional icon name, that will be displayed as a smaller emblem.
          title: Emblem
          type: string
      required:
      - name
      title: DashboardIcon
      type: object
    DashboardMenuSettings:
      properties:
        topic:
          description: Which section in the `Monitor` menu this dashboard is displayed
            under.
          title: Topic
          type: string
        sort_index:
          description: Order of the dashboard within the topic.
          title: Sort Index
          type: integer
        icon:
          $ref: '#/components/schemas/DashboardIcon'
          description: Which icon to display, if the main menu icons are enabled.
          title: Icon
        is_show_more:
          description: If set, this dashboard will be displayed in the `Show more`
            section of the `Monitor` menu.
          title: Is Show More
          type: boolean
        search_terms:
          description: A list of search terms that can be used to find this dashboard
            in the `Monitor` menu.
          items:
            type: string
          title: Search Terms
          type: array
      required:
      - topic
      - sort_index
      - is_show_more
      - search_terms
      title: DashboardMenuSettings
      type: object
    DashboardRelativeGridLayout:
      properties:
        type:
          const: relative_grid
          description: The dashboard is in a relative grid layout.
          title: Type
          type: string
      required:
      - type
      title: DashboardRelativeGridLayout
      type: object
    DashboardShare:
      anyOf:
      - const: 'no'
        type: string
      - $ref: '#/components/schemas/_ShareOptions'
    DashboardShareWithAllUsers:
      properties:
        type:
          const: with_all_users
          description: Share the dashboard with all other users.
          title: Type
          type: string
      required:
      - type
      title: DashboardShareWithAllUsers
      type: object
    DashboardShareWithContactGroups:
      properties:
        type:
          const: with_contact_groups
          description: Share the dashboard with users of these contact groups.
          title: Type
          type: string
        contact_groups:
          items:
            type: string
          title: Contact Groups
          type: array
      required:
      - type
      - contact_groups
      title: DashboardShareWithContactGroups
      type: object
    DashboardShareWithSites:
      properties:
        type:
          const: with_sites
          description: Share the dashboard with users of these sites. The sites need
            to activate changes for this to take effect.
          title: Type
          type: string
        sites:
          items:
            type: string
          title: Sites
          type: array
      required:
      - type
      - sites
      title: DashboardShareWithSites
      type: object
    DashboardTitle:
      properties:
        text:
          description: The title of the dashboard.
          title: Text
          type: string
        render:
          description: Displays the title when viewing the dashboard.
          title: Render
          type: boolean
        include_context:
          description: Include the context in the title.
          title: Include Context
          type: boolean
      required:
      - text
      - render
      - include_context
      title: DashboardTitle
      type: object
    DashboardVisibility:
      properties:
        hide_in_monitor_menu:
          description: Hide this dashboard in the `Monitor` menu.
          title: Hide In Monitor Menu
          type: boolean
        hide_in_drop_down_menus:
          description: Hide this dashboard in drop down menus.
          title: Hide In Drop Down Menus
          type: boolean
        share:
          $ref: '#/components/schemas/DashboardShare'
          description: Make this dashboard available to other users.
      required:
      - hide_in_monitor_menu
      - hide_in_drop_down_menus
      - share
      title: DashboardVisibility
      type: object
    DefaultOrColor:
      anyOf:
      - const: default
        type: string
      - $ref: '#/components/schemas/ColorHex'
    EmbeddedViewContent:
      properties:
        type:
          const: embedded_view
          description: Display a view which is fully defined within the dashboard.
          title: Type
          type: string
        embedded_id:
          description: The internal ID of the view. This must exist in the embedded
            view definitions.
          title: Embedded Id
          type: string
        datasource:
          description: The datasource of the embedded view. Must match the embedded
            view.
          title: Datasource
          type: string
        restricted_to_single:
          description: A list of single infos that this widget content is restricted
            to. This means that the widget must be filtered to exactly one item for
            each info name.
          items:
            $ref: '#/components/schemas/AnnotatedInfoName'
          title: Restricted To Single
          type: array
      required:
      - type
      - embedded_id
      - datasource
      - restricted_to_single
      title: EmbeddedViewContent
      type: object
    EventStatsContent:
      properties:
        type:
          const: event_stats
          description: Displays statistics about events as a hexagon and a table.
          title: Type
          type: string
      required:
      - type
      title: EventStatsContent
      type: object
    ForStates:
      enum:
      - all
      - not_ok
      type: string
    GaugeContent:
      properties:
        metric:
          description: Name of the metric.
          title: Metric
          type: string
        type:
          const: gauge
          description: Display a single value as a gauge.
          title: Type
          type: string
        time_range:
          $ref: '#/components/schemas/MetricTimeRangeModel'
          description: Time range to select values from.
        display_range:
          $ref: '#/components/schemas/MetricDisplayRangeFixedModel'
          description: Range of values to display.
        status_display:
          $ref: '#/components/schemas/MetricStatusDisplayModel'
          description: Display the service status.
          title: Status Display
      required:
      - metric
      - type
      - time_range
      - display_range
      title: GaugeContent
      type: object
    GraphRenderOptions:
      properties:
        font_size_pt:
          description: Font size in points.
          title: Font Size Pt
          type: number
        show_title:
          anyOf:
          - type: boolean
          - const: inline
            type: string
          description: Whether to show the title of the graph.
          title: Show Title
        title_format:
          description: Format of the graph title.
          items:
            enum:
            - plain
            - add_host_name
            - add_host_alias
            - add_service_description
            type: string
          title: Title Format
          type: array
        show_graph_time:
          description: Show the graph time range on top of the graph.
          title: Show Graph Time
          type: boolean
        show_margin:
          description: Show the margin around the graph.
          title: Show Margin
          type: boolean
        show_legend:
          description: Show the graph legend.
          title: Show Legend
          type: boolean
        show_vertical_axis:
          description: Show the graph vertical axis.
          title: Show Vertical Axis
          type: boolean
        vertical_axis_width:
          anyOf:
          - const: fixed
            type: string
          - type: number
          description: Width of the vertical axis.
          title: Vertical Axis Width
        show_time_axis:
          description: Show the graph time axis.
          title: Show Time Axis
          type: boolean
        show_controls:
          description: Show the graph controls.
          title: Show Controls
          type: boolean
        show_pin:
          description: Show the pin.
          title: Show Pin
          type: boolean
        show_time_range_previews:
          description: Show time range previews.
          title: Show Time Range Previews
          type: boolean
        fixed_timerange:
          description: Do not follow timerange changes of other graphs on the current
            page.
          title: Fixed Timerange
          type: boolean
        border_width_mm:
          description: Width of the black border around the whole graph, in millimeters.
            Enter 0 for no border here.
          title: Border Width Mm
          type: number
        color_gradient:
          description: Slight gradient in the colors of the colored areas in the graphs.
            0% turns off the gradient, 100% makes it the strongest possible.
          maximum: 100.0
          minimum: 0.0
          title: Color Gradient
          type: number
      title: GraphRenderOptions
      type: object
    HostState:
      enum:
      - UP
      - DOWN
      - UNREACHABLE
      type: string
    HostStateContent:
      properties:
        status_display:
          $ref: '#/components/schemas/StateStatusDisplayBackground'
          description: Display the status.
          title: Status Display
        show_summary:
          const: not_ok
          description: Show a summary of the state.
          title: Show Summary
          type: string
        type:
          const: host_state
          description: Displays the state of a host.
          title: Type
          type: string
      required:
      - type
      title: HostStateContent
      type: object
    HostStateSummaryContent:
      properties:
        type:
          const: host_state_summary
          description: Displays amount of hosts in a selected state.
          title: Type
          type: string
        state:
          $ref: '#/components/schemas/HostState'
          description: The state of the hosts to be displayed.
      required:
      - type
      - state
      title: HostStateSummaryContent
      type: object
    HostStatsContent:
      properties:
        type:
          const: host_stats
          description: Displays statistics about host states as a hexagon and a table.
          title: Type
          type: string
      required:
      - type
      title: HostStatsContent
      type: object
    InventoryContent:
      properties:
        type:
          const: inventory
          description: Displays inventory data of a Host.
          title: Type
          type: string
        path:
          description: The path to the inventory data to display.
          examples:
          - .software.os.type
          title: Path
          type: string
        link_spec:
          $ref: '#/components/schemas/ApiVisualLink'
          description: Changes the link of the rendered inventory data.
          title: Link Spec
      required:
      - type
      - path
      title: InventoryContent
      type: object
    LinkedViewContent:
      properties:
        type:
          const: linked_view
          description: Display an existing view.
          title: Type
          type: string
        view_name:
          description: The name of the view.
          title: View Name
          type: string
      required:
      - type
      - view_name
      title: LinkedViewContent
      type: object
    MetricDisplayRangeFixedModel:
      properties:
        type:
          const: fixed
          description: Display a fixed range of values.
          title: Type
          type: string
        unit:
          description: Unit for the range
          title: Unit
          type: string
        minimum:
          anyOf:
          - type: integer
          - type: number
          description: Minimum value of the range.
          title: Minimum
        maximum:
          anyOf:
          - type: integer
          - type: number
          description: Maximum value of the range.
          title: Maximum
      required:
      - type
      - unit
      - minimum
      - maximum
      title: MetricDisplayRangeFixedModel
      type: object
    MetricDisplayRangeModel:
      anyOf:
      - const: automatic
        type: string
      - $ref: '#/components/schemas/MetricDisplayRangeFixedModel'
    MetricStatusDisplayBackground:
      properties:
        type:
          const: background
          description: Show a colored status label and color the metric background.
          title: Type
          type: string
        for_states:
          $ref: '#/components/schemas/ForStates'
          description: Which states to show the status label for.
      required:
      - type
      - for_states
      title: MetricStatusDisplayBackground
      type: object
    MetricStatusDisplayModel:
      discriminator:
        mapping:
          background: '#/components/schemas/MetricStatusDisplayBackground'
          text: '#/components/schemas/MetricStatusDisplayText'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/MetricStatusDisplayText'
      - $ref: '#/components/schemas/MetricStatusDisplayBackground'
    MetricStatusDisplayText:
      properties:
        type:
          const: text
          description: Show a colored status label.
          title: Type
          type: string
        for_states:
          $ref: '#/components/schemas/ForStates'
          description: Which states to show the status label for.
      required:
      - type
      - for_states
      title: MetricStatusDisplayText
      type: object
    MetricTimeRangeModel:
      anyOf:
      - const: current
        type: string
      - $ref: '#/components/schemas/MetricTimeRangeWindow'
    MetricTimeRangeWindow:
      properties:
        type:
          const: window
          description: Select values over a range of time.
          title: Type
          type: string
        window:
          $ref: '#/components/schemas/TimerangeModel'
          description: Time range to select values from.
        consolidation:
          description: How to consolidate the values over the time range.
          enum:
          - average
          - minimum
          - maximum
          title: Consolidation
          type: string
      required:
      - type
      - window
      - consolidation
      title: MetricTimeRangeWindow
      type: object
    MonitoringState:
      enum:
      - OK
      - WARNING
      - CRITICAL
      - UNKNOWN
      type: string
    NotSupportedContent:
      properties:
        type:
          const: not_supported
          description: Content type that is no longer supported.
          title: Type
          type: string
        original_type:
          description: Internal name of the unsupported content type.
          title: Original Type
          type: string
      required:
      - type
      - original_type
      title: NotSupportedContent
      type: object
    NotificationTimelineContent:
      properties:
        render_mode:
          $ref: '#/components/schemas/RenderMode'
          description: Defines how the timeline should be rendered.
        log_target:
          description: Defines which log target to use for the timeline.
          enum:
          - both
          - host
          - service
          title: Log Target
          type: string
        type:
          const: notification_timeline
          description: Displays host and service notifications.
          title: Type
          type: string
      required:
      - render_mode
      - log_target
      - type
      title: NotificationTimelineContent
      type: object
    NtopAlertsContent:
      properties:
        type:
          const: ntop_alerts
          description: Display Ntop engaged, past and flow alerts.
          title: Type
          type: string
      required:
      - type
      title: NtopAlertsContent
      type: object
    NtopFlowsContent:
      properties:
        type:
          const: ntop_flows
          description: Display Ntop flow information.
          title: Type
          type: string
      required:
      - type
      title: NtopFlowsContent
      type: object
    NtopTopTalkersContent:
      properties:
        type:
          const: ntop_top_talkers
          description: Displays Top Talkers.
          title: Type
          type: string
      required:
      - type
      title: NtopTopTalkersContent
      type: object
    PerformanceGraphContent:
      properties:
        timerange:
          $ref: '#/components/schemas/TimerangeModel'
          description: The time range for the graph, e.g. '25h' for last 25 hours.
        graph_render_options:
          $ref: '#/components/schemas/GraphRenderOptions'
          description: Graph render options
          title: Graph Render Options
        type:
          const: performance_graph
          description: Displays a performance graph of a host or service.
          title: Type
          type: string
        source:
          anyOf:
          - type: string
          - minimum: 1
            type: integer
          description: Graph id or number of the performance graph.
          title: Source
      required:
      - timerange
      - type
      - source
      title: PerformanceGraphContent
      type: object
    ProblemGraphContent:
      properties:
        timerange:
          $ref: '#/components/schemas/TimerangeModel'
          description: The time range for the graph, e.g. '25h' for last 25 hours.
        graph_render_options:
          $ref: '#/components/schemas/GraphRenderOptions'
          description: Graph render options
          title: Graph Render Options
        type:
          const: problem_graph
          description: Shows the percentage of services that are not OK in relation
            to the total number of services. This widget is not respecting the full
            filter context of the dashboard, only the 'site' filter.
          title: Type
          type: string
      required:
      - timerange
      - type
      title: ProblemGraphContent
      type: object
    RelativeGridDashboardResponse:
      properties:
        general_settings:
          $ref: '#/components/schemas/DashboardGeneralSettings'
          description: General settings for the dashboard.
        filter_context:
          $ref: '#/components/schemas/DashboardFilterContextResponse'
          description: Filter context for the dashboard.
        owner:
          description: The owner of the dashboard.
          examples:
          - admin
          title: Owner
          type: string
        last_modified_at:
          description: The last modification time of the dashboard.
          format: date-time
          title: Last Modified At
          type: string
        layout:
          $ref: '#/components/schemas/DashboardRelativeGridLayout'
          description: The layout the dashboard uses.
        widgets:
          additionalProperties:
            $ref: '#/components/schemas/RelativeGridWidgetResponse'
          description: All widgets that are part of this dashboard.
          title: Widgets
          type: object
      required:
      - general_settings
      - filter_context
      - owner
      - last_modified_at
      - layout
      - widgets
      title: RelativeGridDashboardResponse
      type: object
    RelativeGridWidgetResponse:
      properties:
        general_settings:
          $ref: '#/components/schemas/WidgetGeneralSettings'
          description: General settings for the widget.
          examples:
          - render_background: true
            title:
              render_mode: with-background
              text: My Widget
              url: https://example.com
        content:
          $ref: '#/components/schemas/WidgetContent'
          description: Content of the widget.
          examples:
          - text: This is a static text widget.
            type: static_text
        filter_context:
          $ref: '#/components/schemas/WidgetFilterContext'
          description: The filter context for the widget.
        layout:
          $ref: '#/components/schemas/WidgetRelativeGridLayout'
          description: Layout of the widget.
          examples:
          - position:
              x: 0
              y: 0
            size:
              height: 1
              width: 2
            type: relative_grid
      required:
      - general_settings
      - content
      - filter_context
      - layout
      title: RelativeGridWidgetResponse
      type: object
    RenderMode:
      discriminator:
        mapping:
          bar_chart: '#/components/schemas/BarChartRenderMode'
          simple_number: '#/components/schemas/SimpleNumberRenderMode'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/BarChartRenderMode'
      - $ref: '#/components/schemas/SimpleNumberRenderMode'
    ServiceStateContent:
      properties:
        status_display:
          $ref: '#/components/schemas/StateStatusDisplayBackground'
          description: Display the status.
          title: Status Display
        show_summary:
          const: not_ok
          description: Show a summary of the state.
          title: Show Summary
          type: string
        type:
          const: service_state
          description: Displays the state of a service.
          title: Type
          type: string
      required:
      - type
      title: ServiceStateContent
      type: object
    ServiceStateSummaryContent:
      properties:
        type:
          const: service_state_summary
          description: Displays amount of services in a selected state.
          title: Type
          type: string
        state:
          $ref: '#/components/schemas/MonitoringState'
          description: The state of the services to be displayed.
      required:
      - type
      - state
      title: ServiceStateSummaryContent
      type: object
    ServiceStatsContent:
      properties:
        type:
          const: service_stats
          description: Displays statistics about service states as a hexagon and a
            table.
          title: Type
          type: string
      required:
      - type
      title: ServiceStatsContent
      type: object
    SidebarElementContent:
      properties:
        type:
          const: sidebar_element
          description: Allows you to use a sidebar element in the dashboard.
          title: Type
          type: string
        name:
          description: Identifier of the sidebar element.
          title: Name
          type: string
      required:
      - type
      - name
      title: SidebarElementContent
      type: object
    SimpleNumberRenderMode:
      properties:
        type:
          const: simple_number
          description: Renders a simple number.
          title: Type
          type: string
        time_range:
          $ref: '#/components/schemas/TimerangeModel'
          description: The time range for the simple number.
      required:
      - type
      - time_range
      title: SimpleNumberRenderMode
      type: object
    SingleMetricContent:
      properties:
        metric:
          description: Name of the metric.
          title: Metric
          type: string
        type:
          const: single_metric
          description: Displays a single metric of a specific host and service.
          title: Type
          type: string
        time_range:
          $ref: '#/components/schemas/MetricTimeRangeModel'
          description: Time range to select values from.
        status_display:
          $ref: '#/components/schemas/MetricStatusDisplayModel'
          description: Display the service status.
          title: Status Display
        display_range:
          $ref: '#/components/schemas/MetricDisplayRangeModel'
          description: Range of values to display.
        show_display_range_limits:
          description: Display axis labels for the selected/automatic data range.
          title: Show Display Range Limits
          type: boolean
      required:
      - metric
      - type
      - time_range
      - display_range
      - show_display_range_limits
      title: SingleMetricContent
      type: object
    SingleTimeseriesContent:
      properties:
        timerange:
          $ref: '#/components/schemas/TimerangeModel'
          description: The time range for the graph, e.g. '25h' for last 25 hours.
        graph_render_options:
          $ref: '#/components/schemas/GraphRenderOptions'
          description: Graph render options
          title: Graph Render Options
        type:
          const: single_timeseries
          description: Displays a timeseries for a single metric of a specific host
            and service.
          title: Type
          type: string
        metric:
          description: Name of the metric.
          title: Metric
          type: string
        color:
          anyOf:
          - enum:
            - default_theme
            - default_metric
            type: string
          - $ref: '#/components/schemas/ColorHex'
          description: Color of the timeseries line.
          title: Color
      required:
      - timerange
      - type
      - metric
      - color
      title: SingleTimeseriesContent
      type: object
    SiteOverviewContent:
      properties:
        type:
          const: site_overview
          description: Displays either sites and states or hosts and states of a site.
          title: Type
          type: string
        dataset:
          description: Defines whether the widget shows sites and their states or
            hosts and their states. If 'via_context', the dataset is determined by
            the active filters and site setup.
          enum:
          - via_context
          - sites
          - hosts
          title: Dataset
          type: string
        hexagon_size:
          description: Defines the size of the hexagons in the widget.
          enum:
          - default
          - large
          title: Hexagon Size
          type: string
      required:
      - type
      - dataset
      - hexagon_size
      title: SiteOverviewContent
      type: object
    StateStatusDisplayBackground:
      properties:
        type:
          const: background
          description: Display the state with a background color.
          title: Type
          type: string
        for_states:
          description: Display all states or only not OK states.
          enum:
          - all
          - not_ok
          title: For States
          type: string
      required:
      - type
      - for_states
      title: StateStatusDisplayBackground
      type: object
    StaticTextContent:
      properties:
        type:
          const: static_text
          description: Displays static text.
          title: Type
          type: string
        text:
          description: The static text to be displayed.
          title: Text
          type: string
      required:
      - type
      - text
      title: StaticTextContent
      type: object
    TimeResolution:
      enum:
      - hour
      - day
      type: string
    TimerangeModel:
      discriminator:
        mapping:
          age: '#/components/schemas/_TimerangeAge'
          date: '#/components/schemas/_TimerangeDate'
          graph: '#/components/schemas/_TimerangeGraph'
          predefined: '#/components/schemas/_TimerangePredefined'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/_TimerangePredefined'
      - $ref: '#/components/schemas/_TimerangeGraph'
      - $ref: '#/components/schemas/_TimerangeAge'
      - $ref: '#/components/schemas/_TimerangeDate'
    TopListColumns:
      properties:
        show_service_description:
          description: Show the service description in the top list.
          title: Show Service Description
          type: boolean
        show_bar_visualization:
          description: Show a bar visualization for the metric values in the top list.
          title: Show Bar Visualization
          type: boolean
      required:
      - show_service_description
      - show_bar_visualization
      title: TopListColumns
      type: object
    TopListContent:
      properties:
        metric:
          description: Name of the metric.
          title: Metric
          type: string
        type:
          const: top_list
          description: Display a list of top metrics.
          title: Type
          type: string
        columns:
          $ref: '#/components/schemas/TopListColumns'
          description: Columns to display in the top list.
        display_range:
          $ref: '#/components/schemas/MetricDisplayRangeModel'
          description: Range of values to display.
        ranking_order:
          description: Display highest or lowest values.
          enum:
          - high
          - low
          title: Ranking Order
          type: string
        limit_to:
          description: Limit the number of entries in the top list.
          title: Limit To
          type: integer
      required:
      - metric
      - type
      - columns
      - display_range
      - ranking_order
      - limit_to
      title: TopListContent
      type: object
    URLContent:
      properties:
        type:
          const: url
          description: Displays the content of a custom website.
          title: Type
          type: string
        url:
          description: URL of the website.
          title: Url
          type: string
      required:
      - type
      - url
      title: URLContent
      type: object
    UserMessagesContent:
      properties:
        type:
          const: user_messages
          description: Display GUI messages sent to users.
          title: Type
          type: string
      required:
      - type
      title: UserMessagesContent
      type: object
    WidgetContent:
      discriminator:
        mapping:
          alert_overview: '#/components/schemas/AlertOverviewContent'
          alert_timeline: '#/components/schemas/AlertTimelineContent'
          average_scatterplot: '#/components/schemas/AverageScatterplotContent'
          barplot: '#/components/schemas/BarplotContent'
          combined_graph: '#/components/schemas/CombinedGraphContent'
          custom_graph: '#/components/schemas/CustomGraphContent'
          embedded_view: '#/components/schemas/EmbeddedViewContent'
          event_stats: '#/components/schemas/EventStatsContent'
          gauge: '#/components/schemas/GaugeContent'
          host_state: '#/components/schemas/HostStateContent'
          host_state_summary: '#/components/schemas/HostStateSummaryContent'
          host_stats: '#/components/schemas/HostStatsContent'
          inventory: '#/components/schemas/InventoryContent'
          linked_view: '#/components/schemas/LinkedViewContent'
          not_supported: '#/components/schemas/NotSupportedContent'
          notification_timeline: '#/components/schemas/NotificationTimelineContent'
          ntop_alerts: '#/components/schemas/NtopAlertsContent'
          ntop_flows: '#/components/schemas/NtopFlowsContent'
          ntop_top_talkers: '#/components/schemas/NtopTopTalkersContent'
          performance_graph: '#/components/schemas/PerformanceGraphContent'
          problem_graph: '#/components/schemas/ProblemGraphContent'
          service_state: '#/components/schemas/ServiceStateContent'
          service_state_summary: '#/components/schemas/ServiceStateSummaryContent'
          service_stats: '#/components/schemas/ServiceStatsContent'
          sidebar_element: '#/components/schemas/SidebarElementContent'
          single_metric: '#/components/schemas/SingleMetricContent'
          single_timeseries: '#/components/schemas/SingleTimeseriesContent'
          site_overview: '#/components/schemas/SiteOverviewContent'
          static_text: '#/components/schemas/StaticTextContent'
          top_list: '#/components/schemas/TopListContent'
          url: '#/components/schemas/URLContent'
          user_messages: '#/components/schemas/UserMessagesContent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/StaticTextContent'
      - $ref: '#/components/schemas/LinkedViewContent'
      - $ref: '#/components/schemas/EmbeddedViewContent'
      - $ref: '#/components/schemas/ProblemGraphContent'
      - $ref: '#/components/schemas/CombinedGraphContent'
      - $ref: '#/components/schemas/SingleTimeseriesContent'
      - $ref: '#/components/schemas/CustomGraphContent'
      - $ref: '#/components/schemas/PerformanceGraphContent'
      - $ref: '#/components/schemas/BarplotContent'
      - $ref: '#/components/schemas/GaugeContent'
      - $ref: '#/components/schemas/SingleMetricContent'
      - $ref: '#/components/schemas/AverageScatterplotContent'
      - $ref: '#/components/schemas/TopListContent'
      - $ref: '#/components/schemas/HostStateContent'
      - $ref: '#/components/schemas/ServiceStateContent'
      - $ref: '#/components/schemas/HostStateSummaryContent'
      - $ref: '#/components/schemas/ServiceStateSummaryContent'
      - $ref: '#/components/schemas/InventoryContent'
      - $ref: '#/components/schemas/AlertOverviewContent'
      - $ref: '#/components/schemas/SiteOverviewContent'
      - $ref: '#/components/schemas/HostStatsContent'
      - $ref: '#/components/schemas/ServiceStatsContent'
      - $ref: '#/components/schemas/EventStatsContent'
      - $ref: '#/components/schemas/AlertTimelineContent'
      - $ref: '#/components/schemas/NotificationTimelineContent'
      - $ref: '#/components/schemas/UserMessagesContent'
      - $ref: '#/components/schemas/SidebarElementContent'
      - $ref: '#/components/schemas/URLContent'
      - $ref: '#/components/schemas/NtopAlertsContent'
      - $ref: '#/components/schemas/NtopFlowsContent'
      - $ref: '#/components/schemas/NtopTopTalkersContent'
      - $ref: '#/components/schemas/NotSupportedContent'
    WidgetFilterContext:
      properties:
        uses_infos:
          description: A list of info names that this widget content uses. This is
            used to determine the available filters for the widget.
          items:
            $ref: '#/components/schemas/AnnotatedInfoName'
          title: Uses Infos
          type: array
        filters:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          description: Active filters in the format filter_id -> (variable -> value)
          title: Filters
          type: object
      required:
      - uses_infos
      - filters
      title: WidgetFilterContext
      type: object
    WidgetGeneralSettings:
      properties:
        title:
          $ref: '#/components/schemas/WidgetTitle'
          description: Title settings for the widget.
          title: Title
        render_background:
          description: Whether the widget should render a gray background.
          title: Render Background
          type: boolean
      required:
      - render_background
      title: WidgetGeneralSettings
      type: object
    WidgetRelativeGridLayout:
      properties:
        type:
          const: relative_grid
          description: This setting must be in sync with the dashboards layout.
          title: Type
          type: string
        position:
          $ref: '#/components/schemas/WidgetRelativeGridPosition'
          description: Position of the widget.
        size:
          $ref: '#/components/schemas/WidgetRelativeGridSize'
          description: Size of the widget.
      required:
      - type
      - position
      - size
      title: WidgetRelativeGridLayout
      type: object
    WidgetTitle:
      properties:
        text:
          description: The title of the widget.
          title: Text
          type: string
        url:
          description: Optional URL the title should link to.
          title: Url
          type: string
        render_mode:
          description: How the title should be rendered.
          enum:
          - hidden
          - with_background
          - without_background
          title: Render Mode
          type: string
      required:
      - text
      - render_mode
      title: WidgetTitle
      type: object
    _Predefined:
      enum:
      - last_4_hours
      - last_25_hours
      - last_8_days
      - last_35_days
      - last_400_days
      - today
      - yesterday
      - 7_days_ago
      - 8_days_ago
      - this_week
      - last_week
      - 2_weeks_ago
      - this_month
      - last_month
      - this_year
      - last_year
      type: string
    _ShareOptions:
      discriminator:
        mapping:
          with_all_users: '#/components/schemas/DashboardShareWithAllUsers'
          with_contact_groups: '#/components/schemas/DashboardShareWithContactGroups'
          with_sites: '#/components/schemas/DashboardShareWithSites'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/DashboardShareWithAllUsers'
      - $ref: '#/components/schemas/DashboardShareWithContactGroups'
      - $ref: '#/components/schemas/DashboardShareWithSites'
    _TimerangeAge:
      properties:
        type:
          const: age
          description: Manually define a relative timerange.
          title: Type
          type: string
        days:
          $ref: '#/components/schemas/_ZeroOrPositiveInt'
          description: The number of days to look back.
          title: Days
        hours:
          $ref: '#/components/schemas/_ZeroOrPositiveInt'
          description: The number of hours to look back.
          title: Hours
        minutes:
          $ref: '#/components/schemas/_ZeroOrPositiveInt'
          description: The number of minutes to look back.
          title: Minutes
        seconds:
          $ref: '#/components/schemas/_ZeroOrPositiveInt'
          description: The number of seconds to look back.
          title: Seconds
      required:
      - type
      title: _TimerangeAge
      type: object
    _TimerangeDate:
      properties:
        type:
          const: date
          description: Manually define a fixed timerange.
          title: Type
          type: string
        start:
          description: The start date in ISO format (YYYY-MM-DD).
          format: date
          title: Start
          type: string
        end:
          description: The end date in ISO format (YYYY-MM-DD).
          format: date
          title: End
          type: string
      required:
      - type
      - start
      - end
      title: _TimerangeDate
      type: object
    _TimerangeGraph:
      properties:
        type:
          const: graph
          description: Select a predefined graph timerange.
          title: Type
          type: string
        duration:
          description: The duration in seconds.
          minimum: 1
          title: Duration
          type: integer
      required:
      - type
      - duration
      title: _TimerangeGraph
      type: object
    _TimerangePredefined:
      properties:
        type:
          const: predefined
          description: Select a predefined timerange.
          title: Type
          type: string
        value:
          $ref: '#/components/schemas/_Predefined'
          description: The timerange.
      required:
      - type
      - value
      title: _TimerangePredefined
      type: object
    _ZeroOrPositiveInt:
      minimum: 0
      type: integer
    RelativeGridDashboardDomainObject:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: dashboard
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/RelativeGridDashboardResponse'
          description: All the data about this dashboard.
      required:
      - links
      - domainType
      - extensions
      title: RelativeGridDashboardDomainObject
      type: object
    DashboardResponsiveGridLayout:
      properties:
        type:
          const: responsive_grid
          description: The dashboard is in a responsive grid layout, that changes
            based on screen size.
          title: Type
          type: string
        layouts:
          additionalProperties:
            $ref: '#/components/schemas/ResponsiveGridLayoutSettings'
          description: The configured responsive layouts. Every widget must configure
            it's size and position for every layout and breakpoint defined here.
          title: Layouts
          type: object
      required:
      - type
      - layouts
      title: DashboardResponsiveGridLayout
      type: object
    ResponsiveGridDashboardResponse:
      properties:
        general_settings:
          $ref: '#/components/schemas/DashboardGeneralSettings'
          description: General settings for the dashboard.
        filter_context:
          $ref: '#/components/schemas/DashboardFilterContextResponse'
          description: Filter context for the dashboard.
        owner:
          description: The owner of the dashboard.
          examples:
          - admin
          title: Owner
          type: string
        last_modified_at:
          description: The last modification time of the dashboard.
          format: date-time
          title: Last Modified At
          type: string
        layout:
          $ref: '#/components/schemas/DashboardResponsiveGridLayout'
          description: The layout the dashboard uses.
        widgets:
          additionalProperties:
            $ref: '#/components/schemas/ResponsiveGridWidgetResponse'
          description: All widgets that are part of this dashboard.
          title: Widgets
          type: object
      required:
      - general_settings
      - filter_context
      - owner
      - last_modified_at
      - layout
      - widgets
      title: ResponsiveGridDashboardResponse
      type: object
    ResponsiveGridLayoutSettings:
      properties:
        title:
          description: The display name of the responsive grid layout.
          title: Title
          type: string
        breakpoints:
          description: The allowed/configured breakpoints for the layout.
          items:
            $ref: '#/components/schemas/ResponsiveGridBreakpoint'
          title: Breakpoints
          type: array
          uniqueItems: true
      required:
      - title
      - breakpoints
      title: ResponsiveGridLayoutSettings
      type: object
    ResponsiveGridWidgetResponse:
      properties:
        general_settings:
          $ref: '#/components/schemas/WidgetGeneralSettings'
          description: General settings for the widget.
          examples:
          - render_background: true
            title:
              render_mode: with-background
              text: My Widget
              url: https://example.com
        content:
          $ref: '#/components/schemas/WidgetContent'
          description: Content of the widget.
          examples:
          - text: This is a static text widget.
            type: static_text
        filter_context:
          $ref: '#/components/schemas/WidgetFilterContext'
          description: The filter context for the widget.
        layout:
          $ref: '#/components/schemas/WidgetResponsiveGridLayouts'
          description: Layout of the widget.
          examples:
          - layouts:
              default:
                L:
                  position:
                    x: 0
                    y: 0
                  size:
                    columns: 6
                    rows: 2
                XL:
                  position:
                    x: 0
                    y: 0
                  size:
                    columns: 8
                    rows: 2
            type: responsive_grid
      required:
      - general_settings
      - content
      - filter_context
      - layout
      title: ResponsiveGridWidgetResponse
      type: object
    WidgetResponsiveGridLayout:
      properties:
        position:
          $ref: '#/components/schemas/WidgetResponsiveGridPosition'
          description: Position of the widget. In case the size is larger than 1,
            the position is the top-left corner.
        size:
          $ref: '#/components/schemas/WidgetResponsiveGridSize'
          description: Size of the widget. Must fit into the available columns.
      required:
      - position
      - size
      title: WidgetResponsiveGridLayout
      type: object
    WidgetResponsiveGridLayouts:
      properties:
        type:
          const: responsive_grid
          description: This setting must be in sync with the dashboards layout.
          title: Type
          type: string
        layouts:
          additionalProperties:
            additionalProperties:
              $ref: '#/components/schemas/WidgetResponsiveGridLayout'
            propertyNames:
              $ref: '#/components/schemas/ResponsiveGridBreakpoint'
            type: object
          description: Position and size of the widget for each layout and breakpoint.
          title: Layouts
          type: object
      required:
      - type
      - layouts
      title: WidgetResponsiveGridLayouts
      type: object
    WidgetResponsiveGridPosition:
      properties:
        x:
          description: X position of the widget.
          minimum: 0
          title: X
          type: integer
        y:
          description: Y position of the widget.
          minimum: 0
          title: Y
          type: integer
      required:
      - x
      - y
      title: WidgetResponsiveGridPosition
      type: object
    WidgetResponsiveGridSize:
      properties:
        columns:
          description: Width of the widget in number of columns.
          minimum: 1
          title: Columns
          type: integer
        rows:
          description: Height of the widget in number of rows.
          minimum: 1
          title: Rows
          type: integer
      required:
      - columns
      - rows
      title: WidgetResponsiveGridSize
      type: object
    ResponsiveGridDashboardDomainObject:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: dashboard
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/ResponsiveGridDashboardResponse'
          description: All the data about this dashboard.
      required:
      - links
      - domainType
      - extensions
      title: ResponsiveGridDashboardDomainObject
      type: object
    DashboardFilterContext:
      properties:
        restricted_to_single:
          description: A list of single infos that this dashboard is restricted to.
            This means that the dashboard must be filtered to exactly one item for
            each info name.
          items:
            $ref: '#/components/schemas/AnnotatedInfoName'
          title: Restricted To Single
          type: array
        filters:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          description: Active filters in the format filter_id -> (variable -> value)
          title: Filters
          type: object
        mandatory_context_filters:
          description: Filters that are required to use this dashboard.
          items:
            type: string
          title: Mandatory Context Filters
          type: array
      required:
      - restricted_to_single
      - filters
      - mandatory_context_filters
      title: DashboardFilterContext
      type: object
    RelativeGridWidgetRequest:
      properties:
        general_settings:
          $ref: '#/components/schemas/WidgetGeneralSettings'
          description: General settings for the widget.
          examples:
          - render_background: true
            title:
              render_mode: with-background
              text: My Widget
              url: https://example.com
        content:
          $ref: '#/components/schemas/WidgetContent'
          description: Content of the widget.
          examples:
          - text: This is a static text widget.
            type: static_text
        filters:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          description: Active filters in the format filter_id -> (variable -> value)
          title: Filters
          type: object
        layout:
          $ref: '#/components/schemas/WidgetRelativeGridLayout'
          description: Layout of the widget.
          examples:
          - position:
              x: 0
              y: 0
            size:
              height: 1
              width: 2
            type: relative_grid
      required:
      - general_settings
      - content
      - filters
      - layout
      title: RelativeGridWidgetRequest
      type: object
    EditDashboardV1:
      additionalProperties: false
      properties:
        general_settings:
          $ref: '#/components/schemas/DashboardGeneralSettings'
          description: General settings for the dashboard.
        filter_context:
          $ref: '#/components/schemas/DashboardFilterContext'
          description: Filter context for the dashboard.
        layout:
          $ref: '#/components/schemas/DashboardRelativeGridLayout'
          description: The layout the dashboard uses.
        widgets:
          additionalProperties:
            $ref: '#/components/schemas/RelativeGridWidgetRequest'
          description: All widgets that are part of this dashboard.
          title: Widgets
          type: object
      required:
      - general_settings
      - filter_context
      - layout
      - widgets
      title: EditDashboardV1
      type: object
    Api400DefaultErrorD03BB5FCEF54BF65:
      properties:
        status:
          description: The HTTP status code.
          examples:
          - 400
          title: Status
          type: integer
        title:
          description: A summary of the problem.
          examples:
          - Bad Request
          title: Title
          type: string
        detail:
          description: Detailed information on what exactly went wrong.
          examples:
          - Parameter or validation failure.
          title: Detail
          type: string
        fields:
          additionalProperties:
            type: string
          description: Detailed error messages on all fields failing validation.
          examples:
          - field: error message
          title: Validation errors
          type: object
        ext:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - {}
          description: Additional information about the error.
          examples:
          - key: value
          title: Error extensions
      required:
      - status
      - title
      - detail
      title: Api400DefaultErrorD03BB5FCEF54BF65
      type: object
    Api415DefaultErrorDF0CB1680D945D0C:
      properties:
        status:
          description: The HTTP status code.
          examples:
          - 415
          title: Status
          type: integer
        title:
          description: A summary of the problem.
          examples:
          - Unsupported Media Type
          title: Title
          type: string
        detail:
          description: Detailed information on what exactly went wrong.
          examples:
          - The submitted content-type is not supported.
          title: Detail
          type: string
        fields:
          additionalProperties:
            type: string
          description: Detailed error messages on all fields failing validation.
          examples:
          - field: error message
          title: Validation errors
          type: object
        ext:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - {}
          description: Additional information about the error.
          examples:
          - key: value
          title: Error extensions
      required:
      - status
      - title
      - detail
      title: Api415DefaultErrorDF0CB1680D945D0C
      type: object
    ResponsiveGridWidgetRequest:
      properties:
        general_settings:
          $ref: '#/components/schemas/WidgetGeneralSettings'
          description: General settings for the widget.
          examples:
          - render_background: true
            title:
              render_mode: with-background
              text: My Widget
              url: https://example.com
        content:
          $ref: '#/components/schemas/WidgetContent'
          description: Content of the widget.
          examples:
          - text: This is a static text widget.
            type: static_text
        filters:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          description: Active filters in the format filter_id -> (variable -> value)
          title: Filters
          type: object
        layout:
          $ref: '#/components/schemas/WidgetResponsiveGridLayouts'
          description: Layout of the widget.
          examples:
          - layouts:
              default:
                L:
                  position:
                    x: 0
                    y: 0
                  size:
                    columns: 6
                    rows: 2
                XL:
                  position:
                    x: 0
                    y: 0
                  size:
                    columns: 8
                    rows: 2
            type: responsive_grid
      required:
      - general_settings
      - content
      - filters
      - layout
      title: ResponsiveGridWidgetRequest
      type: object
    EditResponsiveGridDashboardV1:
      additionalProperties: false
      properties:
        general_settings:
          $ref: '#/components/schemas/DashboardGeneralSettings'
          description: General settings for the dashboard.
        filter_context:
          $ref: '#/components/schemas/DashboardFilterContext'
          description: Filter context for the dashboard.
        layout:
          $ref: '#/components/schemas/DashboardResponsiveGridLayout'
          description: The layout the dashboard uses.
        widgets:
          additionalProperties:
            $ref: '#/components/schemas/ResponsiveGridWidgetRequest'
          description: All widgets that are part of this dashboard.
          title: Widgets
          type: object
      required:
      - general_settings
      - filter_context
      - layout
      - widgets
      title: EditResponsiveGridDashboardV1
      type: object
    TopListRequest:
      additionalProperties: false
      properties:
        content:
          $ref: '#/components/schemas/TopListContent'
          description: The content configuration for the toplist widget.
        context:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          description: The visual context
          title: Context
          type: object
      required:
      - content
      - context
      title: TopListRequest
      type: object
    TopList:
      properties:
        full_metric_name:
          description: The name of the metric
          title: Full Metric Name
          type: string
        value_range:
          $ref: '#/components/schemas/TopListValueRange'
          description: Range of the metric
        entries:
          description: The list of ranked service entries sorted by the selected metric.
          items:
            $ref: '#/components/schemas/TopListEntry'
          title: Entries
          type: array
        errors:
          description: Services that produced conflicting or incomplete metrics, which
            may cause the toplist to be inaccurate.
          items:
            $ref: '#/components/schemas/TopListError'
          title: Errors
          type: array
      required:
      - full_metric_name
      - value_range
      - entries
      - errors
      title: TopList
      type: object
    TopListEntry:
      properties:
        site_id:
          description: The site where the host and service reside.
          title: Site Id
          type: string
        host_name:
          description: The name of the host providing the service.
          title: Host Name
          type: string
        service_description:
          description: The service description
          title: Service Description
          type: string
        metric:
          $ref: '#/components/schemas/TopListMetric'
          description: The metric details for this service entry.
      required:
      - site_id
      - host_name
      - service_description
      - metric
      title: TopListEntry
      type: object
    TopListError:
      properties:
        site_id:
          description: The Checkmk site of the service with conflicting or invalid
            metrics.
          title: Site Id
          type: string
        host_name:
          description: The name of the host with the problematic service.
          title: Host Name
          type: string
        service_description:
          description: The description of the service that caused a metric conflict.
          title: Service Description
          type: string
        check_command:
          description: The check command of the service that produced conflicting
            metrics.
          title: Check Command
          type: string
      required:
      - site_id
      - host_name
      - service_description
      - check_command
      title: TopListError
      type: object
    TopListMetric:
      properties:
        value:
          description: The raw numeric value of the metric for this entry.
          title: Value
          type: number
        formatted:
          description: The formatted metric string with unit, localized according
            to user settings.
          title: Formatted
          type: string
        color:
          description: The color associated with the metric, typically used in visualizations.
          title: Color
          type: string
      required:
      - value
      - formatted
      - color
      title: TopListMetric
      type: object
    TopListValueRange:
      properties:
        min_value:
          description: The minimum metric value
          title: Min Value
          type: number
        max_value:
          description: The maximum metric value
          title: Max Value
          type: number
      required:
      - min_value
      - max_value
      title: TopListValueRange
      type: object
    ComputedTopListResponse:
      properties:
        domainType:
          const: widget-compute
          description: The domain type of the object.
          title: Domaintype
          type: string
        value:
          $ref: '#/components/schemas/TopList'
          description: The computed top list data.
      required:
      - domainType
      - value
      title: ComputedTopListResponse
      type: object
    ComputedWidgetSpecRequest:
      additionalProperties: false
      properties:
        content:
          $ref: '#/components/schemas/WidgetContent'
          description: Widget content to compute attributes for.
      required:
      - content
      title: ComputedWidgetSpecRequest
      type: object
    ComputedFilterContext:
      properties:
        uses_infos:
          description: A list of info names that the widget content uses. This means
            that the widget can be filtered by these info names.
          items:
            $ref: '#/components/schemas/AnnotatedInfoName'
          title: Uses Infos
          type: array
      required:
      - uses_infos
      title: ComputedFilterContext
      type: object
    ComputedWidgetSpec:
      properties:
        filter_context:
          $ref: '#/components/schemas/ComputedFilterContext'
          description: Computed filter context attributes for the widget.
      required:
      - filter_context
      title: ComputedWidgetSpec
      type: object
    ComputedWidgetSpecResponse:
      properties:
        domainType:
          const: widget-compute
          description: The domain type of the object.
          title: Domaintype
          type: string
        value:
          $ref: '#/components/schemas/ComputedWidgetSpec'
          description: Computed widget specification attributes
      required:
      - domainType
      - value
      title: ComputedWidgetSpecResponse
      type: object
    CloneDashboardV1:
      additionalProperties: false
      properties:
        reference_dashboard_id:
          description: The ID of the dashboard to clone.
          examples:
          - existing_dashboard
          title: Reference Dashboard Id
          type: string
        dashboard_id:
          description: Unique identifier for the dashboard.
          examples:
          - custom_dashboard
          pattern: ^[a-zA-Z0-9_]+$
          title: Dashboard Id
          type: string
        general_settings:
          $ref: '#/components/schemas/DashboardGeneralSettings'
          description: General settings for the cloned dashboard.
          title: General Settings
      required:
      - reference_dashboard_id
      - dashboard_id
      title: CloneDashboardV1
      type: object
    CreateDashboardV1:
      additionalProperties: false
      properties:
        general_settings:
          $ref: '#/components/schemas/DashboardGeneralSettings'
          description: General settings for the dashboard.
        filter_context:
          $ref: '#/components/schemas/DashboardFilterContext'
          description: Filter context for the dashboard.
        layout:
          $ref: '#/components/schemas/DashboardRelativeGridLayout'
          description: The layout the dashboard uses.
        widgets:
          additionalProperties:
            $ref: '#/components/schemas/RelativeGridWidgetRequest'
          description: All widgets that are part of this dashboard.
          title: Widgets
          type: object
        id:
          description: Unique identifier for the dashboard.
          examples:
          - custom_dashboard
          pattern: ^[a-zA-Z0-9_]+$
          title: Id
          type: string
      required:
      - general_settings
      - filter_context
      - layout
      - widgets
      - id
      title: CreateDashboardV1
      type: object
    CreateResponsiveGridDashboardV1:
      additionalProperties: false
      properties:
        general_settings:
          $ref: '#/components/schemas/DashboardGeneralSettings'
          description: General settings for the dashboard.
        filter_context:
          $ref: '#/components/schemas/DashboardFilterContext'
          description: Filter context for the dashboard.
        layout:
          $ref: '#/components/schemas/DashboardResponsiveGridLayout'
          description: The layout the dashboard uses.
        widgets:
          additionalProperties:
            $ref: '#/components/schemas/ResponsiveGridWidgetRequest'
          description: All widgets that are part of this dashboard.
          title: Widgets
          type: object
        id:
          description: Unique identifier for the dashboard.
          examples:
          - custom_dashboard
          pattern: ^[a-zA-Z0-9_]+$
          title: Id
          type: string
      required:
      - general_settings
      - filter_context
      - layout
      - widgets
      - id
      title: CreateResponsiveGridDashboardV1
      type: object
    DataSourceExtensions:
      properties:
        infos:
          description: List of infos provided by the data source.
          items:
            type: string
          title: Infos
          type: array
      required:
      - infos
      title: DataSourceExtensions
      type: object
    DataSourceModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: constant
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/DataSourceExtensions'
          description: The configuration of this data source.
      required:
      - links
      - domainType
      - extensions
      title: DataSourceModel
      type: object
    DataSourceCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: constant
          description: The domain type of the objects in the collection
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of host objects
          items:
            $ref: '#/components/schemas/DataSourceModel'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: DataSourceCollectionModel
      type: object
    FixedDowntimeMode:
      type: object
      properties:
        type:
          default: fixed
          description: The downtime is fixed to the start and end time.
          example: fixed
      required:
      - type
      additionalProperties: false
    FlexibleDowntimeMode:
      type: object
      properties:
        type:
          default: flexible
          description: The downtime starts if the host or service goes down during
            the specified start and end time window. It will then last for at most
            the given duration, which can extend past the end time.
          example: flexible
        duration_minutes:
          type: integer
          description: The flexible duration in minutes.
          example: 120
      required:
      - duration_minutes
      - type
      additionalProperties: false
    DowntimeMode:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/FixedDowntimeMode'
      - $ref: '#/components/schemas/FlexibleDowntimeMode'
      discriminator:
        propertyName: type
        mapping:
          fixed: '#/components/schemas/FixedDowntimeMode'
          flexible: '#/components/schemas/FlexibleDowntimeMode'
    HostDowntimeAttributes:
      type: object
      properties:
        site_id:
          type: string
          description: The site id of the downtime.
          example: heute
        host_name:
          type: string
          description: The host name.
          example: cmk.abc.ch
          pattern: ^[-0-9a-zA-Z_.]+\Z
        author:
          type: string
          description: The author of the downtime.
          example: Mr Bojangles
        start_time:
          type: string
          format: date-time
          description: The start time of the downtime.
          example: '2023-08-04T08:58:01+00:00'
        end_time:
          type: string
          format: date-time
          description: The end time of the downtime.
          example: '2023-08-04T09:18:01+00:00'
        recurring:
          type: boolean
          description: Indicates if this downtime is time-repetitive
          example: true
        comment:
          type: string
          description: A comment text.
          example: Down for update
        mode:
          description: The mode of the downtime, either fixed or flexible.
          example: &id117
            type: flexible
            duration_minutes: 120
          $ref: '#/components/schemas/DowntimeMode'
        is_service:
          default: false
          description: Host downtime entry
          example: false
      required:
      - author
      - comment
      - end_time
      - host_name
      - is_service
      - mode
      - recurring
      - site_id
      - start_time
      additionalProperties: false
    ServiceDowntimeAttributes:
      type: object
      properties:
        site_id:
          type: string
          description: The site id of the downtime.
          example: heute
        host_name:
          type: string
          description: The host name.
          example: cmk.abc.ch
          pattern: ^[-0-9a-zA-Z_.]+\Z
        author:
          type: string
          description: The author of the downtime.
          example: Mr Bojangles
        start_time:
          type: string
          format: date-time
          description: The start time of the downtime.
          example: '2023-08-04T08:58:01+00:00'
        end_time:
          type: string
          format: date-time
          description: The end time of the downtime.
          example: '2023-08-04T09:18:01+00:00'
        recurring:
          type: boolean
          description: Indicates if this downtime is time-repetitive
          example: true
        comment:
          type: string
          description: A comment text.
          example: Down for update
        mode:
          description: The mode of the downtime, either fixed or flexible.
          example: *id117
          $ref: '#/components/schemas/DowntimeMode'
        is_service:
          default: true
          description: Service downtime entry
          example: true
        service_description:
          type: string
          description: The service name if the downtime corresponds to a service,
            otherwise this field is not present.
          example: CPU Load
      required:
      - author
      - comment
      - end_time
      - host_name
      - mode
      - recurring
      - service_description
      - site_id
      - start_time
      additionalProperties: false
    DowntimeAttributes:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/HostDowntimeAttributes'
      - $ref: '#/components/schemas/ServiceDowntimeAttributes'
      discriminator:
        propertyName: is_service
        mapping:
          host: '#/components/schemas/HostDowntimeAttributes'
          service: '#/components/schemas/ServiceDowntimeAttributes'
    DowntimeObject:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: downtime
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The attributes of a downtime.
          $ref: '#/components/schemas/DowntimeAttributes'
      required:
      - links
      additionalProperties: false
    DowntimeCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: downtime
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of downtime objects.
          items:
            $ref: '#/components/schemas/DowntimeObject'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    ModifyEndTimeByDatetime:
      type: object
      properties:
        modify_type:
          type: string
          description: How to modify the end time of a downtime.
          enum: &id118
          - absolute
          - relative
          example: absolute
        value:
          type: string
          format: iso8601
          description: The end datetime of the downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
      required:
      - value
      additionalProperties: false
    ModifyEndTimeByDelta:
      type: object
      properties:
        modify_type:
          type: string
          description: How to modify the end time of a downtime.
          enum: *id118
          example: absolute
        value:
          type: integer
          description: A positive or negative number representing the amount of minutes
            to be added to or substracted from the current end time. The value must
            be non-zero
          example: 60
      required:
      - value
      additionalProperties: false
    ModifyEndTimeType:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/ModifyEndTimeByDatetime'
      - $ref: '#/components/schemas/ModifyEndTimeByDelta'
      discriminator:
        propertyName: modify_type
        mapping:
          absolute: '#/components/schemas/ModifyEndTimeByDatetime'
          relative: '#/components/schemas/ModifyEndTimeByDelta'
    ModifyDowntimeById:
      type: object
      properties:
        modify_type:
          type: string
          description: The option of how to select the downtimes to be targeted by
            the modification.
          enum: &id119
          - params
          - query
          - by_id
          - hostgroup
          - servicegroup
          example: params
        end_time:
          description: The option how to modify the end time of a downtime. If modify_type
            is set to 'absolute', then the end time will be set to the date time specified
            in the value field. If modify_type is set to 'relative', then the current
            end time will be modified by the amount of minutes specified in the value
            field. If this attribute is not present, then the end time will not be
            modified.
          example: &id120
            modify_type: absolute
            value: '2024-03-06T12:00:00Z'
          $ref: '#/components/schemas/ModifyEndTimeType'
        comment:
          type: string
          description: The comment for the downtime.
          example: Security updates
        site_id:
          type: string
          description: The site from which you want to modify a downtime.
          example: central
        downtime_id:
          type: string
          description: The id of the downtime
          example: '54'
      required:
      - downtime_id
      - modify_type
      - site_id
      additionalProperties: false
    ModifyDowntimeByName:
      type: object
      properties:
        modify_type:
          type: string
          description: The option of how to select the downtimes to be targeted by
            the modification.
          enum: *id119
          example: params
        end_time:
          description: The option how to modify the end time of a downtime. If modify_type
            is set to 'absolute', then the end time will be set to the date time specified
            in the value field. If modify_type is set to 'relative', then the current
            end time will be modified by the amount of minutes specified in the value
            field. If this attribute is not present, then the end time will not be
            modified.
          example: *id120
          $ref: '#/components/schemas/ModifyEndTimeType'
        comment:
          type: string
          description: The comment for the downtime.
          example: Security updates
        host_name:
          type: string
          description: If set alone, then all downtimes of the host will be modified.
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
        service_descriptions:
          type: array
          description: If set, the downtimes of the listed services of the specified
            host will be modified. If a service has multiple downtimes then all will
            be modified
          example:
          - CPU load
          - Memory
          items:
            type: string
            example: CPU utilization
      required:
      - host_name
      - modify_type
      additionalProperties: false
    ModifyDowntimeByQuery:
      type: object
      properties:
        modify_type:
          type: string
          description: The option of how to select the downtimes to be targeted by
            the modification.
          enum: *id119
          example: params
        end_time:
          description: The option how to modify the end time of a downtime. If modify_type
            is set to 'absolute', then the end time will be set to the date time specified
            in the value field. If modify_type is set to 'relative', then the current
            end time will be modified by the amount of minutes specified in the value
            field. If this attribute is not present, then the end time will not be
            modified.
          example: *id120
          $ref: '#/components/schemas/ModifyEndTimeType'
        comment:
          type: string
          description: The comment for the downtime.
          example: Security updates
        query:
          description: An query expression of the Livestatus 'downtimes' table in
            nested dictionary form. If you want to use multiple expressions, nest
            them with the AND/OR operators.
          example: '{"op": "=", "left": "host_name", "right": "example.com"}'
          $ref: '#/components/schemas/Expr'
      required:
      - modify_type
      - query
      additionalProperties: false
    ModifyDowntimeByHostGroup:
      type: object
      properties:
        modify_type:
          type: string
          description: The option of how to select the downtimes to be targeted by
            the modification.
          enum: *id119
          example: params
        end_time:
          description: The option how to modify the end time of a downtime. If modify_type
            is set to 'absolute', then the end time will be set to the date time specified
            in the value field. If modify_type is set to 'relative', then the current
            end time will be modified by the amount of minutes specified in the value
            field. If this attribute is not present, then the end time will not be
            modified.
          example: *id120
          $ref: '#/components/schemas/ModifyEndTimeType'
        comment:
          type: string
          description: The comment for the downtime.
          example: Security updates
        hostgroup_name:
          type: string
          description: Name of a valid hostgroup, all current downtimes for hosts
            in this group will be modified.
          example: windows
      required:
      - hostgroup_name
      - modify_type
      additionalProperties: false
    ModifyDowntimeByServiceGroup:
      type: object
      properties:
        modify_type:
          type: string
          description: The option of how to select the downtimes to be targeted by
            the modification.
          enum: *id119
          example: params
        end_time:
          description: The option how to modify the end time of a downtime. If modify_type
            is set to 'absolute', then the end time will be set to the date time specified
            in the value field. If modify_type is set to 'relative', then the current
            end time will be modified by the amount of minutes specified in the value
            field. If this attribute is not present, then the end time will not be
            modified.
          example: *id120
          $ref: '#/components/schemas/ModifyEndTimeType'
        comment:
          type: string
          description: The comment for the downtime.
          example: Security updates
        servicegroup_name:
          type: string
          description: Name of a valid servicegroup, all current downtimes for services
            in this group will be modified.
          example: windows
      required:
      - modify_type
      - servicegroup_name
      additionalProperties: false
    ModifyDowntime:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/ModifyDowntimeById'
      - $ref: '#/components/schemas/ModifyDowntimeByName'
      - $ref: '#/components/schemas/ModifyDowntimeByQuery'
      - $ref: '#/components/schemas/ModifyDowntimeByHostGroup'
      - $ref: '#/components/schemas/ModifyDowntimeByServiceGroup'
      discriminator:
        propertyName: modify_type
        mapping:
          by_id: '#/components/schemas/ModifyDowntimeById'
          params: '#/components/schemas/ModifyDowntimeByName'
          query: '#/components/schemas/ModifyDowntimeByQuery'
          hostgroup: '#/components/schemas/ModifyDowntimeByHostGroup'
          servicegroup: '#/components/schemas/ModifyDowntimeByServiceGroup'
    DeleteDowntimeById:
      type: object
      properties:
        delete_type:
          type: string
          description: The option how to delete a downtime.
          enum: &id121
          - params
          - query
          - by_id
          - hostgroup
          - servicegroup
          example: params
        site_id:
          type: string
          description: The site from which you want to delete a downtime.
          example: heute
        downtime_id:
          type: string
          description: The id of the downtime
          example: '54'
      required:
      - delete_type
      - downtime_id
      - site_id
      additionalProperties: false
    DeleteDowntimeByName:
      type: object
      properties:
        delete_type:
          type: string
          description: The option how to delete a downtime.
          enum: *id121
          example: params
        host_name:
          type: string
          description: If set alone, then all downtimes of the host will be removed.
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
        service_descriptions:
          type: array
          description: If set, the downtimes of the listed services of the specified
            host will be removed. If a service has multiple downtimes then all will
            be removed
          example:
          - CPU load
          - Memory
          items:
            type: string
            example: CPU utilization
      required:
      - delete_type
      - host_name
      additionalProperties: false
    DeleteDowntimeByQuery:
      type: object
      properties:
        delete_type:
          type: string
          description: The option how to delete a downtime.
          enum: *id121
          example: params
        query:
          description: An query expression of the Livestatus 'downtimes' table in
            nested dictionary form. If you want to use multiple expressions, nest
            them with the AND/OR operators.
          example: '{"op": "=", "left": "host_name", "right": "example.com"}'
          $ref: '#/components/schemas/Expr'
      required:
      - delete_type
      - query
      additionalProperties: false
    DeleteDowntimeByHostGroup:
      type: object
      properties:
        delete_type:
          type: string
          description: The option how to delete a downtime.
          enum: *id121
          example: params
        hostgroup_name:
          type: string
          description: Name of a valid hostgroup, all current downtimes for hosts
            in this group will be deleted.
          example: windows
      required:
      - delete_type
      - hostgroup_name
      additionalProperties: false
    DeleteDowntimeByServiceGroup:
      type: object
      properties:
        delete_type:
          type: string
          description: The option how to delete a downtime.
          enum: *id121
          example: params
        servicegroup_name:
          type: string
          description: Name of a valid servicegroup, all current downtimes for services
            in this group will be deleted.
          example: windows
      required:
      - delete_type
      - servicegroup_name
      additionalProperties: false
    DeleteDowntime:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/DeleteDowntimeById'
      - $ref: '#/components/schemas/DeleteDowntimeByName'
      - $ref: '#/components/schemas/DeleteDowntimeByQuery'
      - $ref: '#/components/schemas/DeleteDowntimeByHostGroup'
      - $ref: '#/components/schemas/DeleteDowntimeByServiceGroup'
      discriminator:
        propertyName: delete_type
        mapping:
          by_id: '#/components/schemas/DeleteDowntimeById'
          params: '#/components/schemas/DeleteDowntimeByName'
          query: '#/components/schemas/DeleteDowntimeByQuery'
          hostgroup: '#/components/schemas/DeleteDowntimeByHostGroup'
          servicegroup: '#/components/schemas/DeleteDowntimeByServiceGroup'
    CreateHostDowntime:
      type: object
      properties:
        start_time:
          type: string
          format: iso8601
          description: The start datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        end_time:
          type: string
          format: iso8601
          description: The end datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        recur:
          type: string
          default: fixed
          description: 'The recurring mode of the new downtime. Available modes are:     *
            fixed     * hour     * day     * week     * second_week     * fourth_week     *
            weekday_start     * weekday_end     * day_of_month  This only works when
            using the Enterprise Editions. Defaults to ''fixed''.'
          enum: &id122
          - fixed
          - hour
          - day
          - week
          - second_week
          - fourth_week
          - weekday_start
          - weekday_end
          - day_of_month
          example: hour
        duration:
          type: integer
          default: 0
          description: Duration in minutes. When set, the downtime does not begin
            automatically at a nominated time, but when a real problem status appears
            for the host. Consequencely, the start_time/end_time is only the time
            window in which the scheduled downtime can begin.
          example: 60
        comment:
          type: string
          example: Security updates
        downtime_type:
          type: string
          description: "The type of downtime to create.\n\nValid options are:\n\n\
            \ * `host` - Schedule downtimes for a host identified by host name or\
            \ IP address\n * `hostgroup` - Schedule downtimes for all hosts belonging\
            \ to the specified hostgroup\n * `host_by_query` - Schedule downtimes\
            \ for all host matching the query\n"
          enum: &id123
          - host
          - hostgroup
          - host_by_query
          example: host
        host_name:
          type: string
          description: The host name or IP address itself.
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
      required:
      - downtime_type
      - end_time
      - host_name
      - start_time
      additionalProperties: false
    CreateHostGroupDowntime:
      type: object
      properties:
        start_time:
          type: string
          format: iso8601
          description: The start datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        end_time:
          type: string
          format: iso8601
          description: The end datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        recur:
          type: string
          default: fixed
          description: 'The recurring mode of the new downtime. Available modes are:     *
            fixed     * hour     * day     * week     * second_week     * fourth_week     *
            weekday_start     * weekday_end     * day_of_month  This only works when
            using the Enterprise Editions. Defaults to ''fixed''.'
          enum: *id122
          example: hour
        duration:
          type: integer
          default: 0
          description: Duration in minutes. When set, the downtime does not begin
            automatically at a nominated time, but when a real problem status appears
            for the host. Consequencely, the start_time/end_time is only the time
            window in which the scheduled downtime can begin.
          example: 60
        comment:
          type: string
          example: Security updates
        downtime_type:
          type: string
          description: "The type of downtime to create.\n\nValid options are:\n\n\
            \ * `host` - Schedule downtimes for a host identified by host name or\
            \ IP address\n * `hostgroup` - Schedule downtimes for all hosts belonging\
            \ to the specified hostgroup\n * `host_by_query` - Schedule downtimes\
            \ for all host matching the query\n"
          enum: *id123
          example: host
        hostgroup_name:
          type: string
          description: The name of the host group. A downtime will be scheduled for
            all hosts in this host group.
          example: windows
      required:
      - downtime_type
      - end_time
      - hostgroup_name
      - start_time
      additionalProperties: false
    CreateHostQueryDowntime:
      type: object
      properties:
        start_time:
          type: string
          format: iso8601
          description: The start datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        end_time:
          type: string
          format: iso8601
          description: The end datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        recur:
          type: string
          default: fixed
          description: 'The recurring mode of the new downtime. Available modes are:     *
            fixed     * hour     * day     * week     * second_week     * fourth_week     *
            weekday_start     * weekday_end     * day_of_month  This only works when
            using the Enterprise Editions. Defaults to ''fixed''.'
          enum: *id122
          example: hour
        duration:
          type: integer
          default: 0
          description: Duration in minutes. When set, the downtime does not begin
            automatically at a nominated time, but when a real problem status appears
            for the host. Consequencely, the start_time/end_time is only the time
            window in which the scheduled downtime can begin.
          example: 60
        comment:
          type: string
          example: Security updates
        downtime_type:
          type: string
          description: "The type of downtime to create.\n\nValid options are:\n\n\
            \ * `host` - Schedule downtimes for a host identified by host name or\
            \ IP address\n * `hostgroup` - Schedule downtimes for all hosts belonging\
            \ to the specified hostgroup\n * `host_by_query` - Schedule downtimes\
            \ for all host matching the query\n"
          enum: *id123
          example: host
        query:
          description: An query expression of the Livestatus 'hosts' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: '{"op": "and", "expr": [{"op": "=", "left": "name", "right": "example.com"},
            {"op": "!=", "left": "state", "right": "0"}]}'
          $ref: '#/components/schemas/Expr'
      required:
      - downtime_type
      - end_time
      - query
      - start_time
      additionalProperties: false
    CreateHostRelatedDowntime:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/CreateHostDowntime'
      - $ref: '#/components/schemas/CreateHostGroupDowntime'
      - $ref: '#/components/schemas/CreateHostQueryDowntime'
      discriminator:
        propertyName: downtime_type
        mapping:
          host: '#/components/schemas/CreateHostDowntime'
          hostgroup: '#/components/schemas/CreateHostGroupDowntime'
          host_by_query: '#/components/schemas/CreateHostQueryDowntime'
    CreateServiceDowntime:
      type: object
      properties:
        start_time:
          type: string
          format: iso8601
          description: The start datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        end_time:
          type: string
          format: iso8601
          description: The end datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        recur:
          type: string
          default: fixed
          description: 'The recurring mode of the new downtime. Available modes are:     *
            fixed     * hour     * day     * week     * second_week     * fourth_week     *
            weekday_start     * weekday_end     * day_of_month  This only works when
            using the Enterprise Editions. Defaults to ''fixed''.'
          enum: *id122
          example: hour
        duration:
          type: integer
          default: 0
          description: Duration in minutes. When set, the downtime does not begin
            automatically at a nominated time, but when a real problem status appears
            for the service. Consequencely, the start_time/end_time is only the time
            window in which the scheduled downtime can begin.
          example: 60
        comment:
          type: string
          example: Security updates
        downtime_type:
          type: string
          description: "The type of downtime to create.\n\nValid options are:\n\n\
            \ * `service` - Schedule downtimes for services whose names are listed\
            \ in service_descriptions and belongs to the host identified by name or\
            \ IP address in host_name.\n * `servicegroup` - Schedule downtimes for\
            \ all services in a given service group\n * `service_by_query` - Schedule\
            \ downtimes for services matching the query\n"
          enum: &id124
          - service
          - servicegroup
          - service_by_query
          example: service
        host_name:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
        service_descriptions:
          type: array
          description: The service name of the service, whose problems shall be acknowledged.
          example:
          - CPU utilization
          - Memory
          uniqueItems: true
          items:
            type: string
      required:
      - downtime_type
      - end_time
      - host_name
      - service_descriptions
      - start_time
      additionalProperties: false
    CreateServiceGroupDowntime:
      type: object
      properties:
        start_time:
          type: string
          format: iso8601
          description: The start datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        end_time:
          type: string
          format: iso8601
          description: The end datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        recur:
          type: string
          default: fixed
          description: 'The recurring mode of the new downtime. Available modes are:     *
            fixed     * hour     * day     * week     * second_week     * fourth_week     *
            weekday_start     * weekday_end     * day_of_month  This only works when
            using the Enterprise Editions. Defaults to ''fixed''.'
          enum: *id122
          example: hour
        duration:
          type: integer
          default: 0
          description: Duration in minutes. When set, the downtime does not begin
            automatically at a nominated time, but when a real problem status appears
            for the host. Consequencely, the start_time/end_time is only the time
            window in which the scheduled downtime can begin.
          example: 60
        comment:
          type: string
          example: Security updates
        downtime_type:
          type: string
          description: "The type of downtime to create.\n\nValid options are:\n\n\
            \ * `service` - Schedule downtimes for services whose names are listed\
            \ in service_descriptions and belongs to the host identified by name or\
            \ IP address in host_name.\n * `servicegroup` - Schedule downtimes for\
            \ all services in a given service group\n * `service_by_query` - Schedule\
            \ downtimes for services matching the query\n"
          enum: *id124
          example: service
        servicegroup_name:
          type: string
          description: The name of the service group. Any host having a service in
            this group will be A downtime will be scheduled for all hosts in this
            group.
          example: windows
      required:
      - downtime_type
      - end_time
      - servicegroup_name
      - start_time
      additionalProperties: false
    CreateServiceQueryDowntime:
      type: object
      properties:
        start_time:
          type: string
          format: iso8601
          description: The start datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        end_time:
          type: string
          format: iso8601
          description: The end datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        recur:
          type: string
          default: fixed
          description: 'The recurring mode of the new downtime. Available modes are:     *
            fixed     * hour     * day     * week     * second_week     * fourth_week     *
            weekday_start     * weekday_end     * day_of_month  This only works when
            using the Enterprise Editions. Defaults to ''fixed''.'
          enum: *id122
          example: hour
        duration:
          type: integer
          default: 0
          description: Duration in minutes. When set, the downtime does not begin
            automatically at a nominated time, but when a real problem status appears
            for the service. Consequencely, the start_time/end_time is only the time
            window in which the scheduled downtime can begin.
          example: 60
        comment:
          type: string
          example: Security updates
        downtime_type:
          type: string
          description: "The type of downtime to create.\n\nValid options are:\n\n\
            \ * `service` - Schedule downtimes for services whose names are listed\
            \ in service_descriptions and belongs to the host identified by name or\
            \ IP address in host_name.\n * `servicegroup` - Schedule downtimes for\
            \ all services in a given service group\n * `service_by_query` - Schedule\
            \ downtimes for services matching the query\n"
          enum: *id124
          example: service
        query:
          description: An query expression of the Livestatus 'services' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: '{"op": "=", "left": "description", "right": "Service description"}'
          $ref: '#/components/schemas/Expr'
      required:
      - downtime_type
      - end_time
      - query
      - start_time
      additionalProperties: false
    CreateServiceRelatedDowntime:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/CreateServiceDowntime'
      - $ref: '#/components/schemas/CreateServiceGroupDowntime'
      - $ref: '#/components/schemas/CreateServiceQueryDowntime'
      discriminator:
        propertyName: downtime_type
        mapping:
          service: '#/components/schemas/CreateServiceDowntime'
          servicegroup: '#/components/schemas/CreateServiceGroupDowntime'
          service_by_query: '#/components/schemas/CreateServiceQueryDowntime'
    HostContactGroup:
      type: object
      properties:
        groups:
          type: array
          description: A list of contact groups.
          items:
            type: string
            example: all
        use:
          type: boolean
          default: false
          description: Add these contact groups to the host.
        use_for_services:
          type: boolean
          default: false
          description: <p>Always add host contact groups also to its services.</p>With
            this option contact groups that are added to hosts are always being added
            to services, as well. This only makes a difference if you have assigned
            other contact groups to services via rules in <i>Host & Service Parameters</i>.
            As long as you do not have any such rule a service always inherits all
            contact groups from its host.
        recurse_use:
          type: boolean
          default: false
          description: Add these groups as contacts to all hosts in all sub-folders
            of this folder.
        recurse_perms:
          type: boolean
          default: false
          description: Give these groups also permission on all sub-folders.
      required:
      - groups
      additionalProperties: false
    SNMPCommunity:
      type: object
      properties:
        type:
          default: v1_v2_community
        community:
          type: string
          description: SNMP community (SNMP Versions 1 and 2c)
      required:
      - community
      additionalProperties: false
    SNMPv3NoAuthNoPrivacy:
      type: object
      properties:
        type:
          default: noAuthNoPriv
          description: The type of credentials to use.
        security_name:
          type: string
          description: Security name
      required:
      - security_name
      additionalProperties: false
    SNMPv3AuthNoPrivacy:
      type: object
      properties:
        type:
          default: authNoPriv
          description: The type of credentials to use.
        auth_protocol:
          type: string
          description: Authentication protocol.
          enum:
          - MD5-96
          - SHA-1-96
          - SHA-2-224
          - SHA-2-256
          - SHA-2-384
          - SHA-2-512
        security_name:
          type: string
          description: Security name
        auth_password:
          type: string
          description: Authentication pass phrase.
          minLength: 8
      required:
      - auth_password
      - auth_protocol
      - security_name
      additionalProperties: false
    SNMPv3AuthPrivacy:
      type: object
      properties:
        type:
          default: authPriv
          description: SNMPv3 with authentication and privacy.
        auth_protocol:
          type: string
          description: Authentication protocol.
          enum:
          - MD5-96
          - SHA-1-96
          - SHA-2-224
          - SHA-2-256
          - SHA-2-384
          - SHA-2-512
        security_name:
          type: string
          description: Security name
        auth_password:
          type: string
          description: Authentication pass phrase.
          minLength: 8
        privacy_protocol:
          type: string
          description: The privacy protocol. The only supported values in the Raw
            Edition are CBC-DES and AES-128. If selected, privacy_password needs to
            be supplied as well.
          enum:
          - CBC-DES
          - AES-128
          - 3DES-EDE
          - AES-192
          - AES-256
          - AES-192-Blumenthal
          - AES-256-Blumenthal
        privacy_password:
          type: string
          description: Privacy pass phrase. If filled, privacy_protocol needs to be
            selected as well.
          minLength: 8
      required:
      - auth_password
      - auth_protocol
      - privacy_password
      - privacy_protocol
      - security_name
      additionalProperties: false
    SNMPCredentials:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/SNMPCommunity'
      - $ref: '#/components/schemas/SNMPv3NoAuthNoPrivacy'
      - $ref: '#/components/schemas/SNMPv3AuthNoPrivacy'
      - $ref: '#/components/schemas/SNMPv3AuthPrivacy'
      discriminator:
        propertyName: type
        mapping:
          v1_v2_community: '#/components/schemas/SNMPCommunity'
          v3_no_auth_no_privacy: '#/components/schemas/SNMPv3NoAuthNoPrivacy'
          v3_auth_no_privacy: '#/components/schemas/SNMPv3AuthNoPrivacy'
          v3_auth_privacy: '#/components/schemas/SNMPv3AuthPrivacy'
    IPAddressRange:
      type: object
      properties:
        type:
          default: ip_range
          description: A range of addresses.
        from_address:
          type: string
          description: The first IPv4 address of this range.
        to_address:
          type: string
          description: The last IPv4 address of this range.
      additionalProperties: false
    IPNetwork:
      type: object
      properties:
        type:
          default: ip_network
          description: A single IPv4 network in CIDR notation.
        network:
          type: string
          description: "A IPv4 network in CIDR notation. Minimum prefix length is\
            \ 8 bit, maximum prefix length is 30 bit.\n\nValid examples:\n\n * `192.168.0.0/24`\n\
            \ * `192.168.0.0/255.255.255.0`"
      additionalProperties: false
    IPAddresses:
      type: object
      properties:
        type:
          default: ip_list
          description: A list of single IPv4 addresses.
        addresses:
          type: array
          items:
            type: string
      additionalProperties: false
    IPRegexp:
      type: object
      properties:
        type:
          default: ip_regex_list
          description: IPv4 addresses which match a regexp pattern
        regexp_list:
          type: array
          description: A list of regular expressions which are matched against the
            found IP addresses. The matches will be excluded from the result.
          items:
            type: string
      additionalProperties: false
    IPRangeWithRegexp:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/IPAddressRange'
      - $ref: '#/components/schemas/IPNetwork'
      - $ref: '#/components/schemas/IPAddresses'
      - $ref: '#/components/schemas/IPRegexp'
      discriminator:
        propertyName: type
        mapping:
          address_range: '#/components/schemas/IPAddressRange'
          network_range: '#/components/schemas/IPNetwork'
          explicit_addresses: '#/components/schemas/IPAddresses'
          exclude_by_regexp: '#/components/schemas/IPRegexp'
    TimeAllowedRange:
      type: object
      properties:
        start:
          type: string
          description: The start time of day. Inclusive. Use ISO8601 format. Seconds
            are stripped.
          pattern: ^\d\d:\d\d(:\d\d)?$
        end:
          type: string
          description: The end time of day. Inclusive. Use ISO8601 format. Seconds
            are stripped.
          pattern: ^\d\d:\d\d(:\d\d)?$
      required:
      - end
      - start
      additionalProperties: false
    RegexpRewrites:
      type: object
      properties:
        search:
          type: string
          description: "The search regexp. May contain match-groups, conditional matches,\
            \ etc. This follows the Python regular expression syntax.\n\nFor details\
            \ see:\n\n * https://docs.python.org/3/library/re.html"
          maxLength: 30
        replace_with:
          type: string
          description: The replacement string. Match-groups can only be identified
            by `\1`, `\2`, etc. Highest supported match group is `\99`. Named lookups
            are not supported.
          maxLength: 30
      required:
      - replace_with
      - search
      additionalProperties: false
    DirectMapping:
      type: object
      properties:
        hostname:
          type: string
          description: The host name to be replaced.
        replace_with:
          type: string
          description: The replacement string.
      required:
      - hostname
      - replace_with
      additionalProperties: false
    TranslateNames:
      type: object
      properties:
        convert_case:
          type: string
          default: nop
          description: "Convert all detected host names to upper- or lower-case.\n\
            \n * `nop` - Do not convert anything\n * `lower` - Convert all host names\
            \ to lowercase.\n * `upper` - Convert all host names to uppercase."
          enum:
          - nop
          - lower
          - upper
        drop_domain:
          type: boolean
          description: "Drop the rest of the domain, only keep the host name. Will\
            \ not affect IP addresses.\n\nExamples:\n\n * `192.168.0.1` -> `192.168.0.1`\n\
            \ * `foobar.example.com` -> `foobar`\n * `example.com` -> `example`\n\
            \ * `example` -> `example`\n\nThis will be executed **after**:\n\n * `convert_case`\n"
        regexp_rewrites:
          type: array
          description: "Rewrite discovered host names with multiple regular expressions.\
            \ The replacements will be done one after another in the order they appear\
            \ in the list. If not anchored at the end by a `$` character, the regexpwill\
            \ be anchored at the end implicitly by adding a `$` character.\n\nThese\
            \ will be executed **after**:\n\n * `convert_case`\n * `drop_domain`\n"
          items:
            $ref: '#/components/schemas/RegexpRewrites'
        hostname_replacement:
          type: array
          description: "Replace one value with another.\n\nThese will be executed\
            \ **after**:\n\n * `convert_case`\n * `drop_domain`\n * `regexp_rewrites`\n"
          items:
            $ref: '#/components/schemas/DirectMapping'
      additionalProperties: false
    NetworkScan:
      type: object
      properties:
        addresses:
          type: array
          description: IPv4 addresses to include.
          items:
            $ref: '#/components/schemas/IPRangeWithRegexp'
        exclude_addresses:
          type: array
          description: IPv4 addresses to exclude.
          items:
            $ref: '#/components/schemas/IPRangeWithRegexp'
        scan_interval:
          type: integer
          default: 86400
          description: Scan interval in seconds. Default is 1 day, minimum is 1 hour.
          minimum: 3600
        time_allowed:
          type: array
          description: Only execute the discovery during this time range each day..
          items:
            $ref: '#/components/schemas/TimeAllowedRange'
        set_ip_address:
          type: boolean
          default: true
          description: When set, the found IPv4 address is set on the discovered host.
        max_parallel_pings:
          type: integer
          default: 100
          description: Set the maximum number of concurrent pings sent to target IP
            addresses.
          maximum: 200
          minimum: 1
        run_as:
          type: string
          description: Execute the network scan in the Checkmk user context of the
            chosen user. This user needs the permission to add new hosts to this folder.
        tag_criticality:
          type: string
          description: Specify which criticality tag to set on the host created by
            the network scan. This field is required if the criticality tag group
            exists, otherwise it as to be omitted.
        translate_names:
          $ref: '#/components/schemas/TranslateNames'
      required:
      - addresses
      - time_allowed
      additionalProperties: false
    IPMIParameters:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
      additionalProperties: false
    LockedBy:
      type: object
      properties:
        site_id:
          type: string
          description: Site ID
        program_id:
          type: string
          description: Program ID
        instance_id:
          type: string
          description: Instance ID
      required:
      - instance_id
      - program_id
      - site_id
      additionalProperties: false
    NetworkScanResult:
      type: object
      properties:
        start:
          type:
          - string
          - 'null'
          format: date-time
          description: When the scan started
        end:
          type:
          - string
          - 'null'
          format: date-time
          description: When the scan finished. Will be Null if not yet run.
        state:
          type: string
          description: Last scan result
          enum:
          - running
          - succeeded
          - failed
        output:
          type: string
          description: Short human readable description of what is happening.
      additionalProperties: false
    MetaData:
      type: object
      properties:
        created_at:
          type:
          - string
          - 'null'
          format: date-time
          description: When has this object been created.
        updated_at:
          type:
          - string
          - 'null'
          format: date-time
          description: When this object was last changed.
        created_by:
          type:
          - string
          - 'null'
          description: The user id under which this object has been created.
      additionalProperties: false
    HostViewAttribute:
      type: object
      properties:
        tag_address_family:
          type: string
          description: The IP address family of the host.
          enum: &id125
          - ip-v6-only
          - no-ip
          - ip-v4-only
          - ip-v4v6
          example: ip-v4-only
        tag_agent:
          type: string
          description: Agent and API integrations
          enum: &id126
          - special-agents
          - cmk-agent
          - all-agents
          - no-agent
          example: cmk-agent
        tag_snmp_ds:
          type: string
          description: The SNMP data source of the host.
          enum: &id127
          - snmp-v2
          - no-snmp
          - snmp-v1
          example: snmp-v2
        tag_piggyback:
          type: string
          description: Use piggyback data for this host.
          enum: &id128
          - auto-piggyback
          - piggyback
          - no-piggyback
          example: piggyback
        alias:
          type: string
          description: Add a comment or describe this host
        site:
          type: string
          description: The site that should monitor this host.
        parents:
          type: array
          description: A list of parents of this host.
          items:
            type: string
            example: example.com
            pattern: ^[-0-9a-zA-Z_.]+\Z
        contactgroups:
          description: Only members of the contact groups listed here have Setup permission
            for the host/folder. Optionally, you can make these contact groups automatically
            monitor contacts. The assignment of hosts to contact groups can also be
            defined by <a href='wato.py?mode=edit_ruleset&varname=host_contactgroups'>rules</a>.
          $ref: '#/components/schemas/HostContactGroup'
        ipaddress:
          type: string
          description: An IPv4 address.
        ipv6address:
          type: string
          description: An IPv6 address.
        additional_ipv4addresses:
          type: array
          description: A list of IPv4 addresses.
          items:
            type: string
        additional_ipv6addresses:
          type: array
          description: A list of IPv6 addresses.
          items:
            type: string
        bake_agent_package:
          type: boolean
          description: '[Enterprise, Cloud, Saas, Managed editions only] Bake agent
            packages for this folder even if it is empty.'
        cmk_agent_connection:
          type: string
          description: "[Cloud, Managed editions only] This configures the communication\
            \ direction of this host.\n * `pull-agent` (default) - The server will\
            \ try to contact the monitored host and pull the data by initializing\
            \ a TCP connection\n * `push-agent` - the host is expected to send the\
            \ data to the monitoring server without being triggered\n"
          enum: &id129
          - pull-agent
          - push-agent
        snmp_community:
          description: The SNMP access configuration. A configured SNMP v1/v2 community
            here will have precedence over any configured SNMP community rule. For
            this attribute to take effect, the attribute `tag_snmp_ds` needs to be
            set first.
          $ref: '#/components/schemas/SNMPCredentials'
        metrics_association:
          type: array
          items:
            type:
            - string
            - 'null'
        labels:
          type: object
          description: "Labels allow you to flexibly group your hosts in order to\
            \ refer to them later at other places in Checkmk, e.g. in rule chains.<br><b>Label\
            \ format:</b> key:value<br><br>Neither the key nor the value can contain\
            \ \u2018:\u2019. Checkmk does not perform any other validation on the\
            \ labels you use."
          additionalProperties:
            type: string
            description: The host label value
        waiting_for_discovery:
          type: boolean
          description: This indicates that the host is waiting for a bulk discovery.
            It is set to True once the host is in the queue. It will be removed after
            the discovery is ended.
          example: false
        network_scan:
          description: Configuration for automatic network scan. Pings will besent
            to each IP address in the configured ranges to checkif a host is up or
            down. Each found host will be added tothe folder by it's host name (if
            possible) or IP address.
          $ref: '#/components/schemas/NetworkScan'
        management_protocol:
          type: string
          description: "The protocol used to connect to the management board.\n\n\
            Valid options are:\n\n * `none` - No management board\n * `snmp` - Connect\
            \ using SNMP\n * `ipmi` - Connect using IPMI\n"
          enum: &id130
          - none
          - snmp
          - ipmi
        management_address:
          type: string
          description: Address (IPv4, IPv6 or host name) under which the management
            board can be reached.
        management_snmp_community:
          description: SNMP credentials
          anyOf:
          - $ref: '#/components/schemas/SNMPCredentials'
          - type: 'null'
        management_ipmi_credentials:
          description: IPMI credentials
          anyOf:
          - $ref: '#/components/schemas/IPMIParameters'
          - type: 'null'
        locked_by:
          description: Identity of the entity which locked the locked_attributes.
            The identity is built out of the Site ID, the program name and the connection
            ID.
          $ref: '#/components/schemas/LockedBy'
        locked_attributes:
          type: array
          description: Name of host attributes which are locked in the UI.
          items:
            type: string
        inventory_failed:
          type: boolean
          description: Whether or not the last bulk discovery failed. It is set to
            True once it fails and unset in case a later discovery succeeds.
          example: false
        relay:
          type: string
          description: '[Cloud, Saas, Managed editions only] The name/address of the
            relay through which this host is monitored, if not empty.'
        network_scan_result:
          description: Read only access to the network scan result
          $ref: '#/components/schemas/NetworkScanResult'
        meta_data:
          description: Read only access to configured metadata.
          $ref: '#/components/schemas/MetaData'
      additionalProperties:
        type: string
        description: "The property name must be\n\n * A custom host attribute\n *\
          \ A custom tag group starting with `tag_`\n"
        required: true
    CreationRuleAttribute:
      type: object
      properties:
        folder_path:
          type: string
          description: 'Name of the folder the connection creates hosts in. Once created,
            you can choose to move the host to another folder.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          example: /folder_1/subfolder_a
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        host_attributes:
          default: {}
          description: Attributes to set on the newly created host.
          example:
            ipaddress: 192.168.0.123
          $ref: '#/components/schemas/HostViewAttribute'
        delete_hosts:
          type: boolean
          description: Delete the hosts created by this connection whose piggyback
            data is no longer present.
          example: false
        matching_hosts:
          type: array
          description: Restrict host creation using regular expressions.
          example:
          - host1
          - host2
          - regular.+expression
          items:
            type: string
      additionalProperties: false
    PiggybackConnector:
      type: object
      properties:
        connector_type:
          default: piggyback
          description: The type of the connector.
        restrict_source_hosts:
          type: array
          description: Only care about hosts that receive piggyback data from hosts
            which name matches one of these regular expressions.
          example:
          - host1
          - host2
          - regular.+expression
          items:
            type: string
        interval:
          type: integer
          description: The interval in seconds the connection will be executed to
            check the available piggyback and update the configuration.
          example: 60
        creation_rules:
          type: array
          description: The first matching rule is used. You must specify at least
            one rule.
          example:
          - folder_path: /
            host_attributes:
              tag_snmp_ds: no-snmp
              tag_agent: no-agent
              tag_piggyback: piggyback
              tag_address_family: no-ip
            delete_hosts: false
          items:
            $ref: '#/components/schemas/CreationRuleAttribute'
        discover_on_creation:
          type: boolean
          description: Automatically runs a service discovery on any new hosts created
            by this connection. This step will add any new services to the monitoring.
          example: true
        no_deletion_time_after_init:
          type: integer
          description: Seconds to prevent host deletion after site startup, e.g. when
            booting the Checkmk server.
          example: 600
        max_cache_age:
          type: integer
          description: Seconds to keep hosts when piggyback source only sends piggyback
            data for other hosts.
          example: 3600
        validity_period:
          type: integer
          description: Seconds to continue consider outdated piggyback data as valid.
          example: 60
      additionalProperties: false
    OneOfConnector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PiggybackConnector'
      discriminator:
        propertyName: connector_type
        mapping:
          piggyback: '#/components/schemas/PiggybackConnector'
    DCDExtensions:
      type: object
      properties:
        title:
          type: string
          description: Name your connection for easy recognition.
          example: My fancy dynamic host configuration
        comment:
          type: string
          default: ''
          description: Add a comment to your dynamic host configuration
          example: This rule updates the host configuration from Initech cloud provider.
        documentation_url:
          type: string
          format: url
          default: ''
          description: Add a URL linking to a documentation or any other page. You
            can use either global URLs (starting with http://), absolute local URLs
            (starting with /) or relative URLs (relative to check_mk/).
          example: https://example.com/doc
        disabled:
          type: boolean
          default: false
          description: The dynamic host configuration can be disabled but will remain
            part of the site.
          example: false
        site:
          type: string
          description: Specify the site where you want this connector to run. Only
            this site will process the data.
          example: global
        dcd_id:
          type: string
          description: The unique identifier of the dynamic host configuration.
          example: MyDcd01
          pattern: ^[-0-9a-zA-Z_.]+$
        connector:
          description: The connector configuration.
          $ref: '#/components/schemas/OneOfConnector'
      required:
      - connector
      - dcd_id
      - site
      - title
      additionalProperties: false
    ShowDCD:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: dcd
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: All the data and metadata of this dcd connection.
          $ref: '#/components/schemas/DCDExtensions'
      required:
      - domainType
      - links
      additionalProperties: false
    ConnectionFetchPhaseOne:
      type: object
      properties:
        site_id:
          type: string
          description: The site id
          example: master
        connection_id:
          type: string
          description: The connection id
          example: connection_id
      required:
      - connection_id
      - site_id
      additionalProperties: false
    HostCreateAttribute:
      type: object
      properties:
        tag_address_family:
          type: string
          description: The IP address family of the host.
          enum: *id125
          example: ip-v4-only
        tag_agent:
          type: string
          description: Agent and API integrations
          enum: *id126
          example: cmk-agent
        tag_snmp_ds:
          type: string
          description: The SNMP data source of the host.
          enum: *id127
          example: snmp-v2
        tag_piggyback:
          type: string
          description: Use piggyback data for this host.
          enum: *id128
          example: piggyback
        alias:
          type: string
          description: Add a comment or describe this host
        site:
          type: string
          description: The site that should monitor this host.
        parents:
          type: array
          description: A list of parents of this host.
          items:
            type: string
            example: example.com
            pattern: ^[-0-9a-zA-Z_.]+\Z
        contactgroups:
          description: Only members of the contact groups listed here have Setup permission
            for the host/folder. Optionally, you can make these contact groups automatically
            monitor contacts. The assignment of hosts to contact groups can also be
            defined by <a href='wato.py?mode=edit_ruleset&varname=host_contactgroups'>rules</a>.
          $ref: '#/components/schemas/HostContactGroup'
        ipaddress:
          type: string
          description: An IPv4 address.
        ipv6address:
          type: string
          description: An IPv6 address.
        additional_ipv4addresses:
          type: array
          description: A list of IPv4 addresses.
          items:
            type: string
        additional_ipv6addresses:
          type: array
          description: A list of IPv6 addresses.
          items:
            type: string
        bake_agent_package:
          type: boolean
          description: '[Enterprise, Cloud, Saas, Managed editions only] Bake agent
            packages for this folder even if it is empty.'
        cmk_agent_connection:
          type: string
          description: "[Cloud, Managed editions only] This configures the communication\
            \ direction of this host.\n * `pull-agent` (default) - The server will\
            \ try to contact the monitored host and pull the data by initializing\
            \ a TCP connection\n * `push-agent` - the host is expected to send the\
            \ data to the monitoring server without being triggered\n"
          enum: *id129
        snmp_community:
          description: The SNMP access configuration. A configured SNMP v1/v2 community
            here will have precedence over any configured SNMP community rule. For
            this attribute to take effect, the attribute `tag_snmp_ds` needs to be
            set first.
          $ref: '#/components/schemas/SNMPCredentials'
        metrics_association:
          type: array
          items:
            type:
            - string
            - 'null'
        labels:
          type: object
          description: "Labels allow you to flexibly group your hosts in order to\
            \ refer to them later at other places in Checkmk, e.g. in rule chains.<br><b>Label\
            \ format:</b> key:value<br><br>Neither the key nor the value can contain\
            \ \u2018:\u2019. Checkmk does not perform any other validation on the\
            \ labels you use."
          additionalProperties:
            type: string
            description: The host label value
        waiting_for_discovery:
          type: boolean
          description: This indicates that the host is waiting for a bulk discovery.
            It is set to True once the host is in the queue. It will be removed after
            the discovery is ended.
          example: false
        network_scan:
          description: Configuration for automatic network scan. Pings will besent
            to each IP address in the configured ranges to checkif a host is up or
            down. Each found host will be added tothe folder by it's host name (if
            possible) or IP address.
          $ref: '#/components/schemas/NetworkScan'
        management_protocol:
          type: string
          description: "The protocol used to connect to the management board.\n\n\
            Valid options are:\n\n * `none` - No management board\n * `snmp` - Connect\
            \ using SNMP\n * `ipmi` - Connect using IPMI\n"
          enum: *id130
        management_address:
          type: string
          description: Address (IPv4, IPv6 or host name) under which the management
            board can be reached.
        management_snmp_community:
          description: SNMP credentials
          anyOf:
          - $ref: '#/components/schemas/SNMPCredentials'
          - type: 'null'
        management_ipmi_credentials:
          description: IPMI credentials
          anyOf:
          - $ref: '#/components/schemas/IPMIParameters'
          - type: 'null'
        locked_by:
          description: Identity of the entity which locked the locked_attributes.
            The identity is built out of the Site ID, the program name and the connection
            ID.
          $ref: '#/components/schemas/LockedBy'
        locked_attributes:
          type: array
          description: Name of host attributes which are locked in the UI.
          items:
            type: string
        inventory_failed:
          type: boolean
          description: Whether or not the last bulk discovery failed. It is set to
            True once it fails and unset in case a later discovery succeeds.
          example: false
        relay:
          type: string
          description: '[Cloud, Saas, Managed editions only] The name/address of the
            relay through which this host is monitored, if not empty.'
      additionalProperties:
        type: string
        description: "The property name must be\n\n * A custom host attribute\n *\
          \ A custom tag group starting with `tag_`\n"
        required: true
    CreateCreationRuleAttribute:
      type: object
      properties:
        folder_path:
          type: string
          default: /
          description: 'Name of the folder the connection creates hosts in. Once created,
            you can choose to move the host to another folder.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        host_attributes:
          default:
            tag_snmp_ds: no-snmp
            tag_agent: no-agent
            tag_piggyback: piggyback
            tag_address_family: no-ip
          description: Attributes to set on the newly created host. You can specify
            custom attributes and tag groups in addition to the built-in ones listed
            below.
          example:
            tag_address_family: no-ip
          $ref: '#/components/schemas/HostCreateAttribute'
        delete_hosts:
          type: boolean
          default: false
          description: Delete the hosts created by this connection whose piggyback
            data is no longer present.
        matching_hosts:
          type: array
          description: Restrict host creation using regular expressions.
          items:
            type: string
      additionalProperties: false
    CreatePiggybackDCD:
      type: object
      properties:
        connector_type:
          default: piggyback
          description: The name of the plug-in to be used. Currently only piggyback
            is supported.
        restrict_source_hosts:
          type: array
          description: Only care about hosts that receive piggyback data from hosts
            which name matches one of these regular expressions.
          items:
            type: string
        interval:
          type: integer
          default: 60
          description: The interval in seconds the connection will be executed to
            check the available piggyback and update the configuration.
        creation_rules:
          type: array
          default:
          - folder_path: /
            host_attributes:
              tag_snmp_ds: no-snmp
              tag_agent: no-agent
              tag_piggyback: piggyback
              tag_address_family: no-ip
            delete_hosts: false
          description: The first matching rule is used. You must specify at least
            one rule.
          items:
            $ref: '#/components/schemas/CreateCreationRuleAttribute'
        discover_on_creation:
          type: boolean
          default: true
          description: Automatically runs a service discovery on any new hosts created
            by this connection. This step will add any new services to the monitoring.
        no_deletion_time_after_init:
          type: integer
          default: 600
          description: Seconds to prevent host deletion after site startup, e.g. when
            booting the Checkmk server.
        max_cache_age:
          type: integer
          default: 3600
          description: Seconds to keep hosts when piggyback source only sends piggyback
            data for other hosts.
        validity_period:
          type: integer
          default: 60
          description: Seconds to continue consider outdated piggyback data as valid
      required:
      - connector_type
      additionalProperties: false
    CreateConnector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/CreatePiggybackDCD'
      discriminator:
        propertyName: connector_type
        mapping:
          piggyback: '#/components/schemas/CreatePiggybackDCD'
    CreateDCD:
      type: object
      properties:
        title:
          type: string
          description: Name your connection for easy recognition.
          example: My fancy dynamic host configuration
        comment:
          type: string
          default: ''
          description: Add a comment to your dynamic host configuration
          example: This rule updates the host configuration from Initech cloud provider.
        documentation_url:
          type: string
          format: url
          default: ''
          description: Add a URL linking to a documentation or any other page. You
            can use either global URLs (starting with http://), absolute local URLs
            (starting with /) or relative URLs (relative to check_mk/).
          example: https://example.com/doc
        disabled:
          type: boolean
          default: false
          description: The dynamic host configuration can be disabled but will remain
            part of the site.
          example: false
        site:
          type: string
          description: Specify the site where you want this connector to run. Only
            this site will process the data.
          example: global
        dcd_id:
          type: string
          description: The unique ID of the Piggyback dynamic host configuration to
            be created.
          example: MyDcd01
          pattern: ^[-0-9a-zA-Z_.]+$
        connector:
          description: The connector configuration.
          example:
            connector_type: piggyback
            restrict_source_hosts:
            - host1
            - host2
            - regular.+expression
            interval: 60
            creation_rules:
            - folder_path: /
              host_attributes:
                tag_snmp_ds: no-snmp
                tag_agent: no-agent
                tag_piggyback: piggyback
                tag_address_family: no-ip
              delete_hosts: false
            discover_on_creation: true
            no_deletion_time_after_init: 600
            max_cache_age: 3600
            validity_period: 60
          $ref: '#/components/schemas/CreateConnector'
      required:
      - connector
      - dcd_id
      - site
      - title
      additionalProperties: false
    Api404CustomError2:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The dynamic host configuration was not found.
        title:
          type: string
          description: A summary of the problem.
          example: Not Found
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    ECEventAttributes:
      type: object
      properties:
        site_id:
          type: string
          description: The site id of the EC event.
          example: heute
        state:
          type: string
          description: The state
          enum:
          - ok
          - warning
          - critical
          - unknown
          example: ok
        service_level:
          type: string
          description: The service level for this event.
          enum:
          - no_service_level
          - silver
          - gold
          - platinum
          example: gold
        host:
          type: string
          description: The host name. No exception is raised when the specified host
            name does not exist
          example: host_1
          pattern: ^[-0-9a-zA-Z_.]+\Z
        rule_id:
          type: string
          description: The ID of the rule.
          example: rule_1
        application:
          type: string
          description: The syslog tag/application this event originated from.
          example: app_1
        comment:
          type: string
          description: The event comment.
          example: Example comment
        contact:
          type: string
          description: The event contact information.
          example: Mr Monitor
        ipaddress:
          type: string
          description: The IP address where the event originated.
          example: 127.0.0.1
        facility:
          type: string
          description: The syslog facility.
          enum:
          - kern
          - user
          - mail
          - daemon
          - auth
          - syslog
          - lpr
          - news
          - uucp
          - cron
          - authpriv
          - ftp
          - ntp
          - logaudit
          - logalert
          - clock
          - local0
          - local1
          - local2
          - local3
          - local4
          - local5
          - local6
          - local7
          - logfile
          - snmptrap
          example: kern
        priority:
          type: string
          description: The syslog priority.
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          example: warning
        phase:
          type: string
          description: The event phase, open or ack
          enum:
          - open
          - ack
          example: open
        last:
          type: string
          format: date-time
          example: '2017-11-09T17:32:28Z'
        first:
          type: string
          format: date-time
          example: '2022-11-09T16:12:12Z'
        count:
          type: integer
          description: The number of occurrences of this event within a period.
          example: 1
        text:
          type: string
          description: The event message text
          example: Sample message text
      required:
      - application
      - comment
      - contact
      - count
      - facility
      - first
      - host
      - ipaddress
      - last
      - phase
      - priority
      - rule_id
      - service_level
      - site_id
      - state
      - text
      additionalProperties: false
    ECEventResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: event_console
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The configuration attributes of a site.
          example:
            state: okay
            service_level: gold
            host: host_1
            rule_id: rule_1
            application: app_1
            comment: example_comment
            contact: Mr Monitor
            ipaddress: 127.0.0.1
            facility: kern
            priority: warning
            phase: open
            last: Oct 21 2022 09:11:12
            first: Oct 26 2022 07:51:25
            count: 1
            text: Sample message text.
          $ref: '#/components/schemas/ECEventAttributes'
      required:
      - links
      additionalProperties: false
    EventConsoleResponseCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: event_console
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of site configuration objects.
          example:
          - links: []
            domainType: event_console
            id: '1'
            title: Sample message text
            members: {}
            extensions:
              state: okay
              service_level: gold
              host: host_1
              rule_id: rule_1
              application: app_1
              comment: example_comment
              contact: Mr Monitor
              ipaddress: 127.0.0.1
              facility: kern
              priority: warning
              phase: open
              last: Oct 21 2022 09:11:12
              first: Oct 26 2022 07:51:25
              count: 1
              text: Sample message text
          items:
            $ref: '#/components/schemas/ECEventResponse'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    ChangeStateWithQuery:
      type: object
      properties:
        filter_type:
          type: string
          description: The way you would like to filter events.
          enum: &id131
          - query
          - params
          example: params
        site_id:
          type: string
          description: An existing site id
          example: heute
        new_state:
          type: string
          description: The state
          enum: &id132
          - ok
          - warning
          - critical
          - unknown
          example: ok
        query:
          description: An query expression of the Livestatus 'eventconsoleevents'
            table in nested dictionary form. If you want to use multiple expressions,
            nest them with the AND/OR operators.
          example: '{"op": "=", "left": "eventconsoleevents.event_host", "right":
            "test_host"}'
          $ref: '#/components/schemas/Expr'
      required:
      - filter_type
      - new_state
      - query
      additionalProperties: false
    FilterParams:
      type: object
      properties:
        state:
          type: string
          description: The state
          enum:
          - ok
          - warning
          - critical
          - unknown
          example: ok
        host:
          type: string
          description: The host name. No exception is raised when the specified host
            name does not exist
          example: host_1
          pattern: ^[-0-9a-zA-Z_.]+\Z
        phase:
          type: string
          description: The event phase, open or ack
          enum:
          - open
          - ack
          example: open
        application:
          type: string
          description: Show events that originated from this app.
          example: app_1
      additionalProperties: false
    ChangeStateWithParams:
      type: object
      properties:
        filter_type:
          type: string
          description: The way you would like to filter events.
          enum: *id131
          example: params
        site_id:
          type: string
          description: An existing site id
          example: heute
        new_state:
          type: string
          description: The state
          enum: *id132
          example: ok
        filters:
          $ref: '#/components/schemas/FilterParams'
      required:
      - filter_type
      - filters
      - new_state
      additionalProperties: false
    ChangeEventStateSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/ChangeStateWithQuery'
      - $ref: '#/components/schemas/ChangeStateWithParams'
      discriminator:
        propertyName: filter_type
        mapping:
          query: '#/components/schemas/ChangeStateWithQuery'
          params: '#/components/schemas/ChangeStateWithParams'
    FilterById:
      type: object
      properties:
        filter_type:
          type: string
          description: The way you would like to filter events.
          enum: &id133
          - by_id
          - query
          - params
          example: by_id
        site_id:
          type: string
          description: An existing site id
          example: heute
        event_id:
          type: integer
          description: The event console ID
          example: 1
      required:
      - event_id
      - filter_type
      - site_id
      additionalProperties: false
    FilterByQuery:
      type: object
      properties:
        filter_type:
          type: string
          description: The way you would like to filter events.
          enum: *id133
          example: by_id
        query:
          description: An query expression of the Livestatus 'eventconsoleevents'
            table in nested dictionary form. If you want to use multiple expressions,
            nest them with the AND/OR operators.
          example: '{"op": "=", "left": "eventconsoleevents.event_host", "right":
            "test_host"}'
          $ref: '#/components/schemas/Expr'
      required:
      - filter_type
      - query
      additionalProperties: false
    FilterByParams:
      type: object
      properties:
        filter_type:
          type: string
          description: The way you would like to filter events.
          enum: *id133
          example: by_id
        filters:
          $ref: '#/components/schemas/FilterParams'
      required:
      - filter_type
      - filters
      additionalProperties: false
    DeleteECEvents:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/FilterById'
      - $ref: '#/components/schemas/FilterByQuery'
      - $ref: '#/components/schemas/FilterByParams'
      discriminator:
        propertyName: filter_type
        mapping:
          by_id: '#/components/schemas/FilterById'
          query: '#/components/schemas/FilterByQuery'
          params: '#/components/schemas/FilterByParams'
    UpdateAndAcknowledgeWithQuery:
      type: object
      properties:
        phase:
          type: string
          default: ack
          description: To change the phase of an event
          enum: &id134
          - ack
          - open
          example: ack
        change_comment:
          type: string
          description: Event comment.
          example: Comment now acked
        change_contact:
          type: string
          description: Contact information.
          example: Mr Monitor
        filter_type:
          type: string
          description: The way you would like to filter events.
          enum: &id135
          - query
          - params
          - all
          example: all
        site_id:
          type: string
          description: An existing site id
          example: heute
        query:
          description: An query expression of the Livestatus 'eventconsoleevents'
            table in nested dictionary form. If you want to use multiple expressions,
            nest them with the AND/OR operators.
          example: '{"op": "=", "left": "eventconsoleevents.event_host", "right":
            "test_host"}'
          $ref: '#/components/schemas/Expr'
      required:
      - filter_type
      - query
      additionalProperties: false
    FilterParamsUpdateAndAcknowledge:
      type: object
      properties:
        state:
          type: string
          description: The state
          enum:
          - ok
          - warning
          - critical
          - unknown
          example: ok
        host:
          type: string
          description: The host name. No exception is raised when the specified host
            name does not exist
          example: host_1
          pattern: ^[-0-9a-zA-Z_.]+\Z
        application:
          type: string
          description: Show events that originated from this app.
          example: app_1
      additionalProperties: false
    UpdateAndAcknowledgeWithParams:
      type: object
      properties:
        phase:
          type: string
          default: ack
          description: To change the phase of an event
          enum: *id134
          example: ack
        change_comment:
          type: string
          description: Event comment.
          example: Comment now acked
        change_contact:
          type: string
          description: Contact information.
          example: Mr Monitor
        filter_type:
          type: string
          description: The way you would like to filter events.
          enum: *id135
          example: all
        site_id:
          type: string
          description: An existing site id
          example: heute
        filters:
          $ref: '#/components/schemas/FilterParamsUpdateAndAcknowledge'
      required:
      - filter_type
      - filters
      additionalProperties: false
    UpdateAndAcknowledgeFilter:
      type: object
      properties:
        phase:
          type: string
          default: ack
          description: To change the phase of an event
          enum: *id134
          example: ack
        change_comment:
          type: string
          description: Event comment.
          example: Comment now acked
        change_contact:
          type: string
          description: Contact information.
          example: Mr Monitor
        filter_type:
          type: string
          description: The way you would like to filter events.
          enum: *id135
          example: all
        site_id:
          type: string
          description: An existing site id
          example: heute
      required:
      - filter_type
      additionalProperties: false
    UpdateAndAcknowledgeSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/UpdateAndAcknowledgeWithQuery'
      - $ref: '#/components/schemas/UpdateAndAcknowledgeWithParams'
      - $ref: '#/components/schemas/UpdateAndAcknowledgeFilter'
      discriminator:
        propertyName: filter_type
        mapping:
          query: '#/components/schemas/UpdateAndAcknowledgeWithQuery'
          params: '#/components/schemas/UpdateAndAcknowledgeWithParams'
          all: '#/components/schemas/UpdateAndAcknowledgeFilter'
    ChangeEventState:
      type: object
      properties:
        site_id:
          type: string
          description: An existing site id
          example: heute
        new_state:
          type: string
          description: The state
          enum:
          - ok
          - warning
          - critical
          - unknown
          example: ok
      required:
      - new_state
      - site_id
      additionalProperties: false
    UpdateAndAcknowledeEventSiteIDRequired:
      type: object
      properties:
        phase:
          type: string
          default: ack
          description: To change the phase of an event
          enum: *id134
          example: ack
        change_comment:
          type: string
          description: Event comment.
          example: Comment now acked
        change_contact:
          type: string
          description: Contact information.
          example: Mr Monitor
        site_id:
          type: string
          description: An existing site id
          example: heute
      required:
      - site_id
      additionalProperties: false
    ObjectCollectionMember:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
        disabledReason:
          type:
          - string
          - 'null'
          description: Provides the reason (or the literal "disabled") why an object
            property or collection is un-modifiable, or, in the case of an action,
            unusable (and hence no links to mutate that member's state, or invoke
            the action, are provided).
        invalidReason:
          type:
          - string
          - 'null'
          description: Provides the reason (or the literal "invalid") why a proposed
            value for a property, collection or action argument is invalid. Appears
            within an argument representation 2.9 returned as a response.
          example: invalid
        x-ro-invalidReason:
          type:
          - string
          - 'null'
          description: Provides the reason why a SET OF proposed values for properties
            or arguments is invalid.
        memberType:
          default: collection
        value:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        name:
          type: string
          example: important_values
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
      required:
      - id
      - links
      additionalProperties: false
    ObjectActionMember:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
        disabledReason:
          type:
          - string
          - 'null'
          description: Provides the reason (or the literal "disabled") why an object
            property or collection is un-modifiable, or, in the case of an action,
            unusable (and hence no links to mutate that member's state, or invoke
            the action, are provided).
        invalidReason:
          type:
          - string
          - 'null'
          description: Provides the reason (or the literal "invalid") why a proposed
            value for a property, collection or action argument is invalid. Appears
            within an argument representation 2.9 returned as a response.
          example: invalid
        x-ro-invalidReason:
          type:
          - string
          - 'null'
          description: Provides the reason why a SET OF proposed values for properties
            or arguments is invalid.
        memberType:
          default: action
        parameters:
          type: object
          additionalProperties: {}
        name:
          type: string
          example: frobnicate_foo
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
      required:
      - id
      - links
      additionalProperties: false
    FolderMembers:
      type: object
      properties:
        hosts:
          description: A list of links pointing to the actual host-resources.
          $ref: '#/components/schemas/ObjectCollectionMember'
        move:
          description: An action which triggers the move of this folder to another
            folder.
          $ref: '#/components/schemas/ObjectActionMember'
      additionalProperties: false
    FolderViewAttribute:
      type: object
      properties:
        tag_address_family:
          type: string
          description: The IP address family of the host.
          enum: *id125
          example: ip-v4-only
        tag_agent:
          type: string
          description: Agent and API integrations
          enum: *id126
          example: cmk-agent
        tag_snmp_ds:
          type: string
          description: The SNMP data source of the host.
          enum: *id127
          example: snmp-v2
        tag_piggyback:
          type: string
          description: Use piggyback data for this host.
          enum: *id128
          example: piggyback
        site:
          type: string
          description: The site that should monitor this host.
        parents:
          type: array
          description: A list of parents of this host.
          items:
            type: string
            example: example.com
            pattern: ^[-0-9a-zA-Z_.]+\Z
        contactgroups:
          description: Only members of the contact groups listed here have Setup permission
            for the host/folder. Optionally, you can make these contact groups automatically
            monitor contacts. The assignment of hosts to contact groups can also be
            defined by <a href='wato.py?mode=edit_ruleset&varname=host_contactgroups'>rules</a>.
          $ref: '#/components/schemas/HostContactGroup'
        bake_agent_package:
          type: boolean
          description: '[Enterprise, Cloud, Saas, Managed editions only] Bake agent
            packages for this folder even if it is empty.'
        snmp_community:
          description: The SNMP access configuration. A configured SNMP v1/v2 community
            here will have precedence over any configured SNMP community rule. For
            this attribute to take effect, the attribute `tag_snmp_ds` needs to be
            set first.
          $ref: '#/components/schemas/SNMPCredentials'
        labels:
          type: object
          description: "Labels allow you to flexibly group your hosts in order to\
            \ refer to them later at other places in Checkmk, e.g. in rule chains.<br><b>Label\
            \ format:</b> key:value<br><br>Neither the key nor the value can contain\
            \ \u2018:\u2019. Checkmk does not perform any other validation on the\
            \ labels you use."
          additionalProperties:
            type: string
            description: The host label value
        network_scan:
          description: Configuration for automatic network scan. Pings will besent
            to each IP address in the configured ranges to checkif a host is up or
            down. Each found host will be added tothe folder by it's host name (if
            possible) or IP address.
          $ref: '#/components/schemas/NetworkScan'
        management_protocol:
          type: string
          description: "The protocol used to connect to the management board.\n\n\
            Valid options are:\n\n * `none` - No management board\n * `snmp` - Connect\
            \ using SNMP\n * `ipmi` - Connect using IPMI\n"
          enum: &id136
          - none
          - snmp
          - ipmi
        management_snmp_community:
          description: SNMP credentials
          anyOf:
          - $ref: '#/components/schemas/SNMPCredentials'
          - type: 'null'
        management_ipmi_credentials:
          description: IPMI credentials
          anyOf:
          - $ref: '#/components/schemas/IPMIParameters'
          - type: 'null'
        network_scan_result:
          description: Read only access to the network scan result
          $ref: '#/components/schemas/NetworkScanResult'
        meta_data:
          description: Read only access to configured metadata.
          $ref: '#/components/schemas/MetaData'
      additionalProperties:
        type: string
        description: "The property name must be\n\n * A custom host attribute\n *\
          \ A custom tag group starting with `tag_`\n"
        required: true
    FolderExtensions:
      type: object
      properties:
        path:
          type: string
          description: The full path of this folder, slash delimited.
        attributes:
          description: The folder's attributes. Hosts placed in this folder will inherit
            these attributes.
          $ref: '#/components/schemas/FolderViewAttribute'
      additionalProperties: false
    Folder:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: folder_config
          description: The domain type of the object.
        id:
          type: string
          description: The full path of the folder, tilde-separated.
        title:
          type: string
          description: The human readable title for this folder.
        members:
          description: Specific collections or actions applicable to this object.
          $ref: '#/components/schemas/FolderMembers'
        extensions:
          description: Data and Meta-Data of this object.
          $ref: '#/components/schemas/FolderExtensions'
      required:
      - links
      additionalProperties: false
    FolderCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: folder_config
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of folder objects.
          items:
            $ref: '#/components/schemas/Folder'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    HostMembers:
      type: object
      properties:
        folder_config:
          description: The folder in which this host resides. It is represented by
            a hexadecimal identifier which is it's 'primary key'. The folder can be
            accessed via the `self`-link provided in the links array.
          $ref: '#/components/schemas/Folder'
      additionalProperties: false
    HostExtensions:
      type: object
      properties:
        folder:
          type: string
          description: 'The folder, in which this host resides.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        attributes:
          description: Attributes of this host.
          example:
            ipaddress: 192.168.0.123
          $ref: '#/components/schemas/HostViewAttribute'
        effective_attributes:
          description: All attributes of this host and all parent folders.
          example:
            tag_snmp_ds: null
          anyOf:
          - $ref: '#/components/schemas/HostViewAttribute'
          - type: 'null'
        is_cluster:
          type: boolean
          description: If this is a cluster host, i.e. a container for other hosts.
        is_offline:
          type: boolean
          description: Whether the host is offline
        cluster_nodes:
          type:
          - array
          - 'null'
          default: null
          description: In the case this is a cluster host, these are the cluster nodes.
          items:
            type: string
            example: example.com
            pattern: ^[-0-9a-zA-Z_.]+\Z
      additionalProperties: false
    HostConfig:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: host_config
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          description: All the members of the host object.
          $ref: '#/components/schemas/HostMembers'
        extensions:
          description: All the data and metadata of this host.
          $ref: '#/components/schemas/HostExtensions'
      required:
      - domainType
      - links
      additionalProperties: false
    HostConfigCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: host_config
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of host objects.
          items:
            $ref: '#/components/schemas/HostConfig'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    FolderUpdateAttribute:
      type: object
      properties:
        tag_address_family:
          type: string
          description: The IP address family of the host.
          enum: *id125
          example: ip-v4-only
        tag_agent:
          type: string
          description: Agent and API integrations
          enum: *id126
          example: cmk-agent
        tag_snmp_ds:
          type: string
          description: The SNMP data source of the host.
          enum: *id127
          example: snmp-v2
        tag_piggyback:
          type: string
          description: Use piggyback data for this host.
          enum: *id128
          example: piggyback
        site:
          type: string
          description: The site that should monitor this host.
        parents:
          type: array
          description: A list of parents of this host.
          items:
            type: string
            example: example.com
            pattern: ^[-0-9a-zA-Z_.]+\Z
        contactgroups:
          description: Only members of the contact groups listed here have Setup permission
            for the host/folder. Optionally, you can make these contact groups automatically
            monitor contacts. The assignment of hosts to contact groups can also be
            defined by <a href='wato.py?mode=edit_ruleset&varname=host_contactgroups'>rules</a>.
          $ref: '#/components/schemas/HostContactGroup'
        bake_agent_package:
          type: boolean
          description: '[Enterprise, Cloud, Saas, Managed editions only] Bake agent
            packages for this folder even if it is empty.'
        snmp_community:
          description: The SNMP access configuration. A configured SNMP v1/v2 community
            here will have precedence over any configured SNMP community rule. For
            this attribute to take effect, the attribute `tag_snmp_ds` needs to be
            set first.
          $ref: '#/components/schemas/SNMPCredentials'
        labels:
          type: object
          description: "Labels allow you to flexibly group your hosts in order to\
            \ refer to them later at other places in Checkmk, e.g. in rule chains.<br><b>Label\
            \ format:</b> key:value<br><br>Neither the key nor the value can contain\
            \ \u2018:\u2019. Checkmk does not perform any other validation on the\
            \ labels you use."
          additionalProperties:
            type: string
            description: The host label value
        network_scan:
          description: Configuration for automatic network scan. Pings will besent
            to each IP address in the configured ranges to checkif a host is up or
            down. Each found host will be added tothe folder by it's host name (if
            possible) or IP address.
          $ref: '#/components/schemas/NetworkScan'
        management_protocol:
          type: string
          description: "The protocol used to connect to the management board.\n\n\
            Valid options are:\n\n * `none` - No management board\n * `snmp` - Connect\
            \ using SNMP\n * `ipmi` - Connect using IPMI\n"
          enum: *id136
        management_snmp_community:
          description: SNMP credentials
          anyOf:
          - $ref: '#/components/schemas/SNMPCredentials'
          - type: 'null'
        management_ipmi_credentials:
          description: IPMI credentials
          anyOf:
          - $ref: '#/components/schemas/IPMIParameters'
          - type: 'null'
      additionalProperties:
        type: string
        description: "The property name must be\n\n * A custom host attribute\n *\
          \ A custom tag group starting with `tag_`\n"
        required: true
    UpdateFolderEntry:
      type: object
      properties:
        title:
          type: string
          description: The title of the folder. Used in the GUI.
          example: Virtual Servers.
          minLength: 1
        attributes:
          description: Replace all attributes with the ones given in this field. Already
            setattributes, not given here, will be removed. Can't be used together
            with update_attributes or remove_attributes fields.
          example: &id137
            tag_networking: wan
          $ref: '#/components/schemas/FolderUpdateAttribute'
        update_attributes:
          description: Just update the folder attributes with these attributes. The
            previously set attributes will be overwritten. Can't be used together
            with attributes or remove_attributes fields.
          example: &id138
            tag_criticality: prod
          $ref: '#/components/schemas/FolderUpdateAttribute'
        remove_attributes:
          type: array
          description: A list of attributes which should be removed. Can't be used
            together with attributes or update_attributes fields.
          example: &id139
          - tag_foobar
          items:
            type: string
        folder:
          type: string
          description: 'The path name of the folder.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          example: /
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-\w]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
      required:
      - folder
      additionalProperties: false
    BulkUpdateFolder:
      type: object
      properties:
        entries:
          description: A list of folder entries.
          example:
          - remove_attributes:
            - tag_foobar
          type: array
          items:
            $ref: '#/components/schemas/UpdateFolderEntry'
      required:
      - entries
      additionalProperties: false
    UpdateFolder:
      type: object
      properties:
        title:
          type: string
          description: The title of the folder. Used in the GUI.
          example: Virtual Servers.
          minLength: 1
        attributes:
          description: Replace all attributes with the ones given in this field. Already
            setattributes, not given here, will be removed. Can't be used together
            with update_attributes or remove_attributes fields.
          example: *id137
          $ref: '#/components/schemas/FolderUpdateAttribute'
        update_attributes:
          description: Just update the folder attributes with these attributes. The
            previously set attributes will be overwritten. Can't be used together
            with attributes or remove_attributes fields.
          example: *id138
          $ref: '#/components/schemas/FolderUpdateAttribute'
        remove_attributes:
          type: array
          description: A list of attributes which should be removed. Can't be used
            together with attributes or update_attributes fields.
          example: *id139
          items:
            type: string
      additionalProperties: false
    FolderCreateAttribute:
      type: object
      properties:
        tag_address_family:
          type: string
          description: The IP address family of the host.
          enum: *id125
          example: ip-v4-only
        tag_agent:
          type: string
          description: Agent and API integrations
          enum: *id126
          example: cmk-agent
        tag_snmp_ds:
          type: string
          description: The SNMP data source of the host.
          enum: *id127
          example: snmp-v2
        tag_piggyback:
          type: string
          description: Use piggyback data for this host.
          enum: *id128
          example: piggyback
        site:
          type: string
          description: The site that should monitor this host.
        parents:
          type: array
          description: A list of parents of this host.
          items:
            type: string
            example: example.com
            pattern: ^[-0-9a-zA-Z_.]+\Z
        contactgroups:
          description: Only members of the contact groups listed here have Setup permission
            for the host/folder. Optionally, you can make these contact groups automatically
            monitor contacts. The assignment of hosts to contact groups can also be
            defined by <a href='wato.py?mode=edit_ruleset&varname=host_contactgroups'>rules</a>.
          $ref: '#/components/schemas/HostContactGroup'
        bake_agent_package:
          type: boolean
          description: '[Enterprise, Cloud, Saas, Managed editions only] Bake agent
            packages for this folder even if it is empty.'
        snmp_community:
          description: The SNMP access configuration. A configured SNMP v1/v2 community
            here will have precedence over any configured SNMP community rule. For
            this attribute to take effect, the attribute `tag_snmp_ds` needs to be
            set first.
          $ref: '#/components/schemas/SNMPCredentials'
        labels:
          type: object
          description: "Labels allow you to flexibly group your hosts in order to\
            \ refer to them later at other places in Checkmk, e.g. in rule chains.<br><b>Label\
            \ format:</b> key:value<br><br>Neither the key nor the value can contain\
            \ \u2018:\u2019. Checkmk does not perform any other validation on the\
            \ labels you use."
          additionalProperties:
            type: string
            description: The host label value
        network_scan:
          description: Configuration for automatic network scan. Pings will besent
            to each IP address in the configured ranges to checkif a host is up or
            down. Each found host will be added tothe folder by it's host name (if
            possible) or IP address.
          $ref: '#/components/schemas/NetworkScan'
        management_protocol:
          type: string
          description: "The protocol used to connect to the management board.\n\n\
            Valid options are:\n\n * `none` - No management board\n * `snmp` - Connect\
            \ using SNMP\n * `ipmi` - Connect using IPMI\n"
          enum: *id136
        management_snmp_community:
          description: SNMP credentials
          anyOf:
          - $ref: '#/components/schemas/SNMPCredentials'
          - type: 'null'
        management_ipmi_credentials:
          description: IPMI credentials
          anyOf:
          - $ref: '#/components/schemas/IPMIParameters'
          - type: 'null'
      additionalProperties:
        type: string
        description: "The property name must be\n\n * A custom host attribute\n *\
          \ A custom tag group starting with `tag_`\n"
        required: true
    CreateFolder:
      type: object
      properties:
        name:
          type: string
          description: The filesystem directory name (not path!) of the folder. No
            slashes are allowed.
          example: production
          minLength: 1
          pattern: ^[-\w]*\Z
        title:
          type: string
          description: The folder title as displayed in the user interface.
          example: Production Hosts
        parent:
          type: string
          description: 'The folder in which the new folder shall be placed in. The
            root-folder is specified by ''/''.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          example: /
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-\w]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        attributes:
          default: {}
          description: Specific attributes to apply for all hosts in this folder (among
            other things). Built-in and custom attributes and tag groups can be set
            here.
          example:
            tag_criticality: prod
          $ref: '#/components/schemas/FolderCreateAttribute'
      required:
      - parent
      - title
      additionalProperties: false
    MoveFolder:
      type: object
      properties:
        destination:
          type: string
          description: 'Where the folder has to be moved to.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          example: ~my~fine/folder
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
      required:
      - destination
      additionalProperties: false
    Api401DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 401
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The user is not authorized to do this request.
        title:
          type: string
          description: A summary of the problem.
          example: Unauthorized
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    GraphTimerangeExtension:
      properties:
        sort_index:
          description: The index of the graph timerange for sorting multiple entries.
          examples:
          - 1
          minimum: 0
          title: Sort Index
          type: integer
        total_seconds:
          description: The total duration of the graph timerange in seconds.
          examples:
          - 14400
          minimum: 0
          title: Total Seconds
          type: integer
      required:
      - sort_index
      - total_seconds
      title: GraphTimerangeExtension
      type: object
    GraphTimerangeObject:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: graph_timerange
          description: The type of the domain-object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/GraphTimerangeExtension'
          description: All the attributes of the domain object.
      required:
      - links
      - domainType
      - extensions
      title: GraphTimerangeObject
      type: object
    GraphTimerangeCollection:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: graph_timerange
          description: The domain type of the objects in the collection.
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of GraphTimerange objects.
          items:
            $ref: '#/components/schemas/GraphTimerangeObject'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: GraphTimerangeCollection
      type: object
    Attributes:
      properties:
        pairs:
          additionalProperties:
            anyOf:
            - type: integer
            - type: number
            - type: string
            - type: boolean
            - type: 'null'
          description: Key-value pairs
          title: Pairs
          type: object
      required:
      - pairs
      title: Attributes
      type: object
    HostInventoryTree:
      properties:
        host_name:
          description: The HW/SW Inventory tree of the host
          title: Host Name
          type: string
        inventory_tree:
          $ref: '#/components/schemas/Tree'
          description: The HW/SW Inventory tree of the host
      required:
      - host_name
      - inventory_tree
      title: HostInventoryTree
      type: object
    Table:
      properties:
        key_columns:
          description: The key columns which are used to identify a row
          items:
            type: string
          title: Key Columns
          type: array
        rows:
          description: The rows of an inventory table whereas each row consists of
            key-value pairs
          items:
            additionalProperties:
              anyOf:
              - type: integer
              - type: number
              - type: string
              - type: boolean
              - type: 'null'
            type: object
          title: Rows
          type: array
      required:
      - key_columns
      - rows
      title: Table
      type: object
    Tree:
      properties:
        attributes:
          $ref: '#/components/schemas/Attributes'
          description: A collection of key-value pairs
        table:
          $ref: '#/components/schemas/Table'
          description: A collection of rows
        nodes:
          additionalProperties:
            $ref: '#/components/schemas/Tree'
          description: Sub trees identified by node names
          title: Nodes
          type: object
      required:
      - attributes
      - table
      - nodes
      title: Tree
      type: object
    InventoryTreesCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: inventory
          description: The domain type of the objects in the collection
          examples:
          - inventory
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: The HW/SW Inventory trees of hosts
          examples:
          - - host_name: hostname
              inventory_tree:
                attributes:
                  pairs:
                    key: value
                nodes:
                  nodename:
                    attributes:
                      pairs:
                        key: value
                    nodes: {}
                    table:
                      key_columns:
                      - column1
                      rows:
                      - column1: value1
                        column2: value2
                table:
                  key_columns:
                  - column1
                  rows:
                  - column1: value1
                    column2: value2
          items:
            $ref: '#/components/schemas/HostInventoryTree'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: InventoryTreesCollectionModel
      type: object
    HostGroupExtensions:
      type: object
      properties:
        customer:
          type: string
          description: '[Managed edition only] The customer for which the object is
            configured. This field is required for the following editions: Managed.'
          example: provider
      additionalProperties: false
    HostGroup:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: host_group_config
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: All the attributes of the domain object.
          $ref: '#/components/schemas/HostGroupExtensions'
      required:
      - links
      additionalProperties: false
    HostGroupCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: host_group_config
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of host group objects.
          items:
            $ref: '#/components/schemas/HostGroup'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    UpdateHostGroupAttributes:
      type: object
      properties:
        alias:
          type: string
          description: The name used for displaying in the GUI.
          example: Example Group
        customer:
          type: string
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites.'
          example: provider
      required:
      - alias
      additionalProperties: false
    UpdateHostGroup:
      type: object
      properties:
        name:
          type: string
          description: The name of the host group.
          example: windows
        attributes:
          $ref: '#/components/schemas/UpdateHostGroupAttributes'
      required:
      - attributes
      - name
      additionalProperties: false
    BulkUpdateHostGroup:
      type: object
      properties:
        entries:
          type: array
          description: A list of host group entries.
          example:
          - name: windows
            attributes:
              alias: Windows Servers
          items:
            $ref: '#/components/schemas/UpdateHostGroup'
      required:
      - entries
      additionalProperties: false
    InputHostGroup:
      type: object
      properties:
        customer:
          type: string
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites. This field is required for the following
            editions: Managed.'
          example: provider
        name:
          type: string
          description: A name used as identifier
          example: windows
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*\Z
        alias:
          type: string
          description: The name used for displaying in the GUI.
          example: Windows Servers
      required:
      - alias
      - name
      additionalProperties: false
    BulkInputHostGroup:
      type: object
      properties:
        entries:
          type: array
          description: A list of host group entries.
          example:
          - name: windows
            alias: Windows Servers
          uniqueItems: true
          items:
            $ref: '#/components/schemas/InputHostGroup'
      required:
      - entries
      additionalProperties: false
    BulkDeleteHostGroup:
      type: object
      properties:
        entries:
          type: array
          description: A list of host group names.
          example:
          - windows
          - panels
          items:
            type: string
            description: The name of the host group config
            example: windows
      required:
      - entries
      additionalProperties: false
    HostParameters:
      type: object
      properties:
        sites:
          type: array
          default: []
          description: Restrict the query to this particular site.
          example: *id140
          items:
            type: string
        query:
          description: An query expression of the Livestatus 'hosts' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: '{"op": "and", "expr": [{"op": "=", "left": "name", "right": "example.com"},
            {"op": "!=", "left": "state", "right": "0"}]}'
          $ref: '#/components/schemas/Expr'
        columns:
          type: array
          default:
          - name
          description: The desired columns of the `hosts` table. If left empty, a
            default set of columns is used.
          example: *id141
          items:
            type: string
      additionalProperties: false
    HostTagOutput:
      type: object
      properties:
        id:
          type:
          - string
          - 'null'
          description: The unique identifier of this host tag
        title:
          type: string
          description: The title of this host tag
        aux_tags:
          type: array
          description: The auxiliary tags this tag included in.
          items:
            type: string
      additionalProperties: false
    HostTagExtensions:
      type: object
      properties:
        topic:
          type: string
          description: The topic this host tag group is organized in.
        tags:
          type: array
          description: The list of tags in this group.
          items:
            $ref: '#/components/schemas/HostTagOutput'
        help:
          type: string
          description: A help description for the tag group
      additionalProperties: false
    ConcreteHostTagGroup:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: host_tag_group
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: Additional fields for objects of this type.
          $ref: '#/components/schemas/HostTagExtensions'
      required:
      - domainType
      - links
      additionalProperties: false
    HostTagGroupCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: host_tag_group
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of host tag group objects.
          items:
            $ref: '#/components/schemas/ConcreteHostTagGroup'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    HostTag:
      type: object
      properties:
        id:
          type:
          - string
          - 'null'
          default: null
          description: An unique id for the tag
          example: tag_id
        title:
          type: string
          description: The title of the tag
          example: Tag
        aux_tags:
          type: array
          description: The list of auxiliary tag ids. Built-in tags (ip-v4, ip-v6,
            snmp, tcp, ping) and custom defined tags are allowed.
          example:
          - ip-v4, ip-v6
          items:
            type:
            - string
            - 'null'
            description: An auxiliary tag id
            example: ip-v4
            pattern: ^[-0-9a-zA-Z_]+\Z
      required:
      - title
      additionalProperties: false
    UpdateHostTagGroup:
      type: object
      properties:
        title:
          type: string
          description: A title for the host tag
          example: Kubernetes
        topic:
          type: string
          description: Different tags can be grouped in a topic
          example: Data Sources
        help:
          type: string
          description: A help description for the tag group
          example: Kubernetes Pods
        tags:
          type: array
          description: A list of host tags belonging to the host tag group
          example:
          - id: pod
            title: Pod
          minLength: 1
          items:
            $ref: '#/components/schemas/HostTag'
        repair:
          type: boolean
          default: false
          description: The host tag group can be in use by other hosts. Setting repair
            to True gives permission to automatically update the tag from the affected
            hosts.
          example: false
      additionalProperties: false
    Api405DefaultError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 405
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: 'Method not allowed: This request is only allowed with other HTTP
            methods.'
        title:
          type: string
          description: A summary of the problem.
          example: Method Not Allowed
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    InputHostTagGroup:
      type: object
      properties:
        id:
          type: string
          description: An id for the host tag group
          example: group_id
        title:
          type: string
          description: A title for the host tag
          example: Kubernetes
        topic:
          type: string
          description: Different tags can be grouped in a topic
          example: Data Sources
        help:
          type: string
          default: ''
          description: A help description for the tag group
          example: Kubernetes Pods
        tags:
          type: array
          description: A list of host tags belonging to the host tag group
          example:
          - id: pod
            title: Pod
          minLength: 1
          items:
            $ref: '#/components/schemas/HostTag'
      required:
      - id
      - tags
      - title
      additionalProperties: false
    Api404CustomError3:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: There is no running renaming job
        title:
          type: string
          description: A summary of the problem.
          example: Not Found
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api403DefaultError7302D605273DB63C:
      properties:
        status:
          description: The HTTP status code.
          examples:
          - 403
          title: Status
          type: integer
        title:
          description: A summary of the problem.
          examples:
          - Forbidden
          title: Title
          type: string
        detail:
          description: Detailed information on what exactly went wrong.
          examples:
          - Configuration via Setup is disabled.
          title: Detail
          type: string
        fields:
          additionalProperties:
            type: string
          description: Detailed error messages on all fields failing validation.
          examples:
          - field: error message
          title: Validation errors
          type: object
        ext:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - {}
          description: Additional information about the error.
          examples:
          - key: value
          title: Error extensions
      required:
      - status
      - title
      - detail
      title: Api403DefaultError7302D605273DB63C
      type: object
    AnnotatedFolder:
      type: string
    DirectMappingModel:
      properties:
        hostname:
          description: The host name to be replaced.
          title: Hostname
          type: string
        replace_with:
          description: The replacement string.
          title: Replace With
          type: string
      required:
      - hostname
      - replace_with
      title: DirectMappingModel
      type: object
    FolderExtensionsModel:
      properties:
        path:
          description: The full path of this folder, slash delimited.
          title: Path
          type: string
        attributes:
          $ref: '#/components/schemas/FolderViewAttributeModel'
          description: The folder's attributes. Hosts placed in this folder will inherit
            these attributes.
      required:
      - path
      - attributes
      title: FolderExtensionsModel
      type: object
    FolderMembersModel:
      properties:
        hosts:
          $ref: '#/components/schemas/ObjectCollectionMemberModel'
          description: A list of links pointing to the actual host-resources.
        move:
          $ref: '#/components/schemas/ObjectActionMemberModel'
          description: An action which triggers the move of this folder to another
            folder.
      required:
      - hosts
      - move
      title: FolderMembersModel
      type: object
    FolderModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: folder_config
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The full path of the folder, tilde-separated.
          title: Id
          type: string
        title:
          description: The human readable title for this folder.
          title: Title
          type: string
        members:
          $ref: '#/components/schemas/FolderMembersModel'
          description: Specific collections or actions applicable to this object.
        extensions:
          $ref: '#/components/schemas/FolderExtensionsModel'
          description: Data and Meta-Data of this object.
      required:
      - links
      - domainType
      - id
      - title
      - members
      - extensions
      title: FolderModel
      type: object
    FolderViewAttributeModel:
      additionalProperties:
        description: "The property name must be\n\n * A custom host attribute\n *\
          \ A custom tag group starting with `tag_`\n"
        title: Dynamic Fields
        type: string
      properties:
        tag_address_family:
          description: The IP address family of the host.
          enum:
          - ip-v4-only
          - ip-v6-only
          - ip-v4v6
          - no-ip
          examples:
          - ip-v4-only
          title: Tag Address Family
          type: string
        tag_agent:
          description: Agent and API integrations
          enum:
          - cmk-agent
          - all-agents
          - special-agents
          - no-agent
          examples:
          - cmk-agent
          title: Tag Agent
          type: string
        tag_snmp_ds:
          description: The SNMP data source of the host.
          enum:
          - no-snmp
          - snmp-v2
          - snmp-v1
          examples:
          - snmp-v2
          title: Tag Snmp Ds
          type: string
        tag_piggyback:
          description: Use piggyback data for this host.
          enum:
          - auto-piggyback
          - piggyback
          - no-piggyback
          examples:
          - piggyback
          title: Tag Piggyback
          type: string
        site:
          description: The site that should monitor this host.
          title: Site
          type: string
        parents:
          description: A list of parents of this host.
          items:
            type: string
          title: Parents
          type: array
        contactgroups:
          $ref: '#/components/schemas/HostContactGroupModel'
          description: Only members of the contact groups listed here have Setup permission
            for the host/folder. Optionally, you can make these contact groups automatically
            monitor contacts. The assignment of hosts to contact groups can also be
            defined by rules.
          title: Contactgroups
        bake_agent_package:
          description: Bake agent packages for this folder even if it is empty.
          title: Bake Agent Package
          type: boolean
        snmp_community:
          anyOf:
          - $ref: '#/components/schemas/SNMPCommunityModel'
          - $ref: '#/components/schemas/SNMPv3NoAuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthPrivacyModel'
          description: The SNMP access configuration. A configured SNMP v1/v2 community
            here will have precedence over any configured SNMP community rule. For
            this attribute to take effect, the attribute `tag_snmp_ds` needs to be
            set first.
          title: Snmp Community
        labels:
          additionalProperties:
            description: The host label value
            type: string
          description: "Labels allow you to flexibly group your hosts in order to\
            \ refer to them later at other places in Checkmk, e.g. in rule chains.<br><b>Label\
            \ format:</b> key:value<br><br>Neither the key nor the value can contain\
            \ \u2018:\u2019. Checkmk does not perform any other validation on the\
            \ labels you use. The key is the host label key."
          title: Labels
          type: object
        network_scan:
          $ref: '#/components/schemas/NetworkScanModel'
          description: Configuration for automatic network scan. Pings will be sent
            to each IP address in the configured ranges to check if a host is up or
            down. Each found host will be added to the folder by its host name (if
            possible) or IP address.
          title: Network Scan
        management_protocol:
          description: "The protocol used to connect to the management board.\n\n\
            Valid options are:\n\n * `none` - No management board\n * `snmp` - Connect\
            \ using SNMP\n * `ipmi` - Connect using IPMI"
          enum:
          - none
          - snmp
          - ipmi
          title: Management Protocol
          type: string
        management_snmp_community:
          anyOf:
          - $ref: '#/components/schemas/SNMPCommunityModel'
          - $ref: '#/components/schemas/SNMPv3NoAuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthPrivacyModel'
          - type: 'null'
          description: SNMP credentials
          title: Management Snmp Community
        management_ipmi_credentials:
          anyOf:
          - $ref: '#/components/schemas/IPMIParametersModel'
          - type: 'null'
          description: IPMI credentials
          title: Management Ipmi Credentials
        network_scan_result:
          $ref: '#/components/schemas/NetworkScanResultModel'
          description: Read only access to the network scan result
          title: Network Scan Result
        meta_data:
          $ref: '#/components/schemas/MetaDataModel'
          description: Read only access to configured metadata.
          title: Meta Data
      required: []
      title: FolderViewAttributeModel
      type: object
    HostConfigModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: host_config
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        members:
          anyOf:
          - $ref: '#/components/schemas/HostMembersModel'
          - type: 'null'
          description: All the members of the host object.
        extensions:
          $ref: '#/components/schemas/HostExtensionsModel'
          description: All the data and metadata of this host.
      required:
      - links
      - domainType
      - members
      - extensions
      title: HostConfigModel
      type: object
    HostContactGroupModel:
      properties:
        groups:
          description: A list of contact groups.
          examples:
          - all
          items:
            type: string
          title: Groups
          type: array
        use:
          description: Add these contact groups to the host.
          title: Use
          type: boolean
        use_for_services:
          description: <p>Always add host contact groups also to its services.</p>With
            this option contact groups that are added to hosts are always being added
            to services, as well. This only makes a difference if you have assigned
            other contact groups to services via rules in <i>Host & Service Parameters</i>.
            As long as you do not have any such rule a service always inherits all
            contact groups from its host.
          title: Use For Services
          type: boolean
        recurse_use:
          description: Add these groups as contacts to all hosts in all sub-folders
            of this folder.
          title: Recurse Use
          type: boolean
        recurse_perms:
          description: Give these groups also permission on all sub-folders.
          title: Recurse Perms
          type: boolean
      required:
      - groups
      - use
      - use_for_services
      - recurse_use
      - recurse_perms
      title: HostContactGroupModel
      type: object
    HostExtensionsModel:
      properties:
        folder:
          $ref: '#/components/schemas/AnnotatedFolder'
          description: The folder, in which this host resides.
        attributes:
          $ref: '#/components/schemas/HostViewAttributeModel'
          description: Attributes of this host.
        effective_attributes:
          $ref: '#/components/schemas/HostViewAttributeModel'
          description: All attributes of this host and all parent folders.
          title: Effective Attributes
        is_cluster:
          description: If this is a cluster host, i.e. a container for other hosts.
          title: Is Cluster
          type: boolean
        is_offline:
          description: Whether the host is offline.
          title: Is Offline
          type: boolean
        cluster_nodes:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: In the case this is a cluster host, these are the cluster nodes.
          title: Cluster Nodes
      required:
      - folder
      - attributes
      - is_cluster
      - is_offline
      - cluster_nodes
      title: HostExtensionsModel
      type: object
    HostMembersModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          description: The "domain-type" of the object.
          examples:
          - host
          title: Domain Type
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        folder_config:
          $ref: '#/components/schemas/FolderModel'
          description: The folder in which this host resides. It is represented by
            a hexadecimal identifier which is it's 'primary key'. The folder can be
            accessed via the `self`-link provided in the links array.
      required:
      - links
      - domainType
      - folder_config
      title: HostMembersModel
      type: object
    HostViewAttributeModel:
      additionalProperties:
        description: "The property name must be\n\n * A custom host attribute\n *\
          \ A custom tag group starting with `tag_`\n"
        title: Dynamic Fields
        type: string
      properties:
        tag_address_family:
          description: The IP address family of the host.
          enum:
          - ip-v4-only
          - ip-v6-only
          - ip-v4v6
          - no-ip
          examples:
          - ip-v4-only
          title: Tag Address Family
          type: string
        tag_agent:
          description: Agent and API integrations
          enum:
          - cmk-agent
          - all-agents
          - special-agents
          - no-agent
          examples:
          - cmk-agent
          title: Tag Agent
          type: string
        tag_snmp_ds:
          description: The SNMP data source of the host.
          enum:
          - no-snmp
          - snmp-v2
          - snmp-v1
          examples:
          - snmp-v2
          title: Tag Snmp Ds
          type: string
        tag_piggyback:
          description: Use piggyback data for this host.
          enum:
          - auto-piggyback
          - piggyback
          - no-piggyback
          examples:
          - piggyback
          title: Tag Piggyback
          type: string
        alias:
          description: Add a comment or describe this host
          title: Alias
          type: string
        site:
          description: The site that should monitor this host.
          title: Site
          type: string
        parents:
          description: A list of parents of this host.
          items:
            type: string
          title: Parents
          type: array
        contactgroups:
          $ref: '#/components/schemas/HostContactGroupModel'
          description: Only members of the contact groups listed here have Setup permission
            for the host/folder. Optionally, you can make these contact groups automatically
            monitor contacts. The assignment of hosts to contact groups can also be
            defined by rules.
          title: Contactgroups
        ipaddress:
          description: An IPv4 address.
          title: Ipaddress
          type: string
        ipv6address:
          description: An IPv6 address.
          title: Ipv6Address
          type: string
        additional_ipv4addresses:
          description: A list of IPv4 addresses.
          items:
            type: string
          title: Additional Ipv4Addresses
          type: array
        additional_ipv6addresses:
          description: A list of IPv6 addresses.
          items:
            type: string
          title: Additional Ipv6Addresses
          type: array
        bake_agent_package:
          description: '[Enterprise, Cloud, Saas, Managed editions only] Bake agent
            packages for this folder even if it is empty.'
          title: Bake Agent Package
          type: boolean
        cmk_agent_connection:
          description: "[Enterprise, Cloud, Saas, Managed editions only] This configures\
            \ the communication direction of this host.\n * `pull-agent` (default)\
            \ - The server will try to contact the monitored host and pull the data\
            \ by initializing a TCP connection\n * `push-agent` - the host is expected\
            \ to send the data to the monitoring server without being triggered\n"
          enum:
          - push-agent
          - pull-agent
          title: Cmk Agent Connection
          type: string
        snmp_community:
          anyOf:
          - $ref: '#/components/schemas/SNMPCommunityModel'
          - $ref: '#/components/schemas/SNMPv3NoAuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthPrivacyModel'
          description: The SNMP access configuration. A configured SNMP v1/v2 community
            here will have precedence over any configured SNMP community rule. For
            this attribute to take effect, the attribute `tag_snmp_ds` needs to be
            set first.
          title: Snmp Community
        metrics_association:
          anyOf:
          - const: disabled
            type: string
          - $ref: '#/components/schemas/MetricsAssociationEnabledModel'
          description: Configuration for associating OpenTelemetry metrics with this
            host.
          title: Metrics Association
        labels:
          additionalProperties:
            description: The host label value
            type: string
          description: "Labels allow you to flexibly group your hosts in order to\
            \ refer to them later at other places in Checkmk, e.g. in rule chains.<br><b>Label\
            \ format:</b> key:value<br><br>Neither the key nor the value can contain\
            \ \u2018:\u2019. Checkmk does not perform any other validation on the\
            \ labels you use. The key is the host label key."
          title: Labels
          type: object
        waiting_for_discovery:
          description: This indicates that the host is waiting for a bulk discovery.
            It is set to True once the host is in the queue. It will be removed after
            the discovery is ended.
          title: Waiting For Discovery
          type: boolean
        network_scan:
          $ref: '#/components/schemas/NetworkScanModel'
          description: Configuration for automatic network scan. Pings will be sent
            to each IP address in the configured ranges to check if a host is up or
            down. Each found host will be added to the folder by its host name (if
            possible) or IP address.
          title: Network Scan
        management_protocol:
          description: 'The protocol used to connect to the management board. Valid
            options are: ''none'' - No management board, ''snmp'' - Connect using
            SNMP, ''ipmi'' - Connect using IPMI'
          enum:
          - none
          - snmp
          - ipmi
          title: Management Protocol
          type: string
        management_address:
          description: Address (IPv4, IPv6 or host name) under which the management
            board can be reached.
          title: Management Address
          type: string
        management_snmp_community:
          anyOf:
          - $ref: '#/components/schemas/SNMPCommunityModel'
          - $ref: '#/components/schemas/SNMPv3NoAuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthPrivacyModel'
          description: SNMP credentials
          title: Management Snmp Community
        management_ipmi_credentials:
          $ref: '#/components/schemas/IPMIParametersModel'
          description: IPMI credentials
          title: Management Ipmi Credentials
        locked_by:
          $ref: '#/components/schemas/LockedByModel'
          description: Identity of the entity which locked the locked_attributes.
            The identity is built out of the Site ID, the program name and the connection
            ID.
          title: Locked By
        locked_attributes:
          description: Name of host attributes which are locked in the UI.
          items:
            type: string
          title: Locked Attributes
          type: array
        inventory_failed:
          description: Whether or not the last bulk discovery failed. It is set to
            True once it fails and unset in case a later discovery succeeds.
          title: Inventory Failed
          type: boolean
        network_scan_result:
          $ref: '#/components/schemas/NetworkScanResultModel'
          description: Read only access to the network scan result
          title: Network Scan Result
        meta_data:
          $ref: '#/components/schemas/MetaDataModel'
          description: Read only access to configured metadata.
          title: Meta Data
      required: []
      title: HostViewAttributeModel
      type: object
    IPAddressRangeModel:
      properties:
        type:
          const: ip_range
          description: Select a range of IP addresses
          title: Type
          type: string
        from_address:
          description: The first IPv4 address of this range.
          format: ipv4
          title: From Address
          type: string
        to_address:
          description: The last IPv4 address of this range.
          format: ipv4
          title: To Address
          type: string
      required:
      - type
      - from_address
      - to_address
      title: IPAddressRangeModel
      type: object
    IPAddressesModel:
      properties:
        type:
          const: ip_list
          description: Select multiple explicit IP addresses
          title: Type
          type: string
        addresses:
          description: List of IPv4 addresses
          items:
            format: ipv4
            type: string
          title: Addresses
          type: array
      required:
      - type
      - addresses
      title: IPAddressesModel
      type: object
    IPMIParametersModel:
      properties:
        username:
          description: IPMI username
          title: Username
          type: string
        password:
          description: IPMI password
          title: Password
          type: string
      title: IPMIParametersModel
      type: object
    IPNetworkModel:
      properties:
        type:
          const: ip_network
          description: Select an entire network
          title: Type
          type: string
        network:
          description: "A IPv4 network in CIDR notation. Minimum prefix length is\
            \ 8 bit, maximum prefix length is 30 bit.\n\nValid examples:\n\n * `192.168.0.0/24`\n\
            \ * `192.168.0.0/255.255.255.0`"
          format: ipv4network
          title: Network
          type: string
      required:
      - type
      - network
      title: IPNetworkModel
      type: object
    IPRegexpModel:
      properties:
        type:
          const: ip_regex_list
          description: Deselect IP addresses with regexes
          title: Type
          type: string
        regexp_list:
          description: A list of regular expressions which are matched against the
            found IP addresses. The matches will be excluded from the result.
          items:
            format: regex
            type: string
          title: Regexp List
          type: array
      required:
      - type
      - regexp_list
      title: IPRegexpModel
      type: object
    LockedByModel:
      properties:
        site_id:
          description: Site ID
          title: Site Id
          type: string
        program_id:
          description: Program ID
          title: Program Id
          type: string
        instance_id:
          description: Instance ID
          title: Instance Id
          type: string
      required:
      - site_id
      - program_id
      - instance_id
      title: LockedByModel
      type: object
    MetaDataModel:
      properties:
        created_at:
          description: When has this object been created.
          format: date-time
          title: Created At
          type: string
        updated_at:
          description: When this object was last changed.
          format: date-time
          title: Updated At
          type: string
        created_by:
          anyOf:
          - type: string
          - type: 'null'
          description: The user id under which this object has been created.
          title: Created By
      title: MetaDataModel
      type: object
    MetricsAssociationEnabledModel:
      properties:
        attribute_filters:
          description: A list of filters. All filters must match (logical AND).
          items:
            $ref: '#/components/schemas/MetricsAssociationFilterModel'
          title: Attribute Filters
          type: array
        host_name_resource_attribute_key:
          description: The resource attribute used to compute the host name.
          title: Host Name Resource Attribute Key
          type: string
      required:
      - attribute_filters
      - host_name_resource_attribute_key
      title: MetricsAssociationEnabledModel
      type: object
    MetricsAssociationFilterModel:
      properties:
        attribute_type:
          description: Type of the target attribute to filter on (resource, scope
            or data point).
          enum:
          - resource
          - scope
          - data_point
          title: Attribute Type
          type: string
        attribute_key:
          description: Target attribute key to filter on.
          title: Attribute Key
          type: string
        attribute_value:
          description: Target attribute value to match.
          title: Attribute Value
          type: string
      required:
      - attribute_type
      - attribute_key
      - attribute_value
      title: MetricsAssociationFilterModel
      type: object
    NetworkScanModel:
      properties:
        addresses:
          description: IPv4 addresses to include.
          items:
            anyOf:
            - $ref: '#/components/schemas/IPAddressRangeModel'
            - $ref: '#/components/schemas/IPNetworkModel'
            - $ref: '#/components/schemas/IPAddressesModel'
          title: Addresses
          type: array
        exclude_addresses:
          description: IPv4 addresses to exclude.
          items:
            anyOf:
            - $ref: '#/components/schemas/IPAddressRangeModel'
            - $ref: '#/components/schemas/IPNetworkModel'
            - $ref: '#/components/schemas/IPAddressesModel'
            - $ref: '#/components/schemas/IPRegexpModel'
          title: Exclude Addresses
          type: array
        scan_interval:
          description: Scan interval in seconds. Default is 1 day, minimum is 1 hour.
          minimum: 3600
          title: Scan Interval
          type: integer
        time_allowed:
          description: Only execute the discovery during this time range each day.
          items:
            $ref: '#/components/schemas/TimeAllowedRangeModel'
          title: Time Allowed
          type: array
        set_ipaddress:
          description: When set, the found IPv4 address is set on the discovered host.
          title: Set Ipaddress
          type: boolean
        max_parallel_pings:
          description: Set the maximum number of concurrent pings sent to target IP
            addresses.
          maximum: 200
          minimum: 1
          title: Max Parallel Pings
          type: integer
        run_as:
          description: Execute the network scan in the Checkmk user context of the
            chosen user. This user needs the permission to add new hosts to this folder.
          title: Run As
          type: string
        tag_criticality:
          description: Specify which criticality tag to set on the host created by
            the network scan. This field is required if the criticality tag group
            exists, otherwise it as to be omitted.
          title: Tag Criticality
          type: string
        translate_names:
          $ref: '#/components/schemas/TranslateNamesModel'
          description: Name translation settings
          title: Translate Names
      required:
      - addresses
      - time_allowed
      - set_ipaddress
      - max_parallel_pings
      title: NetworkScanModel
      type: object
    NetworkScanResultModel:
      properties:
        start:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the scan started
          title: Start
        end:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          description: When the scan finished. Will be Null if not yet run.
          title: End
        state:
          description: Last scan result
          enum:
          - running
          - succeeded
          - failed
          title: State
          type: string
        output:
          description: Short human readable description of what is happening.
          title: Output
          type: string
      required:
      - start
      - state
      - output
      title: NetworkScanResultModel
      type: object
    ObjectActionMemberModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The id of this object.
          title: Id
          type: string
        disabledReason:
          anyOf:
          - type: string
          - type: 'null'
          description: Provides the reason (or the literal "disabled") why an object
            property or collection is un-modifiable, or, in the case of an action,
            unusable (and hence no links to mutate that member's state, or invoke
            the action, are provided).
          title: Disabledreason
        invalidReason:
          anyOf:
          - type: string
          - type: 'null'
          description: Provides the reason (or the literal "invalid") why a proposed
            value for a property, collection or action argument is invalid. Appears
            within an argument representation 2.9 returned as a response.
          examples:
          - invalid
          title: Invalidreason
        x-ro-invalidReason:
          anyOf:
          - type: string
          - type: 'null'
          description: Provides the reason why a SET OF proposed values for properties
            or arguments is invalid.
          examples:
          - invalid
          title: X-Ro-Invalidreason
        memberType:
          const: action
          description: The type of this member.
          title: Membertype
          type: string
        parameters:
          title: Parameters
          type: object
        name:
          description: The name of the object.
          examples:
          - import_values
          title: Name
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
      required:
      - links
      - id
      - disabledReason
      - invalidReason
      - x-ro-invalidReason
      - memberType
      - parameters
      - name
      - title
      title: ObjectActionMemberModel
      type: object
    ObjectCollectionMemberModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The id of this object.
          title: Id
          type: string
        disabledReason:
          anyOf:
          - type: string
          - type: 'null'
          description: Provides the reason (or the literal "disabled") why an object
            property or collection is un-modifiable, or, in the case of an action,
            unusable (and hence no links to mutate that member's state, or invoke
            the action, are provided).
          title: Disabledreason
        invalidReason:
          anyOf:
          - type: string
          - type: 'null'
          description: Provides the reason (or the literal "invalid") why a proposed
            value for a property, collection or action argument is invalid. Appears
            within an argument representation 2.9 returned as a response.
          examples:
          - invalid
          title: Invalidreason
        x-ro-invalidReason:
          anyOf:
          - type: string
          - type: 'null'
          description: Provides the reason why a SET OF proposed values for properties
            or arguments is invalid.
          examples:
          - invalid
          title: X-Ro-Invalidreason
        memberType:
          const: collection
          description: The type of this member.
          title: Membertype
          type: string
        value:
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Value
          type: array
        name:
          description: The name of the object.
          examples:
          - import_values
          title: Name
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
      required:
      - links
      - id
      - disabledReason
      - invalidReason
      - x-ro-invalidReason
      - memberType
      - value
      - name
      - title
      title: ObjectCollectionMemberModel
      type: object
    RegexpRewritesModel:
      properties:
        search:
          description: "The search regexp. May contain match-groups, conditional matches,\
            \ etc. This follows the Python regular expression syntax.\n\nFor details\
            \ see:\n\n * https://docs.python.org/3/library/re.html"
          format: regex
          maxLength: 30
          title: Search
          type: string
        replace_with:
          description: The replacement string. Match-groups can only be identified
            by `\1`, `\2`, etc. Highest supported match group is `\99`. Named lookups
            are not supported.
          maxLength: 30
          title: Replace With
          type: string
      required:
      - search
      - replace_with
      title: RegexpRewritesModel
      type: object
    SNMPCommunityModel:
      properties:
        type:
          const: v1_v2_community
          description: SNMP v1 or v2 with community
          title: Type
          type: string
        community:
          description: SNMP community (SNMP Versions 1 and 2c)
          title: Community
          type: string
      required:
      - type
      - community
      title: SNMPCommunityModel
      type: object
    SNMPv3AuthNoPrivacyModel:
      properties:
        type:
          const: authNoPriv
          description: SNMPv3 with authentication, but without privacy
          title: Type
          type: string
        auth_protocol:
          description: Authentication protocol.
          enum:
          - MD5-96
          - SHA-1-96
          - SHA-2-224
          - SHA-2-256
          - SHA-2-384
          - SHA-2-512
          title: Auth Protocol
          type: string
        security_name:
          description: Security name
          title: Security Name
          type: string
        auth_password:
          description: Authentication pass phrase.
          minLength: 8
          title: Auth Password
          type: string
      required:
      - type
      - auth_protocol
      - security_name
      - auth_password
      title: SNMPv3AuthNoPrivacyModel
      type: object
    SNMPv3AuthPrivacyModel:
      properties:
        type:
          const: authPriv
          description: SNMPv3 with authentication and privacy
          title: Type
          type: string
        auth_protocol:
          description: Authentication protocol.
          enum:
          - MD5-96
          - SHA-1-96
          - SHA-2-224
          - SHA-2-256
          - SHA-2-384
          - SHA-2-512
          title: Auth Protocol
          type: string
        security_name:
          description: Security name
          title: Security Name
          type: string
        auth_password:
          description: Authentication pass phrase.
          minLength: 8
          title: Auth Password
          type: string
        privacy_protocol:
          description: The privacy protocol. The only supported values in the Raw
            Edition are CBC-DES and AES-128. If selected, privacy_password needs to
            be supplied as well.
          enum:
          - CBC-DES
          - AES-128
          - 3DES-EDE
          - AES-192
          - AES-256
          - AES-192-Blumenthal
          - AES-256-Blumenthal
          title: Privacy Protocol
          type: string
        privacy_password:
          description: Privacy pass phrase. If filled, privacy_protocol needs to be
            selected as well.
          minLength: 8
          title: Privacy Password
          type: string
      required:
      - type
      - auth_protocol
      - security_name
      - auth_password
      - privacy_protocol
      - privacy_password
      title: SNMPv3AuthPrivacyModel
      type: object
    SNMPv3NoAuthNoPrivacyModel:
      properties:
        type:
          const: noAuthNoPriv
          description: SNMPv3 without authentication or privacy
          title: Type
          type: string
        security_name:
          description: Security name
          title: Security Name
          type: string
      required:
      - type
      - security_name
      title: SNMPv3NoAuthNoPrivacyModel
      type: object
    TimeAllowedRangeModel:
      properties:
        start:
          description: The start time of day. Inclusive. Use ISO8601 format. Seconds
            are stripped.
          format: time
          title: Start
          type: string
        end:
          description: The end time of day. Inclusive. Use ISO8601 format. Seconds
            are stripped.
          format: time
          title: End
          type: string
      required:
      - start
      - end
      title: TimeAllowedRangeModel
      type: object
    TranslateNamesModel:
      properties:
        convert_case:
          description: "Convert all detected host names to upper- or lower-case.\n\
            \n * `nop` - Do not convert anything\n * `lower` - Convert all host names\
            \ to lowercase.\n * `upper` - Convert all host names to uppercase."
          enum:
          - nop
          - lower
          - upper
          title: Convert Case
          type: string
        drop_domain:
          description: "Drop the rest of the domain, only keep the host name. Will\
            \ not affect IP addresses.\n\nExamples:\n\n * `192.168.0.1` -> `192.168.0.1`\n\
            \ * `foobar.example.com` -> `foobar`\n * `example.com` -> `example`\n\
            \ * `example` -> `example`\n\nThis will be executed **after**:\n\n * `convert_case`\n"
          title: Drop Domain
          type: boolean
        regexp_rewrites:
          description: "Rewrite discovered host names with multiple regular expressions.\
            \ The replacements will be done one after another in the order they appear\
            \ in the list. If not anchored at the end by a `$` character, the regexpwill\
            \ be anchored at the end implicitly by adding a `$` character.\n\nThese\
            \ will be executed **after**:\n\n * `convert_case`\n * `drop_domain`\n"
          items:
            $ref: '#/components/schemas/RegexpRewritesModel'
          title: Regexp Rewrites
          type: array
        hostname_replacement:
          description: "Replace one value with another.\n\nThese will be executed\
            \ **after**:\n\n * `convert_case`\n * `drop_domain`\n * `regexp_rewrites`\n"
          items:
            $ref: '#/components/schemas/DirectMappingModel'
          title: Hostname Replacement
          type: array
      required:
      - convert_case
      title: TranslateNamesModel
      type: object
    HostConfigCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: host_config
          description: The domain type of the objects in the collection
          examples:
          - host_config
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of host objects
          items:
            $ref: '#/components/schemas/HostConfigModel'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: HostConfigCollectionModel
      type: object
    HostUpdateAttributeModel:
      additionalProperties:
        description: "The property name must be\n\n * A custom host attribute\n *\
          \ A custom tag group starting with `tag_`\n"
        title: Dynamic Fields
        type: string
      properties:
        tag_address_family:
          description: The IP address family of the host.
          enum:
          - ip-v4-only
          - ip-v6-only
          - ip-v4v6
          - no-ip
          examples:
          - ip-v4-only
          title: Tag Address Family
          type: string
        tag_agent:
          description: Agent and API integrations
          enum:
          - cmk-agent
          - all-agents
          - special-agents
          - no-agent
          examples:
          - cmk-agent
          title: Tag Agent
          type: string
        tag_snmp_ds:
          description: The SNMP data source of the host.
          enum:
          - no-snmp
          - snmp-v2
          - snmp-v1
          examples:
          - snmp-v2
          title: Tag Snmp Ds
          type: string
        tag_piggyback:
          description: Use piggyback data for this host.
          enum:
          - auto-piggyback
          - piggyback
          - no-piggyback
          examples:
          - piggyback
          title: Tag Piggyback
          type: string
        alias:
          description: Add a comment or describe this host
          title: Alias
          type: string
        site:
          description: The site that should monitor this host.
          title: Site
          type: string
        parents:
          description: A list of parents of this host.
          items:
            type: string
          title: Parents
          type: array
        contactgroups:
          $ref: '#/components/schemas/HostContactGroupModel'
          description: Only members of the contact groups listed here have Setup permission
            for the host/folder. Optionally, you can make these contact groups automatically
            monitor contacts. The assignment of hosts to contact groups can also be
            defined by rules.
          title: Contactgroups
        ipaddress:
          description: An IPv4 address.
          title: Ipaddress
          type: string
        ipv6address:
          description: An IPv6 address.
          title: Ipv6Address
          type: string
        additional_ipv4addresses:
          description: A list of IPv4 addresses.
          items:
            type: string
          title: Additional Ipv4Addresses
          type: array
        additional_ipv6addresses:
          description: A list of IPv6 addresses.
          items:
            type: string
          title: Additional Ipv6Addresses
          type: array
        bake_agent_package:
          description: '[Enterprise, Cloud, Saas, Managed editions only] Bake agent
            packages for this folder even if it is empty.'
          title: Bake Agent Package
          type: boolean
        cmk_agent_connection:
          description: "[Enterprise, Cloud, Saas, Managed editions only] This configures\
            \ the communication direction of this host.\n * `pull-agent` (default)\
            \ - The server will try to contact the monitored host and pull the data\
            \ by initializing a TCP connection\n * `push-agent` - the host is expected\
            \ to send the data to the monitoring server without being triggered\n"
          enum:
          - push-agent
          - pull-agent
          title: Cmk Agent Connection
          type: string
        snmp_community:
          anyOf:
          - $ref: '#/components/schemas/SNMPCommunityModel'
          - $ref: '#/components/schemas/SNMPv3NoAuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthPrivacyModel'
          description: The SNMP access configuration. A configured SNMP v1/v2 community
            here will have precedence over any configured SNMP community rule. For
            this attribute to take effect, the attribute `tag_snmp_ds` needs to be
            set first.
          title: Snmp Community
        metrics_association:
          anyOf:
          - const: disabled
            type: string
          - $ref: '#/components/schemas/MetricsAssociationEnabledModel'
          description: Configuration for associating OpenTelemetry metrics with this
            host.
          title: Metrics Association
        labels:
          additionalProperties:
            description: The host label value
            type: string
          description: "Labels allow you to flexibly group your hosts in order to\
            \ refer to them later at other places in Checkmk, e.g. in rule chains.<br><b>Label\
            \ format:</b> key:value<br><br>Neither the key nor the value can contain\
            \ \u2018:\u2019. Checkmk does not perform any other validation on the\
            \ labels you use. The key is the host label key."
          title: Labels
          type: object
        waiting_for_discovery:
          description: This indicates that the host is waiting for a bulk discovery.
            It is set to True once the host is in the queue. It will be removed after
            the discovery is ended.
          title: Waiting For Discovery
          type: boolean
        network_scan:
          $ref: '#/components/schemas/NetworkScanModel'
          description: Configuration for automatic network scan. Pings will be sent
            to each IP address in the configured ranges to check if a host is up or
            down. Each found host will be added to the folder by its host name (if
            possible) or IP address.
          title: Network Scan
        management_protocol:
          description: 'The protocol used to connect to the management board. Valid
            options are: ''none'' - No management board, ''snmp'' - Connect using
            SNMP, ''ipmi'' - Connect using IPMI'
          enum:
          - none
          - snmp
          - ipmi
          title: Management Protocol
          type: string
        management_address:
          description: Address (IPv4, IPv6 or host name) under which the management
            board can be reached.
          title: Management Address
          type: string
        management_snmp_community:
          anyOf:
          - $ref: '#/components/schemas/SNMPCommunityModel'
          - $ref: '#/components/schemas/SNMPv3NoAuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthNoPrivacyModel'
          - $ref: '#/components/schemas/SNMPv3AuthPrivacyModel'
          description: SNMP credentials
          title: Management Snmp Community
        management_ipmi_credentials:
          $ref: '#/components/schemas/IPMIParametersModel'
          description: IPMI credentials
          title: Management Ipmi Credentials
        locked_by:
          $ref: '#/components/schemas/LockedByModel'
          description: Identity of the entity which locked the locked_attributes.
            The identity is built out of the Site ID, the program name and the connection
            ID.
          title: Locked By
        locked_attributes:
          description: Name of host attributes which are locked in the UI.
          items:
            type: string
          title: Locked Attributes
          type: array
        inventory_failed:
          description: Whether or not the last bulk discovery failed. It is set to
            True once it fails and unset in case a later discovery succeeds.
          title: Inventory Failed
          type: boolean
      required: []
      title: HostUpdateAttributeModel
      type: object
    UpdateHostEntry:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/HostUpdateAttributeModel'
          description: Replace all currently set attributes on the host, with these
            attributes. Any previously set attributes which are not given here will
            be removed. Can't be used together with update_attributes or remove_attributes
            fields.
          examples:
          - ipaddress: 192.168.0.123
          title: Attributes
        update_attributes:
          $ref: '#/components/schemas/HostUpdateAttributeModel'
          description: Just update the hosts attributes with these attributes. The
            previously set attributes will be overwritten. Can't be used together
            with attributes or remove_attributes fields.
          examples:
          - ipaddress: 192.168.0.123
          title: Update Attributes
        remove_attributes:
          description: A list of attributes which should be removed. Can't be used
            together with attributes or update attributes fields.
          examples:
          - - tag_foobar
          items:
            type: string
          title: Remove Attributes
          type: array
        host_name:
          description: The hostname or IP address itself.
          examples:
          - myhost.example.com
          title: Host Name
          type: string
      required:
      - host_name
      title: UpdateHostEntry
      type: object
    BulkUpdateHostModel:
      additionalProperties: false
      properties:
        entries:
          description: A list of host entries.
          items:
            $ref: '#/components/schemas/UpdateHostEntry'
          title: Entries
          type: array
      required:
      - entries
      title: BulkUpdateHostModel
      type: object
    FailedHostsModel:
      properties:
        succeeded_hosts:
          $ref: '#/components/schemas/HostConfigCollectionModel'
          description: Hosts that were successfully created.
        failed_hosts:
          additionalProperties:
            type: string
          description: A mapping of host that failed to be created, with the reason
            for failure.
          title: Failed Hosts
          type: object
      required:
      - succeeded_hosts
      - failed_hosts
      title: FailedHostsModel
      type: object
    BulkHostActionWithFailedHostsModel:
      properties:
        status:
          description: The HTTP status code.
          examples:
          - 400
          title: HTTP status code
          type: integer
        title:
          description: A summary of the problem.
          examples:
          - Some actions failed
          title: Error title
          type: string
        detail:
          description: Detailed information on what exactly went wrong.
          examples:
          - 'Some of the actions were performed but the following were faulty and
            were skipped: [''host1'', ''host2''].'
          title: Error message
          type: string
        fields:
          additionalProperties:
            type: string
          description: Detailed error messages on all fields failing validation.
          examples:
          - field: error message
          title: Validation errors
          type: object
        ext:
          $ref: '#/components/schemas/FailedHostsModel'
          description: Details for which hosts have failed
          title: Error extensions
      required:
      - status
      - title
      - detail
      - ext
      title: BulkHostActionWithFailedHostsModel
      type: object
    UpdateHost:
      additionalProperties: false
      properties:
        attributes:
          $ref: '#/components/schemas/HostUpdateAttributeModel'
          description: Replace all currently set attributes on the host, with these
            attributes. Any previously set attributes which are not given here will
            be removed. Can't be used together with update_attributes or remove_attributes
            fields.
          examples:
          - ipaddress: 192.168.0.123
          title: Attributes
        update_attributes:
          $ref: '#/components/schemas/HostUpdateAttributeModel'
          description: Just update the hosts attributes with these attributes. The
            previously set attributes will be overwritten. Can't be used together
            with attributes or remove_attributes fields.
          examples:
          - ipaddress: 192.168.0.123
          title: Update Attributes
        remove_attributes:
          description: A list of attributes which should be removed. Can't be used
            together with attributes or update attributes fields.
          examples:
          - - tag_foobar
          items:
            type: string
          title: Remove Attributes
          type: array
      title: UpdateHost
      type: object
    Api412DefaultError5AAAB769ED6D6288:
      properties:
        status:
          description: The HTTP status code.
          examples:
          - 412
          title: Status
          type: integer
        title:
          description: A summary of the problem.
          examples:
          - Precondition Failed
          title: Title
          type: string
        detail:
          description: Detailed information on what exactly went wrong.
          examples:
          - The value of the If-Match header doesn't match the object's ETag.
          title: Detail
          type: string
        fields:
          additionalProperties:
            type: string
          description: Detailed error messages on all fields failing validation.
          examples:
          - field: error message
          title: Validation errors
          type: object
        ext:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - {}
          description: Additional information about the error.
          examples:
          - key: value
          title: Error extensions
      required:
      - status
      - title
      - detail
      title: Api412DefaultError5AAAB769ED6D6288
      type: object
    Api428DefaultError26717584F8AADF09:
      properties:
        status:
          description: The HTTP status code.
          examples:
          - 428
          title: Status
          type: integer
        title:
          description: A summary of the problem.
          examples:
          - Precondition Required
          title: Title
          type: string
        detail:
          description: Detailed information on what exactly went wrong.
          examples:
          - The required If-Match header is missing.
          title: Detail
          type: string
        fields:
          additionalProperties:
            type: string
          description: Detailed error messages on all fields failing validation.
          examples:
          - field: error message
          title: Validation errors
          type: object
        ext:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - {}
          description: Additional information about the error.
          examples:
          - key: value
          title: Error extensions
      required:
      - status
      - title
      - detail
      title: Api428DefaultError26717584F8AADF09
      type: object
    RenameHost:
      type: object
      properties:
        new_name:
          type: string
          description: The new name of the existing host.
          example: newhost
          pattern: ^[-0-9a-zA-Z_.]+\Z
      required:
      - new_name
      additionalProperties: false
    Api409CustomError1:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 409
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: There are pending changes not yet activated or a rename background
            job is already running.
        title:
          type: string
          description: A summary of the problem.
          example: Conflict
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api422CustomError3:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 422
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The host could not be renamed.
        title:
          type: string
          description: A summary of the problem.
          example: Unprocessable Entity
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    UpdateNodes:
      additionalProperties: false
      properties:
        nodes:
          description: Nodes where the newly created host should be the cluster-container
            of.
          examples:
          - - host1
            - host2
            - host3
          items:
            type: string
          title: Nodes
          type: array
      required:
      - nodes
      title: UpdateNodes
      type: object
    HostNodesProperty:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The unique name of this property, local to this domain type.
          title: Id
          type: string
        value:
          description: The value of the property. In this case a list.
          items:
            type: string
          title: Value
          type: array
      required:
      - links
      - id
      - value
      title: HostNodesProperty
      type: object
    CreateHostModel:
      additionalProperties: false
      properties:
        host_name:
          description: The hostname or IP address of the host to be created.
          title: Host Name
          type: string
        folder:
          $ref: '#/components/schemas/AnnotatedFolder'
          description: The path name of the folder.
          examples:
          - /folder/subfolder
        attributes:
          $ref: '#/components/schemas/HostUpdateAttributeModel'
          default: {}
          description: Attributes to set on the newly created host. You can specify
            custom attributes and tag groups in addition to the built-in ones listed
            below.
          examples:
          - ipaddress: 192.168.0.123
      required:
      - host_name
      - folder
      title: CreateHostModel
      type: object
    BulkCreateHostModel:
      additionalProperties: false
      properties:
        entries:
          description: A list of host entries.
          examples:
          - - attributes: {}
              folder: /
              host_name: example.com
          items:
            $ref: '#/components/schemas/CreateHostModel'
          title: Entries
          type: array
      required:
      - entries
      title: BulkCreateHostModel
      type: object
    BulkDeleteHost:
      type: object
      properties:
        entries:
          type: array
          description: A list of host names.
          example:
          - example
          - sample
          minLength: 1
          items:
            type: string
            description: The hostname or IP address itself.
            example: example.com
            pattern: ^[-0-9a-zA-Z_.]+\Z
      required:
      - entries
      additionalProperties: false
    CreateClusterHostModel:
      additionalProperties: false
      properties:
        host_name:
          description: The hostname or IP address of the host to be created.
          title: Host Name
          type: string
        folder:
          $ref: '#/components/schemas/AnnotatedFolder'
          description: The path name of the folder.
          examples:
          - /folder/subfolder
        attributes:
          $ref: '#/components/schemas/HostUpdateAttributeModel'
          default: {}
          description: Attributes to set on the newly created host. You can specify
            custom attributes and tag groups in addition to the built-in ones listed
            below.
          examples:
          - ipaddress: 192.168.0.123
        nodes:
          description: Nodes where the newly created host should be the cluster-container
            of.
          examples:
          - - host1
            - host2
            - host3
          items: {}
          title: Nodes
          type: array
      required:
      - host_name
      - folder
      - nodes
      title: CreateClusterHostModel
      type: object
    MoveHost:
      type: object
      properties:
        target_folder:
          type: string
          description: 'The path of the target folder where the host is supposed to
            be moved to.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          example: ~my~fine~folder
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
      required:
      - target_folder
      additionalProperties: false
    Api401CustomError1:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 401
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: You do not have read access to this host.
        title:
          type: string
          description: A summary of the problem.
          example: Unauthorized
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    HostConfigSchemaInternal:
      type: object
      properties:
        site:
          type: string
          description: The site the host is monitored on.
        is_cluster:
          type: boolean
          description: Indicates if the host is a cluster host.
      required:
      - is_cluster
      - site
      additionalProperties: false
    LinkHostUUID:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: A valid UUID.
          example: 34e4c967-1591-4883-8cdf-0e335b09618d
      required:
      - uuid
      additionalProperties: false
    Api401CustomError2:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 401
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: You do not have the permissions to edit this host.
        title:
          type: string
          description: A summary of the problem.
          example: Unauthorized
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    RegisterHost:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: A valid UUID.
          example: 34e4c967-1591-4883-8cdf-0e335b09618d
      required:
      - uuid
      additionalProperties: false
    Api403CustomError4:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 403
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: You do not have the permissions to register this host.
        title:
          type: string
          description: A summary of the problem.
          example: Forbidden
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api405CustomError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 405
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: This host cannot be registered on this site.
        title:
          type: string
          description: A summary of the problem.
          example: Method Not Allowed
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    ConnectionMode:
      type: object
      properties:
        connection_mode:
          type: string
          description: "[Cloud, Managed editions only] This configures the communication\
            \ direction of this host.\n * `pull-agent` (default) - The server will\
            \ try to contact the monitored host and pull the data by initializing\
            \ a TCP connection\n * `push-agent` - the host is expected to send the\
            \ data to the monitoring server without being triggered\n"
          enum: *id129
      additionalProperties: false
    LDAPGeneralProperties:
      type: object
      properties:
        id:
          type: string
          description: The LDAP connection ID.
        description:
          type: string
          description: Add a title or describe this rule
        comment:
          type: string
          description: An optional comment to explain the purpose of this object.
            The comment is only visible in this dialog and can help other users to
            understand the intentions of the configured attributes.
        documentation_url:
          type: string
          description: An optional URL linking documentation or any other page. An
            icon links to the page and opens in a new tab when clicked. You can use
            either global URLs (starting with http://), absolute local URLs (starting
            with /) or relative URLs (relative to check_mk/).
        rule_activation:
          type: string
          description: Selecting 'deactivated' will disable the rule, but it will
            remain in the configuration.
          enum:
          - activated
          - deactivated
      additionalProperties: false
    LDAPDirectoryTypeConnection:
      type: object
      properties:
        type:
          type: string
          description: ''
          enum:
          - active_directory_manual
          - active_directory_automatic
          - open_ldap
          - 389_directory_server
          example: active_directory_manual
        ldap_server:
          type: string
          description: Set the host address of the LDAP server. Might be an IP address
            or resolvable host name.
          example: your_ldap_server.example.com
        failover_servers:
          type: array
          description: When the connection to the first server fails with connect
            specific errors like timeouts or some other network related problems,
            the connect mechanism will try to use this server instead of the server
            configured above. If you use persistent connections (default), the connection
            is being used until the LDAP is not reachable or the local webserver is
            restarted. You may paste a text from your clipboard which contains several
            parts separated by ';' characters into the last input field. The text
            will then be split by these separators and the single parts are added
            into dedicated input fields.
          example:
          - 192.168.5.2
          - 195.65.2.8
          items:
            type: string
        domain:
          type: string
          description: Configure the DNS domain name of your Active directory domain
            here, Checkmk will then query this domain for it's closest domain controller
            to communicate with.
          example: your_domain.com
      additionalProperties: false
    LDAPBindCredentials:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: &id142
          - enabled
          - disabled
          example: enabled
        type:
          type: string
          description: A specific password or a password store id
          enum:
          - explicit
          - store
          example: explicit
        bind_dn:
          type: string
          description: The distinguished name of the user account which is used to
            bind to the LDAP server. This user account must have read access to the
            LDAP directory.
          example: CN=bind_user,OU=users,DC=example,DC=com
        explicit_password:
          type: string
          description: An explicit password of the user account which is used to bind
            to the LDAP server. This user account must have read access to the LDAP
            directory.
          example: your_password
        password_store_id:
          type: string
          description: A password store id from the user account which is used to
            bind to the LDAP server. This user account must have read access to the
            LDAP directory.
          example: ''
      additionalProperties: false
    LDAPTCPPort:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        port:
          type: integer
          description: ''
          example: 389
      additionalProperties: false
    LDAPConnectTimeout:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        seconds:
          type: number
          description: Timeout for the initial connection to the LDAP server in seconds.
          example: 2.0
      additionalProperties: false
    LDAPVersion:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        version:
          type: integer
          description: The selected LDAP version the LDAP server is serving. Most
            modern servers use LDAP version 3.
          enum:
          - 2
          - 3
          example: 3
      additionalProperties: false
    LDAPPageSize:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        size:
          type: integer
          description: LDAP searches can be performed in paginated mode, for example
            to improve the performance. This enables pagination and configures the
            size of the pages.
          example: 1000
      additionalProperties: false
    LDAPResponseTimeout:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        seconds:
          type: integer
          description: Timeout for the initial connection to the LDAP server in seconds.
          example: 5
      additionalProperties: false
    LDAPConnectionSuffix:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        suffix:
          type: string
          description: The LDAP connection suffix can be used to distinguish equal
            named objects (name conflicts), for example user accounts, from different
            LDAP connections.
          example: suffix_example
      additionalProperties: false
    LDAPConnection:
      type: object
      properties:
        directory_type:
          description: The credentials to be used to connect to the LDAP server. The
            used account must not be allowed to do any changes in the directory the
            whole connection is read only. In some environment an anonymous connect/bind
            is allowed, in this case you don't have to configure anything here.It
            must be possible to list all needed user and group objects from the directory.
          example:
            type: active_directory_manual
            ldap_server: your_ldap_server.example.com
            failover_servers:
            - 192.168.5.2
            - 195.65.2.8
          $ref: '#/components/schemas/LDAPDirectoryTypeConnection'
        bind_credentials:
          description: The credentials used to connect to the LDAP server.
          example:
            state: enabled
            type: store
            bind_dn: CN=bind_user,OU=users,DC=example,DC=com
            password_store_id: pw_store_id
          $ref: '#/components/schemas/LDAPBindCredentials'
        tcp_port:
          description: The TCP port to be used to connect to the LDAP server.
          example:
            state: enabled
            port: 389
          $ref: '#/components/schemas/LDAPTCPPort'
        ssl_encryption:
          type: string
          description: Connect to the LDAP server with a SSL encrypted connection.
            The trusted certificates authorities configured in Checkmk will be used
            to validate the certificate provided by the LDAP server.
          enum:
          - enable_ssl
          - disable_ssl
          example: enable_ssl
        connect_timeout:
          description: If the connection timeout is set and its value.
          example:
            state: enabled
            seconds: 2.0
          $ref: '#/components/schemas/LDAPConnectTimeout'
        ldap_version:
          description: If the ldap version is set and the version it's set to. Either
            2 or 3.
          example:
            state: enabled
            version: 3
          $ref: '#/components/schemas/LDAPVersion'
        page_size:
          description: If the page size is enabled and its value.
          example:
            state: enabled
            size: 1000
          $ref: '#/components/schemas/LDAPPageSize'
        response_timeout:
          description: Enable the response timeout and define its value.
          example:
            state: enabled
            seconds: 5
          $ref: '#/components/schemas/LDAPResponseTimeout'
        connection_suffix:
          description: If the connection suffix is enabled and what its set to.
          example:
            state: enabled
            suffix: suffix_example
          $ref: '#/components/schemas/LDAPConnectionSuffix'
      additionalProperties: false
    LDAPUserSearchFilter:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        filter:
          type: string
          description: Using this option you can define an optional LDAP filter which
            is used during LDAP searches. It can be used to only handle a subset of
            the users below the given base DN.
          example: (&(objectclass=user)(objectcategory=person))
      additionalProperties: false
    LDAPUserGroupFilter:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        filter:
          type: string
          description: Define the DN of a group object which is used to filter the
            users.
          example: CN=cmk-users,OU=groups,DC=example,DC=com
      additionalProperties: false
    LDAPUserIDAttribute:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute:
          type: string
          description: The attribute used to identify the individual users. It must
            have unique values to make an user identifyable by the value of this attribute.
          example: attribute_example
      additionalProperties: false
    LDAPUsers:
      type: object
      properties:
        user_base_dn:
          type: string
          description: Give a base distinguished name here. All user accounts to synchronize
            must be located below this one.
          example: OU=users,DC=example,DC=com
        search_scope:
          type: string
          description: Scope to be used in LDAP searches. In most cases Search whole
            subtree below the base DN is the best choice. It searches for matching
            objects recursively.
          enum:
          - search_whole_subtree
          - search_only_base_dn_entry
          - search_all_one_level_below_base_dn
          example: search_whole_subtree
        search_filter:
          description: Enable and define an optional LDAP filter.
          example:
            state: enabled
            filter: (&(objectclass=user)(objectcategory=person))
          $ref: '#/components/schemas/LDAPUserSearchFilter'
        filter_group:
          description: Enable and define the DN of a group object which is used to
            filter the users.
          example:
            state: enabled
            filter: CN=cmk-users,OU=groups,DC=example,DC=com
          $ref: '#/components/schemas/LDAPUserGroupFilter'
        user_id_attribute:
          description: Enable and define a user ID attribute.
          example:
            state: enabled
            attribute: attribute_example
          $ref: '#/components/schemas/LDAPUserIDAttribute'
        user_id_case:
          type: string
          description: Convert imported User-IDs to lower case during synchronization
            or leave as is.
          enum:
          - dont_convert_to_lowercase
          - convert_to_lowercase
          example: convert_to_lowercase
        umlauts_in_user_ids:
          type: string
          description: Checkmk does not support special characters in User-IDs. However,
            to deal with LDAP users having umlauts in their User-IDs you previously
            had the choice to replace umlauts with other characters. This option is
            still available for backward compatibility, but you are advised to use
            the 'keep_umlauts' option for new installations.
          enum:
          - keep_umlauts
          - replace_umlauts
          example: keep_umlauts
        create_users:
          type: string
          description: Create user accounts during sync or on the first login
          enum:
          - on_login
          - on_sync
          example: on_sync
      additionalProperties: false
    LDAPGroupSearchFilter:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        filter:
          type: string
          description: Define an optional LDAP filter which is used during group related
            LDAP searches. It can be used to only handle a subset of the groups below
            the given group base DN.
          example: (objectclass=group)
      additionalProperties: false
    LDAPMemberAttributeValue:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute:
          type: string
          description: The attribute used to identify users group memberships.
          example: example_member
      additionalProperties: false
    LDAPGroups:
      type: object
      properties:
        group_base_dn:
          type: string
          description: Give a base distinguished name here. All groups used must be
            located below this one.
          example: OU=groups,DC=example,DC=com
        search_scope:
          type: string
          description: Scope to be used in group related LDAP searches. In most cases
            Search whole subtree below the base DN is the best choice. It searches
            for matching objects in the given base recursively.
          enum:
          - search_whole_subtree
          - search_only_base_dn_entry
          - search_all_one_level_below_base_dn
          example: ''
        search_filter:
          description: Enable and define an optional LDAP filter.
          example:
            state: enabled
            filter: (objectclass=group)
          $ref: '#/components/schemas/LDAPGroupSearchFilter'
        member_attribute:
          description: Enable and define a member attribute.
          example:
            state: enabled
            attribute: example_member
          $ref: '#/components/schemas/LDAPMemberAttributeValue'
      additionalProperties: false
    LDAPSyncPluginAlias:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute containing the alias of the user.
      additionalProperties: false
    LDAPSyncPluginAuthExp:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: When the value of this attribute changes for a user account,
            all current authenticated sessions of the user are invalidated and the
            user must login again. By default this field uses the fields which hold
            the time of the last password change of the user.
      additionalProperties: false
    LDAPSyncPluginDisableNotifications:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute whose contents shall be synced into this
            custom attribute.
      additionalProperties: false
    LDAPSyncPluginEmailAddress:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute containing the mail address of the user.
      additionalProperties: false
    LDAPSyncPluginMenuIcons:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute whose contents shall be synced into this
            custom attribute.
      additionalProperties: false
    LDAPSyncPluginNavBarIcons:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute whose contents shall be synced into this
            custom attribute.
      additionalProperties: false
    LDAPSyncPluginPager:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute containing the pager number of the user.
      additionalProperties: false
    LDAPSyncPluginShowMode:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute whose contents shall be synced into this
            custom attribute.
      additionalProperties: false
    LDAPSyncPluginSideBarPosition:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute whose contents shall be synced into this
            custom attribute.
      additionalProperties: false
    LDAPSyncPluginStartURL:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute whose contents shall be synced into this
            custom attribute.
      additionalProperties: false
    LDAPSyncPluginTempUnit:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute whose contents shall be synced into this
            custom attribute.
      additionalProperties: false
    LDAPSyncPluginUITheme:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute whose contents shall be synced into this
            custom attribute.
      additionalProperties: false
    LDAPSyncPluginVisibilityOfHostsOrServices:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        attribute_to_sync:
          type: string
          description: The LDAP attribute whose contents shall be synced into this
            custom attribute.
      additionalProperties: false
    LDAPContactGroupMembership:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        handle_nested:
          type: boolean
          description: When enabled, this plug-in will not only handle direct group
            memberships, instead it will also dig into nested groups and treat the
            members of those groups as contact group members as well. Please bear
            in mind that this feature might increase the execution time of your LDAP
            sync.
        sync_from_other_connections:
          type: array
          description: This is a special feature for environments where user accounts
            are located in one LDAP directory and groups objects having them as members
            are located in other directories. You should only enable this feature
            when you are in this situation and really need it. The current connection
            is always used.
          items:
            type: string
      additionalProperties: false
    LDAPFromToFields:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        from_time:
          type: string
          format: date-time
          example: '2024-02-29T17:32:28+00:00'
        to_time:
          type: string
          format: date-time
          example: '2024-02-29T12:53:34+00:00'
      required:
      - from_time
      - to_time
      additionalProperties: false
    LDAPDisableNotificationsValue:
      type: object
      properties:
        temporarily_disable_all_notifications:
          type: boolean
          description: When this option is active you will not get any alerts or other
            notifications via email, SMS or similar. This overrides all other notification
            settings and rules, so make sure that you know what you are doing.
          example: true
        custom_time_range:
          description: Here you can specify a time range where no notifications are
            generated.
          example:
            from_time: '2024-02-29T17:32:28+00:00'
            to_time: '2024-02-29T12:53:34+00:00'
          $ref: '#/components/schemas/LDAPFromToFields'
      additionalProperties: false
    LDAPGroupsToSyncDisableNotifications:
      type: object
      properties:
        group_cn:
          type: string
          description: The common name of the group in LDAP. This is the name of the
            group as it is stored in the LDAP directory.
          example: group_cn_example
        attribute_to_set:
          type: string
          description: The name of the attribute to set.
        value:
          description: The value of the attribute to set
          example: ''
          $ref: '#/components/schemas/LDAPDisableNotificationsValue'
      additionalProperties: false
    LDAPGroupsToSyncStartURL:
      type: object
      properties:
        group_cn:
          type: string
          description: The common name of the group in LDAP. This is the name of the
            group as it is stored in the LDAP directory.
          example: group_cn_example
        attribute_to_set:
          type: string
          description: The name of the attribute to set.
        value:
          type: string
          description: The URL that the user should be redirected to after login.
            There is a 'default_start_url', a 'welcome_page', and any other will be
            treated as a custom URL
          example: default_start_url
      additionalProperties: false
    LDAPGroupsToSyncSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPGroupsToSyncDisableNotifications'
      - $ref: '#/components/schemas/LDAPGroupsToSyncStartURL'
      discriminator:
        propertyName: attribute_to_set
        mapping:
          disable_notifications: '#/components/schemas/LDAPGroupsToSyncDisableNotifications'
          start_url: '#/components/schemas/LDAPGroupsToSyncStartURL'
    LDAPGroupsToAttributes:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        handle_nested:
          type: boolean
          description: Once you enable this option, this plug-in will not only handle
            direct group memberships, instead it will also dig into nested groups
            and treat the members of those groups as contact group members as well.
            Please bear in mind that this feature might increase the execution time
            of your LDAP sync. (Active Directory only at the moment)
        sync_from_other_connections:
          type: array
          description: This is a special feature for environments where user accounts
            are located in one LDAP directory and groups objects having them as members
            are located in other directories. You should only enable this feature
            when you are in this situation and really need it. The current connection
            is always used.
          items:
            type: string
        groups_to_sync:
          type: array
          description: Specify the groups to control the value of a given user attribute.
            If a user is not a member of a group, the attribute will be left at its
            default value. When a single attribute is set by multiple groups and a
            user is a member of multiple of these groups, the later plug-in in the
            list will override the others.
          example:
          - group_cn: group_cn_example
            attribute_to_set: main_menu_icons
            value: main_menu_icons
          items:
            $ref: '#/components/schemas/LDAPGroupsToSyncSelector'
      additionalProperties: false
    LDAPRoleElement:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        group_dn:
          type: string
          description: This group must be defined within the scope of the LDAP Group
            Settings
          example: cmk-users
        search_in:
          type: string
          description: An existing ldap connection.
          example: LDAP_1
      additionalProperties: false
    LDAPGroupsToRoles:
      type: object
      properties:
        state:
          type: string
          description: ''
          enum: *id142
          example: enabled
        handle_nested:
          type: boolean
          description: Once you enable this option, this plug-in will not only handle
            direct group memberships, instead it will also dig into nested groups
            and treat the members of those groups as contact group members as well.
            Please bear in mind that this feature might increase the execution time
            of your LDAP sync
        admin:
          type: array
          items:
            $ref: '#/components/schemas/LDAPRoleElement'
        agent_registration:
          type: array
          items:
            $ref: '#/components/schemas/LDAPRoleElement'
        guest:
          type: array
          items:
            $ref: '#/components/schemas/LDAPRoleElement'
        user:
          type: array
          items:
            $ref: '#/components/schemas/LDAPRoleElement'
      additionalProperties: false
    LDAPSyncPlugins:
      type: object
      properties:
        alias:
          description: Populates the alias attribute of the Setup user by synchronizing
            an attribute from the LDAP user account. By default the LDAP attribute
            cn is used.
          $ref: '#/components/schemas/LDAPSyncPluginAlias'
        authentication_expiration:
          description: This plug-in fetches all information which are needed to check
            whether or not an already authenticated user should be deauthenticated,
            e.g. because the password has changed in LDAP or the account has been
            locked.
          $ref: '#/components/schemas/LDAPSyncPluginAuthExp'
        disable_notifications:
          description: When this option is active you will not get any alerts or other
            notifications via email, SMS or similar. This overrides all other notification
            settings and rules, so make sure that you know what you do. Moreover you
            can specify a time range where no notifications are generated.
          $ref: '#/components/schemas/LDAPSyncPluginDisableNotifications'
        email_address:
          description: Synchronizes the email of the LDAP user account into Checkmk
          $ref: '#/components/schemas/LDAPSyncPluginEmailAddress'
        main_menu_icons:
          description: "In the main menus you can select between two options: Have\
            \ a green icon only for the headlines \u2013 the 'topics' \u2013 for lean\
            \ design. Or have a colored icon for every entry so that over time you\
            \ can zoom in more quickly to a specific entry."
          $ref: '#/components/schemas/LDAPSyncPluginMenuIcons'
        mega_menu_icons:
          deprecated: true
          description: Deprecated - use `main_menu_icons` instead.
          $ref: '#/components/schemas/LDAPSyncPluginMenuIcons'
        navigation_bar_icons:
          description: With this option you can define if icons in the navigation
            bar should show a title or not. This gives you the possibility to save
            some space in the UI.
          $ref: '#/components/schemas/LDAPSyncPluginNavBarIcons'
        pager:
          description: This plug-in synchronizes a field of the users LDAP account
            to the pager attribute of the Setup user accounts, which is then forwarded
            to the monitoring core and can be used for notifications. By default the
            LDAP attribute mobile is used.
          $ref: '#/components/schemas/LDAPSyncPluginPager'
        show_mode:
          description: In some places like e.g. the main menu Checkmk divides features,
            filters, input fields etc. in two categories, showing more or less entries.
            With this option you can set a default mode for unvisited menus. Alternatively,
            you can enforce to show more, so that the round button with the three
            dots is not shown at all.
          $ref: '#/components/schemas/LDAPSyncPluginShowMode'
        ui_sidebar_position:
          description: The sidebar position
          $ref: '#/components/schemas/LDAPSyncPluginSideBarPosition'
        start_url:
          description: The start URL to display in main frame.
          $ref: '#/components/schemas/LDAPSyncPluginStartURL'
        temperature_unit:
          description: Set the temperature unit used for graphs and perfometers. The
            default unit can be configured here. Note that this setting does not affect
            the temperature unit used in service outputs, which can however be configured
            in this ruleset.
          $ref: '#/components/schemas/LDAPSyncPluginTempUnit'
        ui_theme:
          description: The user interface theme
          $ref: '#/components/schemas/LDAPSyncPluginUITheme'
        visibility_of_hosts_or_services:
          description: When this option is checked, the status GUI will only display
            hosts and services that the user is a contact for - even if they have
            the permission for seeing all objects.
          $ref: '#/components/schemas/LDAPSyncPluginVisibilityOfHostsOrServices'
        contact_group_membership:
          description: Adds the user to contact groups based on the group memberships
            in LDAP. This plug-in adds the user only to existing contact groups while
            the name of the contact group must match the common name (cn) of the LDAP
            group.
          $ref: '#/components/schemas/LDAPContactGroupMembership'
        groups_to_custom_user_attributes:
          description: Sets custom user attributes based on the group memberships
            in LDAP. This plug-in can be used to set custom user attributes to specified
            values for all users which are member of a group in LDAP. The specified
            group name must match the common name (CN) of the LDAP group.
          $ref: '#/components/schemas/LDAPGroupsToAttributes'
        groups_to_roles:
          description: Configures the roles of the user depending on its group memberships
            in LDAP.
          $ref: '#/components/schemas/LDAPGroupsToRoles'
      additionalProperties: false
    LDAPSyncInterval:
      type: object
      properties:
        days:
          type: integer
        hours:
          type: integer
        minutes:
          type: integer
      additionalProperties: false
    LDAPOther:
      type: object
      properties:
        sync_interval:
          description: This option defines the interval of the LDAP synchronization.
            This setting is only used by sites which have the automatic user synchronization
            enabled.
          $ref: '#/components/schemas/LDAPSyncInterval'
      additionalProperties: false
    LDAPConnectionConfig:
      type: object
      properties:
        general_properties:
          $ref: '#/components/schemas/LDAPGeneralProperties'
        ldap_connection:
          $ref: '#/components/schemas/LDAPConnection'
        users:
          $ref: '#/components/schemas/LDAPUsers'
        groups:
          $ref: '#/components/schemas/LDAPGroups'
        sync_plugins:
          $ref: '#/components/schemas/LDAPSyncPlugins'
        other:
          $ref: '#/components/schemas/LDAPOther'
      additionalProperties: false
    LDAPConnectionResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: ldap_connection
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The configuration attributes of a user LDAP connection.
          example: &id143
            general_properties:
              id: LDAP_1
              description: ''
              comment: ''
              documentation_url: ''
              rule_activation: activated
            ldap_connection:
              directory_type:
                type: active_directory_manual
                ldap_server: 123.31.12.34
                failover_servers: []
              bind_credentials:
                state: disabled
              tcp_port:
                state: disabled
              ssl_encryption: disable_ssl
              connect_timeout:
                state: disabled
              ldap_version:
                state: disabled
              page_size:
                state: disabled
              response_timeout:
                state: disabled
              connection_suffix:
                state: disabled
            users:
              user_base_dn: ''
              search_scope: search_only_base_dn_entry
              search_filter:
                state: disabled
              filter_group:
                state: disabled
              user_id_attribute:
                state: disabled
              user_id_case: dont_convert_to_lowercase
              umlauts_in_user_ids: keep_umlauts
              create_users: on_login
            groups:
              group_base_dn: ''
              search_scope: search_whole_subtree
              search_filter:
                state: disabled
              member_attribute:
                state: disabled
            sync_plugins:
              alias:
                state: disabled
              authentication_expiration:
                state: disabled
              disable_notifications:
                state: disabled
              email_address:
                state: disabled
              main_menu_icons:
                state: disabled
              navigation_bar_icons:
                state: disabled
              pager:
                state: disabled
              show_mode:
                state: disabled
              ui_sidebar_position:
                state: disabled
              start_url:
                state: disabled
              temperature_unit:
                state: disabled
              ui_theme:
                state: disabled
              visibility_of_hosts_or_services:
                state: disabled
              contact_group_membership:
                state: disabled
              groups_to_custom_user_attributes:
                state: disabled
              groups_to_roles:
                state: disabled
            other:
              sync_interval:
                days: 5
                hours: 2
                minutes: 30
          $ref: '#/components/schemas/LDAPConnectionConfig'
      required:
      - links
      additionalProperties: false
    LDAPConnectionResponseCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: ldap_connection
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of LDAP connections.
          example:
          - links: []
            domainType: ldap_connection
            id: LDAP_1
            title: ''
            members: {}
            extensions: *id143
          items:
            $ref: '#/components/schemas/LDAPConnectionResponse'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    GETLdapConnection404:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The connection id LDAP_1 did not match any LDAP connection
        title:
          type: string
          description: A summary of the problem.
          example: The requested LDAP connection was not found
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    LDAPUserSearchFilterRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        filter:
          type: string
          description: Using this option you can define an optional LDAP filter which
            is used during LDAP searches. It can be used to only handle a subset of
            the users below the given base DN.
          example: (&(objectclass=user)(objectcategory=person))
      required:
      - filter
      - state
      additionalProperties: false
    LDAPCheckboxDisabledRequest:
      type: object
      properties:
        state:
          default: disabled
          description: This config parameter is disabled.
          example: disabled
      additionalProperties: false
    LDAPUserSearchFilterRequestSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPUserSearchFilterRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPUserSearchFilterRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPUserGroupFilterRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        filter:
          type: string
          description: Define the DN of a group object which is used to filter the
            users.
          example: CN=cmk-users,OU=groups,DC=example,DC=com
      required:
      - filter
      - state
      additionalProperties: false
    LDAPUserGroupFilterRequestSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPUserGroupFilterRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPUserGroupFilterRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPUserIDAttributeRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        attribute:
          type: string
          description: The attribute used to identify the individual users. It must
            have unique values to make an user identifyable by the value of this attribute.
          example: attribute_example
      required:
      - attribute
      - state
      additionalProperties: false
    LDAPUserIDAttributeRequestSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPUserIDAttributeRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPUserIDAttributeRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPUsersRequest:
      type: object
      properties:
        user_base_dn:
          type: string
          default: ''
          description: Give a base distinguished name here. All user accounts to synchronize
            must be located below this one.
          example: OU=users,DC=example,DC=com
        search_scope:
          type: string
          default: search_whole_subtree
          description: Scope to be used in LDAP searches. In most cases Search whole
            subtree below the base DN is the best choice. It searches for matching
            objects recursively.
          enum:
          - search_whole_subtree
          - search_only_base_dn_entry
          - search_all_one_level_below_base_dn
          example: search_whole_subtree
        search_filter:
          default:
            state: disabled
          description: Enable and define an optional LDAP filter.
          example:
            state: enabled
            filter: (&(objectclass=user)(objectcategory=person))
          $ref: '#/components/schemas/LDAPUserSearchFilterRequestSelector'
        filter_group:
          default:
            state: disabled
          description: Enable and define the DN of a group object which is used to
            filter the users.
          example:
            state: enabled
            filter: CN=cmk-users,OU=groups,DC=example,DC=com
          $ref: '#/components/schemas/LDAPUserGroupFilterRequestSelector'
        user_id_attribute:
          default:
            state: disabled
          description: Enable and define a user ID attribute.
          example:
            state: enabled
            attribute: attribute_example
          $ref: '#/components/schemas/LDAPUserIDAttributeRequestSelector'
        user_id_case:
          type: string
          default: dont_convert_to_lowercase
          description: Convert imported User-IDs to lower case during synchronization
            or leave as is.
          enum:
          - dont_convert_to_lowercase
          - convert_to_lowercase
          example: convert_to_lowercase
        umlauts_in_user_ids:
          type: string
          default: keep_umlauts
          description: Checkmk does not support special characters in User-IDs. However,
            to deal with LDAP users having umlauts in their User-IDs you previously
            had the choice to replace umlauts with other characters. This option is
            still available for backward compatibility, but you are advised to use
            the 'keep_umlauts' option for new installations.
          enum:
          - keep_umlauts
          - replace_umlauts
          example: keep_umlauts
        create_users:
          type: string
          default: on_login
          description: Create user accounts during sync or on the first login
          enum:
          - on_login
          - on_sync
          example: on_sync
      additionalProperties: false
    LDAPGroupSearchFilterRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        filter:
          type: string
          description: Define an optional LDAP filter which is used during group related
            LDAP searches. It can be used to only handle a subset of the groups below
            the given group base DN.
          example: (objectclass=group)
      required:
      - filter
      - state
      additionalProperties: false
    LDAPGroupSearchFilterSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPGroupSearchFilterRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPGroupSearchFilterRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPMemberAttributeRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        attribute:
          type: string
          description: The attribute used to identify users group memberships.
          example: example_member
      required:
      - attribute
      - state
      additionalProperties: false
    LDAPMemberAttributeSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPMemberAttributeRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPMemberAttributeRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPGroupsRequest:
      type: object
      properties:
        group_base_dn:
          type: string
          default: ''
          description: Give a base distinguished name here. All groups used must be
            located below this one.
          example: OU=groups,DC=example,DC=com
        search_scope:
          type: string
          default: search_whole_subtree
          description: Scope to be used in group related LDAP searches. In most cases
            Search whole subtree below the base DN is the best choice. It searches
            for matching objects in the given base recursively.
          enum:
          - search_whole_subtree
          - search_only_base_dn_entry
          - search_all_one_level_below_base_dn
          example: search_whole_subtree
        search_filter:
          default:
            state: disabled
          description: Enable and define an optional LDAP filter.
          example:
            state: enabled
            filter: (objectclass=group)
          $ref: '#/components/schemas/LDAPGroupSearchFilterSelector'
        member_attribute:
          default:
            state: disabled
          description: Enable and define a member attribute.
          example:
            state: enabled
            attribute: example_member
          $ref: '#/components/schemas/LDAPMemberAttributeSelector'
      additionalProperties: false
    LDAPSyncPluginAttributeRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        attribute_to_sync:
          type: string
          description: The attribute to sync
      required:
      - attribute_to_sync
      - state
      additionalProperties: false
    LDAPSyncPluginAttrubuteSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPSyncPluginAttributeRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPSyncPluginAttributeRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPSyncPluginNestedOtherConnectionsRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        handle_nested:
          type: boolean
          default: false
          description: Once you enable this option, this plug-in will not only handle
            direct group memberships, instead it will also dig into nested groups
            and treat the members of those groups as contact group members as well.
            Please bear in mind that this feature might increase the execution time
            of your LDAP sync.
          example: true
        sync_from_other_connections:
          type: array
          default: []
          description: The LDAP attribute whose contents shall be synced into this
            custom attribute.
          example: &id144
          - LDAP_1
          - LDAP_2
          items:
            type: string
            description: An LDAP connection ID string.
      required:
      - state
      additionalProperties: false
    LDAPSyncPluginGroupsToContactGroupsSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPSyncPluginNestedOtherConnectionsRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPSyncPluginNestedOtherConnectionsRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPCheckboxCustomTimeRangeEnabledRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        from_time:
          type: string
          format: date-time
          description: The start of the time range
          example: '2024-02-29T17:32:28+00:00'
        to_time:
          type: string
          format: date-time
          description: The end of the time range
          example: '2024-03-04T12:12:56+00:00'
      required:
      - from_time
      - state
      - to_time
      additionalProperties: false
    LDAPCustomTimeRangeSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPCheckboxCustomTimeRangeEnabledRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPCheckboxCustomTimeRangeEnabledRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPSyncPluginGroupsValueRequest:
      type: object
      properties:
        temporarily_disable_all_notifications:
          type: boolean
          default: false
          description: When this option is active you will not get any alerts or other
            notifications via email, SMS or similar. This overrides all other notification
            settings and rules, so make sure that you know what you're doing. Moreover
            you can specify a time range where no notifications are generated.
        custom_time_range:
          description: ''
          example:
            from_time: '2024-02-29T17:32:28+00:00'
            to_time: '2024-03-04T12:12:56+00:00'
          $ref: '#/components/schemas/LDAPCustomTimeRangeSelector'
      required:
      - custom_time_range
      additionalProperties: false
    LDAPSyncPluginGroupDisableNotificationsRequest:
      type: object
      properties:
        group_cn:
          type: string
          description: The common name of the group
          example: a_group_cn
        attribute_to_set:
          type: string
          description: The attribute to set
          example: disable_notifications
        value:
          description: The value to set
          $ref: '#/components/schemas/LDAPSyncPluginGroupsValueRequest'
      required:
      - attribute_to_set
      - group_cn
      - value
      additionalProperties: false
    LDAPSyncPluginGroupStartURLRequest:
      type: object
      properties:
        group_cn:
          type: string
          description: The common name of the group
          example: a_group_cn
        attribute_to_set:
          type: string
          description: The attribute to set
          example: disable_notifications
        value:
          type: string
          description: The URL that the user should be redirected to after login.
            There is a 'default_start_url', a 'welcome_page', and any other will be
            treated as a custom URL
          example: welcome_page
      required:
      - attribute_to_set
      - group_cn
      - value
      additionalProperties: false
    LDAPSyncPluginGroupAllOthersRequest:
      type: object
      properties:
        group_cn:
          type: string
          description: The common name of the group
          example: a_group_cn
        attribute_to_set:
          type: string
          description: The attribute to set
          example: disable_notifications
        value:
          type: string
          description: ''
          example: per_entry
      required:
      - attribute_to_set
      - group_cn
      - value
      additionalProperties: false
    LDAPSyncPluginGroupsToSyncSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPSyncPluginGroupDisableNotificationsRequest'
      - $ref: '#/components/schemas/LDAPSyncPluginGroupStartURLRequest'
      - $ref: '#/components/schemas/LDAPSyncPluginGroupAllOthersRequest'
      discriminator:
        propertyName: attribute_to_set
        mapping:
          disable_notifications: '#/components/schemas/LDAPSyncPluginGroupDisableNotificationsRequest'
          start_url: '#/components/schemas/LDAPSyncPluginGroupStartURLRequest'
          all_others: '#/components/schemas/LDAPSyncPluginGroupAllOthersRequest'
    LDAPSyncPluginGroupsToAttributesRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        handle_nested:
          type: boolean
          default: false
          description: Once you enable this option, this plug-in will not only handle
            direct group memberships, instead it will also dig into nested groups
            and treat the members of those groups as contact group members as well.
            Please bear in mind that this feature might increase the execution time
            of your LDAP sync.
          example: true
        sync_from_other_connections:
          type: array
          default: []
          description: The LDAP attribute whose contents shall be synced into this
            custom attribute.
          example: *id144
          items:
            type: string
            description: An LDAP connection ID string.
        groups_to_sync:
          default: []
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/LDAPSyncPluginGroupsToSyncSelector'
      required:
      - state
      additionalProperties: false
    LDAPSyncPluginGroupsToAttributesSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPSyncPluginGroupsToAttributesRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPSyncPluginGroupsToAttributesRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPRoleElementRequest:
      type: object
      properties:
        group_dn:
          type: string
          description: This group must be defined within the scope of the LDAP Group
            Settings
          example: cmk-users
        search_in:
          type: string
          default: this_connection
          description: 'An existing ldap connection. Use ''this_connection'' to select
            the current connection '
          example: this_connection
      required:
      - group_dn
      additionalProperties: false
    LDAPEnableGroupsToRoles:
      type: object
      properties:
        handle_nested:
          type: boolean
          default: false
          description: Once you enable this option, this plug-in will not only handle
            direct group memberships, instead it will also dig into nested groups
            and treat the members of those groups as contact group members as well.
            Please bear in mind that this feature might increase the execution time
            of your LDAP sync
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        admin:
          type: array
          items:
            $ref: '#/components/schemas/LDAPRoleElementRequest'
        agent_registration:
          type: array
          items:
            $ref: '#/components/schemas/LDAPRoleElementRequest'
        guest:
          type: array
          items:
            $ref: '#/components/schemas/LDAPRoleElementRequest'
        user:
          type: array
          items:
            $ref: '#/components/schemas/LDAPRoleElementRequest'
      required:
      - state
      additionalProperties:
        $ref: '#/components/schemas/LDAPRoleElementRequest'
    LDAPGroupsToRolesSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPEnableGroupsToRoles'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPEnableGroupsToRoles'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPSyncPluginsRequest:
      type: object
      properties:
        alias:
          default:
            state: disabled
          description: Enables and populates the alias attribute of the Setup user
            by synchronizing an attribute from the LDAP user account. By default the
            LDAP attribute cn is used.
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        authentication_expiration:
          default:
            state: disabled
          description: This plug-in when enabled fetches all information which is
            needed to check whether or not an already authenticated user should be
            deauthenticated, e.g. because the password has changed in LDAP or the
            account has been locked.
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        disable_notifications:
          default:
            state: disabled
          description: When this option is enabled you will not get any alerts or
            other notifications via email, SMS or similar. This overrides all other
            notification settings and rules, so make sure that you know what you do.
            Moreover you can specify a time range where no notifications are generated.
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        email_address:
          default:
            state: disabled
          description: Synchronizes the email of the LDAP user account into Checkmk
            when enabled
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        mega_menu_icons:
          default:
            state: disabled
          deprecated: true
          description: Deprecated - use `main_menu_icons` instead.
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        main_menu_icons:
          default:
            state: disabled
          description: "When enabled, in the main menus you can select between two\
            \ options: Have a green icon only for the headlines \u2013 the 'topics'\
            \ \u2013 for lean design. Or have a colored icon for every entry so that\
            \ over time you can zoom in more quickly to a specific entry."
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        navigation_bar_icons:
          default:
            state: disabled
          description: With this option enabled you can define if icons in the navigation
            bar should show a title or not. This gives you the possibility to save
            some space in the UI.
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        pager:
          default:
            state: disabled
          description: When enabled, this plug-in synchronizes a field of the users
            LDAP account to the pager attribute of the Setup user accounts, which
            is then forwarded to the monitoring core and can be used for notifications.
            By default the LDAP attribute mobile is used.
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        show_mode:
          default:
            state: disabled
          description: In some places like e.g. the main menu Checkmk divides features,
            filters, input fields etc. in two categories, showing more or less entries.
            With this option you can set a default mode for unvisited menus. Alternatively,
            you can enforce to show more, so that the round button with the three
            dots is not shown at all.
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        ui_sidebar_position:
          default:
            state: disabled
          description: The sidebar position
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        start_url:
          default:
            state: disabled
          description: The start URL to display in main frame.
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        temperature_unit:
          default:
            state: disabled
          description: Set the temperature unit used for graphs and perfometers. The
            default unit can be configured here. Note that this setting does not affect
            the temperature unit used in service outputs, which can however be configured
            in this ruleset.
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        ui_theme:
          default:
            state: disabled
          description: The user interface theme
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        visibility_of_hosts_or_services:
          default:
            state: disabled
          description: When this option is checked, the status GUI will only display
            hosts and services that the user is a contact for - even they have the
            permission for seeing all objects.
          $ref: '#/components/schemas/LDAPSyncPluginAttrubuteSelector'
        contact_group_membership:
          default:
            state: disabled
          description: This plug-in allows you to synchronize group memberships of
            the LDAP user account into the contact groups of the Checkmk user account.
            This allows you to use the group based permissions of your LDAP directory
            in Checkmk.
          $ref: '#/components/schemas/LDAPSyncPluginGroupsToContactGroupsSelector'
        groups_to_custom_user_attributes:
          default:
            state: disabled
          description: This plug-in allows you to synchronize group memberships of
            the LDAP user account into the custom attributes of the Checkmk user account.
            This allows you to use the group based permissions of your LDAP directory
            in Checkmk.
          $ref: '#/components/schemas/LDAPSyncPluginGroupsToAttributesSelector'
        groups_to_roles:
          default:
            state: disabled
          description: 'Configures the roles of the user depending on its group memberships
            in LDAP. Please note: Additionally the user is assigned to the Default
            Roles. Deactivate them if unwanted.'
          $ref: '#/components/schemas/LDAPGroupsToRolesSelector'
      additionalProperties: false
    LDAPSyncIntervalRequest:
      type: object
      properties:
        days:
          type: integer
          default: 0
          description: The sync interval in days
          example: 5
        hours:
          type: integer
          default: 0
          description: The sync interval in hours
          example: 2
        minutes:
          type: integer
          default: 5
          description: The sync interval in minutes
          example: 30
      additionalProperties: false
    LDAPOtherRequest:
      type: object
      properties:
        sync_interval:
          default:
            days: 0
            hours: 0
            minutes: 5
          description: This option defines the interval of the LDAP synchronization.
            This setting is only used by sites which have the automatic user synchronization
            enabled.
          $ref: '#/components/schemas/LDAPSyncIntervalRequest'
      additionalProperties: false
    LDAPGeneralPropertiesUpdateRequest:
      type: object
      properties:
        description:
          type: string
          default: ''
          description: Add a title or describe this rule
        comment:
          type: string
          default: ''
          description: An optional comment to explain the purpose of this object.
            The comment is only visible in this dialog and can help other users to
            understand the intentions of the configured attributes.
        documentation_url:
          type: string
          default: ''
          description: An optional URL linking documentation or any other page. An
            icon links to the page and opens in a new tab when clicked. You can use
            either global URLs (starting with http://), absolute local URLs (starting
            with /) or relative URLs (relative to check_mk/).
        rule_activation:
          type: string
          default: activated
          description: Selecting 'deactivated' will disable the rule, but it will
            remain in the configuration.
          enum: &id146
          - activated
          - deactivated
        id:
          type: string
          description: An LDAP connection ID string.
      required:
      - id
      additionalProperties: false
    DirectoryTypeManualRequest:
      type: object
      properties:
        type:
          type: string
          description: Select the software the LDAP directory is based on.
          enum: &id145
          - active_directory_manual
          - active_directory_automatic
          - open_ldap
          - 389_directory_server
          example: active_directory_manual
        ldap_server:
          type: string
          description: Set the host address of the LDAP server. Might be an IP address
            or resolvable host name.
          example: your_ldap_server.example.com
        failover_servers:
          type: array
          default: []
          description: When the connection to the first server fails with connect
            specific errors like timeouts or some other network related problems,
            the connect mechanism will try to use this server instead of the server
            configured above. If you use persistent connections (default), the connection
            is being used until the LDAP is not reachable or the local webserver is
            restarted. You may paste a text from your clipboard which contains several
            parts separated by ';' characters into the last input field. The text
            will then be split by these separators and the single parts are added
            into dedicated input fields.
          example:
          - 192.168.5.2
          - 195.65.2.8
          items:
            type: string
      required:
      - ldap_server
      - type
      additionalProperties: false
    DirectoryTypeAutoRequest:
      type: object
      properties:
        type:
          type: string
          description: Select the software the LDAP directory is based on.
          enum: *id145
          example: active_directory_manual
        domain:
          type: string
          description: Configure the DNS domain name of your Active directory domain
            here, Checkmk will then query this domain for it's closest domain controller
            to communicate with.
          example: your_domain.com
      required:
      - domain
      - type
      additionalProperties: false
    DirectoryTypeSelectorRequest:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/DirectoryTypeManualRequest'
      - $ref: '#/components/schemas/DirectoryTypeAutoRequest'
      - $ref: '#/components/schemas/DirectoryTypeManualRequest'
      - $ref: '#/components/schemas/DirectoryTypeManualRequest'
      discriminator:
        propertyName: type
        mapping:
          active_directory_manual: '#/components/schemas/DirectoryTypeManualRequest'
          active_directory_automatic: '#/components/schemas/DirectoryTypeAutoRequest'
          open_ldap: '#/components/schemas/DirectoryTypeManualRequest'
          389_directory_server: '#/components/schemas/DirectoryTypeManualRequest'
    BindCredentialsStoreIdRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        bind_dn:
          type: string
          default: ''
          description: The distinguished name of the user account which is used to
            bind to the LDAP server. This user account must have read access to the
            LDAP directory.
          example: CN=bind_user,OU=users,DC=example,DC=com
        type:
          default: store
        password_store_id:
          type: string
          description: A password store id from the user account which is used to
            bind to the LDAP server. This user account must have read access to the
            LDAP directory.
          example: your_password_store_id
      required:
      - password_store_id
      - state
      - type
      additionalProperties: false
    BindCredentialsExplicitPasswordRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        bind_dn:
          type: string
          default: ''
          description: The distinguished name of the user account which is used to
            bind to the LDAP server. This user account must have read access to the
            LDAP directory.
          example: CN=bind_user,OU=users,DC=example,DC=com
        type:
          default: explicit
        explicit_password:
          type: string
          description: An explicit password of the user account which is used to bind
            to the LDAP server. This user account must have read access to the LDAP
            directory.
          example: your_password
      required:
      - explicit_password
      - state
      - type
      additionalProperties: false
    BindCredentialsPasswordTypeSelectorRequest:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/BindCredentialsStoreIdRequest'
      - $ref: '#/components/schemas/BindCredentialsExplicitPasswordRequest'
      discriminator:
        propertyName: type
        mapping:
          store: '#/components/schemas/BindCredentialsStoreIdRequest'
          explicit: '#/components/schemas/BindCredentialsExplicitPasswordRequest'
    BindCredentialsSelectorRequest:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/BindCredentialsPasswordTypeSelectorRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/BindCredentialsPasswordTypeSelectorRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPTCPPortRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        port:
          type: integer
          default: 389
          description: This variable allows you to specify the TCP port to be used
            to connect to the LDAP server.
          example: 389
      required:
      - state
      additionalProperties: false
    LDAPTCPPortSelectorRequest:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPTCPPortRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPTCPPortRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPConnectTimeoutRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        seconds:
          type: number
          default: 2.0
          description: Timeout for the initial connection to the LDAP server in seconds.
          example: 2.0
      required:
      - state
      additionalProperties: false
    LDAPConnectTimeoutSelectorRequest:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPConnectTimeoutRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPConnectTimeoutRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPVersionRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        version:
          type: integer
          default: 3
          description: The selected LDAP version the LDAP server is serving. Most
            modern servers use LDAP version 3.
          enum:
          - 2
          - 3
          example: 3
      required:
      - state
      additionalProperties: false
    LDAPVersionSelectorRequest:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPVersionRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPVersionRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPPageSizeRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        size:
          type: integer
          default: 1000
          description: LDAP searches can be performed in paginated mode, for example
            to improve the performance. This enables pagination and configures the
            size of the pages.
          example: 1000
      required:
      - state
      additionalProperties: false
    LDAPPageSizeSelectorRequest:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPPageSizeRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPPageSizeRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPResponseTimeoutRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        seconds:
          type: integer
          default: 5
          description: Timeout for the initial connection to the LDAP server in seconds.
          example: 5
      required:
      - state
      additionalProperties: false
    LDAPResponseTimeoutSelectorRequest:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPResponseTimeoutRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPResponseTimeoutRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPConnectionSuffixUpdateRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        suffix:
          type: string
          description: The LDAP connection suffix can be used to distinguish equal
            named objects (name conflicts), for example user accounts, from different
            LDAP connections.
          example: suffix_example
      required:
      - state
      - suffix
      additionalProperties: false
    LDAPConnectionSuffixUpdateSelectorRequest:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPConnectionSuffixUpdateRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPConnectionSuffixUpdateRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPConnectionUpdateRequest:
      type: object
      properties:
        directory_type:
          description: The credentials to be used to connect to the LDAP server. The
            used account must not be allowed to do any changes in the directory the
            whole connection is read only. In some environment an anonymous connect/bind
            is allowed, in this case you don't have to configure anything here.It
            must be possible to list all needed user and group objects from the directory.
          example: &id147
            type: active_directory_manual
            ldap_server: your_ldap_server.example.com
            failover_servers:
            - 192.168.5.2
            - 195.65.2.8
          $ref: '#/components/schemas/DirectoryTypeSelectorRequest'
        bind_credentials:
          default:
            state: disabled
          description: The credentials used to connect to the LDAP server.
          example: &id148
            state: enabled
            bind_dn: CN=bind_user,OU=users,DC=example,DC=com
            password_store_id: pw_store_id
          $ref: '#/components/schemas/BindCredentialsSelectorRequest'
        tcp_port:
          default:
            state: disabled
          description: The TCP port to be used to connect to the LDAP server.
          example: &id149
            state: enabled
            port: 389
          $ref: '#/components/schemas/LDAPTCPPortSelectorRequest'
        ssl_encryption:
          type: string
          default: disable_ssl
          description: Connect to the LDAP server with a SSL encrypted connection.
            The trusted certificates authorities configured in Checkmk will be used
            to validate the certificate provided by the LDAP server.
          enum: &id150
          - enable_ssl
          - disable_ssl
          example: enable_ssl
        connect_timeout:
          default:
            state: disabled
          description: If the connection timeout is set and its value.
          example: &id151
            state: enabled
            seconds: 2.0
          $ref: '#/components/schemas/LDAPConnectTimeoutSelectorRequest'
        ldap_version:
          default:
            state: disabled
          description: If the ldap version is set and the version it's set to.
          example: &id152
            state: enabled
            version: 3
          $ref: '#/components/schemas/LDAPVersionSelectorRequest'
        page_size:
          default:
            state: disabled
          description: If the page size is enabled and its value.
          example: &id153
            state: enabled
            size: 1000
          $ref: '#/components/schemas/LDAPPageSizeSelectorRequest'
        response_timeout:
          default:
            state: disabled
          description: Enable the response timeout and define its value.
          example: &id154
            state: enabled
            seconds: 5
          $ref: '#/components/schemas/LDAPResponseTimeoutSelectorRequest'
        connection_suffix:
          default:
            state: disabled
          description: If the connection suffix is enabled and what its set to.
          example:
            state: enabled
            suffix: suffix_example
          $ref: '#/components/schemas/LDAPConnectionSuffixUpdateSelectorRequest'
      required:
      - directory_type
      additionalProperties: false
    LDAPConnectionConfigUpdateRequest:
      type: object
      properties:
        users:
          default:
            user_base_dn: ''
            search_scope: search_only_base_dn_entry
            search_filter:
              state: disabled
            filter_group:
              state: disabled
            user_id_attribute:
              state: disabled
            user_id_case: dont_convert_to_lowercase
            umlauts_in_user_ids: keep_umlauts
            create_users: on_login
          description: The LDAP user configuration
          example: &id155
            user_base_dn: ou=OrgUnit,dc=domaincomp,dc=de
            search_scope: search_only_base_dn_entry
            search_filter:
              state: enabled
              filter: (&(objectclass=user)(objectcategory=person))
            filter_group:
              state: enabled
              filter: filtergroupexample
            user_id_attribute:
              state: enabled
              attribute: userattributeexample
            user_id_case: convert_to_lowercase
            umlauts_in_user_ids: keep_umlauts
            create_users: on_login
          $ref: '#/components/schemas/LDAPUsersRequest'
        groups:
          default:
            group_base_dn: ''
            search_scope: search_whole_subtree
            search_filter:
              state: disabled
            member_attribute:
              state: disabled
          description: The LDAP group configuration
          example: &id156
            group_base_dn: ou=OrgUnit,dc=domaincomp,dc=de
            search_scope: search_whole_subtree
            search_filter:
              state: enabled
              filter: (objectclass=group)
            member_attribute:
              state: enabled
              attribute: member
          $ref: '#/components/schemas/LDAPGroupsRequest'
        sync_plugins:
          default: {}
          description: The LDAP sync plug-ins configuration
          example: &id157 {}
          $ref: '#/components/schemas/LDAPSyncPluginsRequest'
        other:
          default:
            sync_interval:
              days: 0
              hours: 0
              minutes: 5
          description: Other config options for the LDAP connection.
          example: &id158
            sync_interval:
              days: 0
              hours: 0
              minutes: 30
          $ref: '#/components/schemas/LDAPOtherRequest'
        general_properties:
          description: General properties of an LDAP connection.
          example: &id159
            id: ldap_1
            description: 1st ldap connection
            comment: test_comment
            documentation_url: https://checkmk.com/doc/ldap_connections
            rule_activation: activated
          $ref: '#/components/schemas/LDAPGeneralPropertiesUpdateRequest'
        ldap_connection:
          description: The LDAP connection configuration
          example: &id160
            directory_type:
              type: active_directory_manual
              ldap_server: 123.31.12.34
            bind_credentials:
              state: enabled
              type: explicit
              bind_dn: cn=commonname,ou=OrgUnit,dc=domaincomp,dc=de
              explicit_password: yourpass
            tcp_port:
              state: enabled
              port: 389
            ssl_encryption: enable_ssl
            connect_timeout:
              state: enabled
              seconds: 5.0
            ldap_version:
              state: enabled
              version: 3
            page_size:
              state: enabled
              size: 1000
            response_timeout:
              state: enabled
              seconds: 60
            connection_suffix:
              state: enabled
              suffix: dc=domaincomp,dc=de
          $ref: '#/components/schemas/LDAPConnectionUpdateRequest'
      required:
      - general_properties
      - ldap_connection
      additionalProperties: false
    LDAPGeneralPropertiesCreateRequest:
      type: object
      properties:
        description:
          type: string
          default: ''
          description: Add a title or describe this rule
        comment:
          type: string
          default: ''
          description: An optional comment to explain the purpose of this object.
            The comment is only visible in this dialog and can help other users to
            understand the intentions of the configured attributes.
        documentation_url:
          type: string
          default: ''
          description: An optional URL linking documentation or any other page. An
            icon links to the page and opens in a new tab when clicked. You can use
            either global URLs (starting with http://), absolute local URLs (starting
            with /) or relative URLs (relative to check_mk/).
        rule_activation:
          type: string
          default: activated
          description: Selecting 'deactivated' will disable the rule, but it will
            remain in the configuration.
          enum: *id146
        id:
          type: string
          description: An LDAP connection ID string.
      required:
      - id
      additionalProperties: false
    LDAPConnectionSuffixCreateRequest:
      type: object
      properties:
        state:
          default: enabled
          description: This config parameter is enabled.
          example: enabled
        suffix:
          type: string
          description: The LDAP connection suffix can be used to distinguish equal
            named objects (name conflicts), for example user accounts, from different
            LDAP connections.
          example: suffix_example
      required:
      - state
      - suffix
      additionalProperties: false
    LDAPConnectionSuffixCreateSelectorRequest:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/LDAPConnectionSuffixCreateRequest'
      - $ref: '#/components/schemas/LDAPCheckboxDisabledRequest'
      discriminator:
        propertyName: state
        mapping:
          enabled: '#/components/schemas/LDAPConnectionSuffixCreateRequest'
          disabled: '#/components/schemas/LDAPCheckboxDisabledRequest'
    LDAPConnectionCreateRequest:
      type: object
      properties:
        directory_type:
          description: The credentials to be used to connect to the LDAP server. The
            used account must not be allowed to do any changes in the directory the
            whole connection is read only. In some environment an anonymous connect/bind
            is allowed, in this case you don't have to configure anything here.It
            must be possible to list all needed user and group objects from the directory.
          example: *id147
          $ref: '#/components/schemas/DirectoryTypeSelectorRequest'
        bind_credentials:
          default:
            state: disabled
          description: The credentials used to connect to the LDAP server.
          example: *id148
          $ref: '#/components/schemas/BindCredentialsSelectorRequest'
        tcp_port:
          default:
            state: disabled
          description: The TCP port to be used to connect to the LDAP server.
          example: *id149
          $ref: '#/components/schemas/LDAPTCPPortSelectorRequest'
        ssl_encryption:
          type: string
          default: disable_ssl
          description: Connect to the LDAP server with a SSL encrypted connection.
            The trusted certificates authorities configured in Checkmk will be used
            to validate the certificate provided by the LDAP server.
          enum: *id150
          example: enable_ssl
        connect_timeout:
          default:
            state: disabled
          description: If the connection timeout is set and its value.
          example: *id151
          $ref: '#/components/schemas/LDAPConnectTimeoutSelectorRequest'
        ldap_version:
          default:
            state: disabled
          description: If the ldap version is set and the version it's set to.
          example: *id152
          $ref: '#/components/schemas/LDAPVersionSelectorRequest'
        page_size:
          default:
            state: disabled
          description: If the page size is enabled and its value.
          example: *id153
          $ref: '#/components/schemas/LDAPPageSizeSelectorRequest'
        response_timeout:
          default:
            state: disabled
          description: Enable the response timeout and define its value.
          example: *id154
          $ref: '#/components/schemas/LDAPResponseTimeoutSelectorRequest'
        connection_suffix:
          default:
            state: disabled
          description: If the connection suffix is enabled and what its set to.
          example:
            state: enabled
            suffix: suffix_example
          $ref: '#/components/schemas/LDAPConnectionSuffixCreateSelectorRequest'
      required:
      - directory_type
      additionalProperties: false
    LDAPConnectionConfigCreateRequest:
      type: object
      properties:
        users:
          default:
            user_base_dn: ''
            search_scope: search_only_base_dn_entry
            search_filter:
              state: disabled
            filter_group:
              state: disabled
            user_id_attribute:
              state: disabled
            user_id_case: dont_convert_to_lowercase
            umlauts_in_user_ids: keep_umlauts
            create_users: on_login
          description: The LDAP user configuration
          example: *id155
          $ref: '#/components/schemas/LDAPUsersRequest'
        groups:
          default:
            group_base_dn: ''
            search_scope: search_whole_subtree
            search_filter:
              state: disabled
            member_attribute:
              state: disabled
          description: The LDAP group configuration
          example: *id156
          $ref: '#/components/schemas/LDAPGroupsRequest'
        sync_plugins:
          default: {}
          description: The LDAP sync plug-ins configuration
          example: *id157
          $ref: '#/components/schemas/LDAPSyncPluginsRequest'
        other:
          default:
            sync_interval:
              days: 0
              hours: 0
              minutes: 5
          description: Other config options for the LDAP connection.
          example: *id158
          $ref: '#/components/schemas/LDAPOtherRequest'
        general_properties:
          description: General properties of an LDAP connection.
          example: *id159
          $ref: '#/components/schemas/LDAPGeneralPropertiesCreateRequest'
        ldap_connection:
          description: The LDAP connection configuration
          example: *id160
          $ref: '#/components/schemas/LDAPConnectionCreateRequest'
      required:
      - general_properties
      - ldap_connection
      additionalProperties: false
    VerificationRequest:
      type: object
      properties:
        VERSION:
          type: string
          description: The version of the request
          example: '3.0'
        request_id:
          type: string
          description: The ID of the request
          example: df17e557-0daf-4b78-b9f2-f3550252a8b5
        instance_id:
          type: string
          description: The ID of the instance the request is for
          example: 6b9e78d1-de99-46ef-9644-32ee33a2b489
        created_at:
          type: integer
          description: The creation timestamp
          example: 1690379907
        upload_origin:
          type: string
          description: How the request was uploaded
          example: manual
        raw_reports:
          type: array
          description: The license usage reports
          example:
          - {}
          items:
            type: object
            additionalProperties: {}
      required:
      - VERSION
      - created_at
      - instance_id
      - raw_reports
      - request_id
      - upload_origin
      additionalProperties: false
    Api403CustomError5:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 403
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: You have insufficient permissions for this operation.
        title:
          type: string
          description: A summary of the problem.
          example: Forbidden
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    BaseSettingMode:
      type: object
      properties:
        mode:
          type: string
          description: 'With which mode to perform the license verification: ''online''
            or ''offline''. If ''online'' is chosen, credentials have to be provided'
          enum: &id161
          - offline
          - online
          example: online
      required:
      - mode
      additionalProperties: false
    LicenseCredentials:
      type: object
      properties:
        username:
          type: string
          example: application-account-id
        password:
          type: string
          example: application-account-password
      required:
      - password
      - username
      additionalProperties: false
    OnlineSettingMode:
      type: object
      properties:
        mode:
          type: string
          description: 'With which mode to perform the license verification: ''online''
            or ''offline''. If ''online'' is chosen, credentials have to be provided'
          enum: *id161
          example: online
        credentials:
          description: The credentials to use for online license configuration
          example:
            username: application-account-id
            password: application-account-password
          $ref: '#/components/schemas/LicenseCredentials'
      required:
      - credentials
      - mode
      additionalProperties: false
    LicenceSettingMode:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/BaseSettingMode'
      - $ref: '#/components/schemas/OnlineSettingMode'
      discriminator:
        propertyName: mode
        mapping:
          offline: '#/components/schemas/BaseSettingMode'
          online: '#/components/schemas/OnlineSettingMode'
    LicenseSettings:
      type: object
      properties:
        settings:
          description: 'The settings required for the configuration of licensing settings '
          example:
            mode: online
            credentials:
              username: application-account-id
              password: application-account-password
          $ref: '#/components/schemas/LicenceSettingMode'
      required:
      - settings
      additionalProperties: false
    VerificationResponse:
      type: object
      properties:
        VERSION:
          type: string
          description: The version of the response
          example: '3.0'
        request_id:
          type: string
          description: The ID of the request
          example: df17e557-0daf-4b78-b9f2-f3550252a8b5
        response_id:
          type: string
          description: The ID of the response
          example: 6b9e78d1-de99-46ef-9644-32ee33a2b489
        created_at:
          type: integer
          description: The creation timestamp
          example: 1690379907
        signature:
          type: string
          description: The signature of the response
          example: ''
        certificate:
          type: string
          description: The certificate of the response
          example: '-----BEGIN CERTIFICATE-----...'
        payload:
          type: object
          description: The payload of the response
          example: {}
          additionalProperties: {}
      required:
      - VERSION
      - certificate
      - created_at
      - payload
      - request_id
      - response_id
      - signature
      additionalProperties: false
    Api422CustomError4:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 422
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: Offline verification procedure was not successful
        title:
          type: string
          description: A summary of the problem.
          example: Unprocessable Entity
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api422CustomError5:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 422
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: Online verification procedure was not successful
        title:
          type: string
          description: A summary of the problem.
          example: Unprocessable Entity
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    TimeRange:
      type: object
      properties:
        start:
          type: string
          format: date-time
          description: The approximate time of the first sample.
          example: '2025-10-22 18:03:02.017953'
        end:
          type: string
          format: date-time
          description: The approximate time of the last sample.
          example: '2025-10-22 18:18:02.017970'
      required:
      - end
      - start
      additionalProperties: false
    FilterGraph:
      type: object
      properties:
        time_range:
          description: The time range from which to source the metrics.
          example: &id162
            start: '2025-10-22 18:03:02.018091'
            end: '2025-10-22 18:18:02.018093'
          $ref: '#/components/schemas/TimeRange'
        reduce:
          type: string
          default: average
          description: Specify how to reduce a segment of data points to a single
            data point of the output metric. This can be useful to find spikes in
            your data that would be smoothed out by computing the average.
          enum: &id163
          - min
          - max
          - average
          example: max
        filter:
          type: object
          description: Filter for hosts, services and sites. Entries of the filter
            are combined with logical AND. Depending of the configuration of Checkmk
            you have to specify a certain set of filters, otherwise Checkmk will refuse
            to return a result, as too many metrics would have to be returned. See
            example for commonly used filters.
          example: &id164
            siteopt:
              site: site_name
            host:
              host: host_name
            hostregex:
              host_regex: windows.*
              neg_host_regex: 'on'
            service:
              service: Check_MK
            serviceregex:
              service_regex: .+
            host_labels:
              host_labels_count: '1'
              host_labels_1_vs_count: '1'
              host_labels_1_bool: and
              host_labels_indexof_1: '1'
              host_labels_1_vs_1_bool: and
              host_labels_1_vs_1_vs: cmk/os_family:linux
              host_labels_1_vs_indexof_1: '1'
            opthostgroup:
              opthost_group: check_mk
            optservicegroup:
              optservice_group: APT_Updates
            host_tags:
              host_tag_0_op: is
              host_tag_0_grp: criticality
              host_tag_0_val: test
          additionalProperties: {}
        aggregation:
          type: string
          default: 'off'
          description: A result that contains multiple metrics of the same type can
            be aggregated together. Aggregation is disabled by default.
          enum: &id165
          - 'off'
          - sum
          - average
          - minimum
          - maximum
          example: maximum
        type:
          type: string
          description: Specify whether you want to receive a single metric (via metric_id),
            or a predefined graph containing multiple metrics (via graph_id).
          enum: &id166
          - predefined_graph
          - single_metric
          example: single_metric
        graph_id:
          type: string
          pattern: ^\w[_\-\w\d\.]*$
          description: The ID of the predefined graph. After activating the "Show
            internal IDs" in the "display options" of the Service view, you can see
            the ID of a predefined graph in the title of the graph.
          example: cmk_cpu_time_by_phase
      required:
      - filter
      - graph_id
      - time_range
      - type
      additionalProperties: false
    FilterMetric:
      type: object
      properties:
        time_range:
          description: The time range from which to source the metrics.
          example: *id162
          $ref: '#/components/schemas/TimeRange'
        reduce:
          type: string
          default: average
          description: Specify how to reduce a segment of data points to a single
            data point of the output metric. This can be useful to find spikes in
            your data that would be smoothed out by computing the average.
          enum: *id163
          example: max
        filter:
          type: object
          description: Filter for hosts, services and sites. Entries of the filter
            are combined with logical AND. Depending of the configuration of Checkmk
            you have to specify a certain set of filters, otherwise Checkmk will refuse
            to return a result, as too many metrics would have to be returned. See
            example for commonly used filters.
          example: *id164
          additionalProperties: {}
        aggregation:
          type: string
          default: 'off'
          description: A result that contains multiple metrics of the same type can
            be aggregated together. Aggregation is disabled by default.
          enum: *id165
          example: maximum
        type:
          type: string
          description: Specify whether you want to receive a single metric (via metric_id),
            or a predefined graph containing multiple metrics (via graph_id).
          enum: *id166
          example: single_metric
        metric_id:
          type: string
          pattern: ^\w[_\-\w\d\.]*$
          description: The ID of the single metric.After activating the "Show internal
            IDs" in the "display options" of the Service view, you can see the ID
            of a single metric in the legend of the graph.
          example: cmk_time_agent
      required:
      - filter
      - metric_id
      - time_range
      - type
      additionalProperties: false
    Filter:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/FilterGraph'
      - $ref: '#/components/schemas/FilterMetric'
      discriminator:
        propertyName: type
        mapping:
          predefined_graph: '#/components/schemas/FilterGraph'
          single_metric: '#/components/schemas/FilterMetric'
    Metric:
      type: object
      properties:
        color:
          type: string
          description: The color of the metric as displayed in Checkmk. Color is in
            HTML notation.
          example: '#80ff40'
        data_points:
          type: array
          description: The samples of the metric.
          example:
          - 3752390000.0
          - 3746380000.0
          - 3770930000.0
          - 3773230000.0
          - 3796020000.0
          - 3787010000.0
          - 3777880000.0
          - 3781040000.0
          - 3798920000.0
          - 3805910000.0
          items:
            type: number
        line_type:
          type: string
          description: The line type to use.
          example: area
        title:
          type: string
          description: The title of the graph.
          example: RAM used
      required:
      - data_points
      - line_type
      - title
      additionalProperties: false
    GraphCollection:
      type: object
      properties:
        time_range:
          description: The time range within the samples of the response lie.
          example:
            time_range:
              start: '1970-01-01T00:00:00Z'
              end: '1970-01-01T00:00:30Z'
          $ref: '#/components/schemas/TimeRange'
        step:
          type: integer
          description: The interval between two samples in seconds.
          example: 60
        metrics:
          description: The actual graph data.
          example:
          - color: '#ffffff'
            data_points:
            - 1.0
            - 2.0
            - 3.0
            - 1.0
            line_type: area
            title: RAM used
          type: array
          items:
            $ref: '#/components/schemas/Metric'
      required:
      - metrics
      - step
      - time_range
      additionalProperties: false
    _CustomMetricBackendConfig:
      properties:
        type:
          const: custom
          description: Custom metric backend
          title: Type
          type: string
        address:
          description: The name or IP address of the host running the backend.
          examples:
          - my-clickhouse.example.com
          title: Address
          type: string
        tcp_port:
          description: The port that will be used for TCP traffic.
          examples:
          - 6790
          maximum: 65535
          minimum: 1
          title: Tcp Port
          type: integer
        http_port:
          description: The port that will be used for HTTP(S) traffic.
          examples:
          - 6791
          maximum: 65535
          minimum: 1
          title: Http Port
          type: integer
        username:
          description: The username to connect to the custom ClickHouse instance.
          examples:
          - default
          minLength: 1
          title: Username
          type: string
        password:
          description: The password to connect to the custom ClickHouse instance.
          examples:
          - secret
          minLength: 1
          title: Password
          type: string
      required:
      - type
      - address
      - tcp_port
      - http_port
      - username
      - password
      title: _CustomMetricBackendConfig
      type: object
    _MetricBackendDisabled:
      properties:
        type:
          const: disabled
          description: Metric backend is disabled
          title: Type
          type: string
      required:
      - type
      title: _MetricBackendDisabled
      type: object
    _SiteLocalMetricBackendConfig:
      properties:
        type:
          const: site_local
          description: Site-local metric backend
          title: Type
          type: string
        tcp_port:
          description: The port that will be used for TCP traffic.
          examples:
          - 6790
          maximum: 65535
          minimum: 1
          title: Tcp Port
          type: integer
        http_port:
          description: The port that will be used for HTTP(S) traffic.
          examples:
          - 6791
          maximum: 65535
          minimum: 1
          title: Http Port
          type: integer
      required:
      - type
      title: _SiteLocalMetricBackendConfig
      type: object
    _MetricBackendConfig:
      additionalProperties: false
      properties:
        site_id:
          description: The ID of the site for which the metric backend should be configured.
          examples:
          - prod
          title: Site Id
          type: string
        config:
          anyOf:
          - $ref: '#/components/schemas/_MetricBackendDisabled'
          - $ref: '#/components/schemas/_SiteLocalMetricBackendConfig'
          - $ref: '#/components/schemas/_CustomMetricBackendConfig'
          description: Metric backend configuration.
          examples:
          - type: disabled
          title: Config
      required:
      - site_id
      - config
      title: _MetricBackendConfig
      type: object
    GetGraph:
      type: object
      properties:
        time_range:
          description: The time range from which to source the metrics.
          example: *id162
          $ref: '#/components/schemas/TimeRange'
        reduce:
          type: string
          default: average
          description: Specify how to reduce a segment of data points to a single
            data point of the output metric. This can be useful to find spikes in
            your data that would be smoothed out by computing the average.
          enum: *id163
          example: max
        site:
          type: string
          description: The name of the site. Even though this is optional, specifying
            a site will greatly improve performance in large distributed systems.
          example: heute
        host_name:
          type: string
          description: The host name to use.
          example: my.cool.host
          pattern: ^[-0-9a-zA-Z_.]+\Z
        service_description:
          type: string
          description: The service, whose data to request.
          example: Check_MK
        type:
          type: string
          description: Specify whether you want to receive a single metric (via metric_id),
            or a predefined graph containing multiple metrics (via graph_id).
          enum: *id166
          example: single_metric
        graph_id:
          type: string
          pattern: ^\w[_\-\w\d\.]*$
          description: The ID of the predefined graph. After activating the "Show
            internal IDs" in the "display options" of the Service view, you can see
            the ID of a predefined graph in the title of the graph.
          example: cmk_cpu_time_by_phase
      required:
      - graph_id
      - host_name
      - service_description
      - time_range
      - type
      additionalProperties: false
    GetMetric:
      type: object
      properties:
        time_range:
          description: The time range from which to source the metrics.
          example: *id162
          $ref: '#/components/schemas/TimeRange'
        reduce:
          type: string
          default: average
          description: Specify how to reduce a segment of data points to a single
            data point of the output metric. This can be useful to find spikes in
            your data that would be smoothed out by computing the average.
          enum: *id163
          example: max
        site:
          type: string
          description: The name of the site. Even though this is optional, specifying
            a site will greatly improve performance in large distributed systems.
          example: heute
        host_name:
          type: string
          description: The host name to use.
          example: my.cool.host
          pattern: ^[-0-9a-zA-Z_.]+\Z
        service_description:
          type: string
          description: The service, whose data to request.
          example: Check_MK
        type:
          type: string
          description: Specify whether you want to receive a single metric (via metric_id),
            or a predefined graph containing multiple metrics (via graph_id).
          enum: *id166
          example: single_metric
        metric_id:
          type: string
          pattern: ^\w[_\-\w\d\.]*$
          description: The ID of the single metric.After activating the "Show internal
            IDs" in the "display options" of the Service view, you can see the ID
            of a single metric in the legend of the graph.
          example: cmk_time_agent
      required:
      - host_name
      - metric_id
      - service_description
      - time_range
      - type
      additionalProperties: false
    Get:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/GetGraph'
      - $ref: '#/components/schemas/GetMetric'
      discriminator:
        propertyName: type
        mapping:
          predefined_graph: '#/components/schemas/GetGraph'
          single_metric: '#/components/schemas/GetMetric'
    InstalledVersions:
      type: object
      properties:
        site:
          type: string
          description: The site where this API call was made on.
          example: production
        group:
          type: string
          description: The Apache WSGI application group this call was made on.
          example: de
        rest_api:
          type: object
          description: The REST-API version
          example:
            revision: 1.0.0
          additionalProperties: {}
        versions:
          type: object
          description: Some version numbers
          example:
            checkmk: 1.8.0p1
          additionalProperties: {}
        edition:
          type: string
          description: The Checkmk edition.
          example: raw
        demo:
          type: boolean
          description: Whether this is a demo version or not.
          example: false
      additionalProperties: false
    CheckboxOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: &id167
          - enabled
          - disabled
          example: enabled
      additionalProperties: false
    RulePropertiesAttributes:
      type: object
      properties:
        description:
          type: string
          description: A description or title of this rule.
          example: Notify all contacts of a host/service via HTML email
        comment:
          type: string
          description: An optional comment that may be used to explain the purpose
            of this object.
          example: An example comment
        documentation_url:
          type: string
          description: An optional URL pointing to documentation or any other page.
            This will be displayed as an icon and open a new page when clicked.
          example: http://link/to/documentation
        do_not_apply_this_rule:
          description: Disabled rules are kept in the configuration but are not applied.
          example:
            state: enabled
          $ref: '#/components/schemas/CheckboxOutput'
        allow_users_to_deactivate:
          description: If you set this option then users are allowed to deactivate
            notifications that are created by this rule.
          example:
            state: enabled
          $ref: '#/components/schemas/CheckboxOutput'
      additionalProperties: false
    PluginBase:
      type: object
      properties:
        option:
          type: string
          enum:
          - cancel_previous_notifications
          - create_notification_with_the_following_parameters
          - create_notification_with_custom_parameters
          example: cancel_previous_notifications
        plugin_params:
          type: object
          description: The plug-in name and configuration parameters defined.
          additionalProperties: {}
      additionalProperties: false
    CheckboxWithStrValueOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          type: string
      additionalProperties: false
    NotificationBulkingCommonAttributes:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        time_horizon:
          type: integer
          description: Notifications are kept back for bulking at most for this time
            (seconds)
          example: 60
        max_bulk_size:
          type: integer
          description: At most that many notifications are kept back for bulking.
            A value of 1 essentially turns off notification bulking.
          example: '1000'
        notification_bulks_based_on:
          type: array
          uniqueItems: true
          items:
            type: string
            enum: &id168
            - folder
            - host
            - service
            - sl
            - check_type
            - state
            - ec_contact
            - ec_comment
        notification_bulks_based_on_custom_macros:
          type: array
          description: 'If you enter the names of host/service-custom macros here
            then for each different combination of values of those macros a separate
            bulk will be created. Service macros match first, if no service macro
            is found, the host macros are searched. This can be used in combination
            with the grouping by folder, host etc. Omit any leading underscore. Note:
            If you are using Nagios as a core you need to make sure that the values
            of the required macros are present in the notification context. This is
            done in check_mk_templates.cfg. If you macro is _FOO then you need to
            add the variables NOTIFY_HOST_FOO and NOTIFY_SERVICE_FOO. You may paste
            a text from your clipboard which contains several parts separated by '';''
            characters into the last input field. The text will then be split by these
            separators and the single parts are added into dedicated input fields'
          example: ''
          items:
            type: string
        subject_for_bulk_notifications:
          $ref: '#/components/schemas/CheckboxWithStrValueOutput'
      additionalProperties: false
    BulkOutsideTimePeriodValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          $ref: '#/components/schemas/NotificationBulkingCommonAttributes'
      additionalProperties: false
    NotificationBulking:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        time_horizon:
          type: integer
          description: Notifications are kept back for bulking at most for this time
            (seconds)
          example: 60
        max_bulk_size:
          type: integer
          description: At most that many notifications are kept back for bulking.
            A value of 1 essentially turns off notification bulking.
          example: '1000'
        notification_bulks_based_on:
          type: array
          uniqueItems: true
          items:
            type: string
            enum: *id168
        notification_bulks_based_on_custom_macros:
          type: array
          description: 'If you enter the names of host/service-custom macros here
            then for each different combination of values of those macros a separate
            bulk will be created. Service macros match first, if no service macro
            is found, the host macros are searched. This can be used in combination
            with the grouping by folder, host etc. Omit any leading underscore. Note:
            If you are using Nagios as a core you need to make sure that the values
            of the required macros are present in the notification context. This is
            done in check_mk_templates.cfg. If you macro is _FOO then you need to
            add the variables NOTIFY_HOST_FOO and NOTIFY_SERVICE_FOO. You may paste
            a text from your clipboard which contains several parts separated by '';''
            characters into the last input field. The text will then be split by these
            separators and the single parts are added into dedicated input fields'
          example: ''
          items:
            type: string
        subject_for_bulk_notifications:
          $ref: '#/components/schemas/CheckboxWithStrValueOutput'
        time_period:
          type: string
          description: ''
          example: 24X7
        bulk_outside_timeperiod:
          $ref: '#/components/schemas/BulkOutsideTimePeriodValue'
      additionalProperties: false
    WhenToBulk:
      type: object
      properties:
        when_to_bulk:
          type: string
          description: Bulking can always happen or during a set time period
          enum:
          - always
          - timeperiod
          example: always
        params:
          $ref: '#/components/schemas/NotificationBulking'
      additionalProperties: false
    NotificationBulkingCheckbox:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          $ref: '#/components/schemas/WhenToBulk'
      additionalProperties: false
    NotificationPlugin:
      type: object
      properties:
        notify_plugin:
          $ref: '#/components/schemas/PluginBase'
        notification_bulking:
          $ref: '#/components/schemas/NotificationBulkingCheckbox'
      additionalProperties: false
    CheckboxWithListOfStrOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          type: array
          items:
            type: string
      additionalProperties: false
    CustomMacroOutput:
      type: object
      properties:
        macro_name:
          type: string
          description: The name of the macro
          example: macro_1
        match_regex:
          type: string
          description: The text entered here is handled as a regular expression pattern
          example: '[A-Z]+'
      additionalProperties: false
    MatchCustomMacrosOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          type: array
          items:
            $ref: '#/components/schemas/CustomMacroOutput'
      additionalProperties: false
    ContactSelectionAttributes:
      type: object
      properties:
        all_contacts_of_the_notified_object:
          $ref: '#/components/schemas/CheckboxOutput'
        all_users:
          $ref: '#/components/schemas/CheckboxOutput'
        all_users_with_an_email_address:
          $ref: '#/components/schemas/CheckboxOutput'
        the_following_users:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        members_of_contact_groups:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        explicit_email_addresses:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        restrict_by_custom_macros:
          $ref: '#/components/schemas/MatchCustomMacrosOutput'
        restrict_by_contact_groups:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
      additionalProperties: false
    CheckboxWithFolderStrOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          type: string
          description: 'This condition makes the rule match only hosts that are managed
            via WATO and that are contained in this folder - either directly or in
            one of its subfolders.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
      additionalProperties: false
    AuxTagOutput:
      type: object
      properties:
        tag_type:
          default: aux_tag
          description: Identifies the type of host tag.
        operator:
          type: string
          description: This describes the matching action
          enum:
          - is_not_set
          - is_set
        tag_id:
          type:
          - string
          - 'null'
          description: Tag groups tag ids are available via the host tag group endpoint.
          example: checkmk-agent
          pattern: ^[-0-9a-zA-Z_]+\Z
      additionalProperties: false
    TagGroupNoneOfOrOneOfOutput:
      type: object
      properties:
        tag_type:
          type: string
          description: Identifies the type of host tag.
          enum: &id169
          - aux_tag
          - tag_group
          example: tag_group
        tag_group_id:
          type: string
          description: If the tag_type is 'tag_group', the id of that group is shown
            here.
          example: agent
        operator:
          type: string
          enum:
          - one_of
          - none_of
        tag_ids:
          type: array
          example:
          - ip-v4-only
          - ip-v6-only
          items:
            type:
            - string
            - 'null'
            description: Tag groups tag ids are available via the host tag group endpoint.
            example: checkmk-agent
            pattern: ^[-0-9a-zA-Z_]+\Z
      additionalProperties: false
    TagGroupIsNotOrIsOutput:
      type: object
      properties:
        tag_type:
          type: string
          description: Identifies the type of host tag.
          enum: *id169
          example: tag_group
        tag_group_id:
          type: string
          description: If the tag_type is 'tag_group', the id of that group is shown
            here.
          example: agent
        operator:
          type: string
          enum:
          - is
          - is_not
        tag_id:
          type:
          - string
          - 'null'
          description: Tag groups tag ids are available via the host tag group endpoint.
          example: checkmk-agent
          pattern: ^[-0-9a-zA-Z_]+\Z
      additionalProperties: false
    TagGroupSelectorOutput:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/TagGroupNoneOfOrOneOfOutput'
      - $ref: '#/components/schemas/TagGroupNoneOfOrOneOfOutput'
      - $ref: '#/components/schemas/TagGroupIsNotOrIsOutput'
      - $ref: '#/components/schemas/TagGroupIsNotOrIsOutput'
      discriminator:
        propertyName: operator
        mapping:
          one_of: '#/components/schemas/TagGroupNoneOfOrOneOfOutput'
          none_of: '#/components/schemas/TagGroupNoneOfOrOneOfOutput'
          is_not: '#/components/schemas/TagGroupIsNotOrIsOutput'
          is: '#/components/schemas/TagGroupIsNotOrIsOutput'
    TagTypeSelectorOutput:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/AuxTagOutput'
      - $ref: '#/components/schemas/TagGroupSelectorOutput'
      discriminator:
        propertyName: tag_type
        mapping:
          aux_tag: '#/components/schemas/AuxTagOutput'
          tag_group: '#/components/schemas/TagGroupSelectorOutput'
    CheckboxMatchHostTagsOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          type: array
          description: A list of tag groups or aux tags with conditions
          example:
          - tag_type: tag_group
            tag_group_id: agent
            operator: is
            tag_id: checkmk-agent
          - tag_type: aux_tag
            operator: is_set
            tag_id: snmp
          items:
            $ref: '#/components/schemas/TagTypeSelectorOutput'
      additionalProperties: false
    CheckboxLabelOutput:
      type: object
      properties:
        key:
          type: string
          example: cmk/os_family
        value:
          type: string
          example: linux
      additionalProperties: false
    CheckboxWithListOfLabelsOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          type: array
          description: A list of key, value label pairs
          items:
            $ref: '#/components/schemas/CheckboxLabelOutput'
      additionalProperties: false
    ServiceGroupsRegexOutput:
      type: object
      properties:
        match_type:
          type: string
          enum:
          - match_id
          - match_alias
          example: match_alias
        regex_list:
          type: array
          description: The text entered in this list is handled as a regular expression
            pattern
          example:
          - '[A-Z]+123'
          - '[A-Z]+456'
          uniqueItems: true
          items:
            type: string
      additionalProperties: false
    CheckboxWithListOfServiceGroupsRegexOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          description: The service group alias must not match one of the following
            regular expressions. For host events this condition is simply ignored.
            The text entered here is handled as a regular expression pattern. The
            pattern is applied as infix search. Add a leading ^ to make it match from
            the beginning and/or a tailing $ to match till the end of the text. The
            match is performed case sensitive. Read more about regular expression
            matching in Checkmk in our user guide. You may paste a text from your
            clipboard which contains several parts separated by ';' characters into
            the last input field. The text will then be split by these separators
            and the single parts are added into dedicated input field
          $ref: '#/components/schemas/ServiceGroupsRegexOutput'
      additionalProperties: false
    FromToServiceLevelsOutput:
      type: object
      properties:
        from_level:
          type: integer
          description: A service level represented as an integer
          example: 10
        to_level:
          type: integer
          description: A service level represented as an integer
          example: 10
      required:
      - from_level
      - to_level
      additionalProperties: false
    CheckboxWithFromToServiceLevelsOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          description: Host or service must be in the following service level to get
            notification
          $ref: '#/components/schemas/FromToServiceLevelsOutput'
      additionalProperties: false
    HostEventTypeOutput:
      type: object
      properties:
        start_or_end_of_flapping_state:
          type: boolean
          example: true
        start_or_end_of_scheduled_downtime:
          type: boolean
          example: true
        acknowledgement_of_problem:
          type: boolean
          example: false
        alert_handler_execution_successful:
          type: boolean
          example: true
        alert_handler_execution_failed:
          type: boolean
          example: false
        up_down:
          type: boolean
          example: true
        up_unreachable:
          type: boolean
          example: false
        down_up:
          type: boolean
          example: true
        down_unreachable:
          type: boolean
          example: false
        unreachable_down:
          type: boolean
          example: false
        unreachable_up:
          type: boolean
          example: false
        any_up:
          type: boolean
          example: false
        any_down:
          type: boolean
          example: true
        any_unreachable:
          type: boolean
          example: true
      additionalProperties: false
    CheckboxHostEventTypeOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          description: 'Select the host event types and transitions this rule should
            handle. Note: If you activate this option and do not also specify service
            event types then this rule will never hold for service notifications!
            Note: You can only match on event types created by the core.'
          $ref: '#/components/schemas/HostEventTypeOutput'
      additionalProperties: false
    ServiceEventTypeOutput:
      type: object
      properties:
        start_or_end_of_flapping_state:
          type: boolean
          example: true
        start_or_end_of_scheduled_downtime:
          type: boolean
          example: true
        acknowledgement_of_problem:
          type: boolean
          example: false
        alert_handler_execution_successful:
          type: boolean
          example: true
        alert_handler_execution_failed:
          type: boolean
          example: false
        ok_warn:
          type: boolean
          example: true
        ok_ok:
          type: boolean
          example: true
        ok_crit:
          type: boolean
          example: false
        ok_unknown:
          type: boolean
          example: true
        warn_ok:
          type: boolean
          example: false
        warn_crit:
          type: boolean
          example: false
        warn_unknown:
          type: boolean
          example: false
        crit_ok:
          type: boolean
          example: true
        crit_warn:
          type: boolean
          example: true
        crit_unknown:
          type: boolean
          example: true
        unknown_ok:
          type: boolean
          example: true
        unknown_warn:
          type: boolean
          example: true
        unknown_crit:
          type: boolean
          example: true
        any_ok:
          type: boolean
          example: false
        any_warn:
          type: boolean
          example: false
        any_crit:
          type: boolean
          example: true
        any_unknown:
          type: boolean
          example: false
      additionalProperties: false
    CheckboxServiceEventTypeOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          description: 'Select the service event types and transitions this rule should
            handle. Note: If you activate this option and do not also specify host
            event types then this rule will never hold for host notifications! Note:
            You can only match on event types created by the core'
          $ref: '#/components/schemas/ServiceEventTypeOutput'
      additionalProperties: false
    FromToNotificationNumbersOutput:
      type: object
      properties:
        beginning_from:
          type: integer
          description: Let through notifications counting from this number. The first
            notification always has the number 1
          example: 1
        up_to:
          type: integer
          description: Let through notifications counting upto this number
          example: 999999
      additionalProperties: false
    CheckboxRestrictNotificationNumbersOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          $ref: '#/components/schemas/FromToNotificationNumbersOutput'
      additionalProperties: false
    ThrottlePeriodicNotificationsOutput:
      type: object
      properties:
        beginning_from:
          type: integer
          description: Beginning notification number
          example: 10
        send_every_nth_notification:
          type: integer
          description: The rate then you will receive the notification 1 through 10
            and then 15, 20, 25... and so on
          example: 5
      additionalProperties: false
    CheckboxThrottlePeriodicNotifcationsOuput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          $ref: '#/components/schemas/ThrottlePeriodicNotificationsOutput'
      additionalProperties: false
    SysLogToFromPrioritiesOutput:
      type: object
      properties:
        from_priority:
          type: string
          description: ''
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          example: warning
        to_priority:
          type: string
          description: ''
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          example: warning
      additionalProperties: false
    CheckboxWithSysLogPriorityOutput:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          $ref: '#/components/schemas/SysLogToFromPrioritiesOutput'
      additionalProperties: false
    EventConsoleAlertAttrsResponse:
      type: object
      properties:
        match_rule_ids:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        match_syslog_priority:
          $ref: '#/components/schemas/CheckboxWithSysLogPriorityOutput'
        match_syslog_facility:
          $ref: '#/components/schemas/CheckboxWithStrValueOutput'
        match_event_comment:
          $ref: '#/components/schemas/CheckboxWithStrValueOutput'
      additionalProperties: false
    EventConsoleAlertsResponse:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        match_type:
          type: string
          description: ''
          enum:
          - match_only_event_console_alerts
          - do_not_match_event_console_alerts
          example: match_only_event_console_events
        values:
          $ref: '#/components/schemas/EventConsoleAlertAttrsResponse'
      additionalProperties: false
    MatchEventConsoleAlertsResponse:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id167
          example: enabled
        value:
          $ref: '#/components/schemas/EventConsoleAlertsResponse'
      additionalProperties: false
    ConditionsAttributes:
      type: object
      properties:
        match_sites:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        match_folder:
          $ref: '#/components/schemas/CheckboxWithFolderStrOutput'
        match_host_tags:
          $ref: '#/components/schemas/CheckboxMatchHostTagsOutput'
        match_host_labels:
          $ref: '#/components/schemas/CheckboxWithListOfLabelsOutput'
        match_host_groups:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        match_hosts:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        match_exclude_hosts:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        match_service_labels:
          $ref: '#/components/schemas/CheckboxWithListOfLabelsOutput'
        match_service_groups:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        match_exclude_service_groups:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        match_service_groups_regex:
          $ref: '#/components/schemas/CheckboxWithListOfServiceGroupsRegexOutput'
        match_exclude_service_groups_regex:
          $ref: '#/components/schemas/CheckboxWithListOfServiceGroupsRegexOutput'
        match_services:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        match_exclude_services:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        match_check_types:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        match_plugin_output:
          $ref: '#/components/schemas/CheckboxWithStrValueOutput'
        match_contact_groups:
          $ref: '#/components/schemas/CheckboxWithListOfStrOutput'
        match_service_levels:
          $ref: '#/components/schemas/CheckboxWithFromToServiceLevelsOutput'
        match_only_during_time_period:
          $ref: '#/components/schemas/CheckboxWithStrValueOutput'
        match_host_event_type:
          $ref: '#/components/schemas/CheckboxHostEventTypeOutput'
        match_service_event_type:
          $ref: '#/components/schemas/CheckboxServiceEventTypeOutput'
        restrict_to_notification_numbers:
          $ref: '#/components/schemas/CheckboxRestrictNotificationNumbersOutput'
        throttle_periodic_notifications:
          $ref: '#/components/schemas/CheckboxThrottlePeriodicNotifcationsOuput'
        match_notification_comment:
          $ref: '#/components/schemas/CheckboxWithStrValueOutput'
        event_console_alerts:
          $ref: '#/components/schemas/MatchEventConsoleAlertsResponse'
      additionalProperties: false
    NotificationRuleAttributes:
      type: object
      properties:
        rule_properties:
          $ref: '#/components/schemas/RulePropertiesAttributes'
        notification_method:
          $ref: '#/components/schemas/NotificationPlugin'
        contact_selection:
          $ref: '#/components/schemas/ContactSelectionAttributes'
        conditions:
          $ref: '#/components/schemas/ConditionsAttributes'
      additionalProperties: false
    NotificationRuleConfig:
      type: object
      properties:
        rule_config:
          $ref: '#/components/schemas/NotificationRuleAttributes'
      additionalProperties: false
    NotificationRuleResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: rule_notifications
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The configuration attributes of a notification rule.
          example:
            rule_config:
              rule_properties:
                description: A description or title of this rule.
                comment: A example comment.
                documentation_url: http://link/to/documentation
                do_not_apply_this_rule:
                  state: disabled
                allow_users_to_deactivate:
                  state: enabled
              notification_method:
                notify_plugin:
                  option: create_notification_with_the_following_parameters
                  plugin_params:
                    plugin_name: mail
                    from_details:
                      state: disabled
                    reply_to:
                      state: disabled
                    subject_for_host_notifications:
                      state: disabled
                    subject_for_service_notifications:
                      state: disabled
                    info_to_be_displayed_in_the_email_body:
                      state: disabled
                    insert_html_section_between_body_and_table:
                      state: disabled
                    url_prefix_for_links_to_checkmk:
                      state: disabled
                    sort_order_for_bulk_notifications:
                      state: disabled
                    send_separate_notification_to_every_recipient:
                      state: disabled
                    enable_sync_smtp:
                      state: disabled
                    display_graphs_among_each_other:
                      state: disabled
                    graphs_per_notification:
                      state: disabled
                    bulk_notifications_with_graphs:
                      state: disabled
                notification_bulking:
                  state: disabled
              contact_selection:
                all_contacts_of_the_notified_object:
                  state: disabled
                all_users:
                  state: disabled
                all_users_with_an_email_address:
                  state: disabled
                the_following_users:
                  state: disabled
                members_of_contact_groups:
                  state: disabled
                explicit_email_addresses:
                  state: disabled
                restrict_by_custom_macros:
                  state: disabled
                restrict_by_contact_groups:
                  state: disabled
              conditions:
                match_sites:
                  state: disabled
                match_folder:
                  state: disabled
                match_host_tags:
                  state: disabled
                match_host_labels:
                  state: disabled
                match_host_groups:
                  state: disabled
                match_hosts:
                  state: disabled
                match_exclude_hosts:
                  state: disabled
                match_service_labels:
                  state: disabled
                match_service_groups:
                  state: disabled
                match_exclude_service_groups:
                  state: disabled
                match_service_groups_regex:
                  state: disabled
                match_exclude_service_groups_regex:
                  state: disabled
                match_services:
                  state: disabled
                match_exclude_services:
                  state: disabled
                match_check_types:
                  state: disabled
                match_plugin_output:
                  state: disabled
                match_contact_groups:
                  state: disabled
                match_service_levels:
                  state: disabled
                match_only_during_time_period:
                  state: disabled
                match_host_event_type:
                  state: disabled
                match_service_event_type:
                  state: disabled
                restrict_to_notification_numbers:
                  state: disabled
                throttle_periodic_notifications:
                  state: disabled
                match_notification_comment:
                  state: disabled
                event_console_alerts:
                  state: disabled
          $ref: '#/components/schemas/NotificationRuleConfig'
      required:
      - links
      additionalProperties: false
    NotificationRuleResponseCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: rule_notifications
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of notification rule objects.
          example:
          - links: []
            domainType: rule_notifications
            id: '1'
            title: Rule Description
            members: {}
            extensions:
              rule_config:
                rule_properties:
                  description: A description or title of this rule.
                  comment: A example comment.
                  documentation_url: http://link/to/documentation
                  do_not_apply_this_rule:
                    state: disabled
                  allow_users_to_deactivate:
                    state: enabled
                notification_method:
                  notify_plugin:
                    option: create_notification_with_the_following_parameters
                    plugin_params:
                      plugin_name: mail
                      from_details:
                        state: disabled
                      reply_to:
                        state: disabled
                      subject_for_host_notifications:
                        state: disabled
                      subject_for_service_notifications:
                        state: disabled
                      info_to_be_displayed_in_the_email_body:
                        state: disabled
                      insert_html_section_between_body_and_table:
                        state: disabled
                      url_prefix_for_links_to_checkmk:
                        state: disabled
                      sort_order_for_bulk_notifications:
                        state: disabled
                      send_separate_notification_to_every_recipient:
                        state: disabled
                      enable_sync_smtp:
                        state: disabled
                      display_graphs_among_each_other:
                        state: disabled
                      graphs_per_notification:
                        state: disabled
                      bulk_notifications_with_graphs:
                        state: disabled
                  notification_bulking:
                    state: disabled
                contact_selection:
                  all_contacts_of_the_notified_object:
                    state: disabled
                  all_users:
                    state: disabled
                  all_users_with_an_email_address:
                    state: disabled
                  the_following_users:
                    state: disabled
                  members_of_contact_groups:
                    state: disabled
                  explicit_email_addresses:
                    state: disabled
                  restrict_by_custom_macros:
                    state: disabled
                  restrict_by_contact_groups:
                    state: disabled
                conditions:
                  match_sites:
                    state: disabled
                  match_folder:
                    state: disabled
                  match_host_tags:
                    state: disabled
                  match_host_labels:
                    state: disabled
                  match_host_groups:
                    state: disabled
                  match_hosts:
                    state: disabled
                  match_exclude_hosts:
                    state: disabled
                  match_service_labels:
                    state: disabled
                  match_service_groups:
                    state: disabled
                  match_exclude_service_groups:
                    state: disabled
                  match_service_groups_regex:
                    state: disabled
                  match_exclude_service_groups_regex:
                    state: disabled
                  match_services:
                    state: disabled
                  match_exclude_services:
                    state: disabled
                  match_check_types:
                    state: disabled
                  match_plugin_output:
                    state: disabled
                  match_contact_groups:
                    state: disabled
                  match_service_levels:
                    state: disabled
                  match_only_during_time_period:
                    state: disabled
                  match_host_event_type:
                    state: disabled
                  match_service_event_type:
                    state: disabled
                  restrict_to_notification_numbers:
                    state: disabled
                  throttle_periodic_notifications:
                    state: disabled
                  match_notification_comment:
                    state: disabled
                  event_console_alerts:
                    state: disabled
          items:
            $ref: '#/components/schemas/NotificationRuleResponse'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    Checkbox:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: &id170
          - enabled
          - disabled
          example: enabled
      required:
      - state
      additionalProperties: false
    RuleProperties:
      type: object
      properties:
        description:
          type: string
          description: A description or title of this rule.
          example: Notify all contacts of a host/service via HTML email
        comment:
          type: string
          description: An optional comment that may be used to explain the purpose
            of this object.
          example: An example comment
        documentation_url:
          type: string
          description: An optional URL pointing to documentation or any other page.
            This will be displayed as an icon and open a new page when clicked.
          example: http://link/to/documentation
        do_not_apply_this_rule:
          description: Disabled rules are kept in the configuration but are not applied.
          example:
            state: enabled
          $ref: '#/components/schemas/Checkbox'
        allow_users_to_deactivate:
          description: If you set this option then users are allowed to deactivate
            notifications that are created by this rule.
          example:
            state: enabled
          $ref: '#/components/schemas/Checkbox'
      required:
      - allow_users_to_deactivate
      - comment
      - description
      - do_not_apply_this_rule
      - documentation_url
      additionalProperties: false
    PluginNameBuiltInOrCustom:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          example: mail
      required:
      - plugin_name
      additionalProperties: false
    PluginWithoutParams:
      type: object
      properties:
        option:
          default: cancel_previous_notifications
          description: Cancel previous notifications
          example: cancel_previous_notifications
        plugin_params:
          $ref: '#/components/schemas/PluginNameBuiltInOrCustom'
      required:
      - option
      - plugin_params
      additionalProperties: false
    EmailAndDisplayName:
      type: object
      properties:
        address:
          type: string
          description: ''
          example: mail@example.com
        display_name:
          type: string
          description: ''
          example: ''
      additionalProperties: false
    FromEmailAndNameCheckbox:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          description: The email address and visible name used in the From header
            of notifications messages. If no email address is specified the default
            address is OMD_SITE@FQDN is used. If the environment variable OMD_SITE
            is not set it defaults to checkmk
          $ref: '#/components/schemas/EmailAndDisplayName'
      required:
      - state
      additionalProperties: false
    FromDetailsOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/FromEmailAndNameCheckbox'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/FromEmailAndNameCheckbox'
    ToEmailAndNameCheckbox:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          description: The email address and visible name used in the Reply-To header
            of notifications messages
          $ref: '#/components/schemas/EmailAndDisplayName'
      required:
      - state
      additionalProperties: false
    ReplyToOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/ToEmailAndNameCheckbox'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/ToEmailAndNameCheckbox'
    SubjectForHostNotificationsCheckbox:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: Here you are allowed to use all macros that are defined in
            the notification context.
          example: 'Check_MK: $HOSTNAME$ - $EVENT_TXT$'
      required:
      - state
      additionalProperties: false
    SubjectHostOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/SubjectForHostNotificationsCheckbox'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/SubjectForHostNotificationsCheckbox'
    SubjectForServiceNotificationsCheckbox:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: Here you are allowed to use all macros that are defined in
            the notification context.
          example: 'Check_MK: $HOSTNAME$/$SERVICEDESC$ $EVENT_TXT$'
      required:
      - state
      additionalProperties: false
    SubjectServiceOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/SubjectForServiceNotificationsCheckbox'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/SubjectForServiceNotificationsCheckbox'
    CheckboxSortOrderValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: With this option you can specify, whether the oldest (default)
            or the newest notification should get shown at the top of the notification
            mail
          enum:
          - oldest_first
          - newest_first
          example: oldest_first
      required:
      - state
      - value
      additionalProperties: false
    SortOrderOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxSortOrderValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxSortOrderValue'
    CheckboxWithStrValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
      required:
      - state
      - value
      additionalProperties: false
    StrValueOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithStrValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithStrValue'
    AsciiMailPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: &id172
          - cisco_webex_teams
          - mkeventd
          - asciimail
          - mail
          - msteams
          - ilert
          - jira_issues
          - opsgenie_issues
          - pagerduty
          - pushover
          - servicenow
          - signl4
          - slack
          - sms_api
          - sms
          - spectrum
          - victorops
          example: mail
        from_details:
          $ref: '#/components/schemas/FromDetailsOneOf'
        reply_to:
          $ref: '#/components/schemas/ReplyToOneOf'
        subject_for_host_notifications:
          $ref: '#/components/schemas/SubjectHostOneOf'
        subject_for_service_notifications:
          $ref: '#/components/schemas/SubjectServiceOneOf'
        send_separate_notification_to_every_recipient:
          $ref: '#/components/schemas/Checkbox'
        sort_order_for_bulk_notifications:
          $ref: '#/components/schemas/SortOrderOneOf'
        body_head_for_both_host_and_service_notifications:
          $ref: '#/components/schemas/StrValueOneOf'
        body_tail_for_host_notifications:
          $ref: '#/components/schemas/StrValueOneOf'
        body_tail_for_service_notifications:
          $ref: '#/components/schemas/StrValueOneOf'
      required:
      - body_head_for_both_host_and_service_notifications
      - body_tail_for_host_notifications
      - body_tail_for_service_notifications
      - from_details
      - plugin_name
      - reply_to
      - send_separate_notification_to_every_recipient
      - sort_order_for_bulk_notifications
      - subject_for_host_notifications
      - subject_for_service_notifications
      additionalProperties: false
    CheckboxWithListOfEmailInfoStrs:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          description: Information to be displayed in the email body.
          example:
          - abstime
          - graph
          uniqueItems: true
          items:
            type: string
            enum:
            - omdsite
            - hosttags
            - address
            - abstime
            - reltime
            - longoutput
            - ack_author
            - ack_comment
            - notification_author
            - notification_comment
            - perfdata
            - graph
            - notesurl
            - context
      required:
      - state
      - value
      additionalProperties: false
    EmailInfoOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfEmailInfoStrs'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfEmailInfoStrs'
    HtmlSectionBetweenBodyAndTableCheckbox:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: Insert HTML section between body and table
          example: <HTMLTAG>CONTENT</HTMLTAG>
      required:
      - state
      additionalProperties: false
    InsertHtmlOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/HtmlSectionBetweenBodyAndTableCheckbox'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/HtmlSectionBetweenBodyAndTableCheckbox'
    CheckMKURLPrefixAuto:
      type: object
      properties:
        option:
          type: string
          enum: &id171
          - manual
          - automatic
          example: automatic
        schema:
          type: string
          enum:
          - http
          - https
          example: http
      required:
      - option
      - schema
      additionalProperties: false
    CheckMKURLPrefixManual:
      type: object
      properties:
        option:
          type: string
          enum: *id171
          example: automatic
        url:
          type: string
          example: http://example_url_prefix
      required:
      - option
      - url
      additionalProperties: false
    ManualOrAutomaticSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/CheckMKURLPrefixAuto'
      - $ref: '#/components/schemas/CheckMKURLPrefixManual'
      discriminator:
        propertyName: option
        mapping:
          automatic: '#/components/schemas/CheckMKURLPrefixAuto'
          manual: '#/components/schemas/CheckMKURLPrefixManual'
    CheckMKURLPrefixValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          description: If you use Automatic HTTP/s, the URL prefix for host and service
            links within the notification is filled automatically. If you specify
            an URL prefix here, then several parts of the notification are armed with
            hyperlinks to your Check_MK GUI. In both cases, the recipient of the notification
            can directly visit the host or service in question in Check_MK. Specify
            an absolute URL including the .../check_mk/
          $ref: '#/components/schemas/ManualOrAutomaticSelector'
      required:
      - state
      additionalProperties: false
    UrlPrefixOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckMKURLPrefixValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckMKURLPrefixValue'
    Authentication:
      type: object
      properties:
        method:
          type: string
          default: plaintext
          description: The authentication method is fixed at 'plaintext' for now.
          enum:
          - plaintext
          example: plaintext
        user:
          type: string
          default: ''
          description: The username for the SMTP connection.
          example: user_1
        password:
          type: string
          default: ''
          description: The password for the SMTP connection.
          example: password
      additionalProperties: false
    AuthenticationValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          $ref: '#/components/schemas/Authentication'
      required:
      - state
      - value
      additionalProperties: false
    AuthOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/AuthenticationValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/AuthenticationValue'
    EnableSynchronousDeliveryViaSMTP:
      type: object
      properties:
        auth:
          $ref: '#/components/schemas/AuthOneOf'
        encryption:
          type: string
          description: The encryption type for the SMTP connection.
          enum:
          - ssl_tls
          - starttls
          example: ssl_tls
        port:
          type: integer
          description: ''
          example: 25
        smarthosts:
          type: array
          default: []
          uniqueItems: true
          items:
            type: string
      additionalProperties: false
    EnableSynchronousDeliveryViaSMTPValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          $ref: '#/components/schemas/EnableSynchronousDeliveryViaSMTP'
      required:
      - state
      additionalProperties: false
    EnableSyncOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/EnableSynchronousDeliveryViaSMTPValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/EnableSynchronousDeliveryViaSMTPValue'
    GraphsPerNotification:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: integer
          description: Sets a limit for the number of graphs that are displayed in
            a notification
          example: 5
      required:
      - state
      - value
      additionalProperties: false
    GraphsPerNotificationOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/GraphsPerNotification'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/GraphsPerNotification'
    BulkNotificationsWithGraphs:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: integer
          description: Sets a limit for the number of notifications in a bulk for
            which graphs are displayed. If you do not use bulk notifications this
            option is ignored. Note that each graph increases the size of the mail
            and takes time to renderon the monitoring server. Therefore, large bulks
            may exceed the maximum size for attachements or the plug-in may run into
            a timeout so that a failed notification is produced
          example: 5
      required:
      - state
      - value
      additionalProperties: false
    BulkNotificationsOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/BulkNotificationsWithGraphs'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/BulkNotificationsWithGraphs'
    HTMLMailPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        from_details:
          $ref: '#/components/schemas/FromDetailsOneOf'
        reply_to:
          $ref: '#/components/schemas/ReplyToOneOf'
        subject_for_host_notifications:
          $ref: '#/components/schemas/SubjectHostOneOf'
        subject_for_service_notifications:
          $ref: '#/components/schemas/SubjectServiceOneOf'
        send_separate_notification_to_every_recipient:
          $ref: '#/components/schemas/Checkbox'
        sort_order_for_bulk_notifications:
          $ref: '#/components/schemas/SortOrderOneOf'
        info_to_be_displayed_in_the_email_body:
          $ref: '#/components/schemas/EmailInfoOneOf'
        insert_html_section_between_body_and_table:
          $ref: '#/components/schemas/InsertHtmlOneOf'
        url_prefix_for_links_to_checkmk:
          $ref: '#/components/schemas/UrlPrefixOneOf'
        display_graphs_among_each_other:
          $ref: '#/components/schemas/Checkbox'
        enable_sync_smtp:
          $ref: '#/components/schemas/EnableSyncOneOf'
        graphs_per_notification:
          $ref: '#/components/schemas/GraphsPerNotificationOneOf'
        bulk_notifications_with_graphs:
          $ref: '#/components/schemas/BulkNotificationsOneOf'
      required:
      - bulk_notifications_with_graphs
      - display_graphs_among_each_other
      - enable_sync_smtp
      - from_details
      - graphs_per_notification
      - info_to_be_displayed_in_the_email_body
      - insert_html_section_between_body_and_table
      - plugin_name
      - reply_to
      - send_separate_notification_to_every_recipient
      - sort_order_for_bulk_notifications
      - subject_for_host_notifications
      - subject_for_service_notifications
      - url_prefix_for_links_to_checkmk
      additionalProperties: false
    CiscoExplicitWebhookUrl:
      type: object
      properties:
        option:
          type: string
          enum: &id173
          - store
          - explicit
          example: store
        url:
          type: string
          format: url
          example: http://example_webhook_url.com
      required:
      - option
      - url
      additionalProperties: false
    CiscoPasswordStore:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        store_id:
          type: string
          description: A password store ID
          example: stored_password_1
      required:
      - option
      - store_id
      additionalProperties: false
    CiscoUrlOrStoreSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/CiscoExplicitWebhookUrl'
      - $ref: '#/components/schemas/CiscoPasswordStore'
      discriminator:
        propertyName: option
        mapping:
          explicit: '#/components/schemas/CiscoExplicitWebhookUrl'
          store: '#/components/schemas/CiscoPasswordStore'
    HttpProxy:
      type: object
      properties:
        option:
          type: string
          enum: &id174
          - no_proxy
          - environment
          - url
          - global
          example: ''
      required:
      - option
      additionalProperties: false
    HttpProxyUrl:
      type: object
      properties:
        option:
          type: string
          enum: *id174
          example: ''
        url:
          type: string
          example: http://example_proxy
      required:
      - option
      - url
      additionalProperties: false
    HttpProxyGlobal:
      type: object
      properties:
        option:
          type: string
          enum: *id174
          example: ''
        global_proxy_id:
          type: string
          description: A global http proxy
          example: proxy_id_1
      required:
      - global_proxy_id
      - option
      additionalProperties: false
    HttpProxyOptions:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/HttpProxy'
      - $ref: '#/components/schemas/HttpProxy'
      - $ref: '#/components/schemas/HttpProxyUrl'
      - $ref: '#/components/schemas/HttpProxyGlobal'
      discriminator:
        propertyName: option
        mapping:
          no_proxy: '#/components/schemas/HttpProxy'
          environment: '#/components/schemas/HttpProxy'
          url: '#/components/schemas/HttpProxyUrl'
          global: '#/components/schemas/HttpProxyGlobal'
    HttpProxyValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution. Have a look at the python requests module documentation
            for further information. Note that these variables must be defined as
            a site-user in ~/etc/environment and that this might affect other notification
            methods which also use the requests module
          $ref: '#/components/schemas/HttpProxyOptions'
      required:
      - state
      additionalProperties: false
    HttpProxyOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/HttpProxyValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/HttpProxyValue'
    CiscoWebexPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        disable_ssl_cert_verification:
          description: Ignore unverified HTTPS request warnings. Use with caution.
          $ref: '#/components/schemas/Checkbox'
        webhook_url:
          $ref: '#/components/schemas/CiscoUrlOrStoreSelector'
        url_prefix_for_links_to_checkmk:
          $ref: '#/components/schemas/UrlPrefixOneOf'
        http_proxy:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution.
          $ref: '#/components/schemas/HttpProxyOneOf'
      required:
      - disable_ssl_cert_verification
      - http_proxy
      - plugin_name
      - url_prefix_for_links_to_checkmk
      additionalProperties: false
    CheckboxSysLogFacilityToUseValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: ''
          enum:
          - kern
          - user
          - mail
          - daemon
          - auth
          - syslog
          - lpr
          - news
          - uucp
          - cron
          - authpriv
          - ftp
          - ntp
          - logaudit
          - logalert
          - clock
          - local0
          - local1
          - local2
          - local3
          - local4
          - local5
          - local6
          - local7
          - logfile
          - snmptrap
          example: ''
      required:
      - state
      additionalProperties: false
    SysLogFacilityOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxSysLogFacilityToUseValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxSysLogFacilityToUseValue'
    CheckBoxIPAddressValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: A valid IP address
          example: 127.0.0.1
      required:
      - state
      - value
      additionalProperties: false
    IPAddressOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckBoxIPAddressValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckBoxIPAddressValue'
    MkEventDPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        syslog_facility_to_use:
          $ref: '#/components/schemas/SysLogFacilityOneOf'
        ip_address_of_remote_event_console:
          $ref: '#/components/schemas/IPAddressOneOf'
      required:
      - ip_address_of_remote_event_console
      - plugin_name
      - syslog_facility_to_use
      additionalProperties: false
    IlertAPIKey:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        key:
          type: string
          example: example_api_key
      required:
      - key
      - option
      additionalProperties: false
    IlertPasswordStoreID:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        store_id:
          type: string
          description: A password store ID
          example: stored_password_1
      required:
      - option
      - store_id
      additionalProperties: false
    IlertKeyOrStoreSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/IlertAPIKey'
      - $ref: '#/components/schemas/IlertPasswordStoreID'
      discriminator:
        propertyName: option
        mapping:
          explicit: '#/components/schemas/IlertAPIKey'
          store: '#/components/schemas/IlertPasswordStoreID'
    IlertPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        notification_priority:
          type: string
          description: HIGH - with escalation, LOW - without escalation
          enum:
          - HIGH
          - LOW
          example: HIGH
        custom_summary_for_host_alerts:
          type: string
          description: A custom summary for host alerts
          example: '$NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ - $HOSTOUTPUT$'
        custom_summary_for_service_alerts:
          type: string
          description: A custom summary for service alerts
          example: '$NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is
            $SERVICESTATE$ - $SERVICEOUTPUT$'
        disable_ssl_cert_verification:
          description: Ignore unverified HTTPS request warnings. Use with caution.
          $ref: '#/components/schemas/Checkbox'
        api_key:
          $ref: '#/components/schemas/IlertKeyOrStoreSelector'
        url_prefix_for_links_to_checkmk:
          $ref: '#/components/schemas/UrlPrefixOneOf'
        http_proxy:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution.
          $ref: '#/components/schemas/HttpProxyOneOf'
      required:
      - api_key
      - custom_summary_for_host_alerts
      - custom_summary_for_service_alerts
      - disable_ssl_cert_verification
      - http_proxy
      - notification_priority
      - plugin_name
      - url_prefix_for_links_to_checkmk
      additionalProperties: false
    BasicAuthStorePassword:
      type: object
      properties:
        option:
          type: string
          enum: &id175
          - explicit_token
          - token_store_id
          - explicit_password
          - password_store_id
          example: password_store_id
        username:
          type: string
          description: Your username
          example: username_example
        store_id:
          type: string
          description: A password store ID
          example: stored_password_1
      required:
      - option
      - store_id
      - username
      additionalProperties: false
    BasicAuthExplicit:
      type: object
      properties:
        option:
          type: string
          enum: *id175
          example: password_store_id
        username:
          type: string
          description: Your username
          example: username_example
        password:
          type: string
          description: Your password
          example: password_example
      required:
      - option
      - password
      - username
      additionalProperties: false
    ExplicitToken:
      type: object
      properties:
        option:
          type: string
          enum: *id175
          example: password_store_id
        token:
          type: string
          description: Your personal access token
          example: token_example
      required:
      - option
      - token
      additionalProperties: false
    AuthStoreToken:
      type: object
      properties:
        option:
          type: string
          enum: *id175
          example: password_store_id
        store_id:
          type: string
          description: A password store ID
          example: stored_password_1
      required:
      - option
      - store_id
      additionalProperties: false
    AuthSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/BasicAuthStorePassword'
      - $ref: '#/components/schemas/BasicAuthExplicit'
      - $ref: '#/components/schemas/ExplicitToken'
      - $ref: '#/components/schemas/AuthStoreToken'
      discriminator:
        propertyName: option
        mapping:
          password_store_id: '#/components/schemas/BasicAuthStorePassword'
          explicit_password: '#/components/schemas/BasicAuthExplicit'
          explicit_token: '#/components/schemas/ExplicitToken'
          token_store_id: '#/components/schemas/AuthStoreToken'
    JiraPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        jira_url:
          type: string
          description: Configure the Jira URL here
          example: http://jira_url_example.com
        disable_ssl_cert_verification:
          description: Ignore unverified HTTPS request warnings. Use with caution.
          $ref: '#/components/schemas/Checkbox'
        auth:
          description: The authentication credentials for the Jira connection
          $ref: '#/components/schemas/AuthSelector'
        project_id:
          type: string
          description: The numerical Jira project ID. If not set, it will be retrieved
            from a custom user attribute named jiraproject. If that is not set, the
            notification will fail
          example: ''
        issue_type_id:
          type: string
          description: The numerical Jira issue type ID. If not set, it will be retrieved
            from a custom user attribute named jiraissuetype. If that is not set,
            the notification will fail
          example: ''
        host_custom_id:
          type: string
          description: The numerical Jira custom field ID for host problems
          example: ''
        service_custom_id:
          type: string
          description: The numerical Jira custom field ID for service problems
          example: ''
        monitoring_url:
          type: string
          description: Configure the base URL for the monitoring web GUI here. Include
            the site name. Used for linking to Checkmk out of Jira
          example: ''
        site_custom_id:
          description: The numerical ID of the Jira custom field for sites. Please
            use this option if you have multiple sites in a distributed setup which
            send their notifications to the same Jira instance
          $ref: '#/components/schemas/StrValueOneOf'
        priority_id:
          description: The numerical Jira priority ID. If not set, it will be retrieved
            from a custom user attribute named jirapriority. If that is not set, the
            standard priority will be used
          $ref: '#/components/schemas/StrValueOneOf'
        host_summary:
          description: Here you are allowed to use all macros that are defined in
            the notification context
          $ref: '#/components/schemas/StrValueOneOf'
        service_summary:
          description: Here you are allowed to use all macros that are defined in
            the notification context
          $ref: '#/components/schemas/StrValueOneOf'
        label:
          description: Here you can set a custom label for new issues. If not set,
            'monitoring' will be used
          $ref: '#/components/schemas/StrValueOneOf'
        graphs_per_notification:
          description: Here you can set a limit for the number of graphs that are
            displayed in a notification. If not set, 0 will be used
          $ref: '#/components/schemas/GraphsPerNotificationOneOf'
        resolution_id:
          description: The numerical Jira resolution transition ID. 11 - 'To Do',
            21 - 'In Progress', 31 - 'Done'
          $ref: '#/components/schemas/StrValueOneOf'
        optional_timeout:
          description: Here you can configure timeout settings.
          $ref: '#/components/schemas/StrValueOneOf'
      required:
      - auth
      - disable_ssl_cert_verification
      - host_custom_id
      - host_summary
      - issue_type_id
      - label
      - monitoring_url
      - optional_timeout
      - plugin_name
      - priority_id
      - project_id
      - resolution_id
      - service_custom_id
      - service_summary
      - site_custom_id
      additionalProperties: false
    OpsGenieExplicitKey:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        key:
          type: string
          example: example_api_key
      required:
      - key
      - option
      additionalProperties: false
    OpsGenieStoreID:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        store_id:
          type: string
          description: A password store ID
          example: stored_password_1
      required:
      - option
      - store_id
      additionalProperties: false
    OpsGenisStoreOrExplicitKeySelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/OpsGenieExplicitKey'
      - $ref: '#/components/schemas/OpsGenieStoreID'
      discriminator:
        propertyName: option
        mapping:
          explicit: '#/components/schemas/OpsGenieExplicitKey'
          store: '#/components/schemas/OpsGenieStoreID'
    CheckboxOpsGeniePriorityValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: ''
          enum:
          - critical
          - high
          - moderate
          - low
          - informational
          example: moderate
      required:
      - state
      - value
      additionalProperties: false
    OpsGeniePriorityOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxOpsGeniePriorityValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxOpsGeniePriorityValue'
    CheckboxWithListOfStr:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          items:
            type: string
      required:
      - state
      - value
      additionalProperties: false
    ListOfStrOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfStr'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfStr'
    ListOfExtraProperties:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          default:
          - abstime
          - address
          - longoutput
          uniqueItems: true
          items:
            type: string
            enum:
            - omd_site
            - hosttags
            - address
            - abstime
            - reltime
            - longoutput
            - ack_author
            - ack_comment
            - notification_author
            - notification_comment
            - perfdata
            - notesurl
            - context
      required:
      - state
      additionalProperties: false
    ListOfExtraPropertiesOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/ListOfExtraProperties'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/ListOfExtraProperties'
    OpsGeniePluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        api_key:
          $ref: '#/components/schemas/OpsGenisStoreOrExplicitKeySelector'
        domain:
          description: If you have an european account, please set the domain of your
            opsgenie. Specify an absolute URL like https://api.eu.opsgenie.com
          $ref: '#/components/schemas/StrValueOneOf'
        disable_ssl_cert_verification:
          description: Ignore unverified HTTPS request warnings. Use with caution.
          $ref: '#/components/schemas/Checkbox'
        http_proxy:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution.
          $ref: '#/components/schemas/HttpProxyOneOf'
        owner:
          description: Sets the user of the alert. Display name of the request owner
          $ref: '#/components/schemas/StrValueOneOf'
        source:
          description: Source field of the alert. Default value is IP address of the
            incoming request
          $ref: '#/components/schemas/StrValueOneOf'
        priority:
          $ref: '#/components/schemas/OpsGeniePriorityOneOf'
        note_while_creating:
          description: Additional note that will be added while creating the alert
          $ref: '#/components/schemas/StrValueOneOf'
        note_while_closing:
          description: Additional note that will be added while closing the alert
          $ref: '#/components/schemas/StrValueOneOf'
        desc_for_host_alerts:
          description: Description field of host alert that is generally used to provide
            a detailed information about the alert
          $ref: '#/components/schemas/StrValueOneOf'
        desc_for_service_alerts:
          description: Description field of service alert that is generally used to
            provide a detailed information about the alert
          $ref: '#/components/schemas/StrValueOneOf'
        message_for_host_alerts:
          description: ''
          $ref: '#/components/schemas/StrValueOneOf'
        message_for_service_alerts:
          description: ''
          $ref: '#/components/schemas/StrValueOneOf'
        responsible_teams:
          description: Team names which will be responsible for the alert. If the
            API Key belongs to a team integration, this field will be overwritten
            with the owner team. You may paste a text from your clipboard which contains
            several parts separated by ';' characters into the last input field. The
            text will then be split by these separators and the single parts are added
            into dedicated input fields
          $ref: '#/components/schemas/ListOfStrOneOf'
        actions:
          description: Custom actions that will be available for the alert. You may
            paste a text from your clipboard which contains several parts separated
            by ';' characters into the last input field. The text will then be split
            by these separators and the single parts are added into dedicated input
            fields
          $ref: '#/components/schemas/ListOfStrOneOf'
        tags:
          description: Tags of the alert. You may paste a text from your clipboard
            which contains several parts separated by ';' characters into the last
            input field. The text will then be split by these separators and the single
            parts are added into dedicated input fields
          $ref: '#/components/schemas/ListOfStrOneOf'
        entity:
          description: Is used to specify which domain the alert is related to
          $ref: '#/components/schemas/StrValueOneOf'
        extra_properties:
          description: A list of extra properties that will be included in the notification
          $ref: '#/components/schemas/ListOfExtraPropertiesOneOf'
      required:
      - actions
      - api_key
      - desc_for_host_alerts
      - desc_for_service_alerts
      - disable_ssl_cert_verification
      - domain
      - entity
      - http_proxy
      - message_for_host_alerts
      - message_for_service_alerts
      - note_while_closing
      - note_while_creating
      - owner
      - plugin_name
      - priority
      - responsible_teams
      - source
      - tags
      additionalProperties: false
    PagerDutyExplicitKey:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        key:
          type: string
          example: some_key_example
      required:
      - key
      - option
      additionalProperties: false
    PagerDutyAPIKeyStoreID:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        store_id:
          type: string
          description: A password store ID
          example: stored_password_1
      required:
      - option
      - store_id
      additionalProperties: false
    PagerDutyStoreOrIntegrationKeySelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PagerDutyExplicitKey'
      - $ref: '#/components/schemas/PagerDutyAPIKeyStoreID'
      discriminator:
        propertyName: option
        mapping:
          explicit: '#/components/schemas/PagerDutyExplicitKey'
          store: '#/components/schemas/PagerDutyAPIKeyStoreID'
    PagerDutyPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        integration_key:
          $ref: '#/components/schemas/PagerDutyStoreOrIntegrationKeySelector'
        disable_ssl_cert_verification:
          description: Ignore unverified HTTPS request warnings. Use with caution.
          $ref: '#/components/schemas/Checkbox'
        url_prefix_for_links_to_checkmk:
          $ref: '#/components/schemas/UrlPrefixOneOf'
        http_proxy:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution.
          $ref: '#/components/schemas/HttpProxyOneOf'
      required:
      - disable_ssl_cert_verification
      - http_proxy
      - integration_key
      - plugin_name
      - url_prefix_for_links_to_checkmk
      additionalProperties: false
    PushOverPriorityBase:
      type: object
      properties:
        level:
          type: string
          description: The pushover priority level
          enum:
          - lowest
          - low
          - normal
          - high
          example: normal
      required:
      - level
      additionalProperties: false
    PushOverPriorityEmergency:
      type: object
      properties:
        level:
          type: string
          description: The pushover priority level
          enum:
          - emergency
          example: emergency
        retry:
          type: integer
          description: The retry interval in seconds
          example: 60
        expire:
          type: integer
          description: The expiration time in seconds
          example: 3600
        receipt:
          type: string
          description: The receipt of the message
          example: The receipt can be used to periodically poll receipts API to get
            the status of the notification. See <a href="https://pushover.net/api#receipt"
            target="_blank">Pushover receipts and callbacks</a> for more information.
          pattern: ^[a-zA-Z0-9]{30,40}$
      required:
      - expire
      - level
      - receipt
      - retry
      additionalProperties: false
    PushOverPrioritySelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PushOverPriorityBase'
      - $ref: '#/components/schemas/PushOverPriorityBase'
      - $ref: '#/components/schemas/PushOverPriorityBase'
      - $ref: '#/components/schemas/PushOverPriorityBase'
      - $ref: '#/components/schemas/PushOverPriorityEmergency'
      discriminator:
        propertyName: level
        mapping:
          lowest: '#/components/schemas/PushOverPriorityBase'
          low: '#/components/schemas/PushOverPriorityBase'
          normal: '#/components/schemas/PushOverPriorityBase'
          high: '#/components/schemas/PushOverPriorityBase'
          emergency: '#/components/schemas/PushOverPriorityEmergency'
    PushOverPriority:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          description: The pushover priority level
          example: normal
          $ref: '#/components/schemas/PushOverPrioritySelector'
      required:
      - state
      - value
      additionalProperties: false
    PushOverOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/PushOverPriority'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/PushOverPriority'
    Sounds:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: See https://pushover.net/api#sounds for more information and
            trying out available sounds.
          enum:
          - none
          - alien
          - bike
          - bugle
          - cashregister
          - classical
          - climb
          - cosmic
          - echo
          - falling
          - gamelan
          - incoming
          - intermission
          - magic
          - mechanical
          - persistent
          - pianobar
          - pushover
          - siren
          - spacealarm
          - tugboat
          - updown
          - vibrate
          - disabled
          example: none
      required:
      - state
      - value
      additionalProperties: false
    SoundsOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/Sounds'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/Sounds'
    PushOverPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        api_key:
          type: string
          description: You need to provide a valid API key to be able to send push
            notifications using Pushover. Register and login to Pushover, thn create
            your Check_MK installation as application and obtain your API key
          example: azGDORePK8gMaC0QOYAMyEEuzJnyUi
          pattern: ^[a-zA-Z0-9]{30,40}$
        user_group_key:
          type: string
          description: Configure the user or group to receive the notifications by
            providing the user or group key here. The key can be obtained from the
            Pushover website.
          example: azGDORePK8gMaC0QOYAMyEEuzJnyUi
          pattern: ^[a-zA-Z0-9]{30,40}$
        url_prefix_for_links_to_checkmk:
          $ref: '#/components/schemas/UrlPrefixOneOf'
        priority:
          $ref: '#/components/schemas/PushOverOneOf'
        sound:
          $ref: '#/components/schemas/SoundsOneOf'
        http_proxy:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution.
          $ref: '#/components/schemas/HttpProxyOneOf'
      required:
      - api_key
      - http_proxy
      - plugin_name
      - priority
      - sound
      - url_prefix_for_links_to_checkmk
      - user_group_key
      additionalProperties: false
    CheckBoxUseSiteIDPrefix:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: ''
          enum:
          - use_site_id
          - deactivated
          example: use_site_id
      required:
      - state
      - value
      additionalProperties: false
    SiteIDPrefixOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckBoxUseSiteIDPrefix'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckBoxUseSiteIDPrefix'
    CheckboxWithMgmtTypePriorityValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          enum:
          - low
          - moderate
          - high
          - critical
      required:
      - state
      - value
      additionalProperties: false
    PriorityOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithMgmtTypePriorityValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithMgmtTypePriorityValue'
    ManagementTypeCaseStates:
      type: object
      properties:
        start_predefined:
          type: string
          enum:
          - none
          - new
          - closed
          - resolved
          - open
          - awaiting_info
          example: new
        start_integer:
          type: integer
          example: 1
          minimum: 0
      additionalProperties: false
    CheckboxWithManagementTypeStateCaseValues:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          $ref: '#/components/schemas/ManagementTypeCaseStates'
      required:
      - state
      additionalProperties: false
    StateRecoveryOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithManagementTypeStateCaseValues'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithManagementTypeStateCaseValues'
    CaseParams:
      type: object
      properties:
        host_description:
          $ref: '#/components/schemas/StrValueOneOf'
        service_description:
          $ref: '#/components/schemas/StrValueOneOf'
        host_short_description:
          $ref: '#/components/schemas/StrValueOneOf'
        service_short_description:
          $ref: '#/components/schemas/StrValueOneOf'
        priority:
          $ref: '#/components/schemas/PriorityOneOf'
        state_recovery:
          $ref: '#/components/schemas/StateRecoveryOneOf'
      additionalProperties: false
    MgmntTypeCaseParams:
      type: object
      properties:
        option:
          type: string
          enum: &id176
          - case
          - incident
          example: case
        params:
          $ref: '#/components/schemas/CaseParams'
      required:
      - option
      additionalProperties: false
    CheckboxWithMgmtTypeUrgencyValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          enum:
          - low
          - medium
          - high
      required:
      - state
      - value
      additionalProperties: false
    TypeUrgencyOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithMgmtTypeUrgencyValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithMgmtTypeUrgencyValue'
    ManagementTypeIncedentStates:
      type: object
      properties:
        start_predefined:
          type: string
          enum:
          - none
          - new
          - progress
          - closed
          - resolved
          - hold
          - canceled
          example: hold
        start_integer:
          type: integer
          example: 1
          minimum: 0
        end_predefined:
          type: string
          enum:
          - none
          - new
          - progress
          - closed
          - resolved
          - hold
          - canceled
          example: resolved
        end_integer:
          type: integer
          example: 0
          minimum: 0
      additionalProperties: false
    CheckboxWithManagementTypeStateIncedentValues:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          $ref: '#/components/schemas/ManagementTypeIncedentStates'
      required:
      - state
      additionalProperties: false
    TypeStateOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithManagementTypeStateIncedentValues'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithManagementTypeStateIncedentValues'
    IncidentParams:
      type: object
      properties:
        host_description:
          $ref: '#/components/schemas/StrValueOneOf'
        service_description:
          $ref: '#/components/schemas/StrValueOneOf'
        host_short_description:
          $ref: '#/components/schemas/StrValueOneOf'
        service_short_description:
          $ref: '#/components/schemas/StrValueOneOf'
        caller:
          type: string
          description: Caller is the user on behalf of whom the incident is being
            reported within ServiceNow.
          example: Alice
        urgency:
          $ref: '#/components/schemas/TypeUrgencyOneOf'
        impact:
          $ref: '#/components/schemas/StrValueOneOf'
        state_acknowledgement:
          $ref: '#/components/schemas/TypeStateOneOf'
        state_downtime:
          $ref: '#/components/schemas/TypeStateOneOf'
        state_recovery:
          $ref: '#/components/schemas/TypeStateOneOf'
      required:
      - caller
      additionalProperties: false
    MgmntTypeIncidentParams:
      type: object
      properties:
        option:
          type: string
          enum: *id176
          example: case
        params:
          $ref: '#/components/schemas/IncidentParams'
      required:
      - option
      additionalProperties: false
    MgmntTypeSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/MgmntTypeCaseParams'
      - $ref: '#/components/schemas/MgmntTypeIncidentParams'
      discriminator:
        propertyName: option
        mapping:
          case: '#/components/schemas/MgmntTypeCaseParams'
          incident: '#/components/schemas/MgmntTypeIncidentParams'
    ServiceNowPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        servicenow_url:
          type: string
          description: Configure your ServiceNow URL here
          example: https://myservicenow.com
        auth:
          description: The authentication credentials for the ServiceNow connection
          $ref: '#/components/schemas/AuthSelector'
        http_proxy:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution.
          $ref: '#/components/schemas/HttpProxyOneOf'
        use_site_id_prefix:
          $ref: '#/components/schemas/SiteIDPrefixOneOf'
        optional_timeout:
          $ref: '#/components/schemas/StrValueOneOf'
        management_type:
          $ref: '#/components/schemas/MgmntTypeSelector'
      required:
      - auth
      - http_proxy
      - optional_timeout
      - plugin_name
      - servicenow_url
      - use_site_id_prefix
      additionalProperties: false
    SignL4TeamSecret:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        secret:
          type: string
          example: team_secret_example
      required:
      - option
      - secret
      additionalProperties: false
    SignL4TeamSecretStoreID:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        store_id:
          type: string
          description: A password store ID
          example: stored_password_1
      required:
      - option
      - store_id
      additionalProperties: false
    SignL4ExplicitOrStoreSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/SignL4TeamSecret'
      - $ref: '#/components/schemas/SignL4TeamSecretStoreID'
      discriminator:
        propertyName: option
        mapping:
          explicit: '#/components/schemas/SignL4TeamSecret'
          store: '#/components/schemas/SignL4TeamSecretStoreID'
    Signl4PluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        team_secret:
          $ref: '#/components/schemas/SignL4ExplicitOrStoreSelector'
        url_prefix_for_links_to_checkmk:
          $ref: '#/components/schemas/UrlPrefixOneOf'
        disable_ssl_cert_verification:
          description: Ignore unverified HTTPS request warnings. Use with caution.
          $ref: '#/components/schemas/Checkbox'
        http_proxy:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution.
          $ref: '#/components/schemas/HttpProxyOneOf'
      required:
      - disable_ssl_cert_verification
      - http_proxy
      - plugin_name
      - team_secret
      - url_prefix_for_links_to_checkmk
      additionalProperties: false
    SlackWebhookURL:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        url:
          type: string
          format: url
          description: Configure your Slack or Mattermost Webhook URL here. Slack
            Webhooks must use HTTPS
          example: https://example_webhook_url.com
      required:
      - option
      - url
      additionalProperties: false
    SlackWebhookStore:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        store_id:
          type: string
          description: A password store ID
          example: stored_password_1
      required:
      - option
      - store_id
      additionalProperties: false
    SlackStoreOrExplicitURLSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/SlackWebhookURL'
      - $ref: '#/components/schemas/SlackWebhookStore'
      discriminator:
        propertyName: option
        mapping:
          explicit: '#/components/schemas/SlackWebhookURL'
          store: '#/components/schemas/SlackWebhookStore'
    SlackPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        webhook_url:
          $ref: '#/components/schemas/SlackStoreOrExplicitURLSelector'
        url_prefix_for_links_to_checkmk:
          $ref: '#/components/schemas/UrlPrefixOneOf'
        disable_ssl_cert_verification:
          description: Ignore unverified HTTPS request warnings. Use with caution.
          $ref: '#/components/schemas/Checkbox'
        http_proxy:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution.
          $ref: '#/components/schemas/HttpProxyOneOf'
      required:
      - disable_ssl_cert_verification
      - http_proxy
      - plugin_name
      - url_prefix_for_links_to_checkmk
      - webhook_url
      additionalProperties: false
    SMSAPIExplicitPassword:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        password:
          type: string
          example: https://example_webhook_url.com
      required:
      - option
      - password
      additionalProperties: false
    SMSAPIPStoreID:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        store_id:
          type: string
          description: A password store ID
          example: stored_password_1
      required:
      - option
      - store_id
      additionalProperties: false
    SMSAPIPasswordSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/SMSAPIExplicitPassword'
      - $ref: '#/components/schemas/SMSAPIPStoreID'
      discriminator:
        propertyName: option
        mapping:
          explicit: '#/components/schemas/SMSAPIExplicitPassword'
          store: '#/components/schemas/SMSAPIPStoreID'
    SMSAPIPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        modem_type:
          type: string
          description: Choose what modem is used. Currently supported is only Teltonika-TRB140.
          enum:
          - trb140
          example: trb140
        modem_url:
          type: string
          format: url
          description: Configure your modem URL here
          example: https://mymodem.mydomain.example
        disable_ssl_cert_verification:
          description: Ignore unverified HTTPS request warnings. Use with caution.
          $ref: '#/components/schemas/Checkbox'
        username:
          type: string
          description: Configure the user name here
          example: username_a
        timeout:
          type: string
          description: Here you can configure timeout settings
          example: '10'
        user_password:
          $ref: '#/components/schemas/SMSAPIPasswordSelector'
        http_proxy:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution.
          $ref: '#/components/schemas/HttpProxyOneOf'
      required:
      - disable_ssl_cert_verification
      - http_proxy
      - modem_type
      - modem_url
      - plugin_name
      - timeout
      - user_password
      - username
      additionalProperties: false
    SMSPluginBase:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        params:
          type: array
          description: The given parameters are available in scripts as NOTIFY_PARAMETER_1,
            NOTIFY_PARAMETER_2, etc. You may paste a text from your clipboard which
            contains several parts separated by ';' characters into the last input
            field. The text will then be split by these separators and the single
            parts are added into dedicated input fields.
          example:
          - NOTIFY_PARAMETER_1
          - NOTIFY_PARAMETER_1
          uniqueItems: true
          items:
            type: string
      required:
      - params
      - plugin_name
      additionalProperties: false
    SpectrumPluginBase:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        destination_ip:
          type: string
          description: IP address of the Spectrum server receiving the SNMP trap
          example: 127.0.0.1
        snmp_community:
          type: string
          description: SNMP community for the SNMP trap. The password entered here
            is stored in plain text within the monitoring site. This usually needed
            because the monitoring process needs to have access to the unencrypted
            password because it needs to submit it to authenticate with remote systems
          example: ''
        base_oid:
          type: string
          description: The base OID for the trap content
          example: 1.3.6.1.4.1.1234
      required:
      - base_oid
      - destination_ip
      - plugin_name
      - snmp_community
      additionalProperties: false
    SplunkURLExplicit:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        url:
          type: string
          format: url
          description: A valid splunk webhook URL
          example: https://alert.victorops.com/integrations/example
      required:
      - option
      - url
      additionalProperties: false
    SplunkStoreID:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        store_id:
          type: string
          description: A password store ID
          example: stored_password_1
      required:
      - option
      - store_id
      additionalProperties: false
    SplunkRESTEndpointSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/SplunkURLExplicit'
      - $ref: '#/components/schemas/SplunkStoreID'
      discriminator:
        propertyName: option
        mapping:
          explicit: '#/components/schemas/SplunkURLExplicit'
          store: '#/components/schemas/SplunkStoreID'
    VictoropsPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        splunk_on_call_rest_endpoint:
          $ref: '#/components/schemas/SplunkRESTEndpointSelector'
        url_prefix_for_links_to_checkmk:
          $ref: '#/components/schemas/UrlPrefixOneOf'
        disable_ssl_cert_verification:
          description: Ignore unverified HTTPS request warnings. Use with caution.
          $ref: '#/components/schemas/Checkbox'
        http_proxy:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution.
          $ref: '#/components/schemas/HttpProxyOneOf'
      required:
      - disable_ssl_cert_verification
      - http_proxy
      - plugin_name
      - splunk_on_call_rest_endpoint
      - url_prefix_for_links_to_checkmk
      additionalProperties: false
    MSTeamsExplicitWebhookUrl:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        url:
          type: string
          format: url
          example: http://example_webhook_url.com
      required:
      - option
      - url
      additionalProperties: false
    MSTeamsURLResponse:
      type: object
      properties:
        option:
          type: string
          enum: *id173
          example: store
        store_id:
          type: string
          description: A password store ID
          example: stored_password_1
        url:
          type: string
          example: http://example_webhook_url.com
      required:
      - option
      - store_id
      additionalProperties: false
    MSTeamsUrlOrStoreSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/MSTeamsExplicitWebhookUrl'
      - $ref: '#/components/schemas/MSTeamsURLResponse'
      discriminator:
        propertyName: option
        mapping:
          explicit: '#/components/schemas/MSTeamsExplicitWebhookUrl'
          store: '#/components/schemas/MSTeamsURLResponse'
    MSTeamsPluginCreate:
      type: object
      properties:
        plugin_name:
          type: string
          description: The plug-in name.
          enum: *id172
          example: mail
        affected_host_groups:
          description: Enable/disable if we show affected host groups in the created
            message
          $ref: '#/components/schemas/Checkbox'
        host_details:
          description: Enable/disable the details for host notifications
          $ref: '#/components/schemas/StrValueOneOf'
        service_details:
          description: Enable/disable the details for service notifications
          $ref: '#/components/schemas/StrValueOneOf'
        host_summary:
          description: Enable/disable the summary for host notifications
          $ref: '#/components/schemas/StrValueOneOf'
        service_summary:
          description: Enable/disable the summary for service notifications
          $ref: '#/components/schemas/StrValueOneOf'
        host_title:
          description: Enable/disable the title for host notifications
          $ref: '#/components/schemas/StrValueOneOf'
        service_title:
          description: Enable/disable the title for service notifications
          $ref: '#/components/schemas/StrValueOneOf'
        http_proxy:
          description: Use the proxy settings from the environment variables. The
            variables NO_PROXY, HTTP_PROXY and HTTPS_PROXY are taken into account
            during execution.
          $ref: '#/components/schemas/HttpProxyOneOf'
        url_prefix_for_links_to_checkmk:
          $ref: '#/components/schemas/UrlPrefixOneOf'
        webhook_url:
          $ref: '#/components/schemas/MSTeamsUrlOrStoreSelector'
      required:
      - affected_host_groups
      - host_details
      - host_summary
      - host_title
      - http_proxy
      - plugin_name
      - service_details
      - service_summary
      - service_title
      - url_prefix_for_links_to_checkmk
      - webhook_url
      additionalProperties: false
    PluginSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/AsciiMailPluginCreate'
      - $ref: '#/components/schemas/HTMLMailPluginCreate'
      - $ref: '#/components/schemas/CiscoWebexPluginCreate'
      - $ref: '#/components/schemas/MkEventDPluginCreate'
      - $ref: '#/components/schemas/IlertPluginCreate'
      - $ref: '#/components/schemas/JiraPluginCreate'
      - $ref: '#/components/schemas/OpsGeniePluginCreate'
      - $ref: '#/components/schemas/PagerDutyPluginCreate'
      - $ref: '#/components/schemas/PushOverPluginCreate'
      - $ref: '#/components/schemas/ServiceNowPluginCreate'
      - $ref: '#/components/schemas/Signl4PluginCreate'
      - $ref: '#/components/schemas/SlackPluginCreate'
      - $ref: '#/components/schemas/SMSAPIPluginCreate'
      - $ref: '#/components/schemas/SMSPluginBase'
      - $ref: '#/components/schemas/SpectrumPluginBase'
      - $ref: '#/components/schemas/VictoropsPluginCreate'
      - $ref: '#/components/schemas/MSTeamsPluginCreate'
      discriminator:
        propertyName: plugin_name
        mapping:
          asciimail: '#/components/schemas/AsciiMailPluginCreate'
          mail: '#/components/schemas/HTMLMailPluginCreate'
          cisco_webex_teams: '#/components/schemas/CiscoWebexPluginCreate'
          mkeventd: '#/components/schemas/MkEventDPluginCreate'
          ilert: '#/components/schemas/IlertPluginCreate'
          jira_issues: '#/components/schemas/JiraPluginCreate'
          opsgenie_issues: '#/components/schemas/OpsGeniePluginCreate'
          pagerduty: '#/components/schemas/PagerDutyPluginCreate'
          pushover: '#/components/schemas/PushOverPluginCreate'
          servicenow: '#/components/schemas/ServiceNowPluginCreate'
          signl4: '#/components/schemas/Signl4PluginCreate'
          slack: '#/components/schemas/SlackPluginCreate'
          sms_api: '#/components/schemas/SMSAPIPluginCreate'
          sms: '#/components/schemas/SMSPluginBase'
          spectrum: '#/components/schemas/SpectrumPluginBase'
          victorops: '#/components/schemas/VictoropsPluginCreate'
          msteams: '#/components/schemas/MSTeamsPluginCreate'
    PluginWithParams:
      type: object
      properties:
        option:
          default: create_notification_with_the_following_parameters
          description: Create notifications with parameters
          example: create_notification_with_the_following_parameters
        plugin_params:
          $ref: '#/components/schemas/PluginSelector'
      required:
      - option
      - plugin_params
      additionalProperties: false
    CustomPlugin:
      type: object
      properties:
        plugin_name:
          type: string
          description: The custom plug-in name
          example: mail
      required:
      - plugin_name
      additionalProperties: false
    CustomPluginWithParams:
      type: object
      properties:
        option:
          default: create_notification_with_custom_parameters
          description: Create notifications with custom parameters
          example: create_notification_with_custom_parameters
        plugin_params:
          $ref: '#/components/schemas/CustomPlugin'
      required:
      - option
      - plugin_params
      additionalProperties: false
    PluginOptionsSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PluginWithoutParams'
      - $ref: '#/components/schemas/PluginWithParams'
      - $ref: '#/components/schemas/CustomPluginWithParams'
      discriminator:
        propertyName: option
        mapping:
          cancel_previous_notifications: '#/components/schemas/PluginWithoutParams'
          create_notification_with_the_following_parameters: '#/components/schemas/PluginWithParams'
          create_notification_with_custom_parameters: '#/components/schemas/CustomPluginWithParams'
    NotificationBulkingAlways:
      type: object
      properties:
        subject_for_bulk_notifications:
          $ref: '#/components/schemas/StrValueOneOf'
        max_bulk_size:
          type: integer
          description: At most that many notifications are kept back for bulking.
            A value of 1 essentially turns off notification bulking.
          example: '1000'
        notification_bulks_based_on:
          type: array
          uniqueItems: true
          items:
            type: string
            enum: &id177
            - folder
            - host
            - service
            - sl
            - check_type
            - state
            - ec_contact
            - ec_comment
        notification_bulks_based_on_custom_macros:
          type: array
          items:
            type: string
            description: 'If you enter the names of host/service-custom macros here
              then for each different combination of values of those macros a separate
              bulk will be created. Service macros match first, if no service macro
              is found, the host macros are searched. This can be used in combination
              with the grouping by folder, host etc. Omit any leading underscore.
              Note: If you are using Nagios as a core you need to make sure that the
              values of the required macros are present in the notification context.
              This is done in check_mk_templates.cfg. If you macro is _FOO then you
              need to add the variables NOTIFY_HOST_FOO and NOTIFY_SERVICE_FOO. You
              may paste a text from your clipboard which contains several parts separated
              by '';'' characters into the last input field. The text will then be
              split by these separators and the single parts are added into dedicated
              input fields'
            example: ''
        time_horizon:
          type: integer
          description: Notifications are kept back for bulking at most for this time
            (seconds)
          example: 60
      required:
      - max_bulk_size
      - notification_bulks_based_on
      - subject_for_bulk_notifications
      - time_horizon
      additionalProperties: false
    AlwaysBulk:
      type: object
      properties:
        when_to_bulk:
          type: string
          description: Bulking can always happen or during a set time period
          enum: &id178
          - always
          - timeperiod
          example: always
        params:
          $ref: '#/components/schemas/NotificationBulkingAlways'
      required:
      - params
      - when_to_bulk
      additionalProperties: false
    OutsideTimeperiodValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          $ref: '#/components/schemas/NotificationBulkingAlways'
      required:
      - state
      additionalProperties: false
    TimePeriodOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/OutsideTimeperiodValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/OutsideTimeperiodValue'
    NotificationBulkingTimePeriod:
      type: object
      properties:
        subject_for_bulk_notifications:
          $ref: '#/components/schemas/StrValueOneOf'
        max_bulk_size:
          type: integer
          description: At most that many notifications are kept back for bulking.
            A value of 1 essentially turns off notification bulking.
          example: '1000'
        notification_bulks_based_on:
          type: array
          uniqueItems: true
          items:
            type: string
            enum: *id177
        notification_bulks_based_on_custom_macros:
          type: array
          items:
            type: string
            description: 'If you enter the names of host/service-custom macros here
              then for each different combination of values of those macros a separate
              bulk will be created. Service macros match first, if no service macro
              is found, the host macros are searched. This can be used in combination
              with the grouping by folder, host etc. Omit any leading underscore.
              Note: If you are using Nagios as a core you need to make sure that the
              values of the required macros are present in the notification context.
              This is done in check_mk_templates.cfg. If you macro is _FOO then you
              need to add the variables NOTIFY_HOST_FOO and NOTIFY_SERVICE_FOO. You
              may paste a text from your clipboard which contains several parts separated
              by '';'' characters into the last input field. The text will then be
              split by these separators and the single parts are added into dedicated
              input fields'
            example: ''
        time_period:
          type: string
          description: ''
          example: 24X7
        bulk_outside_timeperiod:
          $ref: '#/components/schemas/TimePeriodOneOf'
      required:
      - bulk_outside_timeperiod
      - max_bulk_size
      - notification_bulks_based_on
      - subject_for_bulk_notifications
      - time_period
      additionalProperties: false
    TimePeriod:
      type: object
      properties:
        when_to_bulk:
          type: string
          description: Bulking can always happen or during a set time period
          enum: *id178
          example: always
        params:
          $ref: '#/components/schemas/NotificationBulkingTimePeriod'
      required:
      - params
      - when_to_bulk
      additionalProperties: false
    NotificationBulkingWhenToBulkSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/AlwaysBulk'
      - $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: when_to_bulk
        mapping:
          always: '#/components/schemas/AlwaysBulk'
          timeperiod: '#/components/schemas/TimePeriod'
    NotificationBulkingValue:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          $ref: '#/components/schemas/NotificationBulkingWhenToBulkSelector'
      required:
      - state
      additionalProperties: false
    NotificationBulk:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/NotificationBulkingValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/NotificationBulkingValue'
    RuleNotificationMethod:
      type: object
      properties:
        notify_plugin:
          $ref: '#/components/schemas/PluginOptionsSelector'
        notification_bulking:
          $ref: '#/components/schemas/NotificationBulk'
      required:
      - notify_plugin
      additionalProperties: false
    TheFollowingUsers:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfStr'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfStr'
    CheckboxWithListOfContactGroups:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          uniqueItems: true
          items:
            type: string
            description: A contact group
            example: all
            pattern: ^[-a-z0-9A-Z_]*$
      required:
      - state
      - value
      additionalProperties: false
    ListOfContactGroupsCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfContactGroups'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfContactGroups'
    CheckboxWithListOfEmailAddresses:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          description: You may paste a text from your clipboard which contains several
            parts separated by ';' characters into the last input field. The text
            will then be split by these separators and the single parts are added
            into dedicated input fields
          example:
          - email1@tribe.com
          - email2@tribe.com
          uniqueItems: true
          items:
            type: string
            format: email
      required:
      - state
      - value
      additionalProperties: false
    ExplicitEmailAddressesCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfEmailAddresses'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfEmailAddresses'
    CustomMacro:
      type: object
      properties:
        macro_name:
          type: string
          description: The name of the macro
          example: macro_1
        match_regex:
          type: string
          description: The text entered here is handled as a regular expression pattern
          example: '[A-Z]+'
      required:
      - macro_name
      - match_regex
      additionalProperties: false
    MatchCustomMacros:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          items:
            $ref: '#/components/schemas/CustomMacro'
      required:
      - state
      additionalProperties: false
    CustomMacrosCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/MatchCustomMacros'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/MatchCustomMacros'
    ContactSelection:
      type: object
      properties:
        all_contacts_of_the_notified_object:
          $ref: '#/components/schemas/Checkbox'
        all_users:
          $ref: '#/components/schemas/Checkbox'
        all_users_with_an_email_address:
          $ref: '#/components/schemas/Checkbox'
        the_following_users:
          $ref: '#/components/schemas/TheFollowingUsers'
        members_of_contact_groups:
          $ref: '#/components/schemas/ListOfContactGroupsCheckbox'
        explicit_email_addresses:
          $ref: '#/components/schemas/ExplicitEmailAddressesCheckbox'
        restrict_by_contact_groups:
          $ref: '#/components/schemas/ListOfContactGroupsCheckbox'
        restrict_by_custom_macros:
          $ref: '#/components/schemas/CustomMacrosCheckbox'
      required:
      - all_contacts_of_the_notified_object
      - all_users
      - all_users_with_an_email_address
      - explicit_email_addresses
      - members_of_contact_groups
      - restrict_by_contact_groups
      - restrict_by_custom_macros
      - the_following_users
      additionalProperties: false
    CheckboxWithListOfSites:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          description: Match only hosts of the selected sites.
          example:
          - site_1
          - site_2
          items:
            type: string
      required:
      - state
      - value
      additionalProperties: false
    MatchSitesCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfSites'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfSites'
    CheckboxWithFolderStr:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: 'This condition makes the rule match only hosts that are managed
            via WATO and that are contained in this folder - either directly or in
            one of its subfolders.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
      required:
      - state
      - value
      additionalProperties: false
    MatchFolderCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithFolderStr'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithFolderStr'
    AuxTag:
      type: object
      properties:
        tag_type:
          type: string
          enum:
          - aux_tag
          example: aux_tag
        operator:
          type: string
          description: ''
          enum:
          - is_set
          - is_not_set
          example: is_set
        tag_id:
          type:
          - string
          - 'null'
          description: Tag ids are available via the aux tag endpoint.
          example: snmp
          pattern: ^[-0-9a-zA-Z_]+\Z
      required:
      - operator
      - tag_id
      - tag_type
      additionalProperties: false
    TagGroupNoneOfOrOneof:
      type: object
      properties:
        tag_type:
          type: string
          enum: &id179
          - tag_group
          example: aux_tag
        tag_group_id:
          type: string
          description: Tag group ids are available via the host tag group endpoint.
          example: agent
        operator:
          type: string
          enum:
          - one_of
          - none_of
        tag_ids:
          type: array
          example:
          - ip-v4-only
          - ip-v6-only
          items:
            type:
            - string
            - 'null'
            description: Tag groups tag ids are available via the host tag group endpoint.
            example: checkmk-agent
            pattern: ^[-0-9a-zA-Z_]+\Z
      required:
      - tag_group_id
      - tag_type
      additionalProperties: false
    TagGroupIsNotOrIs:
      type: object
      properties:
        tag_type:
          type: string
          enum: *id179
          example: aux_tag
        tag_group_id:
          type: string
          description: Tag group ids are available via the host tag group endpoint.
          example: agent
        operator:
          type: string
          enum:
          - is
          - is_not
        tag_id:
          type:
          - string
          - 'null'
          description: Tag groups tag ids are available via the host tag group endpoint.
          example: checkmk-agent
          pattern: ^[-0-9a-zA-Z_]+\Z
      required:
      - tag_group_id
      - tag_type
      additionalProperties: false
    TagGroupSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/TagGroupNoneOfOrOneof'
      - $ref: '#/components/schemas/TagGroupNoneOfOrOneof'
      - $ref: '#/components/schemas/TagGroupIsNotOrIs'
      - $ref: '#/components/schemas/TagGroupIsNotOrIs'
      discriminator:
        propertyName: operator
        mapping:
          one_of: '#/components/schemas/TagGroupNoneOfOrOneof'
          none_of: '#/components/schemas/TagGroupNoneOfOrOneof'
          is_not: '#/components/schemas/TagGroupIsNotOrIs'
          is: '#/components/schemas/TagGroupIsNotOrIs'
    TagTypeSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/AuxTag'
      - $ref: '#/components/schemas/TagGroupSelector'
      discriminator:
        propertyName: tag_type
        mapping:
          aux_tag: '#/components/schemas/AuxTag'
          tag_group: '#/components/schemas/TagGroupSelector'
    CheckboxMatchHostTags:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          description: A list of tag groups or aux tags with conditions
          example:
          - tag_type: tag_group
            tag_group_id: agent
            operator: is
            tag_id: checkmk-agent
          - tag_type: aux_tag
            operator: is_set
            tag_id: snmp
          items:
            $ref: '#/components/schemas/TagTypeSelector'
      required:
      - state
      - value
      additionalProperties: false
    MatchHostTagsCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxMatchHostTags'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxMatchHostTags'
    CheckboxLabel:
      type: object
      properties:
        key:
          type: string
          example: cmk/os_family
        value:
          type: string
          example: linux
      required:
      - key
      - value
      additionalProperties: false
    CheckboxWithListOfLabels:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          description: A list of key, value label pairs
          items:
            $ref: '#/components/schemas/CheckboxLabel'
      required:
      - state
      - value
      additionalProperties: false
    MatchLabelsCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfLabels'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfLabels'
    CheckboxWithListOfHostGroups:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          description: The host must be in one of the selected host groups
          example:
          - host_group1
          - host_group2
          uniqueItems: true
          items:
            type: string
            example: host_group_1
      required:
      - state
      - value
      additionalProperties: false
    MatchHostGroupsCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfHostGroups'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfHostGroups'
    CheckboxWithListOfHosts:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          description: ''
          example:
          - host_1
          - host_2
          uniqueItems: true
          items:
            type: string
            example: example.com
            pattern: ^[-0-9a-zA-Z_.]+\Z
      required:
      - state
      - value
      additionalProperties: false
    MatchHostsCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfHosts'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfHosts'
    CheckboxWithListOfServiceGroups:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          items:
            type: string
            example: service_group_1
      required:
      - state
      - value
      additionalProperties: false
    MatchServiceGroupsCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfServiceGroups'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfServiceGroups'
    ServiceGroupsRegex:
      type: object
      properties:
        match_type:
          type: string
          enum:
          - match_id
          - match_alias
          example: match_alias
        regex_list:
          type: array
          description: The text entered in this list is handled as a regular expression
            pattern
          example:
          - '[A-Z]+123'
          - '[A-Z]+456'
          uniqueItems: true
          items:
            type: string
      required:
      - match_type
      - regex_list
      additionalProperties: false
    CheckboxWithListOfServiceGroupsRegex:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          description: The service group alias must not match one of the following
            regular expressions. For host events this condition is simply ignored.
            The text entered here is handled as a regular expression pattern. The
            pattern is applied as infix search. Add a leading ^ to make it match from
            the beginning and/or a tailing $ to match till the end of the text. The
            match is performed case sensitive. Read more about regular expression
            matching in Checkmk in our user guide. You may paste a text from your
            clipboard which contains several parts separated by ';' characters into
            the last input field. The text will then be split by these separators
            and the single parts are added into dedicated input field
          $ref: '#/components/schemas/ServiceGroupsRegex'
      required:
      - state
      - value
      additionalProperties: false
    MatchServiceGroupRegexCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfServiceGroupsRegex'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfServiceGroupsRegex'
    MatchServicesCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfStr'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfStr'
    CheckboxWithListOfCheckTypes:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          description: 'Only apply the rule if the notification originates from certain
            types of check plug-ins. Note: Host notifications never match this rule
            if this option is being used'
          example:
          - 3par_capacity
          - acme_fan
          - acme_realm
          uniqueItems: true
          items:
            type: string
      required:
      - state
      - value
      additionalProperties: false
    MatchCheckTypesCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfCheckTypes'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfCheckTypes'
    StringCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithStrValue'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithStrValue'
    MatchContactGroupsCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfContactGroups'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfContactGroups'
    FromToServiceLevels:
      type: object
      properties:
        from_level:
          type: integer
          description: A service level represented as an integer
          example: 10
        to_level:
          type: integer
          description: A service level represented as an integer
          example: 10
      required:
      - from_level
      - to_level
      additionalProperties: false
    CheckboxWithFromToServiceLevels:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          description: Host or service must be in the following service level to get
            notification
          $ref: '#/components/schemas/FromToServiceLevels'
      required:
      - state
      - value
      additionalProperties: false
    MatchServiceLevelsCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithFromToServiceLevels'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithFromToServiceLevels'
    CheckboxWithTimePeriod:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: Match this rule only during times where the selected time period
            from the monitoring system is active
          example: 24X7
      required:
      - state
      - value
      additionalProperties: false
    MatchTimePeriodCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithTimePeriod'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithTimePeriod'
    HostEventType:
      type: object
      properties:
        start_or_end_of_flapping_state:
          type: boolean
          example: true
        start_or_end_of_scheduled_downtime:
          type: boolean
          example: true
        acknowledgement_of_problem:
          type: boolean
          example: false
        alert_handler_execution_successful:
          type: boolean
          example: true
        alert_handler_execution_failed:
          type: boolean
          example: false
        up_down:
          type: boolean
          example: true
        up_unreachable:
          type: boolean
          example: false
        down_up:
          type: boolean
          example: true
        down_unreachable:
          type: boolean
          example: false
        unreachable_down:
          type: boolean
          example: false
        unreachable_up:
          type: boolean
          example: false
        any_up:
          type: boolean
          example: false
        any_down:
          type: boolean
          example: true
        any_unreachable:
          type: boolean
          example: true
      required:
      - acknowledgement_of_problem
      - alert_handler_execution_failed
      - alert_handler_execution_successful
      - any_down
      - any_unreachable
      - any_up
      - down_unreachable
      - down_up
      - start_or_end_of_flapping_state
      - start_or_end_of_scheduled_downtime
      - unreachable_down
      - unreachable_up
      - up_down
      - up_unreachable
      additionalProperties: false
    CheckboxHostEventType:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          description: 'Select the host event types and transitions this rule should
            handle. Note: If you activate this option and do not also specify service
            event types then this rule will never hold for service notifications!
            Note: You can only match on event types created by the core.'
          $ref: '#/components/schemas/HostEventType'
      required:
      - state
      - value
      additionalProperties: false
    MatchHostEventTypeCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxHostEventType'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxHostEventType'
    ServiceEventType:
      type: object
      properties:
        start_or_end_of_flapping_state:
          type: boolean
          example: true
        start_or_end_of_scheduled_downtime:
          type: boolean
          example: true
        acknowledgement_of_problem:
          type: boolean
          example: false
        alert_handler_execution_successful:
          type: boolean
          example: true
        alert_handler_execution_failed:
          type: boolean
          example: false
        ok_warn:
          type: boolean
          example: true
        ok_ok:
          type: boolean
          example: true
        ok_crit:
          type: boolean
          example: false
        ok_unknown:
          type: boolean
          example: true
        warn_ok:
          type: boolean
          example: false
        warn_crit:
          type: boolean
          example: false
        warn_unknown:
          type: boolean
          example: false
        crit_ok:
          type: boolean
          example: true
        crit_warn:
          type: boolean
          example: true
        crit_unknown:
          type: boolean
          example: true
        unknown_ok:
          type: boolean
          example: true
        unknown_warn:
          type: boolean
          example: true
        unknown_crit:
          type: boolean
          example: true
        any_ok:
          type: boolean
          example: false
        any_warn:
          type: boolean
          example: false
        any_crit:
          type: boolean
          example: true
        any_unknown:
          type: boolean
          example: false
      required:
      - acknowledgement_of_problem
      - alert_handler_execution_failed
      - alert_handler_execution_successful
      - any_crit
      - any_ok
      - any_unknown
      - any_warn
      - crit_ok
      - crit_unknown
      - crit_warn
      - ok_crit
      - ok_ok
      - ok_unknown
      - ok_warn
      - start_or_end_of_flapping_state
      - start_or_end_of_scheduled_downtime
      - unknown_crit
      - unknown_ok
      - unknown_warn
      - warn_crit
      - warn_ok
      - warn_unknown
      additionalProperties: false
    CheckboxServiceEventType:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          description: 'Select the service event types and transitions this rule should
            handle. Note: If you activate this option and do not also specify host
            event types then this rule will never hold for host notifications! Note:
            You can only match on event types created by the core'
          $ref: '#/components/schemas/ServiceEventType'
      required:
      - state
      - value
      additionalProperties: false
    MatchServiceEventTypeCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxServiceEventType'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxServiceEventType'
    FromToNotificationNumbers:
      type: object
      properties:
        beginning_from:
          type: integer
          description: Let through notifications counting from this number. The first
            notification always has the number 1
          example: 1
        up_to:
          type: integer
          description: Let through notifications counting upto this number
          example: 999999
      required:
      - beginning_from
      - up_to
      additionalProperties: false
    CheckboxRestrictNotificationNumbers:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          $ref: '#/components/schemas/FromToNotificationNumbers'
      required:
      - state
      - value
      additionalProperties: false
    RestrictNotificationNumCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxRestrictNotificationNumbers'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxRestrictNotificationNumbers'
    ThrottlePeriodicNotifications:
      type: object
      properties:
        beginning_from:
          type: integer
          description: Beginning notification number
          example: 10
        send_every_nth_notification:
          type: integer
          description: The rate then you will receive the notification 1 through 10
            and then 15, 20, 25... and so on
          example: 5
      required:
      - beginning_from
      - send_every_nth_notification
      additionalProperties: false
    CheckboxThrottlePeriodicNotifcations:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          $ref: '#/components/schemas/ThrottlePeriodicNotifications'
      required:
      - state
      - value
      additionalProperties: false
    ThorttlePeriodicNotificationsCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxThrottlePeriodicNotifcations'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxThrottlePeriodicNotifcations'
    CheckboxWithListOfRuleIds:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: array
          description: ''
          example: ''
          uniqueItems: true
          items:
            type: string
      required:
      - state
      - value
      additionalProperties: false
    MatchRuleIdsOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithListOfRuleIds'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithListOfRuleIds'
    SysLogToFromPriorities:
      type: object
      properties:
        from_priority:
          type: string
          description: ''
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          example: warning
        to_priority:
          type: string
          description: ''
          enum:
          - emerg
          - alert
          - crit
          - err
          - warning
          - notice
          - info
          - debug
          example: warning
      required:
      - from_priority
      - to_priority
      additionalProperties: false
    CheckboxWithSysLogPriority:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          $ref: '#/components/schemas/SysLogToFromPriorities'
      required:
      - state
      additionalProperties: false
    MatchSysLogPriOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithSysLogPriority'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithSysLogPriority'
    CheckboxWithSysLogFacility:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          type: string
          description: ''
          enum:
          - kern
          - user
          - mail
          - daemon
          - auth
          - syslog
          - lpr
          - news
          - uucp
          - cron
          - authpriv
          - ftp
          - ntp
          - logaudit
          - logalert
          - clock
          - local0
          - local1
          - local2
          - local3
          - local4
          - local5
          - local6
          - local7
          - logfile
          - snmptrap
          example: kern
      required:
      - state
      additionalProperties: false
    MatchSysLogFacOneOf:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxWithSysLogFacility'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxWithSysLogFacility'
    EventConsoleAlertAttrsCreate:
      type: object
      properties:
        match_rule_ids:
          $ref: '#/components/schemas/MatchRuleIdsOneOf'
        match_syslog_priority:
          $ref: '#/components/schemas/MatchSysLogPriOneOf'
        match_syslog_facility:
          $ref: '#/components/schemas/MatchSysLogFacOneOf'
        match_event_comment:
          $ref: '#/components/schemas/StrValueOneOf'
      additionalProperties: false
    EventConsoleAlertAttributes:
      type: object
      properties:
        match_type:
          type: string
          description: ''
          enum: &id180
          - match_only_event_console_alerts
          - do_not_match_event_console_alerts
          example: match_only_event_console_events
        values:
          $ref: '#/components/schemas/EventConsoleAlertAttrsCreate'
      required:
      - match_type
      - values
      additionalProperties: false
    EventConsoleAlertAttributesBase:
      type: object
      properties:
        match_type:
          type: string
          description: ''
          enum: *id180
          example: match_only_event_console_events
      required:
      - match_type
      additionalProperties: false
    MatchTypeSelector:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/EventConsoleAlertAttributes'
      - $ref: '#/components/schemas/EventConsoleAlertAttributesBase'
      discriminator:
        propertyName: match_type
        mapping:
          match_only_event_console_alerts: '#/components/schemas/EventConsoleAlertAttributes'
          do_not_match_event_console_alerts: '#/components/schemas/EventConsoleAlertAttributesBase'
    CheckboxEventConsoleAlerts:
      type: object
      properties:
        state:
          type: string
          description: To enable or disable this field
          enum: *id170
          example: enabled
        value:
          description: The Event Console can have events create notifications in Check_MK.
            These notifications will be processed by the rule based notification system
            of Check_MK. This matching option helps you distinguishing and also gives
            you access to special event fields
          $ref: '#/components/schemas/MatchTypeSelector'
      required:
      - state
      - value
      additionalProperties: false
    EventConsoleAlertCheckbox:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/Checkbox'
      - $ref: '#/components/schemas/CheckboxEventConsoleAlerts'
      discriminator:
        propertyName: state
        mapping:
          disabled: '#/components/schemas/Checkbox'
          enabled: '#/components/schemas/CheckboxEventConsoleAlerts'
    RuleConditions:
      type: object
      properties:
        match_sites:
          $ref: '#/components/schemas/MatchSitesCheckbox'
        match_folder:
          $ref: '#/components/schemas/MatchFolderCheckbox'
        match_host_tags:
          $ref: '#/components/schemas/MatchHostTagsCheckbox'
        match_host_labels:
          $ref: '#/components/schemas/MatchLabelsCheckbox'
        match_host_groups:
          $ref: '#/components/schemas/MatchHostGroupsCheckbox'
        match_hosts:
          $ref: '#/components/schemas/MatchHostsCheckbox'
        match_exclude_hosts:
          $ref: '#/components/schemas/MatchHostsCheckbox'
        match_service_labels:
          $ref: '#/components/schemas/MatchLabelsCheckbox'
        match_service_groups:
          $ref: '#/components/schemas/MatchServiceGroupsCheckbox'
        match_exclude_service_groups:
          $ref: '#/components/schemas/MatchServiceGroupsCheckbox'
        match_service_groups_regex:
          $ref: '#/components/schemas/MatchServiceGroupRegexCheckbox'
        match_exclude_service_groups_regex:
          $ref: '#/components/schemas/MatchServiceGroupRegexCheckbox'
        match_services:
          $ref: '#/components/schemas/MatchServicesCheckbox'
        match_exclude_services:
          $ref: '#/components/schemas/MatchServicesCheckbox'
        match_check_types:
          $ref: '#/components/schemas/MatchCheckTypesCheckbox'
        match_plugin_output:
          $ref: '#/components/schemas/StringCheckbox'
        match_contact_groups:
          $ref: '#/components/schemas/MatchContactGroupsCheckbox'
        match_service_levels:
          $ref: '#/components/schemas/MatchServiceLevelsCheckbox'
        match_only_during_time_period:
          $ref: '#/components/schemas/MatchTimePeriodCheckbox'
        match_host_event_type:
          $ref: '#/components/schemas/MatchHostEventTypeCheckbox'
        match_service_event_type:
          $ref: '#/components/schemas/MatchServiceEventTypeCheckbox'
        restrict_to_notification_numbers:
          $ref: '#/components/schemas/RestrictNotificationNumCheckbox'
        throttle_periodic_notifications:
          $ref: '#/components/schemas/ThorttlePeriodicNotificationsCheckbox'
        match_notification_comment:
          $ref: '#/components/schemas/StringCheckbox'
        event_console_alerts:
          $ref: '#/components/schemas/EventConsoleAlertCheckbox'
      required:
      - event_console_alerts
      - match_check_types
      - match_contact_groups
      - match_exclude_hosts
      - match_exclude_service_groups
      - match_exclude_service_groups_regex
      - match_exclude_services
      - match_folder
      - match_host_event_type
      - match_host_groups
      - match_host_labels
      - match_host_tags
      - match_hosts
      - match_notification_comment
      - match_only_during_time_period
      - match_plugin_output
      - match_service_event_type
      - match_service_groups
      - match_service_groups_regex
      - match_service_labels
      - match_service_levels
      - match_services
      - match_sites
      - restrict_to_notification_numbers
      - throttle_periodic_notifications
      additionalProperties: false
    RuleNotification:
      type: object
      properties:
        rule_properties:
          $ref: '#/components/schemas/RuleProperties'
        notification_method:
          $ref: '#/components/schemas/RuleNotificationMethod'
        contact_selection:
          $ref: '#/components/schemas/ContactSelection'
        conditions:
          $ref: '#/components/schemas/RuleConditions'
      required:
      - conditions
      - contact_selection
      - notification_method
      - rule_properties
      additionalProperties: false
    NotificationRuleRequest:
      type: object
      properties:
        rule_config:
          description: ''
          example:
            rule_properties:
              description: A description or title of this rule.
              comment: A example comment.
              documentation_url: http://link/to/documentation
              do_not_apply_this_rule:
                state: disabled
              allow_users_to_deactivate:
                state: enabled
            notification_method:
              notify_plugin:
                option: create_notification_with_the_following_parameters
                plugin_params:
                  plugin_name: mail
                  from_details:
                    state: disabled
                  reply_to:
                    state: disabled
                  subject_for_host_notifications:
                    state: disabled
                  subject_for_service_notifications:
                    state: disabled
                  info_to_be_displayed_in_the_email_body:
                    state: disabled
                  insert_html_section_between_body_and_table:
                    state: disabled
                  url_prefix_for_links_to_checkmk:
                    state: disabled
                  sort_order_for_bulk_notifications:
                    state: disabled
                  send_separate_notification_to_every_recipient:
                    state: disabled
                  enable_sync_smtp:
                    state: disabled
                  display_graphs_among_each_other:
                    state: disabled
                  graphs_per_notification:
                    state: disabled
                  bulk_notifications_with_graphs:
                    state: disabled
              notification_bulking:
                state: disabled
            contact_selection:
              all_contacts_of_the_notified_object:
                state: disabled
              all_users:
                state: disabled
              all_users_with_an_email_address:
                state: disabled
              the_following_users:
                state: disabled
              members_of_contact_groups:
                state: disabled
              explicit_email_addresses:
                state: disabled
              restrict_by_custom_macros:
                state: disabled
              restrict_by_contact_groups:
                state: disabled
            conditions:
              match_sites:
                state: disabled
              match_folder:
                state: disabled
              match_host_tags:
                state: disabled
              match_host_labels:
                state: disabled
              match_host_groups:
                state: disabled
              match_hosts:
                state: disabled
              match_exclude_hosts:
                state: disabled
              match_service_labels:
                state: disabled
              match_service_groups:
                state: disabled
              match_exclude_service_groups:
                state: disabled
              match_service_groups_regex:
                state: disabled
              match_exclude_service_groups_regex:
                state: disabled
              match_services:
                state: disabled
              match_exclude_services:
                state: disabled
              match_check_types:
                state: disabled
              match_plugin_output:
                state: disabled
              match_contact_groups:
                state: disabled
              match_service_levels:
                state: disabled
              match_only_during_time_period:
                state: disabled
              match_host_event_type:
                state: disabled
              match_service_event_type:
                state: disabled
              restrict_to_notification_numbers:
                state: disabled
              throttle_periodic_notifications:
                state: disabled
              match_notification_comment:
                state: disabled
              event_console_alerts:
                state: disabled
          $ref: '#/components/schemas/RuleNotification'
      required:
      - rule_config
      additionalProperties: false
    Response1:
      type: object
      properties:
        secret:
          type: string
          description: Secret of the download user
      required:
      - secret
      additionalProperties: false
    PagetypeTopicExtensions:
      properties:
        description:
          description: Description of the pagetype topic.
          examples:
          - This topic covers all pagetypes related to networking.
          title: Description
          type: string
        sort_index:
          description: Sorting index for the topics.
          title: Sort Index
          type: integer
        is_default:
          description: Indicates if this is the default topic.
          title: Is Default
          type: boolean
      required:
      - description
      - sort_index
      - is_default
      title: PagetypeTopicExtensions
      type: object
    PagetypeTopicModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: pagetype_topic
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this topic.
          examples:
          - other
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - Other
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/PagetypeTopicExtensions'
          description: Additional properties of the pagetype topic.
      required:
      - links
      - domainType
      - id
      - title
      - extensions
      title: PagetypeTopicModel
      type: object
    PagetypeTopicCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: pagetype_topic
          description: The domain type of the objects in the collection.
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: The list of pagetype topics.
          items:
            $ref: '#/components/schemas/PagetypeTopicModel'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: PagetypeTopicCollectionModel
      type: object
    PerformanceSettings:
      type: object
      properties:
        responses_timeout:
          type: integer
          default: 8
          description: Timeout for responses
          example: 8
        hop_probes:
          type: integer
          default: 2
          description: Number of probes per hop
          example: 2
        max_gateway_distance:
          type: integer
          default: 10
          description: Maximum distance (TTL) to gateway
          example: 10
        ping_probes:
          type: integer
          default: 5
          description: Number of ping probes
          example: 5
      additionalProperties: false
    Configuration:
      type: object
      properties:
        force_explicit_parents:
          type: boolean
          default: false
          description: Force explicit setting for parents even if setting match that
            of the folder
          example: false
      additionalProperties: false
    NoGatewayHosts:
      type: object
      properties:
        option:
          type: string
          description: Creation of gateway hosts option
          enum: &id181
          - no_gateway_hosts
          - create_in_folder
          - create_in_host_location
          example: no_gateway_hosts
      required:
      - option
      additionalProperties: false
    CreateInFolder:
      type: object
      properties:
        option:
          type: string
          description: Creation of gateway hosts option
          enum: *id181
          example: no_gateway_hosts
        folder:
          type: string
          description: 'Folder location where the gateway hosts should be created


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          example: /
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        hosts_alias:
          type: string
          default: Created by parent scan
          description: Alias for created gateway hosts
          example: Created by parent scan
      required:
      - folder
      - option
      additionalProperties: false
    CreateInHostLocation:
      type: object
      properties:
        option:
          type: string
          description: Creation of gateway hosts option
          enum: *id181
          example: no_gateway_hosts
        hosts_alias:
          type: string
          default: Created by parent scan
          description: Alias for created gateway hosts
          example: Created by parent scan
      required:
      - option
      additionalProperties: false
    GatewayHosts:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/NoGatewayHosts'
      - $ref: '#/components/schemas/CreateInFolder'
      - $ref: '#/components/schemas/CreateInHostLocation'
      discriminator:
        propertyName: option
        mapping:
          no_gateway_hosts: '#/components/schemas/NoGatewayHosts'
          create_in_folder: '#/components/schemas/CreateInFolder'
          create_in_host_location: '#/components/schemas/CreateInHostLocation'
    ParentScan:
      type: object
      properties:
        host_names:
          type: array
          description: Targeted hosts for parent scan.
          example:
          - host1
          - host2
          items:
            type: string
            example: example.com
            pattern: ^[-0-9a-zA-Z_.]+\Z
        performance:
          description: Parent scan performance related options
          example:
            responses_timeout: 8
            hop_probes: 2
            max_gateway_distance: 10
            ping_probes: 5
          $ref: '#/components/schemas/PerformanceSettings'
        configuration:
          description: Parent scan configuration options
          example:
            force_explicit_parents: false
          $ref: '#/components/schemas/Configuration'
        gateway_hosts:
          description: Creation of gateway hosts options
          example:
            option: no_gateway_hosts
          $ref: '#/components/schemas/GatewayHosts'
      required:
      - configuration
      - gateway_hosts
      - host_names
      - performance
      additionalProperties: false
    JobLogs:
      type: object
      properties:
        result:
          type: array
          description: The list of result related logs
          items:
            type: string
        progress:
          type: array
          description: The list of progress related logs
          items:
            type: string
      additionalProperties: false
    BackgroundJobStatus1:
      type: object
      properties:
        active:
          type: boolean
          description: This field indicates if the background job is active or not.
          example: true
        state:
          type: string
          description: This field indicates the current state of the background job.
          enum:
          - initialized
          - running
          - finished
          - stopped
          - exception
          example: initialized
        logs:
          description: Logs related to the background job.
          example:
            result:
            - result1
            progress:
            - progress1
          $ref: '#/components/schemas/JobLogs'
      required:
      - active
      - logs
      - state
      additionalProperties: false
    BackgroundJobStatusObject:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: parent_scan
          description: The domain type of the object
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The attributes of the background job
          $ref: '#/components/schemas/BackgroundJobStatus1'
      required:
      - links
      additionalProperties: false
    PasswordExtension:
      properties:
        comment:
          description: An optional comment to explain the purpose of this password.
          examples:
          - Kommentar
          title: Comment
          type: string
        documentation_url:
          description: A URL pointing to documentation or any other page.
          examples:
          - localhost
          title: Documentation Url
          type: string
        owned_by:
          deprecated: true
          description: Deprecated - use `editable_by` instead. The owner of the password
            who is able to edit, delete and use existing passwords.
          examples:
          - admin
          title: Owned By
          type: string
        editable_by:
          description: The owner of the password who is able to edit, delete and use
            existing passwords.
          examples:
          - admin
          title: Editable By
          type: string
        shared:
          description: Each password is owned by a group of users which are able to
            edit, delete and use existing passwords.
          examples:
          - - all
          items:
            type: string
          title: Shared
          type: array
        customer:
          description: By specifying a customer, you configure on which sites the
            user object will be available. 'global' will make the object available
            on all sites.
          examples:
          - provider
          title: Customer
          type: string
      title: PasswordExtension
      type: object
    PasswordObject:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: password
          description: The type of the domain-object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/PasswordExtension'
          description: All the attributes of the domain object.
      required:
      - links
      - domainType
      - extensions
      title: PasswordObject
      type: object
    PasswordCollection:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: password
          description: The domain type of the objects in the collection.
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of password objects.
          items:
            $ref: '#/components/schemas/PasswordObject'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: PasswordCollection
      type: object
    UpdatePassword:
      additionalProperties: false
      properties:
        title:
          description: The name of your password for easy recognition.
          examples:
          - Kubernetes login
          title: Title
          type: string
        comment:
          description: An optional comment to explain the purpose of this password.
          examples:
          - Kommentar
          title: Comment
          type: string
        documentation_url:
          description: An optional URL pointing to documentation or any other page.
            You can use either global URLs (beginning with http://), absolute local
            urls (beginning with /) or relative URLs (that are relative to check_mk/).
          examples:
          - localhost
          title: Documentation Url
          type: string
        password:
          description: The password string
          examples:
          - password
          minLength: 1
          title: Password
          type: string
        owner:
          deprecated: true
          description: Deprecated - use `editable_by` instead. Each password is owned
            by a group of users which are able to edit, delete and use existing passwords.
          examples:
          - admin
          title: Owner
          type: string
        editable_by:
          description: Each password is owned by a group of users which are able to
            edit, delete and use existing passwords.
          examples:
          - admin
          title: Editable By
          type: string
        shared:
          description: Each password is owned by a group of users which are able to
            edit, delete and use existing passwords.
          examples:
          - - all
          items:
            type: string
          title: Shared
          type: array
        customer:
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites. This field is required for the following
            editions: Managed.'
          examples:
          - provider
          title: Customer
          type: string
      title: UpdatePassword
      type: object
    CreatePassword:
      additionalProperties: false
      properties:
        ident:
          description: The unique identifier for the password
          examples:
          - pass
          title: Ident
          type: string
        title:
          description: The name of your password for easy recognition.
          examples:
          - Kubernetes login
          title: Title
          type: string
        comment:
          default: ''
          description: An optional comment to explain the purpose of this password.
          examples:
          - Kommentar
          title: Comment
          type: string
        documentation_url:
          default: ''
          description: An optional URL pointing to documentation or any other page.
            You can use either global URLs (beginning with http://), absolute local
            urls (beginning with /) or relative URLs (that are relative to check_mk/).
          examples:
          - localhost
          title: Documentation Url
          type: string
        password:
          description: The password string
          examples:
          - password
          minLength: 1
          title: Password
          type: string
        owner:
          deprecated: true
          description: Deprecated - use `editable_by` instead. Each password is owned
            by a group of users which are able to edit, delete and use existing passwords.
          examples:
          - admin
          title: Owner
          type: string
        editable_by:
          description: Each password is owned by a group of users which are able to
            edit, delete and use existing passwords. By default, the admin group is
            the owner of a password.
          examples:
          - admin
          title: Editable By
          type: string
        shared:
          description: Each password is owned by a group of users which are able to
            edit, delete and use existing passwords.
          examples:
          - - all
          items:
            type: string
          title: Shared
          type: array
        customer:
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites. This field is required for the following
            editions: Managed.'
          examples:
          - provider
          title: Customer
          type: string
      required:
      - ident
      - title
      - password
      title: CreatePassword
      type: object
    QuickSetupButtonIcon:
      type: object
      properties:
        name:
          type: string
          description: Name of the icon.
          example: next
        rotate:
          type: integer
          description: Rotation in degrees for the icon
          example: 90
      additionalProperties: false
    QuickSetupButton:
      type: object
      properties:
        id:
          type:
          - string
          - 'null'
          description: The button id
          example: next
        label:
          type: string
          description: The label of the button
          example: Next
        icon:
          description: Definition of the button icon
          example:
            name: save-to-service
            rotate: 0
          anyOf:
          - $ref: '#/components/schemas/QuickSetupButtonIcon'
          - type: 'null'
        aria_label:
          type:
          - string
          - 'null'
          description: The aria label of the button
          example: Next
      additionalProperties: false
    Action:
      type: object
      properties:
        id:
          type: string
          description: The action id
          example: action
        button:
          description: Definition of the action button
          example:
            label: Next
            aria_label: Next
          $ref: '#/components/schemas/QuickSetupButton'
        load_wait_label:
          type: string
          description: A string to display while waiting for the next stage
          example: Please wait...
      additionalProperties: false
    QuickSetupStageOverviewResponse:
      type: object
      properties:
        title:
          type: string
          description: The title of a stage
          example: Prepare AWS for Checkmk
        sub_title:
          type:
          - string
          - 'null'
          description: The sub-title of a stage
          example: aws
      additionalProperties: false
    QuickSetupStageStructure:
      type: object
      properties:
        components:
          type: array
          description: A collection of stage components
          example: []
          items:
            type: object
            additionalProperties: {}
        actions:
          type: array
          description: A collection of stage actions
          example: []
          items:
            $ref: '#/components/schemas/Action'
        prev_button:
          description: Definition of the `go to previous stage` button
          example:
            id: prev
            label: Back
          anyOf:
          - $ref: '#/components/schemas/QuickSetupButton'
          - type: 'null'
      additionalProperties: false
    QuickSetupGuidedResponse:
      type: object
      properties:
        quick_setup_id:
          type: string
          description: The quicksetup id
          example: aws_quicksetup
        actions:
          type: array
          description: A list of all complete actions
          example: &id182
          - id: save
            label: Save configuration
          items:
            $ref: '#/components/schemas/Action'
        prev_button:
          description: Definition of the `go to previous stage` button
          example: &id183
            id: prev
            label: Back
            aria_label: Back
          anyOf:
          - $ref: '#/components/schemas/QuickSetupButton'
          - type: 'null'
        guided_mode_string:
          type: string
          description: The string for the guided mode label
          example: Guided mode
        overview_mode_string:
          type: string
          description: The string for the overview mode label
          example: Overview mode
        overviews:
          type: array
          description: The overview of the quicksetup stages
          example: []
          items:
            $ref: '#/components/schemas/QuickSetupStageOverviewResponse'
        stage:
          description: The first stage
          example:
            components: []
          $ref: '#/components/schemas/QuickSetupStageStructure'
      additionalProperties: false
    QuickSetupCompleteStageResponse:
      type: object
      properties:
        title:
          type: string
          description: The title of a stage
          example: Prepare AWS for Checkmk
        sub_title:
          type:
          - string
          - 'null'
          description: The sub-title of a stage
          example: aws
        components:
          type: array
          description: A collection of stage components
          example: []
          items:
            type: object
            additionalProperties: {}
        actions:
          type: array
          description: A collection of stage actions
          example: []
          items:
            $ref: '#/components/schemas/Action'
        prev_button:
          description: Definition of the `go to previous stage` button
          example:
            id: prev
            label: Back
          anyOf:
          - $ref: '#/components/schemas/QuickSetupButton'
          - type: 'null'
      additionalProperties: false
    QuickSetupOverviewResponse:
      type: object
      properties:
        quick_setup_id:
          type: string
          description: The quicksetup id
          example: aws_quicksetup
        actions:
          type: array
          description: A list of all complete actions
          example: *id182
          items:
            $ref: '#/components/schemas/Action'
        prev_button:
          description: Definition of the `go to previous stage` button
          example: *id183
          anyOf:
          - $ref: '#/components/schemas/QuickSetupButton'
          - type: 'null'
        guided_mode_string:
          type: string
          description: The string for the guided mode label
          example: Guided mode
        overview_mode_string:
          type: string
          description: The string for the overview mode label
          example: Overview mode
        stages:
          type: array
          description: A list of all stages and their components
          example: []
          items:
            $ref: '#/components/schemas/QuickSetupCompleteStageResponse'
      additionalProperties: false
    QuickSetupResponse:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/QuickSetupGuidedResponse'
      - $ref: '#/components/schemas/QuickSetupOverviewResponse'
      discriminator:
        propertyName: mode
        mapping:
          guided: '#/components/schemas/QuickSetupGuidedResponse'
          overview: '#/components/schemas/QuickSetupOverviewResponse'
    Errors:
      type: object
      properties:
        stage_index:
          type:
          - integer
          - 'null'
          description: Index of the stage containing errors.
          example: 0
        formspec_errors:
          type: object
          description: A mapping of formspec ids to formspec validation errors
          example: {}
          additionalProperties: {}
        stage_errors:
          type: array
          description: A collection of general stage errors
          example: []
          items:
            type: string
      additionalProperties: false
    BackgroundJobException:
      type: object
      properties:
        message:
          type: string
          description: The exception message
          example: An exception message
        traceback:
          type: string
          description: The traceback of the exception
          example: The traceback of the background job exception
      additionalProperties: false
    QuickSetupCompleteResponse:
      type: object
      properties:
        redirect_url:
          type: string
          description: The url to redirect to after saving the quicksetup
          example: http://save/url
        all_stage_errors:
          type: array
          description: A list of stage errors
          example: []
          items:
            description: Formspec errors and general stage errors
            example: {}
            anyOf:
            - $ref: '#/components/schemas/Errors'
            - type: 'null'
        background_job_exception:
          description: The exception details if the action was run in the background
            and raised an unexpected exception
          example: &id184 {}
          $ref: '#/components/schemas/BackgroundJobException'
      additionalProperties: false
    QuickSetupStageActionResponse:
      type: object
      properties:
        stage_recap:
          type: array
          description: A collection of widget recaps
          example: []
          items:
            type: object
            additionalProperties: {}
        validation_errors:
          description: All formspec errors and general stage errors
          example: {}
          anyOf:
          - $ref: '#/components/schemas/Errors'
          - type: 'null'
        background_job_exception:
          description: The exception details if the action was run in the background
            and raised an unexpected exception
          example: *id184
          $ref: '#/components/schemas/BackgroundJobException'
      additionalProperties: false
    QuickSetupStageRequest:
      type: object
      properties:
        form_data:
          type: object
          description: The form data entered by the user.
          example: {}
          additionalProperties: {}
      required:
      - form_data
      additionalProperties: false
    QuickSetupFinalActionRequest:
      type: object
      properties:
        button_id:
          type: string
          description: Unique id of the action button clicked by the user
          example: save
        stages:
          type: array
          description: A list of stages' form data
          example:
          - stage_data: []
          - stage_data: []
          items:
            description: A stage id and it's form data
            $ref: '#/components/schemas/QuickSetupStageRequest'
      required:
      - button_id
      additionalProperties: false
    QuickSetupStageActionRequest:
      type: object
      properties:
        stage_action_id:
          type: string
          description: The id of the stage action to be performed
          example: test_connection
        stages:
          type: array
          description: A list of stages
          example:
          - form_data: {}
          - form_data: {}
          items:
            description: A stage id and its components
            $ref: '#/components/schemas/QuickSetupStageRequest'
      required:
      - stage_action_id
      additionalProperties: false
    RelayConfigModel:
      additionalProperties: false
      properties:
        alias:
          description: The relay alias.
          title: Alias
          type: string
        siteid:
          description: The relay site ID.
          title: Siteid
          type: string
        num_fetchers:
          description: The number of fetcher processes .
          title: Num Fetchers
          type: integer
        log_level:
          description: The log level to use in the relay engine.
          enum:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
          - CRITICAL
          title: Log Level
          type: string
      required:
      - alias
      - siteid
      - num_fetchers
      - log_level
      title: RelayConfigModel
      type: object
    RelayModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: relay
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/RelayConfigModel'
          description: All the data and metadata of this relay.
      required:
      - links
      - domainType
      - extensions
      title: RelayModel
      type: object
    RelayCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: relay
          description: The domain type of the objects in the collection
          examples:
          - relay
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of relay objects
          items:
            $ref: '#/components/schemas/RelayModel'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: RelayCollectionModel
      type: object
    Properties:
      type: object
      properties:
        description:
          type: string
          description: A description for this rule to inform other users about its
            intent.
          example: This rule is here to foo the bar hosts.
        comment:
          type: string
          description: Any comment string.
          example: Created yesterday due to foo hosts behaving weird.
        documentation_url:
          type: string
          format: url
          description: An URL (e.g. an internal Wiki entry) which explains this rule.
          example: http://example.com/wiki/ConfiguringFooBarHosts
        disabled:
          type: boolean
          default: false
          description: When set to False, the rule will be evaluated. Default is False.
          example: false
      additionalProperties: false
    HostOrServiceCondition:
      type: object
      properties:
        match_on:
          type: array
          description: A list of string matching regular expressions.
          items:
            type: string
            minLength: 1
        operator:
          type: string
          description: "How the hosts or services should be matched.\n * one_of -\
            \ will match if any of the hosts or services is matched\n * none_of -\
            \ will match if none of the hosts are matched. In other words: will match\
            \ all hosts or services which are not specified.\n"
          enum:
          - one_of
          - none_of
      required:
      - match_on
      - operator
      additionalProperties: false
    TagConditionScalarSchemaBase:
      type: object
      properties:
        key:
          type: string
          description: The name of the tag.
        operator:
          type: string
          description: If the tag's value should match what is given under the field
            `value`.
          enum:
          - is
          - is_not
        value:
          type: string
          description: The value of a tag.
      required:
      - key
      - operator
      - value
      additionalProperties: false
    TagConditionConditionSchemaBase:
      type: object
      properties:
        key:
          type: string
          description: The name of the tag.
        operator:
          type: string
          description: If the matched tag should be one of the given values, or not.
          enum:
          - one_of
          - none_of
        value:
          type: array
          description: A list of values for the tag.
          items:
            type: string
            description: The value of a tag.
      required:
      - key
      - operator
      - value
      additionalProperties: false
    TagCondition:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/TagConditionScalarSchemaBase'
      - $ref: '#/components/schemas/TagConditionScalarSchemaBase'
      - $ref: '#/components/schemas/TagConditionConditionSchemaBase'
      - $ref: '#/components/schemas/TagConditionConditionSchemaBase'
      discriminator:
        propertyName: operator
        mapping:
          is: '#/components/schemas/TagConditionScalarSchemaBase'
          is_not: '#/components/schemas/TagConditionScalarSchemaBase'
          one_of: '#/components/schemas/TagConditionConditionSchemaBase'
          none_of: '#/components/schemas/TagConditionConditionSchemaBase'
    LabelCondition1:
      type: object
      properties:
        operator:
          type: string
          description: Boolean operator that connects the label to other labels within
            the same label group condition
          enum:
          - and
          - or
          - not
        label:
          type: string
          description: A label of format "{key}:{value}"
          example: os:windows
      required:
      - label
      additionalProperties: false
    LabelGroupCondition1:
      type: object
      properties:
        operator:
          type: string
          default: and
          description: Boolean operator that connects the label group to other label
            groups
          enum:
          - and
          - or
          - not
        label_group:
          type: array
          description: A list of label conditions that form a label group
          example:
          - operator: and
            label: os:linux
          minLength: 1
          items:
            $ref: '#/components/schemas/LabelCondition1'
      required:
      - label_group
      additionalProperties: false
    Conditions:
      type: object
      properties:
        host_name:
          description: Here you can enter a list of explicit host names that the rule
            should or should not apply to. Leave this option disabled if you want
            the rule to apply for all hosts specified by the given tags. The names
            that you enter here are compared with case sensitive exact matching. Alternatively
            you can use regular expressions if you enter a tilde `~` as the first
            character. That regular expression must match the beginning of the host
            names in question.
          example: &id185
            match_on:
            - host1
            - host2
            operator: one_of
          $ref: '#/components/schemas/HostOrServiceCondition'
        host_tags:
          description: The rule will only be applied to hosts fulfilling all the host
            tag conditions listed here, even if they appear in the list of explicit
            host names.
          example: &id186
          - key: criticality
            operator: is
            value: prod
          type: array
          items:
            $ref: '#/components/schemas/TagCondition'
        host_label_groups:
          type: array
          description: Further restrict this rule by applying host label conditions.
            Although all items in this list have a default operator value, the operator
            value for the the first item in the list does not have any effect.
          example: &id187
          - label_group:
            - operator: and
              label: db:mssql
          - operator: and
            label_group:
            - operator: and
              label: os:windows
          items:
            $ref: '#/components/schemas/LabelGroupCondition1'
        service_label_groups:
          type: array
          description: Restrict the application of the rule, by checking against service
            label conditions. Although all items in this list have a default operator
            value, the operator value for the the first item in the list does not
            have any effect.
          example: &id188
          - label_group:
            - operator: and
              label: db:mssql
          - operator: and
            label_group:
            - operator: and
              label: os:windows
          items:
            $ref: '#/components/schemas/LabelGroupCondition1'
        service_description:
          description: "Specify a list of service patterns this rule shall apply to.\n\
            \ * The patterns must match the beginning of the service in question.\n\
            \ * Adding a `$` to the end forces an exact match.\n * Pattern use regular\
            \ expressions. e.g. a `.*` will match an arbitrary text.\n * The text\
            \ entered here is handled as a regular expression pattern.\n * The pattern\
            \ is matched from the beginning.\n * The match is performed case sensitive.\n\
            BE AWARE: Depending on the service ruleset the service_description of\
            \ the rules is only a check item or a full service name. For example the\
            \ check parameters rulesets only use the item, and other service rulesets\
            \ like disabled services ruleset use full servicedescriptions."
          example: &id189
            match_on:
            - foo1
            - bar2
            operator: none_of
          $ref: '#/components/schemas/HostOrServiceCondition'
      additionalProperties: false
    RuleExtensions:
      type: object
      properties:
        ruleset:
          type: string
          description: The name of the ruleset.
        folder:
          type: string
          description: 'The path name of the folder.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          example: ~router
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        folder_index:
          type: integer
          description: The position of this rule in the chain in this folder.
        properties:
          description: Property values of this rule.
          example: {}
          $ref: '#/components/schemas/Properties'
        value_raw:
          type: string
          description: The raw parameter value for this rule.
          example: '{"ignore_fs_types": ["tmpfs"]}'
        conditions:
          description: Conditions.
          $ref: '#/components/schemas/Conditions'
      required:
      - folder
      additionalProperties: false
    RuleObject:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: rule
          description: Domain type of this object.
          example: rule
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: Attributes specific to rule objects.
          $ref: '#/components/schemas/RuleExtensions'
      required:
      - links
      additionalProperties: false
    RuleCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: rule
          description: Domain type of this object.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          description: The collection itself. Each entry in here is part of the collection.
          type: array
          items:
            $ref: '#/components/schemas/RuleObject'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    LabelCondition2:
      type: object
      properties:
        key:
          type: string
          description: The key of the label. e.g. 'os' in 'os:windows'
        operator:
          type: string
          description: How the label should be matched.
          enum:
          - is
          - is_not
        value:
          type: string
          description: The value of the label. e.g. 'windows' in 'os:windows'
      required:
      - key
      - operator
      - value
      additionalProperties: false
    InputConditions:
      type: object
      properties:
        host_name:
          description: Here you can enter a list of explicit host names that the rule
            should or should not apply to. Leave this option disabled if you want
            the rule to apply for all hosts specified by the given tags. The names
            that you enter here are compared with case sensitive exact matching. Alternatively
            you can use regular expressions if you enter a tilde `~` as the first
            character. That regular expression must match the beginning of the host
            names in question.
          example: *id185
          $ref: '#/components/schemas/HostOrServiceCondition'
        host_tags:
          description: The rule will only be applied to hosts fulfilling all the host
            tag conditions listed here, even if they appear in the list of explicit
            host names.
          example: *id186
          type: array
          items:
            $ref: '#/components/schemas/TagCondition'
        host_label_groups:
          type: array
          description: Further restrict this rule by applying host label conditions.
            Although all items in this list have a default operator value, the operator
            value for the the first item in the list does not have any effect.
          example: *id187
          items:
            $ref: '#/components/schemas/LabelGroupCondition1'
        service_label_groups:
          type: array
          description: Restrict the application of the rule, by checking against service
            label conditions. Although all items in this list have a default operator
            value, the operator value for the the first item in the list does not
            have any effect.
          example: *id188
          items:
            $ref: '#/components/schemas/LabelGroupCondition1'
        service_description:
          description: "Specify a list of service patterns this rule shall apply to.\n\
            \ * The patterns must match the beginning of the service in question.\n\
            \ * Adding a `$` to the end forces an exact match.\n * Pattern use regular\
            \ expressions. e.g. a `.*` will match an arbitrary text.\n * The text\
            \ entered here is handled as a regular expression pattern.\n * The pattern\
            \ is matched from the beginning.\n * The match is performed case sensitive.\n\
            BE AWARE: Depending on the service ruleset the service_description of\
            \ the rules is only a check item or a full service name. For example the\
            \ check parameters rulesets only use the item, and other service rulesets\
            \ like disabled services ruleset use full servicedescriptions."
          example: *id189
          $ref: '#/components/schemas/HostOrServiceCondition'
        host_labels:
          deprecated: true
          description: 'Further restrict this rule by applying host label conditions.
            - Deprecated: Use `host_label_groups` instead.'
          example:
          - key: os
            operator: is
            value: windows
          type: array
          items:
            $ref: '#/components/schemas/LabelCondition2'
        service_labels:
          deprecated: true
          description: 'Restrict the application of the rule, by checking against
            service label conditions. - Deprecated: Use `service_label_groups` instead.'
          example:
          - key: os
            operator: is
            value: windows
          type: array
          items:
            $ref: '#/components/schemas/LabelCondition2'
      additionalProperties: false
    UpdateRuleObject:
      type: object
      properties:
        properties:
          description: Configuration values for rules.
          example: &id190
            disabled: false
          $ref: '#/components/schemas/Properties'
        value_raw:
          type: string
          description: The raw parameter value for this rule. To create the correct
            structure, for now use the 'export for API' menu item in the Rule Editor
            of the GUI. The value is expected to be a valid Python type.
          example: '{''cmk/os_family'': ''linux''}'
        conditions:
          description: Conditions.
          example: &id191
            host_name:
              match_on:
              - host1
              - host2
              operator: one_of
            host_tags:
            - key: criticality
              operator: is
              value: prod
            host_labels:
            - key: os
              operator: is
              value: windows
            service_labels:
            - key: os
              operator: is
              value: windows
            host_label_groups:
            - operator: and
              label_group:
              - operator: and
                label: os:windows
            service_label_groups:
            - operator: and
              label_group:
              - operator: and
                label: os:windows
            service_description:
              match_on:
              - foo1
              - bar2
              operator: none_of
          $ref: '#/components/schemas/InputConditions'
      required:
      - value_raw
      additionalProperties: false
    InputRuleObject:
      type: object
      properties:
        properties:
          description: Configuration values for rules.
          example: *id190
          $ref: '#/components/schemas/Properties'
        value_raw:
          type: string
          description: The raw parameter value for this rule. To create the correct
            structure, for now use the 'export for API' menu item in the Rule Editor
            of the GUI. The value is expected to be a valid Python type.
          example: '{''cmk/os_family'': ''linux''}'
        conditions:
          description: Conditions.
          example: *id191
          $ref: '#/components/schemas/InputConditions'
        ruleset:
          type: string
          description: Name of rule set.
          example: host_label_rules
        folder:
          type: string
          description: 'The path name of the folder.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          example: ~hosts~linux
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
      required:
      - folder
      - ruleset
      - value_raw
      additionalProperties: false
    MoveToFolder:
      type: object
      properties:
        position:
          type: string
          description: "The type of position to move to.\n        Note that you cannot\
            \ move rules before rules managed by a Quick setup. In the case of\n \
            \       `top_of_folder` your rule will instead be after all managed rules.\
            \ If you specify a managed\n        rule in `after_specific_rule` or `before_specific_rule`\
            \ you will receive an error."
          example: top_of_folder
        folder:
          type: string
          description: 'The path name of the folder.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          example: /
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
      additionalProperties: false
    MoveToSpecificRule:
      type: object
      properties:
        position:
          type: string
          description: "The type of position to move to.\n        Note that you cannot\
            \ move rules before rules managed by a Quick setup. In the case of\n \
            \       `top_of_folder` your rule will instead be after all managed rules.\
            \ If you specify a managed\n        rule in `after_specific_rule` or `before_specific_rule`\
            \ you will receive an error."
          example: top_of_folder
        rule_id:
          type: string
          description: The UUID of the rule to move after/before.
          example: f8b74720-a454-4242-99c4-62994ef0f2bf
      additionalProperties: false
    MoveRuleTo:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/MoveToFolder'
      - $ref: '#/components/schemas/MoveToFolder'
      - $ref: '#/components/schemas/MoveToSpecificRule'
      - $ref: '#/components/schemas/MoveToSpecificRule'
      discriminator:
        propertyName: position
        mapping:
          top_of_folder: '#/components/schemas/MoveToFolder'
          bottom_of_folder: '#/components/schemas/MoveToFolder'
          after_specific_rule: '#/components/schemas/MoveToSpecificRule'
          before_specific_rule: '#/components/schemas/MoveToSpecificRule'
    Api404CustomError4:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The rule to be deleted was not found.
        title:
          type: string
          description: A summary of the problem.
          example: Not Found
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    Api400CustomError:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 400
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: The rule is locked and cannot be deleted.
        title:
          type: string
          description: A summary of the problem.
          example: Bad Request
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    RulesetCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: ruleset
          description: Domain type of this object.
          example: ruleset
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          description: The collection itself. Each entry in here is part of the collection.
          type: array
          items:
            $ref: '#/components/schemas/CollectionItem'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    RulesetExtensions:
      type: object
      properties:
        name:
          type: string
          description: The name of the ruleset
          example: host_groups
        folder:
          type: string
          description: 'The path name of the folder.


            Path delimiters can be either `~`, `/` or `\`. Please use the one most
            appropriate for your quoting/escaping needs. A good default choice is
            `~`.'
          example: ~router
          pattern: ^(?:(?:[~\\\/]|(?:[~\\\/][-_ a-zA-Z0-9.]+)+[~\\\/]?)|[0-9a-fA-F]{32})$
        number_of_rules:
          type: integer
          description: The number of rules of this ruleset.
          example: 5
      required:
      - folder
      additionalProperties: false
    RulesetObject:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: ruleset
          description: Domain type of this object.
          example: ruleset
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: Specific attributes related to rulesets.
          $ref: '#/components/schemas/RulesetExtensions'
      required:
      - links
      additionalProperties: false
    GeneralProperties:
      type: object
      properties:
        name:
          type: string
          description: Display name for the SAML connection.
          minLength: 1
        description:
          type: string
          default: ''
          description: Add a title or describe this rule.
        comment:
          type: string
          default: ''
          description: An optional comment to explain the purpose of this object.
            The comment is only visible in this dialog and can help other users to
            understand the intentions of the configured attributes.
        documentation_url:
          type: string
          default: ''
          description: An optional URL linking documentation or any other page. An
            icon links to the page and opens in a new tab when clicked. You can use
            either global URLs (starting with http://), absolute local URLs (starting
            with /) or relative URLs (relative to check_mk/).
        rule_activation:
          type: string
          default: activated
          description: Selecting 'deactivated' will disable the rule, but it will
            remain in the configuration.
          enum: &id192
          - activated
          - deactivated
        id:
          type: string
          description: A SAML connection ID string.
          minLength: 1
      required:
      - id
      - name
      additionalProperties: false
    Metadata:
      type: object
      properties:
        entity_id:
          type: string
          description: Entity ID for this connection.
        metadata_endpoint:
          type: string
          format: url
          description: Metadata endpoint for this connection.
        assertion_consumer_service_endpoint:
          type: string
          format: url
          description: Assertion Consumer Service endpoint for this connection.
      required:
      - assertion_consumer_service_endpoint
      - entity_id
      - metadata_endpoint
      additionalProperties: false
    IdpMetadataURL:
      type: object
      properties:
        type:
          type: string
          description: Automatically determine identity provider metadata by querying
            an endpoint.
          enum:
          - url
        url:
          type: string
          format: url
          description: URL to fetch identity provider metadata from.
      required:
      - type
      - url
      additionalProperties: false
    IdpMetadataXML:
      type: object
      properties:
        type:
          type: string
          description: Static configuration in XML format.
          enum:
          - xml
        xml:
          type: string
          description: Identity provider metadata xml.
      required:
      - type
      - xml
      additionalProperties: false
    IdpMetadata:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/IdpMetadataURL'
      - $ref: '#/components/schemas/IdpMetadataXML'
      discriminator:
        propertyName: type
        mapping:
          url: '#/components/schemas/IdpMetadataURL'
          xml: '#/components/schemas/IdpMetadataXML'
    IdpTimeout:
      type: object
      properties:
        connect:
          type: integer
          default: 12
          description: Connect timeout.
          minimum: 1
        read:
          type: integer
          default: 12
          description: Read timeout.
          minimum: 1
      additionalProperties: false
    ConnectionConfig:
      type: object
      properties:
        checkmk_server_url:
          type: string
          format: url
          description: URL of the CheckMK server.
        identity_provider_metadata:
          description: Identity provider metadata.
          $ref: '#/components/schemas/IdpMetadata'
        identity_provider_timeout:
          default:
            connect: 12
            read: 12
          description: Configured timeouts.
          $ref: '#/components/schemas/IdpTimeout'
      required:
      - checkmk_server_url
      - identity_provider_metadata
      additionalProperties: false
    BuiltinCertificate:
      type: object
      properties:
        type:
          type: string
          description: Use the certificate that comes with Checkmk.
          enum:
          - builtin
      required:
      - type
      additionalProperties: false
    CustomCertificate:
      type: object
      properties:
        type:
          type: string
          description: Specify a custom certificate.
          enum:
          - custom
        private_key:
          type: string
          description: Private key in PEM format.
        certificate:
          type: string
          description: Public key in PEM format. Must be a single certificate, not
            a chain.
      required:
      - certificate
      - private_key
      - type
      additionalProperties: false
    Certificate:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/BuiltinCertificate'
      - $ref: '#/components/schemas/CustomCertificate'
      discriminator:
        propertyName: type
        mapping:
          builtin: '#/components/schemas/BuiltinCertificate'
          custom: '#/components/schemas/CustomCertificate'
    Security:
      type: object
      properties:
        signing_certificate:
          default:
            type: builtin
          description: Certificate to sign requests to the identity provider.
          $ref: '#/components/schemas/Certificate'
        decrypt_auth_certificate:
          description: Certificate to decrypt authentication responses.
          $ref: '#/components/schemas/Certificate'
      additionalProperties: false
    ContactGroupMapping:
      type: object
      properties:
        attribute_value:
          type: string
          description: Value to compare to the attribute.
          minLength: 1
        contact_groups:
          type: array
          description: List of contact groups.
          minLength: 1
          items:
            type: string
            description: A contact group
            example: all
            pattern: ^[-a-z0-9A-Z_]*$
      required:
      - attribute_value
      - contact_groups
      additionalProperties: false
    ContactGroupMapValue:
      type: object
      properties:
        attribute:
          type: string
          description: Attribute for contact group sync.
          minLength: 1
        type:
          type: string
          description: The attribute value will be compared to values in the mapping.
            The contact groups specified for that value will be applied.
          enum:
          - map
        mapping:
          type: array
          description: Mapping of attribute values to contact groups.
          minLength: 1
          items:
            $ref: '#/components/schemas/ContactGroupMapping'
      required:
      - attribute
      - mapping
      - type
      additionalProperties: false
    ContactGroupFromAttributeValue:
      type: object
      properties:
        attribute:
          type: string
          description: Attribute for contact group sync.
          minLength: 1
        type:
          type: string
          description: The attribute value will be mapped to an existing contact group
            with the same name. If no such group exists, they will not be mapped.
          enum:
          - from_attribute_value
      required:
      - attribute
      - type
      additionalProperties: false
    ContactGroupCnFromLdapDn:
      type: object
      properties:
        attribute:
          type: string
          description: Attribute for contact group sync.
          minLength: 1
        type:
          type: string
          description: The attribute value will be interpreted as a distinguished
            name (DN). The common name (CN) will be mapped to an existing contact
            group. If no such group exists, they will not be mapped.
          enum:
          - cn_from_ldap_dn
      required:
      - attribute
      - type
      additionalProperties: false
    ContactGroups:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/ContactGroupMapValue'
      - $ref: '#/components/schemas/ContactGroupFromAttributeValue'
      - $ref: '#/components/schemas/ContactGroupCnFromLdapDn'
      discriminator:
        propertyName: type
        mapping:
          map: '#/components/schemas/ContactGroupMapValue'
          from_attribute_value: '#/components/schemas/ContactGroupFromAttributeValue'
          cn_from_ldap_dn: '#/components/schemas/ContactGroupCnFromLdapDn'
    RolesMap:
      type: object
      properties:
        type:
          type: string
          enum:
          - map
        attribute:
          type: string
          description: Attribute which will be checked for a match.
          minLength: 1
        roles:
          type: object
          description: Mapping of roles and attribute values. Roles will be added
            to the user if one of the values matches the attribute value.
          additionalProperties:
            type: array
            minLength: 1
            uniqueItems: true
            items:
              type: string
              description: Attribute value.
              minLength: 1
      required:
      - attribute
      - type
      additionalProperties: false
    Users:
      type: object
      properties:
        id_attribute:
          type: string
          description: Attribute used to uniquely identify the users.
          minLength: 1
        full_name_attribute:
          type: string
          default: ''
          description: Attribute used for the full name, if not set the ID is used.
        email_attribute:
          type: string
          default: ''
          description: Attribute used for the email.
        contact_groups:
          description: Contact group sync configuration.
          $ref: '#/components/schemas/ContactGroups'
        roles:
          description: Role sync configuration.
          $ref: '#/components/schemas/RolesMap'
      required:
      - id_attribute
      additionalProperties: false
    SAMLConnectionConfig:
      type: object
      properties:
        general_properties:
          description: General properties of a SAML connection.
          $ref: '#/components/schemas/GeneralProperties'
        metadata:
          description: Generated service provider metadata.
          $ref: '#/components/schemas/Metadata'
        connection_config:
          description: SAML connection configuration.
          $ref: '#/components/schemas/ConnectionConfig'
        security:
          description: SAML security configuration.
          $ref: '#/components/schemas/Security'
        users:
          description: User sync configuration.
          $ref: '#/components/schemas/Users'
      required:
      - connection_config
      - general_properties
      - metadata
      - security
      - users
      additionalProperties: false
    SAMLConnectionResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: saml_connection
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The configuration attributes of a user SAML connection.
          $ref: '#/components/schemas/SAMLConnectionConfig'
      required:
      - extensions
      - links
      additionalProperties: false
    SAMLConnectionResponseCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: saml_connection
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          description: A list of SAML connections.
          type: array
          items:
            $ref: '#/components/schemas/SAMLConnectionResponse'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    GeneralPropertiesCreate:
      type: object
      properties:
        name:
          type: string
          description: Display name for the SAML connection.
          minLength: 1
        description:
          type: string
          default: ''
          description: Add a title or describe this rule.
        comment:
          type: string
          default: ''
          description: An optional comment to explain the purpose of this object.
            The comment is only visible in this dialog and can help other users to
            understand the intentions of the configured attributes.
        documentation_url:
          type: string
          default: ''
          description: An optional URL linking documentation or any other page. An
            icon links to the page and opens in a new tab when clicked. You can use
            either global URLs (starting with http://), absolute local URLs (starting
            with /) or relative URLs (relative to check_mk/).
        rule_activation:
          type: string
          default: activated
          description: Selecting 'deactivated' will disable the rule, but it will
            remain in the configuration.
          enum: *id192
        id:
          type: string
          description: A SAML connection ID string.
          minLength: 1
      required:
      - id
      - name
      additionalProperties: false
    SAMLConnectionCreateRequest:
      type: object
      properties:
        general_properties:
          description: General properties of a SAML connection.
          example:
            id: saml_1
            name: SAML Auth
            description: 1st saml connection
            comment: test_comment
            documentation_url: https://docs.checkmk.com/latest/en/saml.html
            rule_activation: activated
          $ref: '#/components/schemas/GeneralPropertiesCreate'
        connection_config:
          description: SAML connection configuration.
          example:
            checkmk_server_url: https://localhost
            identity_provider_metadata:
              type: url
              url: https://localhost/saml
            identity_provider_timeout:
              connect: 12
              read: 12
          $ref: '#/components/schemas/ConnectionConfig'
        security:
          default:
            signing_certificate:
              type: builtin
          description: SAML security configuration.
          example:
            signing_certificate:
              type: builtin
            decrypt_auth_certificate:
              type: builtin
          $ref: '#/components/schemas/Security'
        users:
          description: User sync configuration.
          example:
            id_attribute: user_id
            full_name_attribute: ''
            email_attribute: ''
            contact_groups:
              type: from_attribute_value
              attribute: contact_group_attribute
            roles:
              type: map
              attribute: roles_attribute
              roles:
                user:
                - value1
                guest:
                - value2
                - value3
          $ref: '#/components/schemas/Users'
      required:
      - connection_config
      - general_properties
      - users
      additionalProperties: false
    PreDefinedTimeRange:
      type: object
      properties:
        range_type:
          type: string
          description: The type of the time range.
          enum: &id193
          - pre_defined
          - custom
          example: pre_defined
        range:
          type: string
          description: The pre-defined time range.
          enum:
          - today
          - yesterday
          - this_week
          - last_week
          - this_month
          - last_month
          - this_year
          - last_year
          example: today
      required:
      - range
      - range_type
      additionalProperties: false
    CustomTimeRange:
      type: object
      properties:
        range_type:
          type: string
          description: The type of the time range.
          enum: *id193
          example: pre_defined
        start:
          type: string
          format: iso8601
          description: The start datetime of the SLA compute period range. The format
            has to conform to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        end:
          type: string
          format: iso8601
          description: The end datetime of the SLA compute period range. The format
            has to conform to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
      required:
      - end
      - range_type
      - start
      additionalProperties: false
    TimeRange1:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PreDefinedTimeRange'
      - $ref: '#/components/schemas/CustomTimeRange'
      discriminator:
        propertyName: range_type
        mapping:
          pre_defined: '#/components/schemas/PreDefinedTimeRange'
          custom: '#/components/schemas/CustomTimeRange'
    Service:
      type: object
      properties:
        host_name:
          type: string
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
        service_description:
          type: string
          description: The service whose SLA data is to be computed.
          example: CPU load
      required:
      - host_name
      - service_description
      additionalProperties: false
    SLAComputeTarget:
      type: object
      properties:
        sla_ids:
          type: array
          description: The ids of the SLA configurations for which the SLA should
            be computed.
          example:
          - sla_configuration_1
          - sla_configuration_2
          items:
            type: string
        time_ranges:
          type: array
          description: The time ranges for which the SLA should be computed.
          example:
          - range_type: pre_defined
            range: today
          items:
            $ref: '#/components/schemas/TimeRange1'
        services:
          type: array
          description: The services for which the SLA should be computed.
          example:
          - host_name: heute
            service_description: CPU load
          items:
            $ref: '#/components/schemas/Service'
      required:
      - services
      - sla_ids
      - time_ranges
      additionalProperties: false
    SLAComputeRequest:
      type: object
      properties:
        sla_compute_targets:
          type: array
          description: The SLA compute targets for which the SLA should be computed.
          example:
          - sla_ids:
            - sla_configuration_1
            time_ranges:
            - range_type: pre_defined
              range: today
            services:
            - host_name: heute
              service_description: CPU load
          items:
            $ref: '#/components/schemas/SLAComputeTarget'
      required:
      - sla_compute_targets
      additionalProperties: false
    ServiceOutput:
      type: object
      properties:
        site:
          type: string
          description: The ID of the site.
          example: production
        host_name:
          type: string
          description: The name of the host.
          example: heute
        service_description:
          type: string
          description: The description of the service for which the SLA is computed.
          example: CPU load
      additionalProperties: false
    SLATimeRange:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PreDefinedTimeRange'
      - $ref: '#/components/schemas/CustomTimeRange'
      discriminator:
        propertyName: range_type
        mapping:
          pre_defined: '#/components/schemas/PreDefinedTimeRange'
          custom: '#/components/schemas/CustomTimeRange'
    TimeRangeOutput:
      type: object
      properties:
        start:
          type: string
          format: date-time
          description: The start time of the period
          example: '2025-10-22 18:17:03.595838'
        end:
          type: string
          format: date-time
          description: The end time of the period
          example: '2025-10-22 18:18:03.595855'
      required:
      - end
      - start
      additionalProperties: false
    StateDurations:
      type: object
      properties:
        ok_indowntime:
          type: number
          description: The time duration for how long the service was in the OK state
            or in downtime.
          example: 10.0
        warn:
          type: number
          description: The time duration for how long the service was in the WARN
            state.
          example: 10.0
        crit:
          type: number
          description: The time duration for how long the service was in the CRIT
            state.
          example: 10.0
        unknown_unmonitored:
          type: number
          description: The time duration for how long the service was in the UNKNOWN
            state or unmonitored.
          example: 10.0
      additionalProperties: false
    StateSubResult:
      type: object
      properties:
        deviation_value:
          type: number
          description: The deviation value of the SLA agreement. The deviation value
            is the difference between the observed and computed value. The meaning
            differs depending on the configured SLA computation type.
          example: 1.0
        deviation_state:
          type: string
          description: The deviation state of the SLA agreement. The deviation state
            is respective to the configured warn and crit levels and the determined
            deviation value.
          enum:
          - ok
          - warn
          - crit
          example: ok
        sla_agreement:
          type: string
          description: Whether the SLA agreement was broken or fulfilled during this
            period.The agreement is considered broken if at least one agreement of
            the defined state configurations was broken.
          enum: &id194
          - broken
          - fulfilled
          example: false
      required:
      - sla_agreement
      additionalProperties: false
    ServiceStatePercentageStateRequirement:
      type: object
      properties:
        observed_state:
          type: string
          description: The configured state for which the SLA agreement is checked.
          enum:
          - ok
          - warn
          - crit
          - unknown
          example: ok
        condition:
          type: string
          description: The reference condition for which the observed state is compared
            to.
          enum:
          - more_than
          - less_than
          example: more_than
        observed_percentage:
          type: number
          description: The reference percentage value for which the condition is checked.
          example: 10.0
      additionalProperties: false
    Levels:
      type: object
      properties:
        warn:
          type: number
          description: The warning level of the SLA agreement.
          example: 10.0
        crit:
          type: number
          description: The critical level of the SLA agreement.
          example: 10.0
      additionalProperties: false
    MonitoringLevels:
      type: object
      properties:
        levels:
          description: The levels of the SLA agreement.
          example:
            warn: 10.0
            crit: 10.0
          $ref: '#/components/schemas/Levels'
        limit:
          type: number
          description: The limit of the SLA agreement.
          example: 10.0
      additionalProperties: false
    ServiceStatePercentageConfig:
      type: object
      properties:
        state_requirement:
          description: The configured state for which the SLA agreement is checked.
          $ref: '#/components/schemas/ServiceStatePercentageStateRequirement'
        monitoring_levels:
          description: The monitoring levels for which the SLA agreement is checked.
          example:
            levels:
              warn: 10.0
              crit: 10.0
            limit: 10.0
          $ref: '#/components/schemas/MonitoringLevels'
      additionalProperties: false
    ServiceStatePercentageSubResult:
      type: object
      properties:
        state:
          description: The state of the SLA agreement
          example:
            deviation_value: 1.0
            deviation_state: ok
            sla_agreement: fulfilled
          $ref: '#/components/schemas/StateSubResult'
        config:
          $ref: '#/components/schemas/ServiceStatePercentageConfig'
      additionalProperties: false
    ServicePercentagePeriodResult:
      type: object
      properties:
        duration:
          type: number
          description: The duration of the time range in seconds.
          example: 3600.0
        time_range:
          description: The time range of the period.
          $ref: '#/components/schemas/TimeRangeOutput'
        sla_agreement:
          type: string
          description: Whether the SLA agreement was broken or fulfilled during this
            period.The agreement is considered broken if at least one agreement of
            the defined state configurations was broken.
          enum: *id194
          example: false
        state_durations:
          description: The percentage of the duration for which the service was in
            the underlying states
          example:
            ok: 10.0
            warn: 10.0
            crit: 10.0
            unknown: 10.0
          $ref: '#/components/schemas/StateDurations'
        sub_results:
          type: array
          description: The sub results of the service state percentage period result.
          items:
            $ref: '#/components/schemas/ServiceStatePercentageSubResult'
      required:
      - sla_agreement
      additionalProperties: false
    PluginPercentageStateComputedResult:
      type: object
      properties:
        plugin_id:
          type: string
          description: The id of the plugin.
          enum:
          - service_state_percentage
          - service_outage_count
          example: service_state_percentage
        time_range_sla_duration:
          type: number
          description: The duration of the time range in seconds.
          example: 3600.0
        period_results:
          type: array
          description: The period results of the service percentage state computation
            plugin.
          items:
            $ref: '#/components/schemas/ServicePercentagePeriodResult'
      required:
      - time_range_sla_duration
      additionalProperties: false
    PluginResult:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/PluginPercentageStateComputedResult'
      - $ref: '#/components/schemas/PluginPercentageStateComputedResult'
      discriminator:
        propertyName: plugin_id
        mapping:
          service_state_percentage: '#/components/schemas/PluginPercentageStateComputedResult'
          service_outage_count: '#/components/schemas/PluginPercentageStateComputedResult'
    SLAComputeResult:
      type: object
      properties:
        service:
          description: The service entity for which the SLA is computed.
          example:
            site_id: production
            host_name: heute
            service_description: CPU load
          $ref: '#/components/schemas/ServiceOutput'
        sla_id:
          type: string
          description: The ID of the SLA.
          example: sla_configuration_1
        time_range:
          description: The time range for which the SLA is computed.
          $ref: '#/components/schemas/SLATimeRange'
        sla_period:
          type: string
          description: The configured SLA period.
          enum:
          - monthly
          - weekly
          - daily
          example: monthly
        results:
          type: array
          description: The period results of the SLA computation.
          items:
            $ref: '#/components/schemas/PluginResult'
      additionalProperties: false
    SLAComputedResultCollection:
      type: object
      properties:
        domainType:
          default: sla_computed
          description: The domain type of the objects in the collection
        value:
          type: array
          description: The list of SLA computed results.
          items:
            $ref: '#/components/schemas/SLAComputeResult'
      additionalProperties: false
    ServiceDiscoveryResultCheckTableValueExtensions:
      type: object
      properties:
        host_name:
          type: string
          description: The name of the host
        check_plugin_name:
          type: string
          description: The name of the check plugin
        service_name:
          type: string
          description: The name of the service
        service_item:
          type: string
          description: The name of the service item
        service_phase:
          type: string
          description: The name of the service phase
      required:
      - check_plugin_name
      - host_name
      - service_name
      - service_phase
      additionalProperties: false
    ServiceDiscoveryResultCheckTableValue:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          description: The name of the check
        memberType:
          default: property
        value:
          type: string
          description: Current service phase of the check
        format:
          default: string
        title:
          type: string
          description: Current service phase of the check
        extensions:
          description: Additional information about the check
          $ref: '#/components/schemas/ServiceDiscoveryResultCheckTableValueExtensions'
      required:
      - extensions
      - format
      - id
      - links
      - memberType
      - title
      - value
      additionalProperties: false
    ServiceDiscoveryResultHostLabelValue:
      type: object
      properties:
        value:
          type: string
          description: The value of the host label
        plugin_name:
          type: string
          description: The name of the plugin that discovered the host label
      required:
      - value
      additionalProperties: false
    ServiceDiscoveryResultExtensions:
      type: object
      properties:
        check_table:
          type: object
          description: The changed checks for this host
          additionalProperties:
            $ref: '#/components/schemas/ServiceDiscoveryResultCheckTableValue'
        host_labels:
          type: object
          description: The labels of the host
          additionalProperties:
            $ref: '#/components/schemas/ServiceDiscoveryResultHostLabelValue'
        vanished_labels:
          type: object
          description: The labels that have vanished
          additionalProperties:
            $ref: '#/components/schemas/ServiceDiscoveryResultHostLabelValue'
        changed_labels:
          type: object
          description: The labels that have changed
          additionalProperties:
            $ref: '#/components/schemas/ServiceDiscoveryResultHostLabelValue'
      required:
      - changed_labels
      - check_table
      - host_labels
      - vanished_labels
      additionalProperties: false
    ServiceDiscoveryResult:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          type: string
          description: The "domain-type" of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: Additional information about the service discovery result
          $ref: '#/components/schemas/ServiceDiscoveryResultExtensions'
      required:
      - domainType
      - extensions
      - links
      additionalProperties: false
    ServiceDiscoveryRunLogs:
      type: object
      properties:
        result:
          type: array
          description: The result messages
          items:
            type: string
        progress:
          type: array
          description: The progress messages
          items:
            type: string
      required:
      - progress
      - result
      additionalProperties: false
    ServiceDiscoveryRunExtensions:
      type: object
      properties:
        active:
          type: boolean
          description: Whether the service discovery run is active
        state:
          type: string
          description: Current state of the service discovery run
          enum:
          - initialized
          - running
          - finished
          - stopped
          - exception
        logs:
          description: The logs of the service discovery run
          $ref: '#/components/schemas/ServiceDiscoveryRunLogs'
      required:
      - active
      - logs
      - state
      additionalProperties: false
    ServiceDiscoveryRun:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          type: string
          description: The "domain-type" of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: Additional information about the service discovery run
          $ref: '#/components/schemas/ServiceDiscoveryRunExtensions'
      required:
      - domainType
      - extensions
      - links
      additionalProperties: false
    Api404CustomError5:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: There is no running service discovery
        title:
          type: string
          description: A summary of the problem.
          example: Not Found
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    UpdateDiscoveryPhase:
      type: object
      properties:
        check_type:
          type: string
          description: The name of the check which this service uses.
          example: df
        service_item:
          type:
          - string
          - 'null'
          description: The value uniquely identifying the service on a given host.
          example: /home
        target_phase:
          type: string
          description: The target phase of the service.
          enum:
          - active
          - changed
          - clustered_ignored
          - clustered_monitored
          - clustered_undecided
          - clustered_vanished
          - custom
          - ignored
          - ignored_active
          - ignored_custom
          - legacy
          - legacy_ignored
          - manual
          - monitored
          - removed
          - undecided
          - vanished
          example: monitored
      required:
      - check_type
      - service_item
      - target_phase
      additionalProperties: false
    Api404CustomError6:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 404
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: Host could not be found
        title:
          type: string
          description: A summary of the problem.
          example: Not Found
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    BulkDiscoveryOptions:
      type: object
      properties:
        monitor_undecided_services:
          type: boolean
          default: false
          description: The option whether to monitor undecided services or not.
          example: true
        remove_vanished_services:
          type: boolean
          default: false
          description: The option whether to remove vanished services or not.
          example: true
        update_service_labels:
          type: boolean
          default: false
          description: The option whether to update service labels or not.
          example: true
        update_service_parameters:
          type: boolean
          default: false
          description: The option whether to update discovered service parameters
            or not.
          example: true
        update_host_labels:
          type: boolean
          default: false
          description: The option whether to update host labels or not.
          example: true
      additionalProperties: false
    BulkDiscovery:
      type: object
      properties:
        hostnames:
          type: array
          description: A list of host names
          example:
          - example
          - sample
          items:
            type: string
            description: The hostname or IP address itself.
            example: example.com
            pattern: ^[-0-9a-zA-Z_.]+\Z
        options:
          description: The discovery options for the bulk discovery
          example:
            monitor_undecided_services: true
            remove_vanished_services: true
            update_service_labels: true
            update_service_parameters: true
            update_host_labels: true
          $ref: '#/components/schemas/BulkDiscoveryOptions'
        do_full_scan:
          type: boolean
          default: true
          description: The option whether to perform a full scan or not.
          example: true
        bulk_size:
          type: integer
          default: 10
          description: The number of hosts to be handled at once.
          example: 10
        ignore_errors:
          type: boolean
          default: true
          description: The option whether to ignore errors in single check plug-ins.
          example: true
      required:
      - hostnames
      - options
      additionalProperties: false
    DiscoverServices:
      type: object
      properties:
        host_name:
          type: string
          description: The host of the service which shall be updated.
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
        mode:
          type: string
          default: fix_all
          description: "The mode of the discovery action. The 'refresh' mode starts\
            \ a new service\n        discovery which will contact the host and identify\
            \ undecided and vanished services and host\n        labels. Those services\
            \ and host labels can be added or removed accordingly with the\n     \
            \   'fix_all' mode. The 'tabula_rasa' mode combines these two procedures.\
            \ The 'new', 'remove',\n        'only_host_labels' and 'only_service_labels'\
            \ modes give you more granular control. Both the\n        'tabula_rasa'\
            \ and 'refresh' modes will start a background job and the endpoint will\
            \ return\n        a redirect to the 'wait-for-completion' endpoint. All\
            \ other modes will return an immediate\n        result instead. Keep in\
            \ mind that the non background job modes only work with scanned data,\n\
            \        so you may need to run \"refresh\" first. The corresponding user\
            \ interface option for each\n        discovery mode is shown below.\n\n\
            \ * `new` - Monitor undecided services\n * `remove` - Remove vanished\
            \ services\n * `fix_all` - Accept all\n * `tabula_rasa` - Remove all and\
            \ find new\n * `refresh` - Rescan\n * `only_host_labels` - Update host\
            \ labels\n * `only_service_labels` - Update service labels\n    "
          enum:
          - new
          - remove
          - fix_all
          - refresh
          - only_host_labels
          - only_service_labels
          - tabula_rasa
          example: refresh
      required:
      - host_name
      additionalProperties: false
    Api409CustomError2:
      type: object
      properties:
        status:
          type: integer
          description: The HTTP status code.
          example: 409
        detail:
          type: string
          description: Detailed information on what exactly went wrong.
          example: A service discovery background job is currently running
        title:
          type: string
          description: A summary of the problem.
          example: Conflict
        fields:
          type: object
          description: Detailed error messages on all fields failing validation.
          additionalProperties: {}
        ext:
          type: object
          description: Additional information about the error.
          additionalProperties: {}
      additionalProperties: false
    ServiceGroupExtensions:
      type: object
      properties:
        customer:
          type: string
          description: '[Managed edition only] The customer for which the object is
            configured. This field is required for the following editions: Managed.'
          example: provider
      additionalProperties: false
    ServiceGroup:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: service_group_config
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: All the attributes of the domain object.
          $ref: '#/components/schemas/ServiceGroupExtensions'
      required:
      - links
      additionalProperties: false
    ServiceGroupCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: service_group_config
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of service group objects.
          items:
            $ref: '#/components/schemas/ServiceGroup'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    UpdateServiceGroupAttributes:
      type: object
      properties:
        alias:
          type: string
          description: The name used for displaying in the GUI.
          example: Example Group
        customer:
          type: string
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites.'
          example: provider
      required:
      - alias
      additionalProperties: false
    UpdateServiceGroup:
      type: object
      properties:
        name:
          type: string
          description: The name of the service group.
          example: windows
        attributes:
          $ref: '#/components/schemas/UpdateServiceGroupAttributes'
      required:
      - attributes
      - name
      additionalProperties: false
    BulkUpdateServiceGroup:
      type: object
      properties:
        entries:
          type: array
          description: A list of service group entries.
          example:
          - name: windows
            attributes:
              alias: Windows Servers
          items:
            $ref: '#/components/schemas/UpdateServiceGroup'
      required:
      - entries
      additionalProperties: false
    InputServiceGroup:
      type: object
      properties:
        customer:
          type: string
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites. This field is required for the following
            editions: Managed.'
          example: provider
        name:
          type: string
          description: A name used as identifier
          example: windows
          pattern: ^(?!\.\.$|\.$)[-a-zA-Z0-9_\.]*\Z
        alias:
          type: string
          description: The name used for displaying in the GUI.
          example: Environment Sensors
      required:
      - alias
      - name
      additionalProperties: false
    BulkInputServiceGroup:
      type: object
      properties:
        entries:
          type: array
          description: A list of service group entries.
          example:
          - name: environment
            alias: Environment Sensors
          uniqueItems: true
          items:
            $ref: '#/components/schemas/InputServiceGroup'
      required:
      - entries
      additionalProperties: false
    BulkDeleteServiceGroup:
      type: object
      properties:
        entries:
          type: array
          description: A list of service group names.
          example:
          - windows
          - panels
          items:
            type: string
            description: The name of the service group config
            example: windows
      required:
      - entries
      additionalProperties: false
    ServiceParametersWithHost:
      type: object
      properties:
        sites:
          type: array
          default: []
          description: Restrict the query to this particular site.
          example: *id079
          items:
            type: string
        columns:
          type: array
          default:
          - host_name
          - description
          description: The desired columns of the `services` table. If left empty,
            a default set of columns is used.
          example: *id080
          items:
            type: string
        query:
          description: An query expression of the Livestatus 'services' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: &id195
            op: '='
            left: host_name
            right: example.com
          $ref: '#/components/schemas/Expr'
        host_name:
          type: string
          description: A host name.
          example: example.com
          pattern: ^[-0-9a-zA-Z_.]+\Z
      additionalProperties: false
    ServiceParameters:
      type: object
      properties:
        sites:
          type: array
          default: []
          description: Restrict the query to this particular site.
          example: *id079
          items:
            type: string
        columns:
          type: array
          default:
          - host_name
          - description
          description: The desired columns of the `services` table. If left empty,
            a default set of columns is used.
          example: *id080
          items:
            type: string
        query:
          description: An query expression of the Livestatus 'services' table in nested
            dictionary form. If you want to use multiple expressions, nest them with
            the AND/OR operators.
          example: *id195
          $ref: '#/components/schemas/Expr'
      additionalProperties: false
    SidebarElementModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: constant
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
      required:
      - links
      - domainType
      title: SidebarElementModel
      type: object
    SidebarElementModelCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: constant
          description: The domain type of the objects in the collection
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: The list of Sidebar Element objects
          items:
            $ref: '#/components/schemas/SidebarElementModel'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: SidebarElementModelCollectionModel
      type: object
    BasicSettingsModel:
      properties:
        site_id:
          description: The site id.
          examples:
          - prod
          title: Site Id
          type: string
        alias:
          description: The alias of the site.
          examples:
          - Site Alias
          title: Alias
          type: string
        customer:
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites. This field is required for the following
            editions: Managed.'
          examples:
          - provider
          title: Customer
          type: string
      required:
      - site_id
      - alias
      title: BasicSettingsModel
      type: object
    ConnectionWithReplicationModel:
      properties:
        enable_replication:
          const: true
          description: Replication allows you to manage several monitoring sites with
            a logically centralized setup. Remote sites receive their configuration
            from the central sites.
          title: Enable Replication
          type: boolean
        url_of_remote_site:
          default: ''
          description: URL of the remote Checkmk including /check_mk/. This URL is
            in many cases the same as the URL-Prefix but with check_mk/ appended,
            but it must always be an absolute URL.
          examples:
          - http://remote_site_1/check_mk/
          title: Url Of Remote Site
          type: string
        disable_remote_configuration:
          description: It is a good idea to disable access to Setup completely on
            the remote site. Otherwise a user who does not now about the replication
            could make local changes that are overridden at the next configuration
            activation.
          examples:
          - true
          title: Disable Remote Configuration
          type: boolean
        ignore_tls_errors:
          description: This might be needed to make the synchronization accept problems
            with SSL certificates when using an SSL secured connection.
          title: Ignore Tls Errors
          type: boolean
        direct_login_to_web_gui_allowed:
          description: When enabled, this site is marked for synchronisation every
            time a web GUI related option is changed and users are allowed to login
            to the web GUI of this site.
          examples:
          - true
          title: Direct Login To Web Gui Allowed
          type: boolean
        user_sync:
          description: By default the users are synchronized automatically in the
            interval configured in the connection. For example the LDAP connector
            synchronizes the users every five minutes by default. The interval can
            be changed for each connection individually in the connection settings.
            Please note that the synchronization is only performed on the master site
            in distributed setups by default.
          discriminator:
            mapping:
              all: '#/components/schemas/UserSyncAllModel'
              disabled: '#/components/schemas/UserSyncDisabledModel'
              ldap: '#/components/schemas/UserSyncWithLdapModel'
            propertyName: sync_with_ldap_connections
          oneOf:
          - $ref: '#/components/schemas/UserSyncWithLdapModel'
          - $ref: '#/components/schemas/UserSyncAllModel'
          - $ref: '#/components/schemas/UserSyncDisabledModel'
          title: User Sync
        replicate_event_console:
          description: This option enables the distribution of global settings and
            rules of the Event Console to the remote site. Any change in the local
            Event Console settings will mark the site as need sync. A synchronization
            will automatically reload the EventConsole of the remote site.
          examples:
          - true
          title: Replicate Event Console
          type: boolean
        replicate_extensions:
          description: 'If you enable the replication of MKPs then during each Activate
            Changes MKPs that are installed on your central site and all other files
            below the ~/local/ directory will be also transferred to the remote site.
            Note: all other MKPs and files below ~/local/ on the remote site will
            be removed.'
          examples:
          - true
          title: Replicate Extensions
          type: boolean
        message_broker_port:
          description: The port used by the message broker to exchange messages.
          examples:
          - 5672
          title: Message Broker Port
          type: integer
      required:
      - enable_replication
      - disable_remote_configuration
      - ignore_tls_errors
      - direct_login_to_web_gui_allowed
      - user_sync
      - replicate_event_console
      - replicate_extensions
      - message_broker_port
      title: ConnectionWithReplicationModel
      type: object
    ConnectionWithoutReplicationModel:
      properties:
        enable_replication:
          const: false
          description: Replication is disabled
          title: Enable Replication
          type: boolean
      required:
      - enable_replication
      title: ConnectionWithoutReplicationModel
      type: object
    Direct:
      properties:
        use_livestatus_daemon:
          const: direct
          description: Use livestatus daemon with direct connection.
          examples:
          - true
          title: Use Livestatus Daemon
          type: string
      required:
      - use_livestatus_daemon
      title: Direct
      type: object
    HeartbeatModel:
      properties:
        interval:
          description: The heartbeat interval for the TCP connection.
          examples:
          - 5
          minimum: 1
          title: Interval
          type: integer
        timeout:
          description: The heartbeat timeout for the TCP connection.
          examples:
          - 2.0
          minimum: 0.1
          title: Timeout
          type: number
      title: HeartbeatModel
      type: object
    IP4Socket:
      properties:
        port:
          description: The TCP port to connect to.
          examples:
          - 6790
          maximum: 65535
          minimum: 1
          title: Port
          type: integer
        encrypted:
          description: To enable an encrypted connection.
          examples:
          - true
          title: Encrypted
          type: boolean
        verify:
          description: Verify server certificate.
          examples:
          - true
          title: Verify
          type: boolean
        socket_type:
          const: tcp
          description: The tcp socket type
          examples:
          - tcp
          title: Socket Type
          type: string
        host:
          description: The IP4 address or domain name of the host.
          examples:
          - 127.0.0.1
          title: Host
          type: string
      required:
      - port
      - encrypted
      - socket_type
      - host
      title: IP4Socket
      type: object
    IP6Socket:
      properties:
        port:
          description: The TCP port to connect to.
          examples:
          - 6790
          maximum: 65535
          minimum: 1
          title: Port
          type: integer
        encrypted:
          description: To enable an encrypted connection.
          examples:
          - true
          title: Encrypted
          type: boolean
        verify:
          description: Verify server certificate.
          examples:
          - true
          title: Verify
          type: boolean
        socket_type:
          const: tcp6
          description: The tcp6 socket type
          examples:
          - tcp6
          title: Socket Type
          type: string
        host:
          description: The IP6 address or domain name of the host.
          examples:
          - 5402:1db8:95a3:0000:0000:9a2e:0480:8334
          title: Host
          type: string
      required:
      - port
      - encrypted
      - socket_type
      - host
      title: IP6Socket
      type: object
    LocalSocket:
      properties:
        socket_type:
          const: local
          description: The local socket type
          examples:
          - local
          title: Socket Type
          type: string
      required:
      - socket_type
      title: LocalSocket
      type: object
    ProxyParamsModel:
      properties:
        channels:
          description: The number of channels to keep open.
          examples:
          - 5
          maximum: 50
          minimum: 2
          title: Channels
          type: integer
        heartbeat:
          $ref: '#/components/schemas/HeartbeatModel'
          description: The heartbeat interval and timeout configuration.
          title: Heartbeat
        channel_timeout:
          description: The timeout waiting for a free channel.
          examples:
          - 3.0
          minimum: 0.1
          title: Channel Timeout
          type: number
        query_timeout:
          description: The total query timeout.
          examples:
          - 120.0
          minimum: 0.1
          title: Query Timeout
          type: number
        connect_retry:
          description: The cooling period after a failed connect/heartbeat.
          examples:
          - 4.0
          minimum: 0.1
          title: Connect Retry
          type: number
        cache:
          description: Enable caching.
          examples:
          - true
          title: Cache
          type: boolean
      title: ProxyParamsModel
      type: object
    ProxyTcpModel:
      properties:
        port:
          description: The TCP port to connect to.
          examples:
          - 6790
          maximum: 65535
          minimum: 1
          title: Port
          type: integer
        only_from:
          description: Restrict access to these IP addresses.
          examples:
          - - 192.168.1.23
          items:
            type: string
          title: Only From
          type: array
        tls:
          description: Encrypt TCP Livestatus connections.
          title: Tls
          type: boolean
      required:
      - port
      - only_from
      title: ProxyTcpModel
      type: object
    SiteConnectionExtensionsModel:
      properties:
        status_connection:
          $ref: '#/components/schemas/StatusConnectionModel'
          description: The status connection attributes
        configuration_connection:
          description: The configuration connection attributes
          discriminator:
            mapping:
              'False': '#/components/schemas/ConnectionWithoutReplicationModel'
              'True': '#/components/schemas/ConnectionWithReplicationModel'
            propertyName: enable_replication
          oneOf:
          - $ref: '#/components/schemas/ConnectionWithReplicationModel'
          - $ref: '#/components/schemas/ConnectionWithoutReplicationModel'
          title: Configuration Connection
        basic_settings:
          $ref: '#/components/schemas/BasicSettingsModel'
          description: The basic settings of the site connection.
        logged_in:
          description: If a remote site is currently logged in, this will be True,
            if not it will be False. For the main site, nothing is returned.
          examples:
          - true
          title: Logged In
          type: boolean
      required:
      - status_connection
      - configuration_connection
      - basic_settings
      title: SiteConnectionExtensionsModel
      type: object
    SiteConnectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: site_connection
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/SiteConnectionExtensionsModel'
          description: The configuration attributes of a site.
          examples:
          - basic_settings:
              alias: Die remote site 1
              site_id: site_id_1
            configuration_connection:
              direct_login_to_web_gui_allowed: true
              disable_remote_configuration: true
              enable_replication: true
              ignore_tls_errors: false
              message_broker_port: 5672
              replicate_event_console: true
              replicate_extensions: true
              url_of_remote_site: http://localhost/heute_remote_site_id_1/check_mk/
              user_sync:
                sync_with_ldap_connections: all
            status_connection:
              connect_timeout: 2
              connection:
                encrypted: true
                host: 192.168.1.1
                port: 1253
                socket_type: tcp
                verify: false
              disable_in_status_gui: false
              persistent_connection: false
              proxy:
                global_settings: false
                params:
                  cache: true
                  channel_timeout: 3.5
                  channels: 15
                  connect_retry: 4.6
                  heartbeat:
                    interval: 12
                    timeout: 3.0
                  query_timeout: 120.2
                tcp:
                  only_from:
                  - 192.168.1.1
                  port: 6560
                  tls: false
                use_livestatus_daemon: with_proxy
              status_host:
                status_host_set: disabled
              url_prefix: /heute_remote_1/
      required:
      - links
      - domainType
      - extensions
      title: SiteConnectionModel
      type: object
    StatusConnectionModel:
      properties:
        connection:
          description: When connecting to remote site please make sure that Livestatus
            over TCP is activated there. You can use UNIX sockets to connect to foreign
            sites on localhost.
          discriminator:
            mapping:
              local: '#/components/schemas/LocalSocket'
              tcp: '#/components/schemas/IP4Socket'
              tcp6: '#/components/schemas/IP6Socket'
              unix: '#/components/schemas/UnixSocket'
            propertyName: socket_type
          oneOf:
          - $ref: '#/components/schemas/LocalSocket'
          - $ref: '#/components/schemas/IP4Socket'
          - $ref: '#/components/schemas/IP6Socket'
          - $ref: '#/components/schemas/UnixSocket'
          title: Connection
        proxy:
          description: The Livestatus proxy daemon configuration attributes.
          discriminator:
            mapping:
              direct: '#/components/schemas/Direct'
              with_proxy: '#/components/schemas/UseProxy'
            propertyName: use_livestatus_daemon
          oneOf:
          - $ref: '#/components/schemas/Direct'
          - $ref: '#/components/schemas/UseProxy'
          title: Proxy
        connect_timeout:
          description: The time that the GUI waits for a connection to the site to
            be established before the site is considered to be unreachable.
          examples:
          - 2
          title: Connect Timeout
          type: integer
        persistent_connection:
          description: If you enable persistent connections then Multisite will try
            to keep open the connection to the remote sites.
          title: Persistent Connection
          type: boolean
        url_prefix:
          description: The URL prefix will be prepended to links of addons like NagVis
            when a link to such applications points to a host or service on that site.
          examples:
          - /remote_1/
          title: Url Prefix
          type: string
        status_host:
          description: By specifying a status host for each non-local connection you
            prevent Multisite from running into timeouts when remote sites do not
            respond.
          discriminator:
            mapping:
              disabled: '#/components/schemas/StatusHostDisabled'
              enabled: '#/components/schemas/StatusHostEnabled'
            propertyName: status_host_set
          oneOf:
          - $ref: '#/components/schemas/StatusHostDisabled'
          - $ref: '#/components/schemas/StatusHostEnabled'
          title: Status Host
        disable_in_status_gui:
          description: If you disable a connection, then no data of this site will
            be shown in the status GUI. The replication is not affected by this, however.
          title: Disable In Status Gui
          type: boolean
      required:
      - connection
      - proxy
      - connect_timeout
      - status_host
      title: StatusConnectionModel
      type: object
    StatusHostDisabled:
      properties:
        status_host_set:
          const: disabled
          description: disabled for 'no status host'
          examples:
          - disabled
          title: Status Host Set
          type: string
      required:
      - status_host_set
      title: StatusHostDisabled
      type: object
    StatusHostEnabled:
      properties:
        status_host_set:
          const: enabled
          description: enabled for 'use the following status host'
          title: Status Host Set
          type: string
        site:
          description: The site ID of the status host.
          examples:
          - prod
          title: Site
          type: string
        host:
          description: The host name of the status host.
          examples:
          - host_1
          title: Host
          type: string
      required:
      - status_host_set
      - site
      - host
      title: StatusHostEnabled
      type: object
    UnixSocket:
      properties:
        socket_type:
          const: unix
          description: The unix socket type
          examples:
          - unix
          title: Socket Type
          type: string
        path:
          description: When the connection name is unix, this is the path to the unix
            socket.
          examples:
          - /path/to/your/unix_socket
          title: Path
          type: string
      required:
      - socket_type
      - path
      title: UnixSocket
      type: object
    UseProxy:
      properties:
        use_livestatus_daemon:
          const: with_proxy
          description: Use livestatus daemon with livestatus proxy.
          examples:
          - true
          title: Use Livestatus Daemon
          type: string
        global_settings:
          description: When use_livestatus_daemon is set to 'with_proxy', you can
            set this to True to use global setting or False to use custom parameters.
          examples:
          - true
          title: Global Settings
          type: boolean
        tcp:
          $ref: '#/components/schemas/ProxyTcpModel'
          description: Allow access via TCP configuration.
          title: Tcp
        params:
          $ref: '#/components/schemas/ProxyParamsModel'
          description: The live status proxy daemon parameters.
          title: Params
      required:
      - use_livestatus_daemon
      - global_settings
      title: UseProxy
      type: object
    UserSyncAllModel:
      properties:
        sync_with_ldap_connections:
          const: all
          description: Sync with all connections.
          examples:
          - all
          title: Sync With Ldap Connections
          type: string
      required:
      - sync_with_ldap_connections
      title: UserSyncAllModel
      type: object
    UserSyncDisabledModel:
      properties:
        sync_with_ldap_connections:
          const: disabled
          description: Sync with disabled connections.
          examples:
          - disabled
          title: Sync With Ldap Connections
          type: string
      required:
      - sync_with_ldap_connections
      title: UserSyncDisabledModel
      type: object
    UserSyncWithLdapModel:
      properties:
        sync_with_ldap_connections:
          const: ldap
          description: Sync with ldap connections.
          examples:
          - ldap
          title: Sync With Ldap Connections
          type: string
        ldap_connections:
          description: A list of existing ldap connections.
          examples:
          - - LDAP_1
            - LDAP_2
          items:
            type: string
          title: Ldap Connections
          type: array
      required:
      - sync_with_ldap_connections
      - ldap_connections
      title: UserSyncWithLdapModel
      type: object
    SiteManagementCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: site_connection
          description: The domain type of the objects in the collection
          examples:
          - site_connection
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of site configuration objects.
          examples:
          - - domainType: site_connection
              extensions:
                basic_settings:
                  alias: Die remote site 1
                  site_id: site_id_1
                configuration_connection:
                  direct_login_to_web_gui_allowed: true
                  disable_remote_configuration: true
                  enable_replication: true
                  ignore_tls_errors: false
                  message_broker_port: 5672
                  replicate_event_console: true
                  replicate_extensions: true
                  url_of_remote_site: http://localhost/heute_remote_site_id_1/check_mk/
                  user_sync:
                    sync_with_ldap_connections: all
                status_connection:
                  connect_timeout: 2
                  connection:
                    encrypted: true
                    host: 192.168.1.1
                    port: 1253
                    socket_type: tcp
                    verify: false
                  disable_in_status_gui: false
                  persistent_connection: false
                  proxy:
                    global_settings: false
                    params:
                      cache: true
                      channel_timeout: 3.5
                      channels: 15
                      connect_retry: 4.6
                      heartbeat:
                        interval: 12
                        timeout: 3.0
                      query_timeout: 120.2
                    tcp:
                      only_from:
                      - 192.168.1.1
                      port: 6560
                      tls: false
                    use_livestatus_daemon: with_proxy
                  status_host:
                    status_host_set: disabled
                  url_prefix: /heute_remote_1/
              id: prod
              links: []
              members: {}
              title: Site Alias
          items:
            $ref: '#/components/schemas/SiteConnectionModel'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: SiteManagementCollectionModel
      type: object
    BasicSettingsEditModel:
      properties:
        alias:
          description: The alias of the site.
          examples:
          - Site Alias
          title: Alias
          type: string
        customer:
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites. This field is required for the following
            editions: Managed.'
          examples:
          - provider
          title: Customer
          type: string
        site_id:
          description: The site ID.
          examples:
          - prod
          title: Site Id
          type: string
      required:
      - alias
      - site_id
      title: BasicSettingsEditModel
      type: object
    SiteConnectionEdit:
      properties:
        status_connection:
          $ref: '#/components/schemas/StatusConnectionModel'
          description: The status connection attributes
        configuration_connection:
          description: The configuration connection attributes
          discriminator:
            mapping:
              'False': '#/components/schemas/ConnectionWithoutReplicationModel'
              'True': '#/components/schemas/ConnectionWithReplicationModel'
            propertyName: enable_replication
          oneOf:
          - $ref: '#/components/schemas/ConnectionWithReplicationModel'
          - $ref: '#/components/schemas/ConnectionWithoutReplicationModel'
          title: Configuration Connection
        basic_settings:
          $ref: '#/components/schemas/BasicSettingsEditModel'
          description: The basic connection attributes
      required:
      - status_connection
      - configuration_connection
      - basic_settings
      title: SiteConnectionEdit
      type: object
    SiteConnectionEditModel:
      additionalProperties: false
      properties:
        site_config:
          $ref: '#/components/schemas/SiteConnectionEdit'
          description: A site's connection.
          examples:
          - basic_settings:
              alias: Die remote site 1
              site_id: site_id_1
            configuration_connection:
              direct_login_to_web_gui_allowed: true
              disable_remote_configuration: true
              enable_replication: true
              ignore_tls_errors: false
              message_broker_port: 5672
              replicate_event_console: true
              replicate_extensions: true
              url_of_remote_site: http://localhost/heute_remote_site_id_1/check_mk/
              user_sync:
                sync_with_ldap_connections: all
            status_connection:
              connect_timeout: 2
              connection:
                encrypted: true
                host: 192.168.1.1
                port: 1253
                socket_type: tcp
                verify: false
              disable_in_status_gui: false
              persistent_connection: false
              proxy:
                global_settings: false
                params:
                  cache: true
                  channel_timeout: 3.5
                  channels: 15
                  connect_retry: 4.6
                  heartbeat:
                    interval: 12
                    timeout: 3.0
                  query_timeout: 120.2
                tcp:
                  only_from:
                  - 192.168.1.1
                  port: 6560
                  tls: false
                use_livestatus_daemon: with_proxy
              status_host:
                status_host_set: disabled
              url_prefix: /heute_remote_1/
      required:
      - site_config
      title: SiteConnectionEditModel
      type: object
    BasicSettingsCreateModel:
      properties:
        alias:
          description: The alias of the site.
          examples:
          - Site Alias
          title: Alias
          type: string
        customer:
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites. This field is required for the following
            editions: Managed.'
          examples:
          - provider
          title: Customer
          type: string
        site_id:
          description: The site ID for the new connection.
          examples:
          - prod
          title: Site Id
          type: string
      required:
      - alias
      - site_id
      title: BasicSettingsCreateModel
      type: object
    SiteConnectionCreate:
      properties:
        status_connection:
          $ref: '#/components/schemas/StatusConnectionModel'
          description: The status connection attributes
        configuration_connection:
          description: The configuration connection attributes
          discriminator:
            mapping:
              'False': '#/components/schemas/ConnectionWithoutReplicationModel'
              'True': '#/components/schemas/ConnectionWithReplicationModel'
            propertyName: enable_replication
          oneOf:
          - $ref: '#/components/schemas/ConnectionWithReplicationModel'
          - $ref: '#/components/schemas/ConnectionWithoutReplicationModel'
          title: Configuration Connection
        basic_settings:
          $ref: '#/components/schemas/BasicSettingsCreateModel'
          description: The basic connection attributes
      required:
      - status_connection
      - configuration_connection
      - basic_settings
      title: SiteConnectionCreate
      type: object
    SiteConnectionCreateModel:
      additionalProperties: false
      properties:
        site_config:
          $ref: '#/components/schemas/SiteConnectionCreate'
          description: A site's connection.
          examples:
          - basic_settings:
              alias: Die remote site 1
              site_id: site_id_1
            configuration_connection:
              direct_login_to_web_gui_allowed: true
              disable_remote_configuration: true
              enable_replication: true
              ignore_tls_errors: false
              message_broker_port: 5672
              replicate_event_console: true
              replicate_extensions: true
              url_of_remote_site: http://localhost/heute_remote_site_id_1/check_mk/
              user_sync:
                sync_with_ldap_connections: all
            status_connection:
              connect_timeout: 2
              connection:
                encrypted: true
                host: 192.168.1.1
                port: 1253
                socket_type: tcp
                verify: false
              disable_in_status_gui: false
              persistent_connection: false
              proxy:
                global_settings: false
                params:
                  cache: true
                  channel_timeout: 3.5
                  channels: 15
                  connect_retry: 4.6
                  heartbeat:
                    interval: 12
                    timeout: 3.0
                  query_timeout: 120.2
                tcp:
                  only_from:
                  - 192.168.1.1
                  port: 6560
                  tls: false
                use_livestatus_daemon: with_proxy
              status_host:
                status_host_set: disabled
              url_prefix: /heute_remote_1/
      required:
      - site_config
      title: SiteConnectionCreateModel
      type: object
    SiteLoginCredentials:
      additionalProperties: false
      properties:
        username:
          description: An administrative user's username.
          examples:
          - cmkadmin
          title: Username
          type: string
        password:
          description: The password for the username given
          examples:
          - password
          title: Password
          type: string
      required:
      - username
      - password
      title: SiteLoginCredentials
      type: object
    ConcreteTimeRange:
      type: object
      properties:
        start:
          type: string
          description: The hour of the time period.
          example: '14:00'
          format: time
        end:
          type: string
          description: The hour of the time period.
          example: '14:00'
          format: time
      additionalProperties: false
    ConcreteTimeRangeActive:
      type: object
      properties:
        day:
          type: string
          description: The day for which the time ranges are specified
          enum:
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          - sunday
        time_ranges:
          type: array
          items:
            $ref: '#/components/schemas/ConcreteTimeRange'
      additionalProperties: false
    ConcreteTimePeriodException:
      type: object
      properties:
        date:
          type: string
          description: The date of the time period exception.8601 profile
          example: '2020-01-01'
          format: date
        time_ranges:
          type: array
          example: '[{''start'': ''14:00'', ''end'': ''18:00''}]'
          items:
            $ref: '#/components/schemas/ConcreteTimeRange'
      additionalProperties: false
    TimePeriodAttrsResponse:
      type: object
      properties:
        alias:
          type: string
          description: The alias of the time period
          example: alias
        active_time_ranges:
          type: array
          description: The days for which time ranges were specified
          example:
            day: all
            time_ranges:
            - start: '12:00'
              end: '14:00'
          items:
            $ref: '#/components/schemas/ConcreteTimeRangeActive'
        exceptions:
          type: array
          description: Specific day exclusions with their list of time ranges
          example:
          - date: '2020-01-01'
            time_ranges:
            - start: '14:00'
              end: '18:00'
          items:
            $ref: '#/components/schemas/ConcreteTimePeriodException'
        exclude:
          type: array
          description: The collection of time period names whose periods are excluded
          example:
          - time_period_1
          - time_period_2
          - time_period_3
          items:
            type: string
            description: Name of excluding time period
      additionalProperties: false
    TimePeriodResponse:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: time_period
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this time period.
          example: time_period_name
        title:
          type: string
          description: The time period name.
          example: time_period_alias.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The time period attributes.
          example: &id196
            alias: holidays
            active_time_ranges:
            - day: monday
              time_ranges:
              - start: '12:00'
                end: '15:00'
            exceptions:
            - date: '2023-01-01'
              time_ranges:
              - start: '12:30'
                end: '13:30'
            exclude:
            - time_period_1
            - time_period_2
            - time_period_3
          $ref: '#/components/schemas/TimePeriodAttrsResponse'
      required:
      - links
      additionalProperties: false
    TimePeriodResponseCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: time_period
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of time period objects.
          example:
          - links: []
            domainType: time_period
            id: time_period
            members: {}
            extensions: *id196
          items:
            $ref: '#/components/schemas/TimePeriodResponse'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    TimeRange2:
      type: object
      properties:
        start:
          type: string
          description: The start time of the period's time range
          example: '14:00:00'
          format: time
        end:
          type: string
          description: The end time of the period's time range
          example: '16:00:00'
          format: time
      required:
      - end
      - start
      additionalProperties: false
    TimeRangeActive:
      type: object
      properties:
        day:
          type: string
          default: all
          description: The day for which time ranges are to be specified. The 'all'
            option allows to specify time ranges for all days.
          enum:
          - all
          - monday
          - tuesday
          - wednesday
          - thursday
          - friday
          - saturday
          - sunday
        time_ranges:
          type: array
          default:
          - start: 00:00:00
            end: '23:59:00'
          example:
          - start: '13:00:00'
            end: '19:00:00'
          items:
            $ref: '#/components/schemas/TimeRange2'
      additionalProperties: false
    TimePeriodException:
      type: object
      properties:
        date:
          type: string
          description: The date of the time period exception.8601 profile
          example: '2020-01-01'
          format: date
        time_ranges:
          type: array
          default: []
          example:
          - start: '14:00'
            end: '18:00'
          items:
            $ref: '#/components/schemas/TimeRange2'
      required:
      - date
      additionalProperties: false
    UpdateTimePeriod:
      type: object
      properties:
        alias:
          type: string
          description: An alias for the time period
          example: new_alias
        active_time_ranges:
          type: array
          description: The list of active time ranges which replaces the existing
            list of time ranges
          example:
          - day: monday
            time_ranges:
            - start: '12:00:00'
              end: '14:00:00'
          items:
            $ref: '#/components/schemas/TimeRangeActive'
        exceptions:
          type: array
          description: A list of additional time ranges to be added.
          example:
          - date: '2020-01-01'
            time_ranges:
            - start: '14:00:00'
              end: '18:00:00'
          items:
            $ref: '#/components/schemas/TimePeriodException'
        exclude:
          type: array
          description: A list of time period names whose periods are excluded.
          example:
          - time_name
          items:
            type: string
            description: A unique name for the time period.
            example: time_name
            pattern: ^[-a-z0-9A-Z_]+\Z
      additionalProperties: false
    CreateTimePeriod:
      type: object
      properties:
        name:
          type: string
          description: A unique name for the time period.
          example: first
          pattern: ^[-a-z0-9A-Z_]+\Z
        alias:
          type: string
          description: An alias for the time period.
          example: alias
        active_time_ranges:
          type: array
          description: The list of active time ranges.
          example:
          - day: monday
            time_ranges:
            - start: '12:00:00'
              end: '14:00:00'
          items:
            $ref: '#/components/schemas/TimeRangeActive'
        exceptions:
          type: array
          description: A list of additional time ranges to be added.
          example:
          - date: '2020-01-01'
            time_ranges:
            - start: '14:00:00'
              end: '18:00:00'
          items:
            $ref: '#/components/schemas/TimePeriodException'
        exclude:
          type: array
          description: A list of time period names whose periods are excluded.
          example:
          - name
          items:
            type: string
            description: A unique name for the time period.
            example: time_name
            pattern: ^[-a-z0-9A-Z_]+\Z
      required:
      - active_time_ranges
      - alias
      - name
      additionalProperties: false
    UserRoleExtensionsModel:
      properties:
        alias:
          description: The alias of the user role.
          title: Alias
          type: string
        permissions:
          description: A list of permissions for the user role.
          items:
            type: string
          title: Permissions
          type: array
        builtin:
          description: True if it's a built-in user role, otherwise False.
          title: Builtin
          type: boolean
        enforce_two_factor_authentication:
          description: If enabled, all users with this role will be required to setup
            two factor authentication and will be logged out of any current sessions.
          title: Enforce Two Factor Authentication
          type: boolean
        basedon:
          description: The built-in user role id that the user role is based on.
          title: Basedon
          type: string
      required:
      - alias
      - permissions
      - builtin
      title: UserRoleExtensionsModel
      type: object
    UserRoleModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: user_role
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/UserRoleExtensionsModel'
          description: All the data and metadata of this user role.
      required:
      - links
      - domainType
      - extensions
      title: UserRoleModel
      type: object
    UserRoleCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: user_role
          description: The domain type of the objects in the collection
          examples:
          - host_config
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of user role objects
          items:
            $ref: '#/components/schemas/UserRoleModel'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: UserRoleCollectionModel
      type: object
    EditUserRoleModel:
      additionalProperties: false
      properties:
        new_role_id:
          description: New role_id for the userrole that must be unique.
          examples:
          - new_userrole_id
          title: New Role Id
          type: string
        new_alias:
          description: New alias for the userrole that must be unique.
          examples:
          - new_userrole_alias
          title: New Alias
          type: string
        new_basedon:
          description: A built-in user role that you want the user role to be based
            on.
          examples:
          - guest
          title: New Basedon
          type: string
        new_permissions:
          description: 'A map of permission names to their state.  The following values
            can be set: ''yes'' - the permission is active for this role.''no'' -
            the permission is deactivated for this role, even if it was active in
            the role it was based on.''default'' - takes the activation state from
            the role this role was based on. '
          examples:
          - general.edit_profile: 'yes'
            general.message: 'no'
          title: New Permissions
          type: object
        enforce_two_factor_authentication:
          description: If enabled, all users with this role will be required to setup
            two factor authentication and will be logged out of any current sessions.
          title: Enforce Two Factor Authentication
          type: boolean
      title: EditUserRoleModel
      type: object
    CreateUserRoleModel:
      additionalProperties: false
      properties:
        role_id:
          description: An existing userrole that you want to clone.
          examples:
          - admin
          title: Role Id
          type: string
        new_role_id:
          description: The new role id for the newly created user role.
          examples:
          - new_limited_permissions_userrole
          title: New Role Id
          type: string
        new_alias:
          description: A new alias that you want to give to the newly created user
            role.
          examples:
          - user_a
          title: New Alias
          type: string
        enforce_two_factor_authentication:
          description: If enabled, all users with this role will be required to setup
            two factor authentication and will be logged out of any current sessions.
          examples:
          - true
          title: Enforce Two Factor Authentication
          type: boolean
      required:
      - role_id
      title: CreateUserRoleModel
      type: object
    ConcreteUserContactOption:
      type: object
      properties:
        email:
          type: string
          description: The mail address of the user.
          example: user@example.com
        fallback_contact:
          type: boolean
          description: In case none of the notification rules handle a certain event
            a notification will be sent to the specified email
      required:
      - email
      additionalProperties: false
    UserIdleOption:
      type: object
      properties:
        option:
          type: string
          description: This field indicates if the idle timeout uses the global configuration,
            is disabled or uses an individual duration
          enum:
          - global
          - disable
          - individual
        duration:
          type: integer
          description: The duration in seconds of the individual idle timeout if individual
            is selected as idle timeout option.
          example: 3600
      required:
      - option
      additionalProperties: false
    DateTimeRange:
      type: object
      properties:
        start_time:
          type: string
          format: date-time
          description: The start datetime of the time period. The format conforms
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28+00:00'
        end_time:
          type: string
          format: iso8601
          description: The end datetime of the time period. The format conforms to
            the ISO 8601 profile
          example: '2017-07-21T17:32:28+00:00'
      required:
      - start_time
      additionalProperties: false
    ConcreteDisabledNotifications:
      type: object
      properties:
        disable:
          type: boolean
          description: Option if all notifications should be temporarily disabled
        timerange:
          description: A custom timerange during which notifications are disabled
          $ref: '#/components/schemas/DateTimeRange'
      additionalProperties: false
    AuthOptionOutput:
      type: object
      properties:
        auth_type:
          type: string
          enum:
          - password
          - automation
          - saml2
          - ldap
          example: password
        store_automation_secret:
          type: boolean
          description: If set to True, the secret is stored
          example: false
        enforce_password_change:
          type: boolean
          description: If set to True, the user will be forced to change his password
            on the next login or access. Defaults to False
          example: false
      additionalProperties: false
    ConcreteUserInterfaceAttributes:
      type: object
      properties:
        interface_theme:
          type: string
          description: The theme of the interface
          enum:
          - default
          - dark
          - light
          example: default
        sidebar_position:
          type: string
          description: The position of the sidebar
          enum:
          - left
          - right
          example: right
        navigation_bar_icons:
          type: string
          description: This option decides if icons in the navigation bar should show/hide
            the respective titles
          enum:
          - hide
          - show
          example: hide
        mega_menu_icons:
          type: string
          deprecated: true
          description: Deprecated - use `main_menu_icons` instead.
          enum:
          - topic
          - entry
          example: topic
        main_menu_icons:
          type: string
          description: This option decides if colored icon should be shown foe every
            entry in the main menus or alternatively only for the headlines (the 'topics')
          enum:
          - topic
          - entry
          example: topic
        show_mode:
          type: string
          description: This option decides what show mode should be used for unvisited
            menus. Alternatively, this option can also be used to enforce show more
            removing the three dots for all menus.
          enum:
          - default
          - default_show_less
          - default_show_more
          - enforce_show_more
          example: default
        contextual_help_icon:
          type: string
          default: show_icon
          description: Whether or not to show the contextual icon in the UI for this
            user.
          enum:
          - show_icon
          - hide_icon
          example: show_icon
      additionalProperties: false
    BaseUserAttributes:
      type: object
      properties:
        fullname:
          type: string
          description: The alias or full name of the user.
        customer:
          type: string
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites. This field is required for the following
            editions: Managed.'
          example: provider
        disable_login:
          type: boolean
          description: This field indicates if the user is allowed to login to the
            monitoring.
        contact_options:
          description: Contact settings for the user
          $ref: '#/components/schemas/ConcreteUserContactOption'
        idle_timeout:
          description: Idle timeout for the user. Per default, the global configuration
            is used.
          example:
            option: global
          $ref: '#/components/schemas/UserIdleOption'
        roles:
          type: array
          description: The list of assigned roles to the user
          items:
            type: string
        authorized_sites:
          type: array
          description: The names of the sites that this user is authorized to handle
          items:
            type: string
        contactgroups:
          type: array
          description: The contact groups that this user is a member of
          items:
            type: string
        pager_address:
          type: string
          description: ''
        disable_notifications:
          $ref: '#/components/schemas/ConcreteDisabledNotifications'
        language:
          type: string
          description: The language used by the user in the user interface
        temperature_unit:
          type: string
          description: The temperature unit used for graphs and perfometers.
        auth_option:
          description: Enforce password change attribute for the user
          example:
            auth_type: password
            enforce_password_change: false
          $ref: '#/components/schemas/AuthOptionOutput'
        interface_options:
          $ref: '#/components/schemas/ConcreteUserInterfaceAttributes'
        start_url:
          type: string
          description: The URL that the user should be redirected to after login.
            There is a 'default_start_url', a 'welcome_page', and any other will be
            treated as a custom URL
          example: welcome_page
      required:
      - fullname
      additionalProperties: false
    CustomUserAttributes:
      type: object
      properties: {}
      additionalProperties:
        type: string
        description: Each tag is a mapping of string to string
    UserObject:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        domainType:
          default: user_config
          description: The domain type of the object.
        id:
          type: string
          description: The unique identifier for this domain-object type.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        members:
          type: object
          description: The container for external resources, like linked foreign objects
            or actions.
          additionalProperties: {}
        extensions:
          description: The attributes of the user
          example:
            fullname: John Doe
          anyOf:
          - $ref: '#/components/schemas/BaseUserAttributes'
          - $ref: '#/components/schemas/CustomUserAttributes'
      required:
      - links
      additionalProperties: false
    UserCollection:
      type: object
      properties:
        links:
          type: array
          description: list of links to other resources.
          example: null
          items:
            $ref: '#/components/schemas/Link'
        id:
          type: string
          default: all
          description: The name of this collection.
        domainType:
          default: user_config
          description: The domain type of the objects in the collection.
        title:
          type: string
          description: A human readable title of this object. Can be used for user
            interfaces.
        value:
          type: array
          description: A list of user objects.
          items:
            $ref: '#/components/schemas/UserObject'
        extensions:
          type: object
          description: Additional attributes alongside the collection.
          additionalProperties: {}
      required:
      - links
      additionalProperties: false
    AuthUpdatePassword:
      type: object
      properties:
        auth_type:
          type: string
          description: The authentication type
          enum: &id197
          - automation
          - password
          - remove
          example: password
        password:
          type: string
          description: The password for login
          example: password
          minLength: 1
        enforce_password_change:
          type: boolean
          description: If set to True, the user will be forced to change his password
            on the next login or access
          example: false
      required:
      - auth_type
      additionalProperties: false
    AuthUpdateSecret:
      type: object
      properties:
        auth_type:
          type: string
          description: The authentication type
          enum: *id197
          example: password
        secret:
          type: string
          description: For accounts used by automation processes (such as fetching
            data from views for further procession). This is the automation secret
          example: DEYQEQQPYCFFBYH@AVMC
        store_automation_secret:
          type: boolean
          default: false
          description: If set to True, the secret will be stored unhashed in order
            to reuse it in rules.
          example: false
      required:
      - auth_type
      additionalProperties: false
    AuthUpdateRemove:
      type: object
      properties:
        auth_type:
          type: string
          description: The authentication type
          enum: *id197
          example: password
      required:
      - auth_type
      additionalProperties: false
    AuthUpdateOption:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/AuthUpdatePassword'
      - $ref: '#/components/schemas/AuthUpdateSecret'
      - $ref: '#/components/schemas/AuthUpdateRemove'
      discriminator:
        propertyName: auth_type
        mapping:
          password: '#/components/schemas/AuthUpdatePassword'
          automation: '#/components/schemas/AuthUpdateSecret'
          remove: '#/components/schemas/AuthUpdateRemove'
    UserContactOption:
      type: object
      properties:
        email:
          type: string
          description: The mail address of the user. Required if the user is a monitoringcontact
            and receives notifications via mail.
          example: user@example.com
        fallback_contact:
          type: boolean
          default: false
          description: In case none of your notification rules handles a certain event
            a notification will be sent to the specified email
          example: false
      required:
      - email
      additionalProperties: false
    IdleOption:
      type: object
      properties:
        option:
          type: string
          description: Specify if the idle timeout should use the global configuration,
            be disabled or use an individual duration
          enum:
          - global
          - disable
          - individual
          example: false
        duration:
          type: integer
          default: 3600
          description: The duration in seconds of the individual idle timeout if individual
            is selected as idle timeout option.
          example: 60
      required:
      - option
      additionalProperties: false
    DisableNotificationCustomTimeRange:
      type: object
      properties:
        start_time:
          type: string
          format: iso8601
          description: The start datetime of the time period. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
        end_time:
          type: string
          format: iso8601
          description: The end datetime of the time period. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
      required:
      - end_time
      - start_time
      additionalProperties: false
    DisabledNotifications:
      type: object
      properties:
        disable:
          type: boolean
          description: Option if all notifications should be temporarily disabled
          example: false
        timerange:
          description: A custom timerange during which notifications are disabled
          example:
            start_time: '2017-07-21T17:32:28Z'
            end_time: '2017-07-21T18:32:28Z'
          $ref: '#/components/schemas/DisableNotificationCustomTimeRange'
      additionalProperties: false
    UserInterfaceUpdateAttributes:
      type: object
      properties:
        interface_theme:
          type: string
          description: The theme of the interface
          enum:
          - default
          - dark
          - light
        sidebar_position:
          type: string
          description: The position of the sidebar
          enum:
          - left
          - right
        navigation_bar_icons:
          type: string
          description: This option decides if icons in the navigation bar should show/hide
            the respective titles
          enum:
          - hide
          - show
        mega_menu_icons:
          type: string
          deprecated: true
          description: Deprecated - use `main_menu_icons` instead.
          enum:
          - topic
          - entry
        main_menu_icons:
          type: string
          description: This option decides if colored icon should be shown foe every
            entry in the main menus or alternatively only for the headlines (the 'topics')
          enum:
          - topic
          - entry
        show_mode:
          type: string
          description: This option decides what show mode should be used for unvisited
            menus. Alternatively, this option can also be used to enforce show more
            removing the three dots for all menus.
          enum:
          - default
          - default_show_less
          - default_show_more
          - enforce_show_more
        contextual_help_icon:
          type: string
          default: show_icon
          description: Whether or not to show the contextual icon in the UI for this
            user.
          enum:
          - show_icon
          - hide_icon
          example: show_icon
      additionalProperties: false
    UpdateUser:
      type: object
      properties:
        fullname:
          type: string
          description: The alias or full name of the user
          example: Mathias Kettner
        customer:
          type: string
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites.'
          example: provider
        auth_option:
          description: Authentication option for the user
          example:
            auth_type: password
            password: password
          $ref: '#/components/schemas/AuthUpdateOption'
        disable_login:
          type: boolean
          description: The user can be blocked from login but will remain part of
            the site. The disabling does not affect notification and alerts.
          example: false
        contact_options:
          description: Contact settings for the user
          example:
            email: user@example.com
          $ref: '#/components/schemas/UserContactOption'
        pager_address:
          type: string
          description: ''
          example: ''
        idle_timeout:
          description: Idle timeout for the user
          example: {}
          $ref: '#/components/schemas/IdleOption'
        roles:
          type: array
          description: The list of assigned roles to the user
          example:
          - user
          items:
            type: string
            description: An existing user role
            example: user
        authorized_sites:
          type: array
          description: The names of the sites the user is authorized to handle. Specifying
            'all' will grant the user access to all sites.
          example:
          - heute
          items:
            type: string
        contactgroups:
          type: array
          description: Assign the user to one or multiple contact groups. If no contact
            group is specified then no monitoring contact will be created for the
            user.
          example:
          - all
          items:
            type: string
            example: all
        disable_notifications:
          description: ''
          example:
            disabled: false
          $ref: '#/components/schemas/DisabledNotifications'
        language:
          type: string
          description: Configure the language to be used by the user in the user interface.
            Omitting this will configure the default language
          enum:
          - de
          - en
          - ro
          example: en
        temperature_unit:
          type: string
          description: Configure the temperature unit used for graphs and perfometers.
          enum:
          - default
          - celsius
          - fahrenheit
          example: celsius
        interface_options:
          description: ''
          example:
            interface_theme: dark
          $ref: '#/components/schemas/UserInterfaceUpdateAttributes'
        start_url:
          type: string
          description: The URL that the user should be redirected to after login.
            There is a 'default_start_url', a 'welcome_page', and any other will be
            treated as a custom URL
          example: default_start_url
      additionalProperties: true
    UserDismissWarning:
      type: object
      properties:
        warning:
          type: string
          description: The warning to be dismissed.
          enum:
          - notification_fallback
          - immediate_slideout_change
          - changes-info
          example: notification_fallback
      required:
      - warning
      additionalProperties: false
    AuthPassword:
      type: object
      properties:
        auth_type:
          type: string
          description: The authentication type
          enum: &id198
          - automation
          - password
          example: password
        password:
          type: string
          description: The password for login
          example: password
          minLength: 1
        enforce_password_change:
          type: boolean
          default: false
          description: If set to True, the user will be forced to change his password
            on the next login or access. Defaults to False
          example: false
      additionalProperties: false
    AuthSecret:
      type: object
      properties:
        auth_type:
          type: string
          description: The authentication type
          enum: *id198
          example: password
        secret:
          type: string
          description: For accounts used by automation processes (such as fetching
            data from views for further procession). This is the automation secret
          example: DEYQEQQPYCFFBYH@AVMC
        store_automation_secret:
          type: boolean
          default: false
          description: If set to True, the secret will be stored unhashed in order
            to reuse it in rules.
          example: false
      additionalProperties: false
    AuthOption:
      type: object
      properties: {}
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/AuthPassword'
      - $ref: '#/components/schemas/AuthSecret'
      discriminator:
        propertyName: auth_type
        mapping:
          password: '#/components/schemas/AuthPassword'
          automation: '#/components/schemas/AuthSecret'
    UserInterfaceAttributes:
      type: object
      properties:
        interface_theme:
          type: string
          default: default
          description: The theme of the interface
          enum:
          - default
          - dark
          - light
        sidebar_position:
          type: string
          default: right
          description: The position of the sidebar
          enum:
          - left
          - right
        navigation_bar_icons:
          type: string
          default: hide
          description: This option decides if icons in the navigation bar should show/hide
            the respective titles
          enum:
          - hide
          - show
        mega_menu_icons:
          type: string
          default: topic
          deprecated: true
          description: Deprecated - use `main_menu_icons` instead.
          enum:
          - topic
          - entry
        main_menu_icons:
          type: string
          default: topic
          description: This option decides if colored icon should be shown foe every
            entry in the main menus or alternatively only for the headlines (the 'topics')
          enum:
          - topic
          - entry
        show_mode:
          type: string
          default: default
          description: This option decides what show mode should be used for unvisited
            menus. Alternatively, this option can also be used to enforce show more
            removing the three dots for all menus.
          enum:
          - default
          - default_show_less
          - default_show_more
          - enforce_show_more
        contextual_help_icon:
          type: string
          default: show_icon
          description: Whether or not to show the contextual icon in the UI for this
            user.
          enum:
          - show_icon
          - hide_icon
          example: show_icon
      additionalProperties: false
    CreateUser:
      type: object
      properties:
        username:
          type: string
          description: An unique username for the user
          example: cmkuser
        fullname:
          type: string
          description: The alias or full name of the user
          example: Mathias Kettner
        customer:
          type: string
          description: '[Managed edition only] By specifying a customer, you configure
            on which sites the user object will be available. ''global'' will make
            the object available on all sites.'
          example: provider
        auth_option:
          description: Authentication option for the user
          example:
            auth_type: password
            password: password
          $ref: '#/components/schemas/AuthOption'
        disable_login:
          type: boolean
          default: false
          description: The user can be blocked from login but will remain part of
            the site. The disabling does not affect notification and alerts.
          example: false
        contact_options:
          description: Contact settings for the user
          example:
            email: user@example.com
          $ref: '#/components/schemas/UserContactOption'
        pager_address:
          type: string
          default: ''
          description: ''
          example: ''
        idle_timeout:
          description: Idle timeout for the user. Per default, the global configuration
            is used.
          example:
            option: global
          $ref: '#/components/schemas/IdleOption'
        roles:
          type: array
          description: The list of assigned roles to the user
          example:
          - user
          items:
            type: string
            description: An existing user role
            example: user
        authorized_sites:
          type: array
          default:
          - all
          description: The names of the sites the user is authorized to handle.
          example:
          - heute
          items:
            type: string
        contactgroups:
          type: array
          description: Assign the user to one or multiple contact groups. If no contact
            group is specified then no monitoring contact will be created for the
            user.
          example:
          - all
          items:
            type: string
            example: all
        disable_notifications:
          description: ''
          example:
            disable: false
          $ref: '#/components/schemas/DisabledNotifications'
        language:
          type: string
          description: Configure the language to be used by the user in the user interface.
            Omitting this will configure the default language.
          enum:
          - de
          - en
          - ro
          example: en
        temperature_unit:
          type: string
          description: Configure the temperature unit used for graphs and perfometers.
            Omitting this field will configure the default temperature unit.
          enum:
          - default
          - celsius
          - fahrenheit
          example: celsius
        interface_options:
          default:
            interface_theme: default
            sidebar_position: right
            navigation_bar_icons: hide
            mega_menu_icons: topic
            main_menu_icons: topic
            show_mode: default
            contextual_help_icon: show_icon
          description: ''
          example:
            interface_theme: dark
          $ref: '#/components/schemas/UserInterfaceAttributes'
        start_url:
          type: string
          default: default_start_url
          description: The URL that the user should be redirected to after login.
            There is a 'default_start_url', a 'welcome_page', and any other will be
            treated as a custom URL
          example: default_start_url
      required:
      - fullname
      - username
      additionalProperties: true
    ViewExtensions:
      properties:
        data_source:
          description: ID of the data source.
          title: Data Source
          type: string
        restricted_to_single:
          description: A list of single infos that this view is restricted to. This
            means that the view must be filtered to exactly one item for each info
            name.
          items:
            type: string
          title: Restricted To Single
          type: array
      required:
      - data_source
      - restricted_to_single
      title: ViewExtensions
      type: object
    ViewModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: view
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/ViewExtensions'
          description: Parts of the configuration of this view.
      required:
      - links
      - domainType
      - extensions
      title: ViewModel
      type: object
    ViewCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: view
          description: The domain type of the objects in the collection
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of views.
          items:
            $ref: '#/components/schemas/ViewModel'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: ViewCollectionModel
      type: object
    AutocompleterConfigModel:
      properties:
        ident:
          description: Identifier for the autocompleter.
          title: Ident
          type: string
        params:
          description: Parameters for the autocompleter.
          title: Params
          type: object
        dynamic_params_callback_name:
          description: Name of the callback for dynamic parameters.
          enum:
          - nop
          - tag_group_options_autocompleter
          - host_and_service_hinted_autocompleter
          - host_hinted_autocompleter
          - label_autocompleter
          - check_types_autocompleter
          title: Dynamic Params Callback Name
          type: string
      required:
      - ident
      - params
      title: AutocompleterConfigModel
      type: object
    CheckboxComponentModel:
      properties:
        component_type:
          const: checkbox
          description: A checkbox component.
          title: Component Type
          type: string
        id:
          description: The identifier for the checkbox component.
          title: Id
          type: string
        label:
          description: The label for the checkbox.
          title: Label
          type: string
        default_value:
          description: The default value of the checkbox.
          title: Default Value
          type: boolean
      required:
      - component_type
      - id
      - label
      - default_value
      title: CheckboxComponentModel
      type: object
    CheckboxGroupComponentModel:
      properties:
        component_type:
          const: checkbox_group
          description: A group of checkboxes.
          title: Component Type
          type: string
        choices:
          additionalProperties:
            type: string
          description: 'All checkboxes, variable id -> display label.

            The default value for each checkbox is `true`, unless some checkboxes
            are explicitly set in the

            current filter values (in which case the default is `false`).'
          title: Choices
          type: object
        label:
          description: The label for the checkbox group.
          title: Label
          type: string
      required:
      - component_type
      - choices
      title: CheckboxGroupComponentModel
      type: object
    DropdownComponentModel:
      properties:
        component_type:
          const: dropdown
          description: A static dropdown component.
          title: Component Type
          type: string
        id:
          description: The identifier for the dropdown component.
          title: Id
          type: string
        choices:
          additionalProperties:
            type: string
          description: Choices for the dropdown, internal value -> display label.
          title: Choices
          type: object
        default_value:
          description: The default value that should be selected.
          title: Default Value
          type: string
        label:
          description: The label for the dropdown.
          title: Label
          type: string
      required:
      - component_type
      - id
      - choices
      - default_value
      title: DropdownComponentModel
      type: object
    DualListComponentModel:
      properties:
        component_type:
          const: dual_list
          description: A dual list component for selecting multiple items.
          title: Component Type
          type: string
        id:
          description: The identifier for the dual list component.
          title: Id
          type: string
        choices:
          additionalProperties:
            type: string
          description: Choices for the dual list, internal value -> display label.
          title: Choices
          type: object
      required:
      - component_type
      - id
      - choices
      title: DualListComponentModel
      type: object
    DynamicDropdownComponentModel:
      properties:
        component_type:
          const: dynamic_dropdown
          description: Filter on a dropdown, with options loaded dynamically.
          title: Component Type
          type: string
        id:
          description: The identifier for the dropdown component.
          title: Id
          type: string
        autocompleter:
          $ref: '#/components/schemas/AutocompleterConfigModel'
          description: Configuration for the autocompleter.
        has_validation:
          description: Whether this dropdown has validation logic.
          title: Has Validation
          type: boolean
      required:
      - component_type
      - id
      - autocompleter
      - has_validation
      title: DynamicDropdownComponentModel
      type: object
    FilterComponentModel:
      anyOf:
      - $ref: '#/components/schemas/HorizontalGroupComponentModel'
      - $ref: '#/components/schemas/DropdownComponentModel'
      - $ref: '#/components/schemas/DynamicDropdownComponentModel'
      - $ref: '#/components/schemas/CheckboxComponentModel'
      - $ref: '#/components/schemas/CheckboxGroupComponentModel'
      - $ref: '#/components/schemas/TextInputComponentModel'
      - $ref: '#/components/schemas/RadioButtonComponentModel'
      - $ref: '#/components/schemas/SliderComponentModel'
      - $ref: '#/components/schemas/StaticTextComponentModel'
      - $ref: '#/components/schemas/HiddenComponentModel'
      - $ref: '#/components/schemas/DualListComponentModel'
      - $ref: '#/components/schemas/LabelGroupFilterComponentModel'
      - $ref: '#/components/schemas/TagFilterComponentModel'
    FilterDomainObject:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: visual_filter
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/FilterExtensions'
          description: All the data and metadata of this host.
      required:
      - links
      - domainType
      - extensions
      title: FilterDomainObject
      type: object
    FilterExtensions:
      properties:
        info:
          description: For which type of object this filter is applicable.
          title: Info
          type: string
        description:
          description: Description for this filter.
          title: Description
          type: string
        is_show_more:
          description: Whether the filter is normally hidden.
          title: Is Show More
          type: boolean
        components:
          description: The components of the filter, e.g. dropdowns, checkboxes, etc.
          items:
            $ref: '#/components/schemas/FilterComponentModel'
          title: Components
          type: array
      required:
      - info
      - is_show_more
      - components
      title: FilterExtensions
      type: object
    HiddenComponentModel:
      properties:
        component_type:
          const: hidden
          description: A hidden component, not rendered in the UI but used to set
            static values.
          title: Component Type
          type: string
        id:
          description: The identifier for the hidden component.
          title: Id
          type: string
        value:
          description: The static value for this component.
          title: Value
          type: string
      required:
      - component_type
      - id
      - value
      title: HiddenComponentModel
      type: object
    HorizontalGroupComponentModel:
      properties:
        component_type:
          const: horizontal_group
          description: A horizontal group of components.
          title: Component Type
          type: string
        components:
          description: The components within this horizontal group.
          items:
            $ref: '#/components/schemas/FilterComponentModel'
          title: Components
          type: array
      required:
      - component_type
      - components
      title: HorizontalGroupComponentModel
      type: object
    LabelGroupFilterComponentModel:
      properties:
        component_type:
          const: label_group
          description: A filter component for selecting label groups.
          title: Component Type
          type: string
        id:
          description: The identifier for the label group filter component.
          title: Id
          type: string
        object_type:
          description: The type of object this label group filter is applied to.
          enum:
          - host
          - service
          title: Object Type
          type: string
      required:
      - component_type
      - id
      - object_type
      title: LabelGroupFilterComponentModel
      type: object
    RadioButtonComponentModel:
      properties:
        component_type:
          const: radio_button
          description: A radio button component.
          title: Component Type
          type: string
        id:
          description: The identifier for the radio button component.
          title: Id
          type: string
        choices:
          additionalProperties:
            type: string
          description: Options for the radio buttons, internal value -> display label.
          title: Choices
          type: object
        default_value:
          description: The default value that should be selected.
          title: Default Value
          type: string
      required:
      - component_type
      - id
      - choices
      - default_value
      title: RadioButtonComponentModel
      type: object
    SliderComponentModel:
      properties:
        component_type:
          const: slider
          description: A slider component.
          title: Component Type
          type: string
        id:
          description: The identifier for the slider component.
          title: Id
          type: string
        min_value:
          description: The minimum value of the slider.
          title: Min Value
          type: integer
        max_value:
          description: The maximum value of the slider.
          title: Max Value
          type: integer
        step:
          description: The step size for the slider.
          title: Step
          type: integer
        default_value:
          description: The default value of the slider.
          title: Default Value
          type: integer
      required:
      - component_type
      - id
      - min_value
      - max_value
      - step
      - default_value
      title: SliderComponentModel
      type: object
    StaticTextComponentModel:
      properties:
        component_type:
          const: static_text
          description: A static text component, not interactive.
          title: Component Type
          type: string
        text:
          description: The static text to be displayed.
          title: Text
          type: string
      required:
      - component_type
      - text
      title: StaticTextComponentModel
      type: object
    TagFilterComponentModel:
      properties:
        component_type:
          const: tag_filter
          description: A filter component for selecting tags.
          title: Component Type
          type: string
        display_rows:
          description: Number of rows to display in the tag filter dropdown.
          title: Display Rows
          type: integer
        variable_prefix:
          description: Prefix for the variables used in the filter.
          title: Variable Prefix
          type: string
      required:
      - component_type
      - display_rows
      - variable_prefix
      title: TagFilterComponentModel
      type: object
    TextInputComponentModel:
      properties:
        component_type:
          const: text_input
          description: A text input component.
          title: Component Type
          type: string
        id:
          description: The identifier for the text input component.
          title: Id
          type: string
        label:
          description: The label for the text input.
          title: Label
          type: string
        suffix:
          description: An optional suffix to be placed after the input field, mostly
            for units.
          title: Suffix
          type: string
      required:
      - component_type
      - id
      title: TextInputComponentModel
      type: object
    FilterCollection:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: visual_filter
          description: The domain type of the objects in the collection
          examples:
          - visual_filter
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of filter configurations.
          examples:
          - - {}
          items:
            $ref: '#/components/schemas/FilterDomainObject'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: FilterCollection
      type: object
    VisualInfoExtensions:
      properties:
        sort_index:
          description: The sort index of this info. Infos are sorted ascending by
            this index.
          title: Sort Index
          type: integer
        single_filter:
          description: Filter components to use when filtering for one item.
          items:
            $ref: '#/components/schemas/FilterComponentModel'
          title: Single Filter
          type: array
      required:
      - sort_index
      - single_filter
      title: VisualInfoExtensions
      type: object
    VisualInfoModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: constant
          description: The domain type of the object.
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/VisualInfoExtensions'
          description: The configuration of this info.
      required:
      - links
      - domainType
      - extensions
      title: VisualInfoModel
      type: object
    VisualInfoCollectionModel:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: constant
          description: The domain type of the objects in the collection
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of info objects
          items:
            $ref: '#/components/schemas/VisualInfoModel'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: VisualInfoCollectionModel
      type: object
    MemoryLimitValueType:
      properties:
        limit:
          title: Limit
          type: integer
        spike_limit:
          title: Spike Limit
          type: integer
      required:
      - limit
      - spike_limit
      title: MemoryLimitValueType
      type: object
    OTelCollectorMemLimitSpec:
      additionalProperties: false
      properties:
        id:
          description: Unique identifier
          title: Id
          type: string
        title:
          description: Title of the collection configuration
          title: Title
          type: string
        disabled:
          description: Set to true to disable this configuration.
          title: Disabled
          type: boolean
        site:
          description: 'Sites for which the collector should be configured. Note:
            There is only one configuration allowed per site.'
          items:
            type: string
          title: Site
          type: array
          uniqueItems: true
        comment:
          description: Optional comment or note about this configuration.
          title: Comment
          type: string
        docu_url:
          description: Optional URL to related documentation.
          title: Docu Url
          type: string
        memory_limit:
          $ref: '#/components/schemas/OtelMemoryLimitConfig'
          description: Configure the memory limit for the collector
          title: Memory Limit
      required:
      - id
      - title
      - disabled
      - site
      title: OTelCollectorMemLimitSpec
      type: object
    OTelCollectorObject:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: otel_collector_config
          description: The domain type of the objects in the collection
          examples:
          - otel_collector_config
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/OTelCollectorMemLimitSpec'
          description: All the data and metadata of this collector configuration.
      required:
      - links
      - domainType
      - extensions
      title: OTelCollectorObject
      type: object
    OtelMemoryLimitConfig:
      properties:
        check_interval:
          title: Check Interval
          type: number
        limit:
          maxItems: 2
          minItems: 2
          prefixItems:
          - enum:
            - absolute
            - relative
            type: string
          - $ref: '#/components/schemas/MemoryLimitValueType'
          title: Limit
          type: array
      required:
      - check_interval
      - limit
      title: OtelMemoryLimitConfig
      type: object
    OTelCollectorCollection:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: otel_collector_config
          description: The domain type of the objects in the collection
          examples:
          - otel_collector_config
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of collector configuration objects
          items:
            $ref: '#/components/schemas/OTelCollectorObject'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: OTelCollectorCollection
      type: object
    CustomHostNameRule:
      properties:
        type:
          const: custom
          description: Type of rule
          title: Type
          type: string
        value:
          description: List of host name rules
          items:
            $ref: '#/components/schemas/HostNameRule'
          title: Value
          type: array
      required:
      - type
      - value
      title: CustomHostNameRule
      type: object
    HostNameRule:
      properties:
        type:
          description: Type of rule
          enum:
          - free
          - key
          title: Type
          type: string
        value:
          description: Literal string or Otel attribute name
          title: Value
          type: string
      required:
      - type
      - value
      title: HostNameRule
      type: object
    OTelCollectorEndpointConfig:
      properties:
        address:
          anyOf:
          - format: ipv4
            type: string
          - format: ipv6
            type: string
          - type: string
          description: Host address
          title: Address
        port:
          description: Port number
          title: Port
          type: integer
      required:
      - address
      - port
      title: OTelCollectorEndpointConfig
      type: object
    OTelCollectorPromScrapeObject:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: otel_collector_config_prom_scrape
          description: The domain type of the objects in the collection
          examples:
          - otel_collector_config_prom_scrape
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/OTelCollectorPromScrapeSpec'
          description: All the data and metadata of this collector configuration.
      required:
      - links
      - domainType
      - extensions
      title: OTelCollectorPromScrapeObject
      type: object
    OTelCollectorPromScrapeSpec:
      additionalProperties: false
      properties:
        id:
          description: Unique identifier
          title: Id
          type: string
        title:
          description: Title of the collection configuration
          title: Title
          type: string
        disabled:
          description: Set to true to disable this configuration.
          title: Disabled
          type: boolean
        site:
          description: 'Sites for which the collector should be configured. Note:
            There is only one configuration allowed per site.'
          items:
            type: string
          title: Site
          type: array
          uniqueItems: true
        comment:
          description: Optional comment or note about this configuration.
          title: Comment
          type: string
        docu_url:
          description: Optional URL to related documentation.
          title: Docu Url
          type: string
        prometheus_scrape_configs:
          description: Configure targets supporting the Prometheus protocol for active
            scraping
          items:
            $ref: '#/components/schemas/OTelCollectorPrometheusScrapeConfig'
          title: Prometheus Scrape Configs
          type: array
      required:
      - id
      - title
      - disabled
      - site
      title: OTelCollectorPromScrapeSpec
      type: object
    OTelCollectorPrometheusScrapeConfig:
      properties:
        job_name:
          description: Job Name. This will get translated to a host name
          title: Job Name
          type: string
        scrape_interval:
          description: Time period for periodically scraping target (in seconds)
          title: Scrape Interval
          type: integer
        metrics_path:
          anyOf:
          - type: string
          - type: 'null'
          description: URL path to metrics endpoint
          title: Metrics Path
        targets:
          description: Definition of targets to scrape
          items:
            $ref: '#/components/schemas/OTelCollectorEndpointConfig'
          title: Targets
          type: array
        host_name_rules:
          description: Rules for generating host names from scraped data
          items:
            discriminator:
              mapping:
                custom: '#/components/schemas/CustomHostNameRule'
                service_instance_id: '#/components/schemas/StaticHostNameRule'
              propertyName: type
            oneOf:
            - $ref: '#/components/schemas/StaticHostNameRule'
            - $ref: '#/components/schemas/CustomHostNameRule'
          title: Host Name Rules
          type: array
        encryption:
          description: Encryption configuration
          title: Encryption
          type: boolean
      required:
      - job_name
      - scrape_interval
      - metrics_path
      - targets
      - host_name_rules
      - encryption
      title: OTelCollectorPrometheusScrapeConfig
      type: object
    StaticHostNameRule:
      properties:
        type:
          const: service_instance_id
          description: Type of rule
          title: Type
          type: string
      required:
      - type
      title: StaticHostNameRule
      type: object
    OTelCollectorPromScrapeCollection:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: otel_collector_config_prom_scrape
          description: The domain type of the objects in the collection
          examples:
          - otel_collector_config_prom_scrape
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of collector prometheus scrape configuration objects
          items:
            $ref: '#/components/schemas/OTelCollectorPromScrapeObject'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: OTelCollectorPromScrapeCollection
      type: object
    BasicAuthentication:
      properties:
        type:
          const: basicauth
          description: Authentication type
          title: Type
          type: string
        userlist:
          description: List of users
          items:
            $ref: '#/components/schemas/User'
          title: Userlist
          type: array
      required:
      - type
      - userlist
      title: BasicAuthentication
      type: object
    NoAuthentication:
      properties:
        type:
          const: none
          description: Authentication type
          title: Type
          type: string
      required:
      - type
      title: NoAuthentication
      type: object
    OTelCollectorProtocolConfig:
      properties:
        endpoint:
          $ref: '#/components/schemas/OTelEndpointExtended'
      required:
      - endpoint
      title: OTelCollectorProtocolConfig
      type: object
    OTelCollectorReceiverObject:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        domainType:
          const: otel_collector_config_receivers
          description: The domain type of the objects in the collection
          examples:
          - otel_collector_config_receivers
          title: Domaintype
          type: string
        id:
          description: The unique identifier for this domain-object type.
          examples:
          - host1
          title: ID
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          examples:
          - My Host
          title: Title
          type: string
        extensions:
          $ref: '#/components/schemas/OTelCollectorReceiverSpec'
          description: All the data and metadata of this collector configuration.
      required:
      - links
      - domainType
      - extensions
      title: OTelCollectorReceiverObject
      type: object
    OTelCollectorReceiverSpec:
      additionalProperties: false
      properties:
        id:
          description: Unique identifier
          title: Id
          type: string
        title:
          description: Title of the collection configuration
          title: Title
          type: string
        disabled:
          description: Set to true to disable this configuration.
          title: Disabled
          type: boolean
        site:
          description: 'Sites for which the collector should be configured. Note:
            There is only one configuration allowed per site.'
          items:
            type: string
          title: Site
          type: array
          uniqueItems: true
        comment:
          description: Optional comment or note about this configuration.
          title: Comment
          type: string
        docu_url:
          description: Optional URL to related documentation.
          title: Docu Url
          type: string
        receiver_protocol_grpc:
          $ref: '#/components/schemas/OTelCollectorProtocolConfig'
          description: Configure the receiver for the GRPC protocol
          title: Receiver Protocol Grpc
        receiver_protocol_http:
          $ref: '#/components/schemas/OTelCollectorProtocolConfig'
          description: Configure the receiver for the HTTP protocol
          title: Receiver Protocol Http
      required:
      - id
      - title
      - disabled
      - site
      title: OTelCollectorReceiverSpec
      type: object
    OTelEndpointExtended:
      properties:
        address:
          anyOf:
          - format: ipv4
            type: string
          - format: ipv6
            type: string
          - type: string
          description: Host address
          title: Address
        port:
          description: Port number
          title: Port
          type: integer
        host_name_rules:
          description: The host name computation computes the name of the host that
            should have the corresponding Checkmk services. The computation is done
            by the OpenTelemetry collector and the result is stored in the '{attr}'
            attribute. For every rule configured here, the provided fields are concatenated
            in the order they are listed. The first rule that results in a non-empty
            value is used. For an example see the help text in the UI.
          items:
            items:
              $ref: '#/components/schemas/HostNameRule'
            type: array
          title: Host Name Rules
          type: array
        export_to_syslog:
          description: Set to 'true' to enable forwarding to syslog and Event Console
          title: Export To Syslog
          type: boolean
        auth:
          description: Authentication configuration
          discriminator:
            mapping:
              basicauth: '#/components/schemas/BasicAuthentication'
              none: '#/components/schemas/NoAuthentication'
            propertyName: type
          oneOf:
          - $ref: '#/components/schemas/NoAuthentication'
          - $ref: '#/components/schemas/BasicAuthentication'
          title: Auth
        encryption:
          description: Encryption configuration
          title: Encryption
          type: boolean
      required:
      - address
      - port
      - host_name_rules
      - export_to_syslog
      - auth
      - encryption
      title: OTelEndpointExtended
      type: object
    Password:
      properties:
        type:
          description: Password lookup type
          enum:
          - explicit
          - store
          title: Type
          type: string
        value:
          description: Actual password string or name from the password store
          title: Value
          type: string
      required:
      - type
      - value
      title: Password
      type: object
    User:
      properties:
        username:
          description: Username
          title: Username
          type: string
        password:
          $ref: '#/components/schemas/Password'
          description: Password
      required:
      - username
      - password
      title: User
      type: object
    OTelCollectorReceiversCollection:
      properties:
        links:
          description: List of links to other resources.
          examples:
          - - href: https://.../api_resource
              method: GET
              rel: self
              type: application/json
          items:
            $ref: '#/components/schemas/LinkModel'
          title: Links
          type: array
        id:
          description: The name of this collection.
          title: Id
          type: string
        domainType:
          const: otel_collector_config_receivers
          description: The domain type of the objects in the collection
          examples:
          - otel_collector_config_receivers
          title: Domaintype
          type: string
        title:
          description: A human readable title of this object. Can be used for user
            interfaces.
          title: Title
          type: string
        value:
          description: A list of collector receiver configuration objects
          items:
            $ref: '#/components/schemas/OTelCollectorReceiverObject'
          title: Value
          type: array
        extensions:
          description: Additional attributes alongside the collection.
          title: Extensions
          type: object
      required:
      - links
      - id
      - domainType
      - value
      title: OTelCollectorReceiversCollection
      type: object
    OTelCollectorStatus:
      properties:
        mode:
          description: Whether the OTel collector is enabled or disabled
          enum:
          - enabled
          - disabled
          examples:
          - enabled
          title: Mode
          type: string
      required:
      - mode
      title: OTelCollectorStatus
      type: object
    OTelCollectorActivation:
      additionalProperties: false
      properties:
        site_id:
          description: The ID of the site for which the collector should be enabled
            or disabled.
          examples:
          - prod
          title: Site Id
          type: string
        activation:
          $ref: '#/components/schemas/OTelCollectorStatus'
          description: Activation configuration for the OpenTelemetry collector
          examples:
          - mode: enabled
      required:
      - site_id
      - activation
      title: OTelCollectorActivation
      type: object
    GetCustomGraph:
      type: object
      properties:
        time_range:
          description: The time range from which to source the metrics.
          example: *id162
          $ref: '#/components/schemas/TimeRange'
        reduce:
          type: string
          default: average
          description: Specify how to reduce a segment of data points to a single
            data point of the output metric. This can be useful to find spikes in
            your data that would be smoothed out by computing the average.
          enum: *id163
          example: max
        custom_graph_id:
          type: string
          pattern: ^\w[_\-\w\d\.]*$
          description: The ID of the requested custom graph.
          example: my_cool_graph
      required:
      - custom_graph_id
      - time_range
      additionalProperties: false
  parameters:
    Accept:
      name: Accept
      in: header
      required: false
      description: Media type(s) that is/are acceptable for the response.
      example: application/json
      schema:
        type: string
  securitySchemes:
    headerAuth:
      type: http
      scheme: bearer
      description: Use user credentials in the `Authorization` HTTP header. The format
        of the header value is `$user $password`. This method has the highest precedence.
        If authentication succeeds, `cookieAuth` will be skipped.
      bearerFormat: username password
    webserverAuth:
      type: http
      scheme: basic
      description: Use the authentication method of the webserver ('basic' or 'digest').
        To use this, you'll either have to re-configure the site's Apache instance
        by yourself. If authentication succeeds, `cookieAuth` will be skipped.
