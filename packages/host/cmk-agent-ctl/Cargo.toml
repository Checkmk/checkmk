# Copyright (C) 2019 Checkmk GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

[package]
name = "cmk-agent-ctl"
version = "1.0.0"
workspace = ".."
edition.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(build_system_bazel)'] }


[dependencies]
anyhow = { version = "1.0", features = ["backtrace"] }
async-std = { version = "1.13" }
async-trait = { version = "0.1" }
bincode = { version = "1.3" }                                 # binary serialisation, used by mailslot, can't be replaced with serde
clap = { version = "4.5.22", features = ["derive"] }
faccess = { version = "0.2" }
flate2 = { version = "1.0" }
flexi_logger = { version = "0.29", default-features = false } # extension for log to allowe log redirection
gethostname = { version = "0.5.0" }
http = { version = "1.2" }
ipnet = { version = "2.10" }
log = { version = "0.4" }
nix = { version = "0.29", features = ["user"] }
openssl = { version = "0.10", features = ["vendored"] }
os_info = { version = "3.9" }
rand = { version = "0.8" }
# ideally, we would just use "rustls-tls-native-roots" instead of "native-tls" and "rustls-tls-manual-roots
# however, in SUP-10832, native-tls was ok with the custom CA of the customer, while rustls complained
# unfortunately, we couldn't find out why, so for now, we have to keep native-tls
reqwest = { version = "0.12", features = [
  "blocking",
  "json",
  "multipart",
  "native-tls",
  "rustls-tls-manual-roots",
] }
rpassword = { version = "7.3" }
# explicitly avoid aws_lc_rs for now since it needs eg. cmake, which we currently don't have on the Windows build nodes
rustls = { version = "0.23.19", default-features = false, features = [
  "ring",
  "logging",
  "std",
  "tls12",
] }
rustls-pemfile = { version = "2.2" }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
serde_with = { version = "3.11" }
socket2 = { version = "0.5" }
tokio = { version = "1.42", features = ["full"] }
# explicitly avoid aws_lc_rs for now since it needs eg. cmake, which we currently don't have on the Windows build nodes
tokio-rustls = { version = "0.26", default-features = false, features = [
  "ring",
  "logging",
  "tls12",
] }
toml = { version = "0.8" }
uuid = { version = "1.11", features = ["v4"] }
x509-parser = { version = "0.16" }

[target.'cfg(windows)'.dependencies]
is_elevated = { version = "0.1" }
mail_slot = { version = "0.1" }
winapi = { version = "0.3.9", features = ["processthreadsapi", "winsock2"] }

[dev-dependencies]
assert_cmd = { version = "*" }
lazy_static = { version = "*" }
predicates = { version = "*" }
tempfile = { version = "*" }
