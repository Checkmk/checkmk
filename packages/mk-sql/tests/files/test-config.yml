---
system:
  logging:
    level: "warn" # optional, default: "info"
    max_size: 1000000
    max_count: 5
mssql:

  # Documentation:
  #
  # Overview:
  # The `Check SQL` plugin is designed for monitoring SQL Servers. It mandates a primary configuration (`mssql.main`)
  # for single SQL Server host monitoring and allows additional, optional configurations (`mssql.configs`) for multiple hosts.
  #
  # Key Features:
  # 1. Flexible Monitoring:
  #    - Single SQL Server mode: Utilize `mssql.main` for monitoring a single SQL Server host and its instances.
  #    - Multiple SQL Servers mode: Implement additional checks in `mssql.configs` to monitor multiple SQL Server hosts.
  # 2. Structured Monitoring Process. The checks follow a structured process that includes:
  #    a. Connection and Authentication: Establishes connection to a SQL host using specific rules and credentials.
  #    b. Instance Discovery: Detects SQL instances on the host as per the `discovery` rule.
  #    c. Instance Customization: Adapts monitoring of SQL instances with instances rules.
  #    d. Sections Generation: Executes specified sections(also internally known as SQL queries).
  #
  # Check Configuration Components:
  # - Connection: Specifies the host for the SQL server and details the connection parameters.
  # - Authentication: Specifies authentication methods, including credentials like username and password.
  # - Sections: Determines which SQL queries (sections) are to be executed during the check.
  # - Discovery: Identifies *which* SQL instances are to be monitored.
  # - Instances: Describes *how* the SQL instances are to be monitored.
  #
  # Configuration Keys:
  # - Mandatory: `mssql.main` for primary configuration.
  # - Optional: Array of configurations under `mssql.configs` for additional SQL Server hosts.
  #
  # Notes:
  # 1. If some SQL instance is not discoverable, then to monitor this instance you must describe
  #    it in `main.instances`
  # 2. If some SQL instance monitoring differs from the default one (for example piggyback is required),
  #    then you must also describe it in `main.instances`
  #
  main: # mandatory, defines main SQL check to be executed
    options: # optional
      max_connections: 6 # optional, default: absent, 6
      max_queries: 16 # optional, for the future use
    authentication: # mandatory
      username: "foo" # mandatory
      password: "bar" # optional
      type: "sql_server" # optional, default: "integrated", values: sql_server, windows, token and integrated(current windows user)
      access_token: "baz" # optional, no default
    connection: # optional
      hostname: "localhost" # optional, default: "localhost", empty string: "localhost"
      failoverpartner: "localhost2" # optional, no default
      port: 1433 # optional, default: 1433
      socket: 'C:\path\to\file' # optional, no default
      trust_server_certificate: yes # optional, default: yes value is ignored if tls presented
      tls: # optional
        ca: 'C:\path\to\file' # mandatory
        client_certificate: 'C:\path\to\file' # mandatory
      timeout: 5 # optional, default: 5. Important: you may have longer timeout if your DNS can't resolve hostname.
    sections: # optional
    - instance:  # special section
    - databases:
    - counters:
    - blocked_sessions:
    - transactionlogs:
    - clusters:
    - mirroring:
    - availability_groups:
    - connections:
    - tablespaces:
        is_async: yes
    - datafiles:
        is_async: yes
    - backup:
        is_async: yes
    - jobs:
        is_async: yes
    - someOtherSQL:
        is_async: yes
        disabled: yes
    cache_age: 600 # optional, default: 600
    piggyback_host: "myPiggybackHost" # optional
    discovery: # optional, defines which instances are to be monitored
      detect: yes # optional, default, if no then valid only instances in `instances` subsection
      include: ["foo", "bar", "inst1"] # optional, no default /prio 2; use only those instance, ignore exclude
      exclude: ["baz"] # optional, no default / prio 3, exclude those instances from the detected list
    instances: # optional, defines how instances are to be accessed and monitored
      - sid: "INST1" # mandatory
        authentication: # optional, same as above
        connection: # optional,  same as above
        alias: "someApplicationName" # optional
        piggyback: # optional
          hostname: "myPiggybackHost" # mandatory
          sections: # optional, no default / same as above
      - sid: "foo" # mandatory
        alias: "our_inst2" # optional
    mode: "port" # optional, default: "port" / can be "socket", "port" or "special"
  configs: # optional, defines additional SQL checks to be executed
    - main:
        options: # optional, if absent will use main
        authentication: # optional, if absent will use main
          username: "foo" # mandatory
        connection: # optional, if absent will use main
          hostname: "agent" # optional, default: "localhost", empty string: "localhost"
        instances: # optional, describes how to monitor/access instances, both detected and non-detectable
          - sid: "SQLEXPRESS" # mandatory
