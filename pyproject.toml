[tool.ruff]
extend-exclude = ["agents/plugins/mk_sap_2.py", "doc/**/*.py"]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
  "A",      # flake8: builtins
  "ARG",    # flake8: unused args
  "C90",    # mccabe
  "E",      # pycodestyle (error)
  "F",      # pyflakes
  "N804",   # pep8-naming: invalid-first-argument-name-for-class-method (cls)
  "N805",   # pep8-naming: invalid-first-argument-name-for-method (self)
  "I",      # isort
  "PL",     # pylint
  "RUF100", # ruff: unused noqa
  "SLF",    # flake8: self
  "UP",     # pyugrade
  "W",      # pycodestyle (warning)
  "T10",    # flake8: debugger
]
ignore = [
  # Black is our formatting tool, so ignore any formatting-related findings.
  "E501", # line too long
  # We should probably have a look at these findings.
  "E731", # do not assign a lambda expression, use a def
  "E741", # ambiguous variable name 'FOO'
  # pylint doesn't complain about these
  "PLC0414", # Import alias does not rename original package
  "PLC0415", # `import` should be at the top-level of a file
  "PLR0911", # Too many return statements
  "PLR0912", # Too many branches
  "PLR0913", # Too many arguments in function definition
  "PLR0915", # Too many statements
  "PLR2004", # Magic value used in comparison, consider replacing `FOO` with a constant variable
  "PLR2044", # Line with empty comment
  "PLW0603", # Using the global statement to update `FOO` is discouraged
  "PLW2901", # `for` loop variable `FOO` overwritten by assignment target
  # Basically a TODO list...
  "PLW1641", # Object does not implement `__hash__` method
  "UP031",   # Use format specifiers instead of percent format
  "UP040",   # Type alias `FOO` uses `TypeAlias` annotation instead of the `type` keyword
  "UP046",   # Generic class `FOO` uses `Generic` subclass instead of type parameters (NOTE: fixable via --fix --unsafe-fixes)
  "UP047",   # Generic function `FOO` should use type parameters (NOTE: fixable via --fix --unsafe-fixes)
]

[tool.ruff.lint.per-file-ignores]
"cmk/*" = [
  "A001",
  "A002",
  "A004",
  "ARG001",
  "ARG002",
  "ARG003",
  "ARG004",
  "ARG005",
  "SLF001",
]
"packages/cmk-trace/cmk/trace/__init__.py" = ["A005"]
"non-free/packages/cmk-mknotifyd/*" = ["ARG001", "ARG002", "SLF001"]
"tests/*" = ["A002", "ARG001", "ARG002", "ARG003", "ARG004", "ARG005", "SLF001"]
"agents/*" = ["ARG001", "ARG002", "SLF001"]
# Agent plugins still need to support Python 2.7
"agents/plugins/*" = [
  "UP007", # Use `X | Y` for type annotations
  "UP009", # UTF-8 encoding declaration is unnecessary
  "UP010", # Unnecessary `__future__` import `with_statement` for target Python version
  "UP015", # Unnecessary open mode parameters
  "UP024", # Replace aliased errors with `OSError`
  "UP025", # Remove unicode literals from strings
  "UP028", # Replace `yield` over `for` loop with `yield from`
  "UP032", # Use f-string instead of `format` call
  "UP036", # Version block is outdated for minimum Python version
  "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`
  "UP041", # Replace aliased errors with `TimeoutError`
]
"tests/agent-plugin-unit/*" = [
  "UP004", # Class `_MockHttpResponse` inherits from `object`
  "UP006", # Use `collections.defaultdict` instead of `DefaultDict` for type annotation
  "UP007", # Use `X | Y` for type annotations
  "UP009", # UTF-8 encoding declaration is unnecessary
  "UP010", # Unnecessary `__future__` import `with_statement` for target Python version
  "UP012", # Unnecessary call to `encode` as UTF-8
  "UP025", # Remove unicode literals from strings
  "UP026", # `mock` is deprecated, use `unittest.mock`
  "UP035", # Import from `FOO` instead: `BAR`
  "UP036", # Version block is outdated for minimum Python version
  "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`
  "UP045", # Use `X | None` for type annotations
]
"agents/wnx/tests/ap/test_mk_logwatch_win.py" = ["UP036"]
"packages/cmk-plugin-apis/cmk/agent_based/v1/type_defs.py" = [
  "UP006", # Use `collections.defaultdict` instead of `DefaultDict` for type annotation
  "UP035", # Import from `FOO` instead: `BAR`
]
"cmk/checkengine/plugin_backend/utils.py" = [
  "UP007", # Use `X | Y` for type annotations
]

[tool.ruff.lint.mccabe]
max-complexity = 64 # TODO: This is far too much, we need to lower this!

[tool.ruff.lint.isort]
known-first-party = ["cmk", "tests"]
order-by-type = false
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party-not-cmk",
  "first-party",
  "local-folder",
]

[tool.ruff.lint.isort.sections]
first-party-not-cmk = ["cmc_proto", "omdlib", "livestatus"]

# NOTE: Keep this is sync with mypy-raw.ini!
# The number of errors/files below are just a snapshot to give a rough idea. In
# addition, a single cause can imply multiple symptoms, so these numbers have to
# be taken with a grain of salt...
[tool.mypy]
# Global options.
# Add per-module options as [[tool.mypy.overrides]].
explicit_package_bases = true
# TODO: `mypy_path` shouldn't be required with Bazel.
# cmk-update-agent is needed for now because cmk_update_agent is still imported by some composition
# tests. Can hopefully be cleaned up in a following step.
mypy_path = """\
    $MYPY_CONFIG_FILE_DIR/non-free/packages/cmk-update-agent:\
    $MYPY_CONFIG_FILE_DIR/omd/packages/omd:\
    """
plugins = ["pydantic.mypy"]
python_version = "3.12"
scripts_are_modules = true

# do not descend into 3rd party dependencies
follow_imports = "silent"
follow_imports_for_stubs = true

# hidden flags for PEP 688 compat, see https://github.com/python/mypy/issues/15313
disable_bytearray_promotion = true
disable_memoryview_promotion = true

# global options enabled with strict
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
  # 3rd party that "does not explictly export attribute ... [attr-defined]"
  "apispec_oneofschema",
  "icalendar",
  "feedparser",
  "marshmallow_oneofschema",
  "msal",
  "opsgenie_sdk",
  "requests_oauthlib",
  "robot",
  "robot.model",
  "robot.result",
  "vcr",
]
no_implicit_reexport = false

[[tool.mypy.overrides]]
module = [
  # active_checks
  "check_sql",
  "check_elasticsearch_query",
  "check_bi_aggr",
  "check_uniserv",
  "check_form_submit",
  "check_notify_count",
  "agents.modules.windows.tests.integration.conftest",
  "agents.plugins.*",
  "agents.wnx.tests.*",
  "buildscripts.*",
  "cmk.*",
  "cmk_update_agent",
  # omd/packages/maintenance
  "diskspace",
  "doc.*",
  # doc/*
  "foo.check",
  "import-memory",
  "figheader",
  #
  "logdate",
  "omd.*",
  "omdlib.*",
  "scripts.create_build_environment_variables",
  "tests.*",
  # tests/agent-plugin-unit/*
  "test_apache_status",
  "test_mk_filestats",
  "test_mk_jolokia",
  "test_mk_logwatch",
  "test_mk_mongodb",
  "test_mk_postgres",
  "test_mk_sap",
  "test_mtr",
  "test_nginx_status",
  "test_plesk_backups",
  "test_plesk_domains",
]
enable_error_code = [
  # "explicit-override",   # 443 errors in 99 files
  "ignore-without-code",
  # "mutable-override",    # 336 errors in 71 files
  # "possibly-undefined",  # 401 errors in 183 files
  # "redundant-expr",      # 115 errors in 86 files
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]

# When all of these are true, we can enable --strict
disallow_any_generics = false      # 1904 errors in 507 files
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = false     # 6427 errors in 1077 files
disallow_untyped_decorators = true
disallow_untyped_defs = false      # 6738 errors in 1571
extra_checks = true
no_implicit_reexport = true
strict_equality = true
warn_return_any = false            # 622 errors in 267 files
warn_unused_ignores = true

# Miscellaneous stuff not in --strict
disallow_any_decorated = false  # 3433 errors in 997 files
disallow_any_explicit = false   # 2854 errors in 836 files
disallow_any_expr = false       # 112427 errors in 3304 files
disallow_any_unimported = false # 291 errors in 46 files
no_implicit_optional = true
strict_optional = true
warn_unreachable = false        # 240 errors in 133 files

[[tool.mypy.overrides]]
module = ["mk_jolokia"]
disallow_untyped_calls = false
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
  "cmk.active_checks.check_sftp",
  "cmk.cee.bakery.*",
  "cmk.cee.liveproxy.*",
  "cmk.gui.*",
  "cmk.notification_plugins.*",
  "cmk.update_config.*",
  "cmk.utils.livestatus_helpers.*",
  "tests.gui_e2e.*",
  "tests.unit.cmk.ec.*",
  "tests.unit.cmk.update_config.*",
]
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
disallow_untyped_calls = true
disallow_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
  "cmk.gui.backup.*",
  "cmk.gui.bi.*",
  "cmk.gui.cce.*",
  "cmk.gui.cee.*",
  "cmk.gui.cme.*",
  "cmk.gui.cse.*",
  "cmk.gui.crash_reporting.*",
  "cmk.gui.custom_icons.*",
  "cmk.gui.dashboard.*",
  "cmk.gui.data_source.*",
  "cmk.gui.graphing.*",
  "cmk.gui.htmllib.*",
  "cmk.gui.inventory.*",
  "cmk.gui.livestatus_utils.commands.*",
  "cmk.gui.mkeventd.*",
  "cmk.gui.nagvis.*",
  "cmk.gui.nodevis.*",
  "cmk.gui.openapi.*",
  "cmk.gui.painter.*",
  "cmk.gui.plugins.wato.*",
  "cmk.gui.rest_api_types.*",
  "cmk.gui.sidebar.*",
  "cmk.gui.userdb.*",
  "cmk.gui.ldap.ldap_connector",
  "cmk.gui.utils.*",
  "cmk.gui.valuespec.*",
  "cmk.gui.mobile.*",
  "cmk.gui.views.*",
  "cmk.gui.views.command.*",
  "cmk.gui.views.icon.*",
  "cmk.gui.views.inventory.*",
  "cmk.gui.views.perfometer.*",
  "cmk.gui.views.sorter.*",
  "cmk.gui.wato.*",
  "cmk.gui.watolib.*",
  "cmk.gui.watolib.mode.*",
  "cmk.gui.watolib.sample_config.*",
  "cmk.gui.wato.pages.*",
  "cmk.gui.visuals.*",
  "cmk.gui.wsgi.*",
]
enable_error_code = [
  "ignore-without-code",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
disable_error_code = ["explicit-override"]
disallow_untyped_calls = false
disallow_untyped_defs = false
warn_return_any = false
warn_unused_ignores = false

[[tool.mypy.overrides]]
module = [
  # generated code
  "cmc_proto.*",
]
disallow_untyped_calls = false

[[tool.mypy.overrides]]
module = ["cmk.crypto.*"]
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
strict = true
# Miscellaneous stuff not in --strict
disallow_any_decorated = true
disallow_any_explicit = true
# disallow_any_expr = true  -- TODO
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["cmk.server_side_calls.*", "cmk.rulesets.*"]
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
strict = true
# Miscellaneous stuff not in --strict
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_expr = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["cmk.agent_receiver.*"]
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
strict = true
# Miscellaneous stuff not in --strict
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_expr = false
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true


[[tool.mypy.overrides]]
module = ["cmk.trace.*"]
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
strict = true
# Miscellaneous stuff not in --strict
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_expr = false
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["cmk.graphing.*"]
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  # The few findings need to be investigated
  #"redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
strict = true
# Miscellaneous stuff not in --strict
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_expr = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["cmk.inventory_ui.*"]
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  # The few findings need to be investigated
  #"redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
strict = true
# Miscellaneous stuff not in --strict
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_expr = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["cmk.livestatus_client.*", "livestatus.*"]
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
strict = true
# Miscellaneous stuff not in --strict
disallow_any_decorated = true
# TODO: Disabled for initial move to a package
disallow_any_explicit = false
# TODO: Disabled for initial move to a package
disallow_any_expr = false
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["cmk.mkp_tool.*", "cmk.events.*"]
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
strict = true
# Miscellaneous stuff not in --strict
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_expr = false
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["cmk.messaging.*"]
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
strict = true
# my-py warns about decorated functions containing type "Any"
# but they come from pydantic base classes:
disallow_any_decorated = false
# Miscellaneous stuff not in --strict
disallow_any_explicit = false
disallow_any_expr = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true


[[tool.mypy.overrides]]
module = ["cmk.werks.*"]
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
strict = true
# Miscellaneous stuff not in --strict
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_expr = false
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["cmk.gui.form_specs.*"]
disallow_any_generics = true

[[tool.mypy.overrides]]
module = ["cmk.ec.*"]
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "cmk.agent_based.*"
strict = true
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  # Needs to be investigated
  # "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
# Miscellaneous stuff not in --strict
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_expr = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "cmk.otel_collector.*"
strict = true
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
# Miscellaneous stuff not in --strict
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_expr = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "cmk.relay.*"
strict = true
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
# Miscellaneous stuff not in --strict
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_expr = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "cmk.cce.metric_backend.*"
strict = true
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "mutable-override",
  "possibly-undefined",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "unimported-reveal",
  "unused-awaitable",
  "unused-ignore",
]
# Miscellaneous stuff not in --strict
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_expr = true
disallow_any_generics = true
disallow_any_unimported = true
disallow_subclassing_any = true
no_implicit_optional = true
strict_optional = true
warn_unreachable = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
  # Live logs initially look like a good idea to pin down problems in the tests
  # quickly, but with the current state of our tests it's simply too much noise.
  # Even in a successful unit test run, you get more than 70 log messages
  # cluttering up the output and making it hard to use: saml2.client logs already
  # at load time, tons of our own tests emit warnings up to ERROR even when
  # successful, etc. etc. We might reconsinder lowering the live log level when we
  # have cleaned up things...
  "--log-cli-level=CRITICAL",
  "--log-cli-format=%(asctime)s %(levelname)s %(message)s",
  # Show summary of skipped tests
  "-rs",
  # Show N slowest setup/test durations
  "--durations=20",
  # Disable a few plugins which slow down the pytest startup even when not used
  "-p no:faker",
  "-p no:schemathesis",
  "-p no:hypothesispytest",
]
markers = [
  "checks: Run all existing test cases for checks.",
  "slow: Run tests which take relatively larger time to execute.",
]
# See: https://docs.python.org/3/library/warnings.html#the-warnings-filter
filterwarnings = [
  # Breaking change, only in new major version, see https://github.com/marshmallow-code/apispec/pull/759
  'ignore:^distutils Version classes are deprecated\. Use packaging.version instead\.$:DeprecationWarning:apispec.utils:0',
  # Internal copy of distutils in setuptools :-P
  'ignore:^distutils Version classes are deprecated\. Use packaging.version instead\.$:DeprecationWarning:distutils.version:0',
  # We have a doctest which intentionally checks for a failure
  'ignore:^Invalid value for tag-group tag_agent. None$:UserWarning:cmk.gui.fields.definitions:0',
  # Make marshmallow warnings errors, otherwise typos may go unnoticed.
  'error::marshmallow.warnings.RemovedInMarshmallow4Warning',
  # Fun fact: pkg_resources calls declare_namespace() itself when it processes namespace_packages.txt files.
  'ignore:Deprecated call to `pkg_resources\.declare_namespace:DeprecationWarning:pkg_resources:0',
  # ignore schemathesis testing related warnings
  'ignore:^jsonschema\.RefResolver is deprecated.*$:DeprecationWarning:schemathesis\..*:0',
  'ignore:^jsonschema\.exceptions\.RefResolutionError is deprecated.*$:DeprecationWarning:schemathesis\..*:0',
  'ignore:^Generating overly large repr.*$:Warning:hypothesis\..*:0',
  # ignore DeprecationWarning for ast.NameConstant in reportlab <= 4.2
  'ignore:^ast\.NameConstant is deprecated and will be removed in Python 3\.14\; use ast\.Constant instead$:DeprecationWarning:reportlab\..*:0',
  # ignore warnings caused by probuf 4.25.3 until updating to 5.x
  'ignore:^Type google\._upb\._message.MessageMapContainer uses PyType_Spec with a metaclass that has custom tp_new\. This is deprecated and will no longer be allowed in Python 3\.14\.$:DeprecationWarning:importlib._bootstrap:488',
  'ignore:^Type google\._upb\._message.ScalarMapContainer uses PyType_Spec with a metaclass that has custom tp_new\. This is deprecated and will no longer be allowed in Python 3\.14\.$:DeprecationWarning:importlib._bootstrap:488',
  # ignore PytestCollectionWarning caused by webtest
  'ignore:^cannot collect test class .* because it has a __init__ constructor.*$:UserWarning:.*webtest.*:0',
  # openapi collector uses pkg resources
  'ignore:pkg_resources:DeprecationWarning:.*opentelemetry.*',
]
# When writing a junit.xml, also write the output of a test to the junit
# file in addition to the console.
junit_logging = "all"
