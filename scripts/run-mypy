#!/bin/bash
# Copyright (C) 2019 Checkmk GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# mypy_path in mypy.ini doesn't support relative paths, so use this wrapper to
# tell mypy about the relevant paths using the MYPYPATH environment variable
set -e

REPO_PATH="$(dirname "$(dirname "$(realpath "$0")")")"

# --no-print-directory prevents make dir change messages in the output
PYTHON_MAJOR_DOT_MINOR=$(make --no-print-directory -f "$REPO_PATH/defines.make" print-PYTHON_MAJOR_DOT_MINOR)

# Detect whether or not mypy is available and print out an error that is in the
# same format as mypy issues. This message is understood by e.g. vims ALE and
# displays and error that mypy could not be executed.
VENV_MYPY_PATH="$REPO_PATH/.venv/bin/mypy"
if [ ! -f "$VENV_MYPY_PATH" ]; then
    # Try to fix this first
    rm -rf "$REPO_PATH/.venv"
    make --silent -C "$REPO_PATH" .venv 1>&2

    if [ ! -f "$VENV_MYPY_PATH" ]; then
        for LAST_ARG; do :; done
        echo "$LAST_ARG:1: error: Could not find $VENV_MYPY_PATH"
        exit 1
    fi
fi

# NOTE: We should NOT run this in "$REPO_PATH", otherwise mypy will make paths
# in messages relative, which will confuse e.g. Emacs' flycheck mode.
# shellcheck disable=SC2086
MYPYPATH="$REPO_PATH:\
$REPO_PATH/livestatus/api/python:\
$REPO_PATH/omd/packages/omd:\
$REPO_PATH/agent-receiver" \
    exec "$REPO_PATH/scripts/run-pipenv" run mypy \
    --python-version "${PYTHON_MAJOR_DOT_MINOR}" \
    --scripts-are-modules \
    --show-error-codes \
    --check-untyped-defs \
    --strict-equality \
    --no-implicit-optional \
    --cache-dir=/dev/null \
    ${JUNIT_XML} \
    "$@"
