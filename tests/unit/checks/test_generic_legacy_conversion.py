#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
from contextlib import contextmanager

import pytest  # type: ignore[import]

from testlib.base import KNOWN_AUTO_MIGRATION_FAILURES

from cmk.utils.check_utils import section_name_of
from cmk.utils.type_defs import SectionName, CheckPluginName

from cmk.snmplib.type_defs import SNMPTree

import cmk.base.check_api as check_api
import cmk.base.config as config
from cmk.base.api.agent_based.register.section_plugins_legacy import _create_snmp_trees
from cmk.base.api.agent_based.register.section_plugins_legacy_scan_function import (
    _explicit_conversions,
    create_detect_spec,
)
from cmk.base.api.agent_based.section_types import AgentSectionPlugin, SNMPSectionPlugin

pytestmark = pytest.mark.checks


@contextmanager
def known_exceptions(type_, name):
    if (type_, name) not in KNOWN_AUTO_MIGRATION_FAILURES:
        yield
        return

    with pytest.raises(NotImplementedError):
        yield


@pytest.fixture(scope="module", name="_load_all_checks")
def load_all_checks():
    config.load_all_checks(check_api.get_check_api_context)


@pytest.fixture(scope="module", name="snmp_info", autouse=True)
def _get_snmp_info(_load_all_checks):
    assert len(config.snmp_info) > 400  # sanity check
    return config.snmp_info.copy()


@pytest.fixture(scope="module", name="migrated_agent_sections", autouse=True)
def _get_migrated_agent_sections(_load_all_checks):
    return config.registered_agent_sections.copy()


@pytest.fixture(scope="module", name="migrated_snmp_sections", autouse=True)
def _get_migrated_snmp_sections(_load_all_checks):
    return config.registered_snmp_sections.copy()


@pytest.fixture(scope="module", name="migrated_checks", autouse=True)
def _get_migrated_checks(_load_all_checks):
    return config.registered_check_plugins.copy()


def test_management_board_interface_prefix(config_check_info):
    mgmt_criteria = (
        ("Name must start with 'mgmt_'", lambda k, c: k.startswith("mgmt_")),
        ("Description must start with 'Management Interface: '",
         lambda k, c: c["service_description"].startswith("Management Interface: ")),
        ("MGMT_ONLY must be set", lambda k, c: c["management_board"] == check_api.MGMT_ONLY),
    )

    management_checks = [(key, check)
                         for key, check in config_check_info.items()
                         if (check["service_description"] is not None and any(
                             test(key, check) for _, test in mgmt_criteria))]

    for key, check in management_checks:

        for requirement, test in mgmt_criteria:
            assert test(key,
                        check), ("%s: Inconsistent management propertiers: %s" % (key, requirement))

        host_check = config_check_info.get(key[5:])
        if host_check is None:
            continue

        requirement = "The corresponding non-mgmt check must have the matching description"
        assert host_check["service_description"] == check["service_description"][22:], (
            "%s: Inconsistent management propertiers: %s" % (key, requirement))

        requirement = "The corresponding non-mgmt check must have HOST_ONLY set"
        assert host_check["management_board"] == check_api.HOST_ONLY, (
            "%s: Inconsistent management propertiers: %s" % (key, requirement))


def test_create_section_plugin_from_legacy(config_check_info, snmp_info, migrated_agent_sections,
                                           migrated_snmp_sections):
    for name, check_info_dict in config_check_info.items():
        # only test main checks
        if name != section_name_of(name):
            continue

        section_name = SectionName(name)

        with known_exceptions('section', name):
            section = migrated_agent_sections.get(section_name)
            if section is not None:
                assert isinstance(section, AgentSectionPlugin)
            else:
                section = migrated_snmp_sections.get(section_name)
                if section is None:
                    raise NotImplementedError(name)
                assert isinstance(section, SNMPSectionPlugin)

        if section is None:
            continue

        original_parse_function = check_info_dict["parse_function"]
        if original_parse_function is not None:
            assert original_parse_function.__name__ == section.parse_function.__name__


def test_snmp_info_snmp_scan_functions_equal(snmp_info, config_snmp_scan_functions):
    assert set(config_snmp_scan_functions) == set(snmp_info)


def test_snmp_tree_translation(snmp_info):
    for info_spec in snmp_info.values():
        new_trees, recover_function = _create_snmp_trees(info_spec)
        assert callable(recover_function)  # is tested separately
        assert isinstance(new_trees, list)
        assert all(isinstance(tree, SNMPTree) for tree in new_trees)


def test_scan_function_translation(config_snmp_scan_functions):
    for name, scan_func in config_snmp_scan_functions.items():
        if name in (
                # these are already migrated manually:
                "ucd_mem",
                "hr_mem",
                "cisco_vpn_sessions",
                "apc_rackpdu_power",
        ):
            continue

        assert scan_func is not None

        # make sure we can convert the scan function
        if ('section', name) not in KNOWN_AUTO_MIGRATION_FAILURES:
            _ = create_detect_spec(name, scan_func, [])


@pytest.mark.parametrize("check_name, func_name", [
    ("if64_tplink", "has_ifHCInOctets"),
    ("fsc_subsystems", "_is_fsc_or_windows"),
    ("ucd_processes", "_is_ucd"),
    ("printer_pages", "scan_ricoh_printer"),
    ("fsc_temp", "is_fsc"),
    ("df_netapp32", "is_netapp_filer"),
    ("cisco_cpu", "_has_table_2"),
    ("cisco_cpu", "_is_cisco"),
    ("cisco_cpu", "_is_cisco_nexus"),
])
def test_explicit_conversion(check_manager, check_name, func_name):
    scan_func = check_manager.get_check(check_name).context[func_name]
    created = create_detect_spec("unit-test", scan_func, [])
    explicit = _explicit_conversions(scan_func.__name__)
    assert created == explicit


def test_no_subcheck_with_snmp_keywords(snmp_info):
    for name in snmp_info:
        assert name == section_name_of(name)


def test_exception_required(config_check_info):
    assert "apc_symmetra_temp" in config_check_info, (
        "In cmk.base.config is an extra condition for 'apc_symmetra_temp'. "
        "If this test fails, you can remove those two lines along with this test.")


def test_module_attribute(migrated_checks):
    # TODO: this really belongs somewhere else, but for now we use the fixture from this module
    local_check = migrated_checks[CheckPluginName("local")]
    assert local_check.module == "local"


def test_all_checks_migrated(config_check_info, migrated_checks):
    migrated = set(str(c.name) for c in migrated_checks.values())
    # we don't expect pure section declarations anymore
    true_checks = set(
        n.replace('.', '_').replace('-', '_')
        for n, i in config_check_info.items()
        if i['check_function'])
    # we know these fail:
    known_fails = set(name for type_, name in KNOWN_AUTO_MIGRATION_FAILURES if type_ == "check")
    unexpected = migrated & known_fails
    assert not unexpected, "these have been migrated unexpectedly: %r" % (unexpected,)
    failures = true_checks - (migrated | known_fails)
    assert not failures, "failed to migrate: %r" % (failures,)


def test_all_check_variables_present(_load_all_checks, config_check_variables):
    expected_check_variables = {
        'AKCP_TEMP_CHECK_DEFAULT_PARAMETERS',
        'ALCATEL_TEMP_CHECK_DEFAULT_PARAMETERS',
        'ANY_USER',
        'ARBOR_MEMORY_CHECK_DEFAULT_PARAMETERS',
        'AWSCostAndUageMetrics',
        'AWSEBSStorageTypes',
        'AWSELBHealthMap',
        'AWSNoExceptionsText',
        'AWSRegions',
        'AnyStr',
        'BACKUP_STATE',
        'BALANCE_THRESHOLDS',
        'BONDING_CHECK_DEFAULT_PARAMETERS',
        'CISCO_MEM_CHECK_DEFAULT_PARAMETERS',
        'DELL_IDRAC_FANS_STATE_MAP',
        'DEVICE_TYPE_MAP',
        'EC2DefaultItemName',
        'ENVIROMUX_CHECK_DEFAULT_PARAMETERS',
        'ERROR_DETAILS',
        'F5_BIGIP_CLUSTER_CHECK_DEFAULT_PARAMETERS',
        'FAN_FSC_SC2_CHECK_DEFAULT_PARAMETERS',
        'FILER_DISKS_CHECK_DEFAULT_PARAMETERS',
        'GRAB_USER',
        'HEALTH_STATUS_MAP',
        'IF_CHECK_DEFAULT_PARAMETERS',
        'INFO_INCLUDED_MAP',
        'K8S_OK_CONDITIONS',
        'KEY_PULSE_SECURE_CPU',
        'MAILQUEUES_LABEL',
        'MAP_BUILD_STATES',
        'MAP_ENABLED',
        'MAP_INSTANCE_STATE',
        'MAP_JOB_STATES',
        'MAP_NODE_STATES',
        'MAP_PARAM_TO_TEXT',
        'MAP_QUEUE_STATES',
        'MAP_RPO_STATES',
        'MAP_SERVER_STATUS',
        'MB',
        'MBG_LANTIME_STATE_CHECK_DEFAULT_PARAMETERS',
        'MB_PER_DAY_TO_B_PER_S',
        'MEGA',
        'METRICS_INFO_NAMES_PULSE_SECURE_MEM',
        'METRIC_PULSE_SECURE_DISK',
        'METRIC_PULSE_SECURE_LOG',
        'NAME_TRANSLATION',
        'NOTHING_PENDING_FOR_INSTALLATION',
        'NO_BLOCKING_SESSIONS_MSG',
        'NimbleReadsType',
        'NimbleWritesType',
        'OPER_STATUS_MAP',
        'OPNEED_STATUS_MAP',
        'OpenhardwaremonitorTraits',
        'PANDACOM_TEMP_CHECK_DEFAULT_PARAMETERS',
        'RAS_STATUS_MAP',
        'RESTART_POLICIES_TO_DISCOVER',
        'SAP_HANA_EVENTS_MAP',
        'SAP_HANA_REPL_STATUS_MAP',
        'STATUS_MAP',
        'TYPE_FUNCTION',
        'UCS_FAULTINST_SEVERITY_TO_STATE',
        'acme_certificates_default_levels',
        'acme_environment_states',
        'acme_sbc_snmp_default_levels',
        'active_mapping',
        'active_vm_levels',
        'ad_replication_default_params',
        'adva_fsp_if_adminstates',
        'adva_fsp_if_inventory_portstates',
        'adva_fsp_if_inventory_porttypes',
        'adva_fsp_if_inventory_uses_alias',
        'adva_fsp_if_inventory_uses_description',
        'adva_fsp_if_operstates',
        'adva_fsp_temp_default_levels',
        'airlaser_default_levels',
        'aironet_default_error_levels',
        'aironet_default_quality_levels',
        'aironet_default_strength_levels',
        'aix_hacmp_resources',
        'akcp_daisy_temp_defaultlevels',
        'akcp_humidity_defaultlevels',
        'akcp_sensor_level_states',
        'akcp_temp_default_levels',
        'alcatel_cpu_default_levels',
        'alcatel_power_aos7_no_power_supply',
        'alcatel_power_aos7_operability_to_status_mapping',
        'alcatel_power_aos7_power_type_mapping',
        'alcatel_power_no_power_supply_info',
        'alcatel_power_operstate_map',
        'alcatel_power_type_map',
        'alcatel_temp',
        'alcatel_timetra_cpu_default_levels',
        'allnet_ip_sensoric_humidity_default_levels',
        'allnet_ip_sensoric_temp_default_levels',
        'ap_state_map',
        'ap_unknown',
        'apc_ats_output_default_levels',
        'apc_default_levels',
        'apc_humidity_default_levels',
        'apc_inrow_airflow_default_levels',
        'apc_inrow_temp_default_levels',
        'apc_netbotz_sensors_dewpoint_default_levels',
        'apc_netbotz_sensors_humidity_default_levels',
        'apc_netbotz_sensors_temp_default_levels',
        'apc_power_default_levels',
        'apc_powerswitch_critical_states',
        'apc_powerswitch_warning_states',
        'apc_sts_inputs_default_levels',
        'apc_symmetra_elphase_default_levels',
        'apc_symmetra_ext_temp_default_levels',
        'apc_symmetra_output_default_levels',
        'apc_symmetra_temp_default_levels',
        'apc_temp_default_levels',
        'apt_default_levels',
        'arbor_cpuload_default_levels',
        'arbor_memory_default_levels',
        'arris_cmts_cpu_default_levels',
        'arris_cmts_mem',
        'arris_cmts_temp_default_levels',
        'artec_temp_default_levels',
        'asm_diskgroup_default_levels',
        'atto_fibrebridge_fcport',
        'avaya_45xx_cpu_default_levels',
        'avaya_45xx_temp_temp_default_levels',
        'avaya_88xx_cpu_default_levels',
        'avaya_88xx_default_levels',
        'avaya_chassis_card_operstatus_codes',
        'avaya_chassis_ps_status_codes',
        'avaya_chassis_temp_default_levels',
        'aws_cloudwatch_alarm_map',
        'aws_cloudwatch_alarms_limits_default_levels',
        'aws_cpu_credits',
        'aws_dynamodb_capacity_defaults',
        'aws_dynamodb_limits_default_levels',
        'aws_ebs_limits_default_levels',
        'aws_ec2_cpu_util_default_levels',
        'aws_ec2_limits_default_levels',
        'aws_elb_limits_default_levels',
        'aws_elb_statistics',
        'aws_elbv2_limits_default_levels',
        'aws_glacier_limits_default_levels',
        'aws_rds_cpu_util',
        'aws_rds_limits_default_levels',
        'aws_s3_limits_default_levels',
        'aws_wafv2_limits_default_levels',
        'azure_agent_info_levels',
        'azure_databases_default_levels',
        'barracuda_mail_latency_default_levels',
        'barracuda_mailq_default_levels',
        'barracuda_system_cpu_util_default_levels',
        'bintec_sensors_fan_default_levels',
        'bintec_sensors_info',
        'bintec_sensors_temp_default_levels',
        'blade_bx_cpuload_default_levels',
        'blade_bx_fan_default_error_levels',
        'blade_bx_powerfan_default_levels',
        'blade_bx_status',
        'bluecat_command_server',
        'bluecat_dhcp',
        'bluecat_dns',
        'bluecat_ha',
        'bluecat_ntp',
        'bluenet2_powerrail_humidity_default_levels',
        'bluenet2_powerrail_rcm_default_levels',
        'bluenet2_powerrail_temp_default_levels',
        'bluenet_sensor_humidity_default_levels',
        'bluenet_sensor_temp_default_levels',
        'bonding_default_levels',
        'brocade_fan_default_levels',
        'brocade_fcport_admstates',
        'brocade_fcport_default_levels',
        'brocade_fcport_inventory',
        'brocade_fcport_opstates',
        'brocade_fcport_phystates',
        'brocade_fcport_speed',
        'brocade_info',
        'brocade_mlx_cpu_default_levels',
        'brocade_mlx_info',
        'brocade_mlx_mem_default_levels',
        'brocade_mlx_states',
        'brocade_mlx_temperature_default_levels',
        'brocade_temp_default_levels',
        'brocade_tm_default_levels',
        'bvip_link_default_levels',
        'bvip_poe_default_levels',
        'bvip_temp_default_levels',
        'bvip_util_default_levels',
        'carel_temp_defaultlevels',
        'ceph_mgrs_default_levels',
        'ceph_osds_default_levels',
        'ceph_status_default_levels',
        'check_mk_only_from_default',
        'checkpoint_connections_default_levels',
        'checkpoint_memory_default_levels',
        'checkpoint_packets_default_levels',
        'checkpoint_sensorstatus_to_nagios',
        'checkpoint_temp_default_levels',
        'checkpoint_tunnels_default_levels',
        'checkpoint_vsx_default_levels',
        'cisco_asa_failover_default_levels',
        'cisco_asa_state_names',
        'cisco_cpu_default_levels',
        'cisco_cpu_multiitem_default_levels',
        'cisco_fan_state_mapping',
        'cisco_ip_sla_default_levels',
        'cisco_mem_default_levels',
        'cisco_nexus_cpu_default_levels',
        'cisco_oldcpu_default_levels',
        'cisco_power_sources',
        'cisco_power_states',
        'cisco_qos_default_',
        'cisco_qos_default_levels',
        'cisco_stack',
        'cisco_sys_mem_default_levels',
        'cisco_temp_perf_envmon_states',
        'cisco_temperature_admin_state_map',
        'cisco_ucs_temp_cpu_default_levels',
        'cisco_ucs_temp_env_default_levels',
        'cisco_ucs_temp_mem_default_levels',
        'cisco_vss_operstatus_names',
        'cisco_vss_role_names',
        'citrix_serverload_default_levels',
        'citrix_sessions_default_levels',
        'climaveneta_alarms',
        'climaveneta_fan_default_levels',
        'climaveneta_sensors',
        'climaveneta_temp_default_levels',
        'cluster_info',
        'cmc_temp_default_levels',
        'cmctc_lcp_sensors',
        'cmctc_pcm_m_sensor_types',
        'condition_map',
        'cpsecure_sessions_default_levels',
        'cpu_threads_default_levels',
        'cpuload_default_levels',
        'cups_queues_default_levels',
        'datapower_cpu_default_levels',
        'datapower_fan_ids',
        'datapower_mem_default_levels',
        'datapower_temp_default_levels',
        'db2_backup_default_levels',
        'db2_connections_default_levels',
        'db2_counters_default_levels',
        'db2_counters_map',
        'db2_logsize_default_levels',
        'db2_mem_default_levels',
        'db2_sort_overflow_default_levels',
        'db2_tablespaces_default_levels',
        'ddn_s2a_faultsbasic_disks_default_levels',
        'ddn_s2a_faultsbasic_fans_default_levels',
        'ddn_s2a_readhits_default_levels',
        'ddn_s2a_stats_default_levels',
        'ddn_s2a_stats_io_default_levels',
        'ddn_s2a_statsdelay_default_levels',
        'decru_fan_default_levels',
        'default_running_ondemand_instance_families',
        'default_running_ondemand_instances',
        'dell_chassis_status_info',
        'dell_chassis_temp_default_levels',
        'dell_compellent_disks_health_map',
        'dell_om_sensors_default_levels',
        'dell_powerconnect_cpu_default_levels',
        'dell_powerconnect_fans_state_performance_map',
        'dell_powerconnect_fans_status2nagios_map',
        'dell_powerconnect_fans_status_map',
        'dell_powerconnect_psu_status2nagios_map',
        'dell_powerconnect_psu_status_map',
        'dell_powerconnect_psu_supply_map',
        'dell_powerconnect_temp_default_values',
        'df_zos_exclude_list',
        'discovery_cisco_dom_rules',
        'discovery_hr_processes_rules',
        'discovery_mssql_backup',
        'discovery_netapp_api_fan_rules',
        'discovery_netapp_api_ports_ignored',
        'discovery_netapp_api_psu_rules',
        'discovery_rules_vnx_quotas',
        'discovery_systemd_units_services_rules',
        'discovery_win_dhcp_pools',
        'diskstat_default_levels',
        'diskstat_diskless_pattern',
        'diskstat_inventory',
        'diskstat_inventory_mode',
        'docsis_channels_downstream',
        'docsis_channels_upstream_default_levels',
        'docsis_cm_status_default_levels',
        'domino_mailqueues_defaults',
        'domino_transactions_default_levels',
        'domino_users_default_levels',
        'dotnet_clrmemory_defaultlevels',
        'drbd_cs_map',
        'drbd_disk_default_levels',
        'drbd_disk_map',
        'drbd_ds_map',
        'drbd_general_map',
        'drbd_net_default_levels',
        'drbd_net_map',
        'drbd_stats_default_levels',
        'drbd_stats_map',
        'elasticsearch_cluster_shards',
        'elasticsearch_nodes',
        'eltek_battery_temp_default_variables',
        'eltek_battery_temp_phase_variables',
        'eltek_fans_default_variables',
        'eltek_outdoor_temp_default_variables',
        'emc_datadomain_mtree_default_levels',
        'emc_isilon_fan_default_levels',
        'emc_isilon_ifs',
        'emc_isilon_info',
        'emc_isilon_power_default_levels',
        'emc_isilon_quota',
        'emc_isilon_temp_cpu_default_levels',
        'emc_isilon_temp_default_levels',
        'emc_vplex_cpu_default_levels',
        'emcvnx_disks_default_levels',
        'emcvnx_sp_util_default_levels',
        'emcvnx_storage_pools_default_levels',
        'emcvnx_storage_pools_tiering_default_levels',
        'emerson_stat_default',
        'emerson_temp_default',
        'enterasys_cpu_default_levels',
        'enterasys_powersupply_default',
        'enterasys_temp_default_levels',
        'entity_sensors_fan_default_variables',
        'entity_sensors_temp_default_variables',
        'enviromux_default_levels',
        'epson_beamer_lamp_default_levels',
        'esx_host_cpu_default_levels',
        'esx_host_mem_default_levels',
        'esx_vsphere_counters_cpu_default_levels',
        'esx_vsphere_counters_ramdisk_sizes',
        'esx_vsphere_objects_default_levels',
        'etherbox2_temp_default_levels',
        'etherbox_info',
        'ewon_discovery_rules',
        'f5_bigip_chassis_temp_default_params',
        'f5_bigip_cluster_default_levels',
        'f5_bigip_cluster_v11',
        'f5_bigip_conns_default_levels',
        'f5_bigip_cpu_temp_default_params',
        'f5_bigip_fans_default_levels',
        'f5_bigip_interface_states',
        'f5_bigip_mem_default_levels',
        'f5_bigip_pool_default_levels',
        'fan_fsc_sc2_levels',
        'fast_lta_headunit_info',
        'fc_port_admstates',
        'fc_port_default_levels',
        'fc_port_inventory_use_portname',
        'fc_port_no_inventory_admstates',
        'fc_port_no_inventory_opstates',
        'fc_port_no_inventory_phystates',
        'fc_port_no_inventory_types',
        'fc_port_opstates',
        'fc_port_phystates',
        'filehandler_default_levels',
        'fileinfo_groups',
        'filer_disks_default_levels',
        'filesystem_Default_levels',
        'filesystem_default_levels',
        'filesystem_groups',
        'filesystem_levels',
        'fireeye_lic',
        'fireeye_mailq',
        'fjdarye500_pfm_default_levels',
        'fjdarye60_sum_status',
        'fjdarye_disks_status',
        'fjdarye_item_status',
        'fjdarye_sum_status',
        'forced_mapping',
        'fortigate_cpu_base_default_levels',
        'fortigate_cpu_default_levels',
        'fortigate_ipsecvpn_default_levels',
        'fortigate_memory_base_default_levels',
        'fortigate_memory_default_levels',
        'fortigate_node_cpu_default_levels',
        'fortigate_node_memory_default_levels',
        'fortigate_node_sessions_default_levels',
        'fortigate_sessions_base_default_levels',
        'fortigate_sessions_default_levels',
        'fortigate_signature_default_levels',
        'fsc_fans_default_levels',
        'fsc_ipmi_mem_status_levels',
        'genua_fan_default_levels',
        'genua_pfstate_default_levels',
        'graylog_cluster_stats_elastic_defaultlevels',
        'graylog_license_default_levels',
        'graylog_nodes_default_levels',
        'graylog_sidecars_default_levels',
        'graylog_sources_default_levels',
        'graylog_streams_default_levels',
        'gude_humidity_default_levels',
        'gude_powerbank_default_levels',
        'gude_relayport_default_levels',
        'gude_temp_default_levels',
        'heartbeat_crm_default_levels',
        'heartbeat_crm_default_max_age',
        'heartbeat_crm_naildown',
        'heartbeat_crm_resources_naildown',
        'hitachi_hnas_bossock_default_levels',
        'hitachi_hnas_cpu_default_levels',
        'hitachi_hnas_fpga_default_levels',
        'hivemanger_devices',
        'hivemanger_ng_devices',
        'hp_blade_present_map',
        'hp_blade_psu_inputline_status',
        'hp_blade_psu_status',
        'hp_blade_role_map',
        'hp_blade_status2nagios_map',
        'hp_blade_status_map',
        'hp_eml_sum_map',
        'hp_hh3c_ext_mem_default_levels',
        'hp_mcs_sensors_fan_default_levels',
        'hp_msa_controller_cpu_default_levels',
        'hp_msa_disk_temp_default_levels',
        'hp_msa_health_state_numeric_map',
        'hp_msa_psu_default_levels',
        'hp_msa_psu_temp_default_levels',
        'hp_msa_state_map',
        'hp_msa_state_numeric_map',
        'hp_procurve_cpu_default_levels',
        'hp_procurve_mem_default_levels',
        'hp_procurve_status2nagios_map',
        'hp_procurve_status_map',
        'hp_proliant_cpu_status2nagios_map',
        'hp_proliant_cpu_status_map',
        'hp_proliant_da_cntlr_cond_map',
        'hp_proliant_da_cntlr_role_map',
        'hp_proliant_da_cntlr_state_map',
        'hp_proliant_da_phydrv_condition',
        'hp_proliant_da_phydrv_condition_status2nagios',
        'hp_proliant_da_phydrv_smart_status',
        'hp_proliant_da_phydrv_status',
        'hp_proliant_fans_locale',
        'hp_proliant_fans_status_map',
        'hp_proliant_locale',
        'hp_proliant_mem_condition_map',
        'hp_proliant_mem_condition_status2nagios_map',
        'hp_proliant_mem_status2nagios_map',
        'hp_proliant_mem_status_map',
        'hp_proliant_mem_type_map',
        'hp_proliant_psu_levels',
        'hp_proliant_speed_map',
        'hp_proliant_status2nagios_map',
        'hp_proliant_status_map',
        'hp_psu_temp_default_levels',
        'hp_sts_drvbox_cond_map',
        'hp_sts_drvbox_fan_map',
        'hp_sts_drvbox_power_map',
        'hp_sts_drvbox_sp_map',
        'hp_sts_drvbox_temp_map',
        'hp_sts_drvbox_type_map',
        'hpux_multipath_pathstates',
        'hpux_tunables_maxfiles_lim_default_levels',
        'hpux_tunables_nkthread_default_levels',
        'hpux_tunables_nproc_default_levels',
        'hpux_tunables_semmni_default_levels',
        'hpux_tunables_semmns_default_levels',
        'hpux_tunables_shmseg_default_levels',
        'hr_cpu_default_levels',
        'hr_ps_default_levels',
        'hr_ps_status_map',
        'hsrp_states',
        'huawei_channel_default',
        'huawei_cpu_default',
        'huawei_mem_default',
        'huawei_mpu_board_name_start',
        'huawei_osn_laser_default_levels',
        'huawei_osn_power_default_levels',
        'huawei_osn_temp_default_levels',
        'huawei_switch_cpu_default_levels',
        'huawei_switch_hw_oper_state_map',
        'huawei_switch_mem_default_levels',
        'huawei_switch_stack_unknown_role',
        'huawei_switch_temp_default_levels',
        'hwg_humidity_defaultlevels',
        'hwg_temp_defaultlevels',
        'hyperv_vms_default_levels',
        'ibm_imm_fan_default_levels',
        'ibm_mq_channels_default_levels',
        'ibm_mq_managers_default_levels',
        'ibm_mq_queues_default_levels',
        'ibm_storage_ts_fault_nagios_map',
        'ibm_storage_ts_status_nagios_map',
        'ibm_storage_ts_status_name_map',
        'ibm_svc_cpu_default_levels',
        'ibm_svc_enclosurestats_temperature_default_levels',
        'ibm_svc_mdisk_default_levels',
        'if64_port_types',
        'if64_snmp_end_oids',
        'if64_status_names',
        'if_default_average',
        'if_default_error_levels',
        'if_default_levels',
        'if_default_traffic_levels',
        'if_disable_if64_hosts',
        'if_groups',
        'if_inventory_monitor_speed',
        'if_inventory_monitor_state',
        'if_inventory_pad_portnumbers',
        'if_inventory_portstates',
        'if_inventory_porttypes',
        'if_inventory_uses_alias',
        'if_inventory_uses_description',
        'ifoperstatus_inventory_porttypes',
        'ifoperstatus_monitor_unused',
        'infoblox_temp_default_levels',
        'informix_dbspaces_default_levels',
        'informix_locks_default_levels',
        'informix_logusage_default_levels',
        'informix_sessions_default_levels',
        'informix_tabextents_default_levels',
        'innovaphone_channels_default_levels',
        'innovaphone_cpu_default_levels',
        'innovaphone_licenses_default_levels',
        'innovaphone_mem_default_levels',
        'innovaphone_temp_default_levels',
        'inv_domino_tasks',
        'inv_domino_tasks_rules',
        'inventory_df_exclude_fs',
        'inventory_df_exclude_mountpoints',
        'inventory_df_rules',
        'inventory_fujitsu_ca_ports',
        'inventory_heartbeat_crm_rules',
        'inventory_if_rules',
        'inventory_ipmi_rules',
        'inventory_mssql_counters_rules',
        'inventory_multipath_rules',
        'inventory_oracle_rman_incremental_details',
        'inventory_processes',
        'inventory_processes_perf',
        'inventory_processes_rules',
        'inventory_sap_values',
        'inventory_services',
        'inventory_services_rules',
        'inventory_solaris_services_rules',
        'ipmi_default_levels',
        'ipr400_in_voltage_default_levels',
        'ipr400_temp_default_levels',
        'isc_dhcpd_default_levels',
        'isl_speed_map',
        'j4p_performance_app_sess_default_levels',
        'j4p_performance_mem_default_levels',
        'j4p_performance_serv_req_default_levels',
        'j4p_performance_threads_default_levels',
        'janitza_umg_device_map',
        'janitza_umg_freq_default_levels',
        'janitza_umg_inphase_default_levels',
        'janitza_umg_temp_default_levels',
        'jenkins_nodes_default_levels',
        'jenkins_queue_default_levels',
        'job_default_levels',
        'jolokia_jvm_memory',
        'jolokia_jvm_memory_pools',
        'jolokia_jvm_threading.pool',
        'jolokia_metrics_app_sess_default_levels',
        'jolokia_metrics_cache_hits_default_levels',
        'jolokia_metrics_mem_default_levels',
        'jolokia_metrics_perm_gen_default_levels',
        'jolokia_metrics_queue_default_levels',
        'jolokia_metrics_serv_req_default_levels',
        'jolokia_metrics_threads_default_levels',
        'juniper_cpu_default_levels',
        'juniper_mem_default_levels',
        'juniper_screenos_cpu_default_levels',
        'juniper_screenos_temp_default_levels',
        'juniper_temp_default_levels',
        'juniper_trpz_cpu_util_default_levels',
        'juniper_trpz_flash_default_levels',
        'k8s_resources_default_levels',
        'kaspersky_av_client_default_levels',
        'keepalived_default_levels',
        'kemp_loadmaster_service_default_levels',
        'kentix_amp_sensors_smoke_default_levels',
        'kentix_co',
        'kernel_counter_names',
        'kernel_default_levels',
        'kernel_metrics_names',
        'kernel_util_default_levels',
        'knuerr_rms_humidity_default_levels',
        'knuerr_rms_temp_default_levels',
        'levels_azure_sites',
        'levels_azure_storageaccounts',
        'levels_azure_usagedetails',
        'levels_azure_virtualmachines',
        'levels_azure_virtualmachines_summary',
        'lgp_info_devices',
        'lgp_pdu_aux_states',
        'lgp_pdu_aux_types',
        'liebert_bat_temp_default',
        'liebert_compressor_default_levels',
        'liebert_cooling_default_levels',
        'liebert_cooling_position_default_levels',
        'liebert_fans_condenser_default_levels',
        'liebert_fans_default_levels',
        'liebert_humidity_air_default_levels',
        'liebert_maintenance_default_levels',
        'liebert_reheating_default_levels',
        'linux_nic_check',
        'livestatus_status_default_levels',
        'lnx_thermal_default_levels',
        'logins_default_levels',
        'logwatch_dir',
        'logwatch_groups',
        'logwatch_max_filesize',
        'logwatch_patterns',
        'logwatch_rules',
        'logwatch_service_output',
        'logwatch_spool_dir',
        'lparstat_default_levels',
        'lvm_lvs_default_levels',
        'map_counter_keys',
        'map_dev_states',
        'map_luntype',
        'map_memtype',
        'map_operability',
        'map_presence',
        'map_readable_states',
        'map_unit',
        'map_units',
        'mbg_lantime_ng_refclock_types',
        'mbg_lantime_ng_temp_default_levels',
        'mbg_lantime_refclock_default_levels',
        'mbg_lantime_refclock_gpsstate_map',
        'mbg_lantime_refclock_refmode_map',
        'mbg_lantime_state_default_levels',
        'mcafee_av_client_default_levels',
        'mcafee_emailgateway_cpuload_default_levels',
        'mcdata_fcport_opstatus',
        'mcdata_fcport_speedbits',
        'megaraid_bbu_refvalues',
        'megaraid_pdisks_adapterstr',
        'megaraid_pdisks_legacy_mode',
        'megaraid_pdisks_states',
        'mem_extended_perfdata',
        'mem_linux_default_levels',
        'mem_vmalloc_default_levels',
        'memory_default_levels',
        'memory_win_default_levels',
        'memused_default_levels',
        'mikrotik_signal_default_levels',
        'mongodb_cluster_levels',
        'mongodb_collections_levels',
        'mongodb_connections_default_levels',
        'mongodb_replica_set_levels',
        'mq_queues_default_levels',
        'msexch_dag_copyqueue_default_levels',
        'msexch_database_defaultlevels',
        'msexch_info_store_defaultlevels',
        'msexch_isclienttype_defaultlevels',
        'msexch_rpcclientaccess_defaultlevels',
        'msoffice_licenses_levels',
        'mssql_backup_default_levels',
        'mssql_blocked_sessions_default_levels',
        'mssql_connections_default_levels',
        'mssql_datafiles_default_levels',
        'mssql_tablespace_default_levels',
        'mssql_transactionlogs_default_levels',
        'mssql_transactionlogs_discovery',
        'msx_queues_default_levels',
        'mtr_default_levels',
        'names',
        'netapp_api_cpu_cm_default_levels',
        'netapp_api_cpu_default_levels',
        'netapp_api_luns_default_levels',
        'netapp_api_snapshots_default_levels',
        'netapp_api_vf_stats_cpu_util_default_levels',
        'netapp_cpu_default_levels',
        'netapp_fcpio_default_levels',
        'netapp_volumes_owner',
        'netctr_counter_indices',
        'netctr_counters',
        'netctr_default_params',
        'netextreme_cpu_util_default_levels',
        'netextreme_fan_default_levels',
        'netextreme_psu_default_levels',
        'netextreme_psu_in_default_levels',
        'netextreme_psu_out_default_levels',
        'netextreme_temp_default_levels',
        'netgear_fans_default_levels',
        'netscaler_cpu_default_levels',
        'netscaler_dnsrates_default_levels',
        'netscaler_ha_cur_states',
        'netscaler_ha_peer_mode',
        'netscaler_health_fan_default_levels',
        'netscaler_health_info',
        'netscaler_health_temp_default_levels',
        'netscaler_mem_default_levels',
        'netscaler_sslcerts_default_levels',
        'netscaler_tcp_conns_default_levels',
        'netscaler_vserver_default_levels',
        'netscaler_vserver_entitytypes',
        'netscaler_vserver_states',
        'netscaler_vserver_types',
        'nimble_latency_default_levels',
        'nodes_info',
        'ntp_default_levels',
        'ntp_inventory_mode',
        'ntp_state_codes',
        'ntp_time_default_levels',
        'nullmailer_mailq_default_levels',
        'nvidia_temp_core_default_levels',
        'nvidia_temp_default_levels',
        'omd_apache_patterns',
        'online_mapping',
        'openbsd_sensors_fan_default_levels',
        'openhardwaremonitor_fan_default_levels',
        'openhardwaremonitor_smart_default_levels',
        'openhardwaremonitor_smart_readings',
        'openhardwaremonitor_temperature_default_levels',
        'oracle_dataguard_stats',
        'oracle_diva_csm_tapes_default_levels',
        'oracle_instance_defaults',
        'oracle_jobs_defaults',
        'oracle_locks_defaults',
        'oracle_logswitches_default_levels',
        'oracle_longactivesessions_defaults',
        'oracle_performance_discovery',
        'oracle_processes_defaults',
        'oracle_recovery_area_defaults',
        'oracle_sessions_default_levels',
        'oracle_tablespaces_check_autoext',
        'oracle_tablespaces_check_default_increment',
        'oracle_tablespaces_default_levels',
        'oracle_tablespaces_defaults',
        'oracle_undostat_defaults',
        'oxyreduct_tag_map',
        'palo_alto_sessions',
        'pandacom_temp_default_levels',
        'papouch_th2e_sensors_humidity_default_levels',
        'param_name',
        'pdu_gude_default_levels',
        'pfsense_counter_default_levels',
        'pfsense_if_default_levels',
        'poe_default_levels',
        'poe_faulty_status_to_string',
        'porttype_list',
        'poseidon_temp_default_levels',
        'postfix_mailq_default_levels',
        'postgres_bloat_default_levels',
        'postgres_connections_default_levels',
        'postgres_stats_default_levels',
        'printer_alerts_group_map',
        'printer_alerts_text_map',
        'printer_code_map',
        'printer_input_default_levels',
        'printer_io_states',
        'printer_io_units',
        'printer_output_default_levels',
        'printer_pages_types',
        'printer_supply_default_levels',
        'printer_supply_ricoh_default_levels',
        'printer_supply_some_remaining_status',
        'prism_container_default_levels',
        'proxmox_disk_usage',
        'proxmox_mem_usage',
        'proxmox_node_info',
        'proxmox_vm_backup_status',
        'ps_default_levels',
        'pse_poe_default_levels',
        'pulse_secure_cpu_util_def_levels',
        'pulse_secure_disk_util_def_levels',
        'pulse_secure_mem_util_def_levels',
        'pulse_secure_temp_def_levels',
        'qlogic_fcport_default_levels',
        'qlogic_fcport_inventory_admstates',
        'qlogic_fcport_inventory_opstates',
        'qlogic_sanbox_status_map',
        'qmail_stats_default_levels',
        'qnap_fan_default_levels',
        'qnap_hdd_temp_default_levels',
        'quantum_device_state',
        'quantum_storage_status',
        'quarantine_levels',
        'ra32e_humidity_defaultlevels',
        'ra32e_sensors_voltage_defaultlevels',
        'ra32e_temp_defaultlevels',
        'rabbitmq_nodes_default_levels',
        'radio_state_map',
        'radio_unknown',
        'raritan_map_state',
        'raritan_map_type',
        'raritan_map_unit',
        'raritan_pdu_ocprot_current_default_levels',
        'raritan_pdu_plugs_default',
        'rds_licenses_product_versionid_map',
        'received_levels',
        'redis_info_persistence_default_levels',
        'rms200_temp_default_levels',
        'route_state_mapping',
        'route_type_mapping',
        'rstcli_states',
        'ruckus_spot_ap_bands',
        'ruckus_spot_ap_default_levels',
        'safenet_hsm_default_levels',
        'safenet_hsm_events_default_levels',
        'sansymphony_alerts_default_values',
        'sansymphony_pool_default_values',
        'sap_hana_backup',
        'sap_hana_connect_state_map',
        'sap_hana_ess_migration_state_map',
        'sap_hana_license_default_levels',
        'sap_hana_mem_database_default_levels',
        'sap_hana_mem_resident_default_levels',
        'sap_hana_memrate_default_levels',
        'sap_nagios_state_map',
        'sap_value_groups',
        'saprouter_cert_default_levels',
        'security_master_temp_default_levels',
        'sensatronics_temp_default_levels',
        'sensor_digital_value_names',
        'sensor_status_names',
        'sensor_type_names',
        'sensor_type_names_external',
        'sensor_type_names_sems_external',
        'services_default_levels',
        'services_summary_default_levels',
        'severity_to_states',
        'shards_info',
        'siemens_plc_temp_default_levels',
        'skype_conferencing_defaultlevels',
        'skype_defaultlevels',
        'skype_edge_defaultlevels',
        'skype_edgeauth_defaultlevels',
        'skype_mediation_server_defaultlevels',
        'skype_mobile_defaultlevels',
        'skype_proxy_defaultlevels',
        'skype_sip_defaultlevels',
        'skype_xmpp_defaultlevels',
        'sles_license_default_levels',
        'smart_stats_default_levels',
        'smart_stats_fields',
        'smart_temp_default_levels',
        'snmp_uptime_info',
        'socomec_outphase_default_levels',
        'solaris_services_default_levels',
        'sophos_map_oid',
        'splunk_health_default_levels',
        'splunk_license_state_default_levels',
        'splunk_license_usage_default_levels',
        'storcli_pdisks_default_levels',
        'storcli_vdrives_default_levels',
        'stormshield_cluster_node',
        'stormshield_packets_default_levels',
        'stormshield_services_default_levels',
        'stormshield_updates',
        'strem1_humidity_defaultlevels',
        'strem1_temp_defaultlevels',
        'strem1_wetness_defaultlevels',
        'stulz_humidity_default_levels',
        'stulz_temp_default_levels',
        'switch_cpu_default_levels',
        'sylo_default_levels',
        'symantec_av_updates_default_levels',
        'sync_name_mapping',
        'sync_status_mapping',
        'synology_update_levels',
        'systemd_services_default_levels',
        'systemd_services_summary_default_levels',
        'systemtime_default_values',
        'tableindex',
        'tasks_info',
        'tcp_conn_stats_default_levels',
        'temp_unitsym',
        'threads_default_levels',
        'threepar_ports_default_levels',
        'threepar_remotecopy_default_levels',
        'timemachine_default_levels',
        'timesyncd_default_levels',
        'tinkerforge_humidity_default_levels',
        'tsm_scratch_default_levels',
        'tsm_session_default_levels',
        'tsm_stagingpools_default_levels',
        'tunnel_states',
        'ucd_mem_default_levels',
        'ucs_bladecenter_fans_temp_default_levels',
        'ucs_bladecenter_psu_chassis_temp_default_levels',
        'ucs_bladecenter_psu_default_levels',
        'ucs_c_rack_server_led_default_levels',
        'ucs_c_rack_server_util_cpu_default_levels',
        'ucs_c_rack_server_util_mem_default_levels',
        'ucs_c_rack_server_util_overall_default_levels',
        'ucs_c_rack_server_util_pci_io_default_levels',
        'ucs_c_rack_server_util_power_default_levels',
        'ups_bat_temp_default',
        'ups_capacity_default_levels',
        'ups_cps_battery',
        'ups_eaton_enviroment_default',
        'ups_in_freq_default_levels',
        'ups_in_voltage_default_levels',
        'ups_modulys_battery_default_levels',
        'ups_modulys_battery_temp_default_levels',
        'ups_modulys_inphase_default_levels',
        'ups_modulys_outphase_default_levels',
        'ups_out_load_default_levels',
        'ups_out_voltage_default_levels',
        'ups_power_default_levels',
        'ups_test_default',
        'varnish_backend_success_ratio_default_levels',
        'varnish_cache_hit_ratio_default_levels',
        'varnish_esi_default_levels',
        'varnish_worker_thread_ratio_default_levels',
        'veeam_client',
        'veeam_tapejobs_default_levels',
        'veritas_vcs_defaults',
        'vsphere_object_names',
        'wagner_titanus_topsense_airflow_deviation_default_values',
        'wagner_titanus_topsense_info',
        'wagner_titanus_topsense_temperature_default_values',
        'watchdog_sensors_humidity_default_levels',
        'webio_state_names',
        'websphere_mq_channels_default_levels',
        'websphere_mq_queues_default_levels',
        'win_dhcp_pools_default_levels',
        'win_dhcp_pools_inventorize_empty',
        'win_dhcp_pools_stats_translate',
        'win_netstat_states',
        'win_printer_default_levels',
        'windows_license_default_levels',
        'windows_updates_default_params',
        'winperf_cpu_default_levels',
        'winperf_msx_queues',
        'winperf_msx_queues_factory',
        'winperf_msx_queues_inventory',
        'wut_webtherm_defaultlevels',
        'wut_webtherm_humidity_defaultlevels',
        'zorp_connections',
    }

    missing_variables = expected_check_variables - set(config_check_variables)

    assert not missing_variables, (
        "'%s' were variables present in config.get_check_variables(). "
        "They may be needed to resolve the default parameters in users autochecks file. "
        "If you are sure this is not the case, you may remove the variables from the "
        "list above. If they may still be needed, you may add them to the module "
        "cmk.utils.migrated_check_variables.") % sorted(missing_variables)
