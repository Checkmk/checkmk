#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.
# fmt: off

from typing import Iterable, List, Mapping, NamedTuple

import pytest

from tests.testlib import Check

from .checktestlib import MockHostExtraConf

pytestmark = pytest.mark.checks


class UnitEntry(NamedTuple):
    name: str
    unit_type: str
    loaded_status: str
    active_status: str
    current_state: str
    description: str
    enabled_status: str


@pytest.mark.parametrize('services, blacklist, expected', [
    ([
        UnitEntry(name=u'gpu-manager',
                  unit_type='service',
                  loaded_status=u'loaded',
                  active_status=u'inactive',
                  current_state=u'dead',
                  description=u'Detect the available GPUs and deal with any system changes',
                  enabled_status=u'unknown'),
        UnitEntry(name=u'rsyslog',
                  unit_type='service',
                  loaded_status=u'loaded',
                  active_status=u'active',
                  current_state=u'running',
                  description=u'System Logging Service',
                  enabled_status=u'enabled'),
        UnitEntry(name=u'alsa-state',
                  unit_type='service',
                  loaded_status=u'loaded',
                  active_status=u'inactive',
                  current_state=u'dead',
                  description=u'Manage Sound Card State (restore and store)',
                  enabled_status=u'disabled'),
    ], [], {
        "included": [
            UnitEntry(name=u'gpu-manager',
                      unit_type='service',
                      loaded_status=u'loaded',
                      active_status=u'inactive',
                      current_state=u'dead',
                      description=u'Detect the available GPUs and deal with any system changes',
                      enabled_status=u'unknown'),
            UnitEntry(name=u'rsyslog',
                      unit_type='service',
                      loaded_status=u'loaded',
                      active_status=u'active',
                      current_state=u'running',
                      description=u'System Logging Service',
                      enabled_status=u'enabled')
        ],
        "excluded": [],
        "disabled": [
            UnitEntry(name=u'alsa-state',
                      unit_type='service',
                      loaded_status=u'loaded',
                      active_status=u'inactive',
                      current_state=u'dead',
                      description=u'Manage Sound Card State (restore and store)',
                      enabled_status=u'disabled')
        ],
        "static": [],
        "activating": [],
        "reloading": [],
    }),
    (
        [
            UnitEntry(name=u'gpu-manager',
                      unit_type='service',
                      loaded_status=u'loaded',
                      active_status=u'inactive',
                      current_state=u'dead',
                      description=u'Detect the available GPUs and deal with any system changes',
                      enabled_status=u'unknown'),
            UnitEntry(name=u'rsyslog',
                      unit_type='service',
                      loaded_status=u'loaded',
                      active_status=u'active',
                      current_state=u'running',
                      description=u'System Logging Service',
                      enabled_status=u'enabled'),
            UnitEntry(name=u'alsa-state',
                      unit_type='service',
                      loaded_status=u'loaded',
                      active_status=u'inactive',
                      current_state=u'dead',
                      description=u'Manage Sound Card State (restore and store)',
                      enabled_status=u'indirect')
        ],
        [u'gpu'],
        {
            "included": [
                UnitEntry(name=u'rsyslog',
                          unit_type='service',
                          loaded_status=u'loaded',
                          active_status=u'active',
                          current_state=u'running',
                          description=u'System Logging Service',
                          enabled_status=u'enabled'),
            ],
            "excluded": [
                UnitEntry(name=u'gpu-manager',
                          unit_type='service',
                          loaded_status=u'loaded',
                          active_status=u'inactive',
                          current_state=u'dead',
                          description=u'Detect the available GPUs and deal with any system changes',
                          enabled_status=u'unknown'),
            ],
            "disabled": [
                UnitEntry(name=u'alsa-state',
                          unit_type='service',
                          loaded_status=u'loaded',
                          active_status=u'inactive',
                          current_state=u'dead',
                          description=u'Manage Sound Card State (restore and store)',
                          enabled_status=u'indirect')
            ],
            "static": [],
            "activating": [],
            "reloading": [],
        },
    ),
])
def test_services_split(services, blacklist, expected):
    check = Check('systemd_units')
    services_split = check.context['_services_split']
    actual = services_split(services, blacklist)
    assert actual == expected


@pytest.mark.parametrize('string_table, section', [
    pytest.param(
        [
            ['[all]'],
            ['UNIT', 'LOAD', 'ACTIVE', 'SUB', 'DESCRIPTION'],
            ['0', 'unit', 'files', 'listed.'],
        ],
        {},
        id='No systemd units returns empty parsed section',
    ),
    pytest.param(
        [],
        {},
        id='Empty agent section returns empty parsed section',
    ),
    pytest.param(
        [
            ['UNIT', 'LOAD', 'ACTIVE', 'SUB', 'DESCRIPTION'],
            [
                'virtualbox.service',
                'loaded',
                'active',
                'exited',
                'LSB:',
                'VirtualBox',
                'Linux',
                'kernel',
                'module',
            ],
            ['1', 'unit', 'files', 'listed.'],
        ],
        {},
        id='Missing "[all]" header in agent section leads to empty parsed section',
    ),
    pytest.param(
        [
            ['[all]'],
            ['UNIT', 'LOAD', 'ACTIVE', 'SUB', 'DESCRIPTION'],
            [
                'virtualbox.service',
                'loaded',
                'active',
                'exited',
                'LSB:',
                'VirtualBox',
                'Linux',
                'kernel',
                'module',
            ],
            ['1', 'unit', 'files', 'listed.'],
        ],
        {
            'service': {
                'virtualbox': UnitEntry(name='virtualbox',
                                        unit_type='service',
                                        loaded_status='loaded',
                                        active_status='active',
                                        current_state='exited',
                                        description='LSB: VirtualBox Linux kernel module',
                                        enabled_status='unknown')
            },
        },
        id='Simple agent section parsed correctly',
    ),
    pytest.param(
        [
            ['[all]'],
            ['UNIT', 'LOAD', 'ACTIVE', 'SUB', 'DESCRIPTION'],
            [
                '*',
                'virtualbox.service',
                'loaded',
                'active',
                'exited',
                'LSB:',
                'VirtualBox',
                'Linux',
                'kernel',
                'module',
            ],
            ['1', 'unit', 'files', 'listed.'],
        ],
        {
            'service': {
                'virtualbox': UnitEntry(name='virtualbox',
                                        unit_type='service',
                                        loaded_status='loaded',
                                        active_status='active',
                                        current_state='exited',
                                        description='LSB: VirtualBox Linux kernel module',
                                        enabled_status='unknown')
            },
        },
        id='Leading "*" in systemd status line is ignored',
    ),
    pytest.param(
        [
            ['[all]'],
            ['UNIT', 'LOAD', 'ACTIVE', 'SUB', 'DESCRIPTION'],
            [
                'active',
                'plugged',
                '',
            ],
            ['1', 'unit', 'files', 'listed.'],
        ],
        {},
        id='Invalid systemd status lines are skipped',
    ),
    pytest.param(
        [
            ['[all]'],
            ['UNIT', 'LOAD', 'ACTIVE', 'SUB', 'DESCRIPTION'],
            [
                'dev-disk-by@did-ata@dAPPLE_SSD_SM0256G_S29CNYDG865465.device.device',
                'loaded',
                'active',
                'plugged',
                'APPLE_SSD_SM0256G',
            ],
            ['1', 'unit', 'files', 'listed.'],
        ],
        {
            'device': {
                'dev-disk-by@did-ata@dAPPLE_SSD_SM0256G_S29CNYDG865465.device': UnitEntry(
                    name='dev-disk-by@did-ata@dAPPLE_SSD_SM0256G_S29CNYDG865465.device',
                    unit_type='device',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='plugged',
                    description='APPLE_SSD_SM0256G',
                    enabled_status='unknown')
            },
        },
        id='Unit type and name parsed correctly from full name',
    ),
    pytest.param(
        [
            ['[list-unit-files]'],
            ['UNIT', 'FILE', 'STATE'],
            ['virtualbox.service', 'enabled'],
            ['[all]'],
            ['UNIT', 'LOAD', 'ACTIVE', 'SUB', 'DESCRIPTION'],
            [
                'virtualbox.service',
                'loaded',
                'active',
                'exited',
                'LSB:',
                'VirtualBox',
                'Linux',
                'kernel',
                'module',
            ],
            ['1', 'unit', 'files', 'listed.'],
        ],
        {
            'service': {
                'virtualbox': UnitEntry(name='virtualbox',
                                        unit_type='service',
                                        loaded_status='loaded',
                                        active_status='active',
                                        current_state='exited',
                                        description='LSB: VirtualBox Linux kernel module',
                                        enabled_status='enabled')
            },
        },
        id='Systemd unit status found in list-unit-files mapping',
    ),
    pytest.param(
        [
            ['[list-unit-files]'],
            ['UNIT', 'FILE', 'STATE'],
            ['someother.service', 'enabled'],
            ['[all]'],
            ['UNIT', 'LOAD', 'ACTIVE', 'SUB', 'DESCRIPTION'],
            [
                'virtualbox.service',
                'loaded',
                'active',
                'exited',
                'LSB:',
                'VirtualBox',
                'Linux',
                'kernel',
                'module',
            ],
            ['1', 'unit', 'files', 'listed.'],
        ],
        {
            'service': {
                'virtualbox': UnitEntry(name='virtualbox',
                                        unit_type='service',
                                        loaded_status='loaded',
                                        active_status='active',
                                        current_state='exited',
                                        description='LSB: VirtualBox Linux kernel module',
                                        enabled_status='unknown')
            },
        },
        id='Systemd unit status not available in list-unit-files mapping, use "unknown" instead',
    ),
    pytest.param(
        [
            ['[list-unit-files]'],
            ['UNIT', 'FILE', 'STATE'],
            ['dev-disk-by@.device', 'enabled'],
            ['[all]'],
            ['UNIT', 'LOAD', 'ACTIVE', 'SUB', 'DESCRIPTION'],
            [
                'dev-disk-by@APPLE_SSD_SM0256G_S29CNYDG865465.device',
                'loaded',
                'active',
                'plugged',
                'APPLE_SSD_SM0256G',
            ],
            ['1', 'unit', 'files', 'listed.'],
        ],
        {
            'device': {
                'dev-disk-by@APPLE_SSD_SM0256G_S29CNYDG865465': UnitEntry(
                    name='dev-disk-by@APPLE_SSD_SM0256G_S29CNYDG865465',
                    unit_type='device',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='plugged',
                    description='APPLE_SSD_SM0256G',
                    enabled_status='enabled')
            },
        },
        id='Unit status found in list-unit-files mapping even though unit names are diverging',
    ),
    pytest.param(
        [
            ['[list-unit-files]'],
            ['UNIT', 'FILE', 'STATE'],
            ['proc-sys-fs-binfmt_misc.automount', 'static'],
            ['dev-hugepages.mount', 'static'],
            ['dev-mqueue.mount', 'static'],
            ['proc-fs-nfsd.mount', 'static'],
            ['proc-sys-fs-binfmt_misc.mount', 'static'],
            ['sys-fs-fuse-connections.mount', 'static'],
            ['sys-kernel-config.mount', 'static'],
            ['sys-kernel-debug.mount', 'static'],
            ['tmp.mount', 'disabled'],
            ['var-lib-nfs-rpc_pipefs.mount', 'static'],
            ['brandbot.path', 'enabled'],
            ['systemd-ask-password-console.path', 'static'],
            ['systemd-ask-password-plymouth.path', 'static'],
            ['systemd-ask-password-wall.path', 'static'],
            ['session-22867.scope', 'static'],
            ['session-23765.scope', 'static'],
            ['session-23771.scope', 'static'],
            ['session-7560.scope', 'static'],
            ['session-c3.scope', 'static'],
            ['session-c4.scope', 'static'],
            ['abrt-ccpp.service', 'enabled'],
            ['abrt-oops.service', 'enabled'],
            ['abrt-pstoreoops.service', 'disabled'],
            ['abrt-vmcore.service', 'enabled'],
            ['abrt-xorg.service', 'enabled'],
            ['abrtd.service', 'enabled'],
            ['arp-ethers.service', 'disabled'],
            ['atd.service', 'enabled'],
            ['atop.service', 'enabled'],
            ['atopacct.service', 'disabled'],
            ['auditd.service', 'enabled'],
            ['auth-rpcgss-module.service', 'static'],
            ['autofs.service', 'disabled'],
            ['autovt@.service', 'enabled'],
            ['blk-availability.service', 'disabled'],
            ['brandbot.service', 'static'],
            ['canberra-system-bootup.service', 'disabled'],
            ['canberra-system-shutdown-reboot.service', 'disabled'],
            ['canberra-system-shutdown.service', 'disabled'],
            ['cgconfig.service', 'disabled'],
            ['cgdcbxd.service', 'disabled'],
            ['cgred.service', 'disabled'],
            ['check-mk-agent@.service', 'static'],
            ['chrony-dnssrv@.service', 'static'],
            ['chrony-wait.service', 'disabled'],
            ['chronyd.service', 'disabled'],
            ['console-getty.service', 'disabled'],
            ['console-shell.service', 'disabled'],
            ['container-getty@.service', 'static'],
            ['corosync-notifyd.service', 'disabled'],
            ['corosync-qdevice.service', 'disabled'],
            ['corosync.service', 'disabled'],
            ['cpupower.service', 'disabled'],
            ['crm_mon.service', 'disabled'],
            ['crond.service', 'enabled'],
            ['dbus-org.freedesktop.hostname1.service', 'static'],
            ['dbus-org.freedesktop.import1.service', 'static'],
            ['dbus-org.freedesktop.locale1.service', 'static'],
            ['dbus-org.freedesktop.login1.service', 'static'],
            ['dbus-org.freedesktop.machine1.service', 'static'],
            ['dbus-org.freedesktop.NetworkManager.service', 'enabled'],
            ['dbus-org.freedesktop.nm-dispatcher.service', 'enabled'],
            ['dbus-org.freedesktop.timedate1.service', 'static'],
            ['dbus.service', 'static'],
            ['debug-shell.service', 'disabled'],
            ['dm-event.service', 'static'],
            ['dmraid-activation.service', 'enabled'],
            ['dnsmasq.service', 'disabled'],
            ['dracut-cmdline.service', 'static'],
            ['dracut-initqueue.service', 'static'],
            ['dracut-mount.service', 'static'],
            ['dracut-pre-mount.service', 'static'],
            ['dracut-pre-pivot.service', 'static'],
            ['dracut-pre-trigger.service', 'static'],
            ['dracut-pre-udev.service', 'static'],
            ['dracut-shutdown.service', 'static'],
            ['dsmcad_SCHED_PHT_BACKUP_DC2.service', 'enabled'],
            ['ebtables.service', 'disabled'],
            ['emergency.service', 'static'],
            ['fancontrol.service', 'disabled'],
            ['fcoe.service', 'disabled'],
            ['firewalld.service', 'disabled'],
            ['fprintd.service', 'static'],
            ['fstrim.service', 'static'],
            ['getty@.service', 'enabled'],
            ['goferd.service', 'enabled'],
            ['gssproxy.service', 'disabled'],
            ['halt-local.service', 'static'],
            ['hwloc-dump-hwdata.service', 'disabled'],
            ['initrd-cleanup.service', 'static'],
            ['initrd-parse-etc.service', 'static'],
            ['initrd-switch-root.service', 'static'],
            ['initrd-udevadm-cleanup-db.service', 'static'],
            ['ipmi.service', 'disabled'],
            ['ipmievd.service', 'disabled'],
            ['iprdump.service', 'disabled'],
            ['iprinit.service', 'disabled'],
            ['iprupdate.service', 'disabled'],
            ['irqbalance.service', 'enabled'],
            ['iscsi-shutdown.service', 'static'],
            ['iscsi.service', 'enabled'],
            ['iscsid.service', 'disabled'],
            ['iscsiuio.service', 'disabled'],
            ['kdump.service', 'enabled'],
            ['kmod-static-nodes.service', 'static'],
            ['kpatch.service', 'disabled'],
            ['libstoragemgmt.service', 'enabled'],
            ['lldpad.service', 'disabled'],
            ['lm_sensors.service', 'enabled'],
            ['lvm2-lvmetad.service', 'static'],
            ['lvm2-lvmpolld.service', 'static'],
            ['lvm2-monitor.service', 'enabled'],
            ['lvm2-pvscan@.service', 'static'],
            ['lwsmd.service', 'enabled'],
            ['mdadm-grow-continue@.service', 'static'],
            ['mdadm-last-resort@.service', 'static'],
            ['mdmon@.service', 'static'],
            ['mdmonitor.service', 'enabled'],
            ['messagebus.service', 'static'],
            ['microcode.service', 'enabled'],
            ['multipathd.service', 'enabled'],
            ['NetworkManager-dispatcher.service', 'enabled'],
            ['NetworkManager-wait-online.service', 'enabled'],
            ['NetworkManager.service', 'enabled'],
            ['nfs-blkmap.service', 'disabled'],
            ['nfs-config.service', 'static'],
            ['nfs-idmap.service', 'static'],
            ['nfs-idmapd.service', 'static'],
            ['nfs-lock.service', 'static'],
            ['nfs-mountd.service', 'static'],
            ['nfs-rquotad.service', 'disabled'],
            ['nfs-secure.service', 'static'],
            ['nfs-server.service', 'disabled'],
            ['nfs-utils.service', 'static'],
            ['nfs.service', 'disabled'],
            ['nfslock.service', 'static'],
            ['ntpd.service', 'enabled'],
            ['ntpdate.service', 'disabled'],
            ['numad.service', 'disabled'],
            ['pacemaker.service', 'disabled'],
            ['pcs_snmp_agent.service', 'enabled'],
            ['pcsd.service', 'enabled'],
            ['plymouth-halt.service', 'disabled'],
            ['plymouth-kexec.service', 'disabled'],
            ['plymouth-poweroff.service', 'disabled'],
            ['plymouth-quit-wait.service', 'disabled'],
            ['plymouth-quit.service', 'disabled'],
            ['plymouth-read-write.service', 'disabled'],
            ['plymouth-reboot.service', 'disabled'],
            ['plymouth-start.service', 'disabled'],
            ['plymouth-switch-root.service', 'static'],
            ['pmcd.service', 'disabled'],
            ['pmie.service', 'disabled'],
            ['pmie_check.service', 'static'],
            ['pmie_daily.service', 'disabled'],
            ['pmlogger.service', 'disabled'],
            ['pmlogger_check.service', 'disabled'],
            ['pmlogger_daily-poll.service', 'disabled'],
            ['pmlogger_daily.service', 'disabled'],
            ['pmproxy.service', 'disabled'],
            ['polkit.service', 'static'],
            ['postfix.service', 'disabled'],
            ['powertop.service', 'disabled'],
            ['prole_hana.service', 'enabled'],
            ['psacct.service', 'disabled'],
            ['puppet.service', 'enabled'],
            ['puppetagent.service', 'enabled'],
            ['quotaon.service', 'static'],
            ['rc-local.service', 'static'],
            ['rdisc.service', 'disabled'],
            ['rescue.service', 'static'],
            ['rhel-autorelabel-mark.service', 'enabled'],
            ['rhel-autorelabel.service', 'enabled'],
            ['rhel-configure.service', 'enabled'],
            ['rhel-dmesg.service', 'enabled'],
            ['rhel-domainname.service', 'enabled'],
            ['rhel-import-state.service', 'enabled'],
            ['rhel-loadmodules.service', 'enabled'],
            ['rhel-readonly.service', 'enabled'],
            ['rhsm-facts.service', 'disabled'],
            ['rhsm.service', 'disabled'],
            ['rhsmcertd.service', 'enabled'],
            ['rngd.service', 'enabled'],
            ['rpc-gssd.service', 'static'],
            ['rpc-rquotad.service', 'disabled'],
            ['rpc-statd-notify.service', 'static'],
            ['rpc-statd.service', 'static'],
            ['rpcbind.service', 'enabled'],
            ['rpcgssd.service', 'static'],
            ['rpcidmapd.service', 'static'],
            ['rsyncd.service', 'disabled'],
            ['rsyncd@.service', 'static'],
            ['rsyslog.service', 'enabled'],
            ['selinux-policy-migrate-local-changes@.service', 'static'],
            ['serial-getty@.service', 'disabled'],
            ['smartd.service', 'enabled'],
            ['snmpd.service', 'enabled'],
            ['snmptrapd.service', 'disabled'],
            ['sshd-keygen.service', 'static'],
            ['sshd.service', 'enabled'],
            ['sshd@.service', 'static'],
            ['sysstat.service', 'enabled'],
            ['systemd-ask-password-console.service', 'static'],
            ['systemd-ask-password-plymouth.service', 'static'],
            ['systemd-ask-password-wall.service', 'static'],
            ['systemd-backlight@.service', 'static'],
            ['systemd-binfmt.service', 'static'],
            ['systemd-bootchart.service', 'disabled'],
            ['systemd-firstboot.service', 'static'],
            ['systemd-fsck-root.service', 'static'],
            ['systemd-fsck@.service', 'static'],
            ['systemd-halt.service', 'static'],
            ['systemd-hibernate-resume@.service', 'static'],
            ['systemd-hibernate.service', 'static'],
            ['systemd-hostnamed.service', 'static'],
            ['systemd-hwdb-update.service', 'static'],
            ['systemd-hybrid-sleep.service', 'static'],
            ['systemd-importd.service', 'static'],
            ['systemd-initctl.service', 'static'],
            ['systemd-journal-catalog-update.service', 'static'],
            ['systemd-journal-flush.service', 'static'],
            ['systemd-journald.service', 'static'],
            ['systemd-kexec.service', 'static'],
            ['systemd-localed.service', 'static'],
            ['systemd-logind.service', 'static'],
            ['systemd-machine-id-commit.service', 'static'],
            ['systemd-machined.service', 'static'],
            ['systemd-modules-load.service', 'static'],
            ['systemd-nspawn@.service', 'disabled'],
            ['systemd-poweroff.service', 'static'],
            ['systemd-quotacheck.service', 'static'],
            ['systemd-random-seed.service', 'static'],
            ['systemd-readahead-collect.service', 'enabled'],
            ['systemd-readahead-done.service', 'indirect'],
            ['systemd-readahead-drop.service', 'enabled'],
            ['systemd-readahead-replay.service', 'enabled'],
            ['systemd-reboot.service', 'static'],
            ['systemd-remount-fs.service', 'static'],
            ['systemd-rfkill@.service', 'static'],
            ['systemd-shutdownd.service', 'static'],
            ['systemd-suspend.service', 'static'],
            ['systemd-sysctl.service', 'static'],
            ['systemd-timedated.service', 'static'],
            ['systemd-tmpfiles-clean.service', 'static'],
            ['systemd-tmpfiles-setup-dev.service', 'static'],
            ['systemd-tmpfiles-setup.service', 'static'],
            ['systemd-udev-settle.service', 'static'],
            ['systemd-udev-trigger.service', 'static'],
            ['systemd-udevd.service', 'static'],
            ['systemd-update-done.service', 'static'],
            ['systemd-update-utmp-runlevel.service', 'static'],
            ['systemd-update-utmp.service', 'static'],
            ['systemd-user-sessions.service', 'static'],
            ['systemd-vconsole-setup.service', 'static'],
            ['target.service', 'disabled'],
            ['tcsd.service', 'disabled'],
            ['teamd@.service', 'static'],
            ['tuned.service', 'enabled'],
            ['unbound-anchor.service', 'static'],
            ['usb_modeswitch@.service', 'static'],
            ['uuidd.service', 'indirect'],
            ['vgauthd.service', 'enabled'],
            ['vmtoolsd.service', 'enabled'],
            ['wpa_supplicant.service', 'disabled'],
            ['-.slice', 'static'],
            ['machine.slice', 'static'],
            ['system.slice', 'static'],
            ['user-0.slice', 'static'],
            ['user-1101.slice', 'static'],
            ['user-1104.slice', 'static'],
            ['user.slice', 'static'],
            ['check-mk-agent.socket', 'enabled'],
            ['dbus.socket', 'static'],
            ['dm-event.socket', 'enabled'],
            ['iscsid.socket', 'enabled'],
            ['iscsiuio.socket', 'enabled'],
            ['lldpad.socket', 'disabled'],
            ['lvm2-lvmetad.socket', 'enabled'],
            ['lvm2-lvmpolld.socket', 'enabled'],
            ['rpcbind.socket', 'enabled'],
            ['rsyncd.socket', 'disabled'],
            ['sshd.socket', 'disabled'],
            ['syslog.socket', 'static'],
            ['systemd-initctl.socket', 'static'],
            ['systemd-journald.socket', 'static'],
            ['systemd-shutdownd.socket', 'static'],
            ['systemd-udevd-control.socket', 'static'],
            ['systemd-udevd-kernel.socket', 'static'],
            ['uuidd.socket', 'enabled'],
            ['basic.target', 'static'],
            ['bluetooth.target', 'static'],
            ['cryptsetup-pre.target', 'static'],
            ['cryptsetup.target', 'static'],
            ['ctrl-alt-del.target', 'disabled'],
            ['default.target', 'enabled'],
            ['emergency.target', 'static'],
            ['final.target', 'static'],
            ['getty-pre.target', 'static'],
            ['getty.target', 'static'],
            ['graphical.target', 'static'],
            ['halt.target', 'disabled'],
            ['hibernate.target', 'static'],
            ['hybrid-sleep.target', 'static'],
            ['initrd-fs.target', 'static'],
            ['initrd-root-fs.target', 'static'],
            ['initrd-switch-root.target', 'static'],
            ['initrd.target', 'static'],
            ['iprutils.target', 'disabled'],
            ['kexec.target', 'disabled'],
            ['local-fs-pre.target', 'static'],
            ['local-fs.target', 'static'],
            ['machines.target', 'disabled'],
            ['multi-user.target', 'enabled'],
            ['network-online.target', 'static'],
            ['network-pre.target', 'static'],
            ['network.target', 'static'],
            ['nfs-client.target', 'enabled'],
            ['nss-lookup.target', 'static'],
            ['nss-user-lookup.target', 'static'],
            ['paths.target', 'static'],
            ['poweroff.target', 'disabled'],
            ['printer.target', 'static'],
            ['reboot.target', 'disabled'],
            ['remote-cryptsetup.target', 'disabled'],
            ['remote-fs-pre.target', 'static'],
            ['remote-fs.target', 'enabled'],
            ['rescue.target', 'disabled'],
            ['resource-agents-deps.target', 'static'],
            ['rpc_pipefs.target', 'static'],
            ['rpcbind.target', 'static'],
            ['runlevel0.target', 'disabled'],
            ['runlevel1.target', 'disabled'],
            ['runlevel2.target', 'enabled'],
            ['runlevel3.target', 'enabled'],
            ['runlevel4.target', 'enabled'],
            ['runlevel5.target', 'static'],
            ['runlevel6.target', 'disabled'],
            ['shutdown.target', 'static'],
            ['sigpwr.target', 'static'],
            ['sleep.target', 'static'],
            ['slices.target', 'static'],
            ['smartcard.target', 'static'],
            ['sockets.target', 'static'],
            ['sound.target', 'static'],
            ['suspend.target', 'static'],
            ['swap.target', 'static'],
            ['sysinit.target', 'static'],
            ['system-update.target', 'static'],
            ['time-sync.target', 'static'],
            ['timers.target', 'static'],
            ['umount.target', 'static'],
            ['chrony-dnssrv@.timer', 'disabled'],
            ['fstrim.timer', 'disabled'],
            ['mdadm-last-resort@.timer', 'static'],
            ['pmie_check.timer', 'disabled'],
            ['pmie_daily.timer', 'disabled'],
            ['pmlogger_check.timer', 'disabled'],
            ['pmlogger_daily-poll.timer', 'disabled'],
            ['pmlogger_daily.timer', 'disabled'],
            ['systemd-readahead-done.timer', 'indirect'],
            ['systemd-tmpfiles-clean.timer', 'static'],
            ['unbound-anchor.timer', 'enabled'],
            ['362', 'unit', 'files', 'listed.'],
            ['[all]'],
            ['UNIT', 'LOAD', 'ACTIVE', 'SUB', 'JOB'],
            [
                'dev-disk-by\\x2duuid-7941a423\\x2de7d7\\x2d4bbd\\x2d9526\\x2dfdb7ba7982a6.device',
                'loaded', 'active', 'plugged',
                '/dev/disk/by-uuid/7941a423-e7d7-4bbd-9526-fdb7ba7982a6'
            ],
            ['dev-sr0.device', 'loaded', 'active', 'plugged', 'VMware_Virtual_SATA_CDRW_Drive'],
            ['dev-vg_data-lv_data.device', 'loaded', 'active', 'plugged', '/dev/vg_data/lv_data'],
            ['hana-data.mount', 'loaded', 'active', 'mounted', '/hana/data'],
            ['hana-log.mount', 'loaded', 'active', 'mounted', '/hana/log'],
            ['hana-shared.mount', 'loaded', 'active', 'mounted', '/hana/shared'],
            [
                'proc-fs-nfsd.mount', 'loaded', 'inactive', 'dead', 'NFSD', 'configuration',
                'filesystem'
            ],
            [
                'proc-sys-fs-binfmt_misc.mount', 'loaded', 'active', 'mounted', 'Arbitrary',
                'Executable', 'File', 'Formats', 'File', 'System'
            ],
            ['run-user-0.mount', 'loaded', 'active', 'mounted', '/run/user/0'],
            ['run-user-1101.mount', 'loaded', 'active', 'mounted', '/run/user/1101'],
            ['run-user-1104.mount', 'loaded', 'active', 'mounted', '/run/user/1104'],
            ['sapTEMP.mount', 'loaded', 'active', 'mounted', '/sapTEMP'],
            ['sapWORK.mount', 'loaded', 'active', 'mounted', '/sapWORK'],
            [
                'sys-fs-fuse-connections.mount', 'loaded', 'inactive', 'dead', 'FUSE', 'Control',
                'File', 'System'
            ],
            [
                'sys-kernel-config.mount', 'loaded', 'active', 'mounted', 'Configuration', 'File',
                'System'
            ],
            ['sys-kernel-debug.mount', 'loaded', 'active', 'mounted', 'Debug', 'File', 'System'],
            ['tmp.mount', 'loaded', 'inactive', 'dead', 'Temporary', 'Directory'],
            ['usr-sap.mount', 'loaded', 'active', 'mounted', '/usr/sap'],
            ['usr.mount', 'loaded', 'active', 'mounted', '/usr'],
            [
                'var-lib-nfs-rpc_pipefs.mount', 'loaded', 'active', 'mounted', 'RPC', 'Pipe',
                'File', 'System'
            ],
            ['brandbot.path', 'loaded', 'active', 'waiting', 'Flexible', 'branding'],
            [
                'systemd-ask-password-console.path', 'loaded', 'inactive', 'dead', 'Dispatch',
                'Password', 'Requests', 'to', 'Console', 'Directory', 'Watch'
            ],
            [
                'systemd-ask-password-plymouth.path', 'loaded', 'active', 'waiting', 'Forward',
                'Password', 'Requests', 'to', 'Plymouth', 'Directory', 'Watch'
            ],
            [
                'systemd-ask-password-wall.path', 'loaded', 'active', 'waiting', 'Forward',
                'Password', 'Requests', 'to', 'Wall', 'Directory', 'Watch'
            ],
            [
                'abrtd.service', 'loaded', 'active', 'running', 'ABRT', 'Automated', 'Bug',
                'Reporting', 'Tool'
            ],
            ['atd.service', 'loaded', 'active', 'running', 'Job', 'spooling', 'tools'],
            [
                'atop.service', 'loaded', 'active', 'running', 'Atop', 'advanced', 'performance',
                'monitor'
            ],
            [
                'blk-availability.service', 'loaded', 'active', 'exited', 'Availability', 'of',
                'block', 'devices'
            ],
            ['brandbot.service', 'loaded', 'inactive', 'dead', 'Flexible', 'Branding', 'Service'],
            [
                'check-mk-agent@40273-10.223.16.185:6556-10.20.114.58:57796.service', 'loaded',
                'activating', 'start', 'start', 'CheckMK', '(10.20.114.58:57796)'
            ],
            [
                'corosync-qdevice.service', 'loaded', 'active', 'running', 'Corosync', 'Qdevice',
                'daemon'
            ],
            ['corosync.service', 'loaded', 'active', 'running', 'Corosync', 'Cluster', 'Engine'],
            [
                'cpupower.service', 'loaded', 'inactive', 'dead', 'Configure', 'CPU', 'power',
                'related', 'settings'
            ],
            ['crond.service', 'loaded', 'active', 'running', 'Command', 'Scheduler'],
            ['dbus.service', 'loaded', 'active', 'running', 'D-Bus', 'System', 'Message', 'Bus'],
            [
                '*', 'display-manager.service', 'not-found', 'inactive', 'dead',
                'display-manager.service'
            ],
            ['dm-event.service', 'loaded', 'inactive', 'dead', 'Device-mapper', 'event', 'daemon'],
            [
                'dmraid-activation.service', 'loaded', 'inactive', 'dead', 'Activation', 'of', 'DM',
                'RAID', 'sets'
            ],
            ['dracut-shutdown.service', 'loaded', 'inactive', 'dead', 'Restore', '/run/initramfs'],
            [
                'dsmcad_SCHED_PHT_BACKUP_DC2.service', 'loaded', 'active', 'running', '"IBM',
                'Spectrum', 'Protect', 'Client', 'dsmcad', 'systemd-style', 'service."'
            ],
            ['emergency.service', 'loaded', 'inactive', 'dead', 'Emergency', 'Shell'],
            ['fcoe.service', 'loaded', 'inactive', 'dead', 'Open-FCoE', 'Inititator.'],
            [
                'iscsi.service', 'loaded', 'inactive', 'dead', 'Login', 'and', 'scanning', 'of',
                'iSCSI', 'devices'
            ],
            ['iscsid.service', 'loaded', 'inactive', 'dead', 'Open-iSCSI'],
            [
                'iscsiuio.service', 'loaded', 'inactive', 'dead', 'iSCSI', 'UserSpace', 'I/O',
                'driver'
            ],
            [
                'kdump.service', 'loaded', 'active', 'exited', 'Crash', 'recovery', 'kernel',
                'arming'
            ],
            [
                'kmod-static-nodes.service', 'loaded', 'active', 'exited', 'Create', 'list', 'of',
                'required', 'static', 'device', 'nodes', 'for', 'the', 'current', 'kernel'
            ],
            [
                'libstoragemgmt.service', 'loaded', 'active', 'running', 'libstoragemgmt',
                'plug-in', 'server', 'daemon'
            ],
            ['*', 'livesys.service', 'not-found', 'inactive', 'dead', 'livesys.service'],
            [
                'lldpad.service', 'loaded', 'inactive', 'dead', 'Link', 'Layer', 'Discovery',
                'Protocol', 'Agent', 'Daemon.'
            ],
            [
                '*', 'lm_sensors.service', 'loaded', 'failed', 'failed', 'Initialize', 'hardware',
                'monitoring', 'sensors'
            ],
            [
                '*', 'lvm2-activation-early.service', 'not-found', 'inactive', 'dead',
                'lvm2-activation-early.service'
            ],
            [
                '*', 'lvm2-activation.service', 'not-found', 'inactive', 'dead',
                'lvm2-activation.service'
            ],
            ['lvm2-lvmetad.service', 'loaded', 'active', 'running', 'LVM2', 'metadata', 'daemon'],
            ['lvm2-lvmpolld.service', 'loaded', 'inactive', 'dead', 'LVM2', 'poll', 'daemon'],
            [
                'lvm2-monitor.service', 'loaded', 'active', 'exited', 'Monitoring', 'of', 'LVM2',
                'mirrors,', 'snapshots', 'etc.', 'using', 'dmeventd', 'or', 'progress', 'polling'
            ],
            [
                'network.service', 'loaded', 'active', 'exited', 'LSB:', 'Bring', 'up/down',
                'networking'
            ],
            [
                'NetworkManager-wait-online.service', 'loaded', 'active', 'exited', 'Network',
                'Manager', 'Wait', 'Online'
            ],
            ['NetworkManager.service', 'loaded', 'active', 'running', 'Network', 'Manager'],
            [
                'nfs-config.service', 'loaded', 'inactive', 'dead', 'Preprocess', 'NFS',
                'configuration'
            ],
            [
                'nfs-idmapd.service', 'loaded', 'inactive', 'dead', 'NFSv4', 'ID-name', 'mapping',
                'service'
            ],
            ['nfs-mountd.service', 'loaded', 'inactive', 'dead', 'NFS', 'Mount', 'Daemon'],
            [
                '*', 'nfs-secure-server.service', 'not-found', 'inactive', 'dead',
                'nfs-secure-server.service'
            ],
            [
                'nfs-server.service', 'loaded', 'inactive', 'dead', 'NFS', 'server', 'and',
                'services'
            ],
            [
                'nfs-utils.service', 'loaded', 'inactive', 'dead', 'NFS', 'server', 'and', 'client',
                'services'
            ],
            ['ntpd.service', 'loaded', 'active', 'running', 'Network', 'Time', 'Service'],
            ['ntpdate.service', 'loaded', 'inactive', 'dead', 'Set', 'time', 'via', 'NTP'],
            ['puppet.service', 'loaded', 'active', 'running', 'Puppet', 'agent'],
            ['*', 'puppetmaster.service', 'not-found', 'inactive', 'dead', 'puppetmaster.service'],
            ['*', 'rbdmap.service', 'not-found', 'inactive', 'dead', 'rbdmap.service'],
            [
                'rc-local.service', 'loaded', 'inactive', 'dead', '/etc/rc.d/rc.local',
                'Compatibility'
            ],
            ['rescue.service', 'loaded', 'inactive', 'dead', 'Rescue', 'Shell'],
            ['*', 'ypbind.service', 'not-found', 'inactive', 'dead', 'ypbind.service'],
            ['*', 'yppasswdd.service', 'not-found', 'inactive', 'dead', 'yppasswdd.service'],
            ['*', 'ypserv.service', 'not-found', 'inactive', 'dead', 'ypserv.service'],
            ['*', 'ypxfrd.service', 'not-found', 'inactive', 'dead', 'ypxfrd.service'],
            ['-.slice', 'loaded', 'active', 'active', 'Root', 'Slice'],
            ['slices.target', 'loaded', 'active', 'active', 'Slices'],
            ['sockets.target', 'loaded', 'active', 'active', 'Sockets'],
            ['swap.target', 'loaded', 'active', 'active', 'Swap'],
            ['sysinit.target', 'loaded', 'active', 'active', 'System', 'Initialization'],
            ['*', 'syslog.target', 'not-found', 'inactive', 'dead', 'syslog.target'],
        ],
        {
            'device': {
                'dev-disk-by\\x2duuid-7941a423\\x2de7d7\\x2d4bbd\\x2d9526\\x2dfdb7ba7982a6':
                    UnitEntry(
                        name=
                        'dev-disk-by\\x2duuid-7941a423\\x2de7d7\\x2d4bbd\\x2d9526\\x2dfdb7ba7982a6',
                        unit_type='device',
                        loaded_status='loaded',
                        active_status='active',
                        current_state='plugged',
                        description='/dev/disk/by-uuid/7941a423-e7d7-4bbd-9526-fdb7ba7982a6',
                        enabled_status='unknown',
                    ),
                'dev-sr0': UnitEntry(
                    name='dev-sr0',
                    unit_type='device',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='plugged',
                    description='VMware_Virtual_SATA_CDRW_Drive',
                    enabled_status='unknown',
                ),
                'dev-vg_data-lv_data': UnitEntry(
                    name='dev-vg_data-lv_data',
                    unit_type='device',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='plugged',
                    description='/dev/vg_data/lv_data',
                    enabled_status='unknown',
                ),
            },
            'mount': {
                'hana-data': UnitEntry(
                    name='hana-data',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='/hana/data',
                    enabled_status='unknown',
                ),
                'hana-log': UnitEntry(
                    name='hana-log',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='/hana/log',
                    enabled_status='unknown',
                ),
                'hana-shared': UnitEntry(
                    name='hana-shared',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='/hana/shared',
                    enabled_status='unknown',
                ),
                'proc-fs-nfsd': UnitEntry(
                    name='proc-fs-nfsd',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='NFSD configuration filesystem',
                    enabled_status='static',
                ),
                'proc-sys-fs-binfmt_misc': UnitEntry(
                    name='proc-sys-fs-binfmt_misc',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='Arbitrary Executable File Formats File System',
                    enabled_status='static',
                ),
                'run-user-0': UnitEntry(
                    name='run-user-0',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='/run/user/0',
                    enabled_status='unknown',
                ),
                'run-user-1101': UnitEntry(
                    name='run-user-1101',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='/run/user/1101',
                    enabled_status='unknown',
                ),
                'run-user-1104': UnitEntry(
                    name='run-user-1104',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='/run/user/1104',
                    enabled_status='unknown',
                ),
                'sapTEMP': UnitEntry(
                    name='sapTEMP',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='/sapTEMP',
                    enabled_status='unknown',
                ),
                'sapWORK': UnitEntry(
                    name='sapWORK',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='/sapWORK',
                    enabled_status='unknown',
                ),
                'sys-fs-fuse-connections': UnitEntry(
                    name='sys-fs-fuse-connections',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='FUSE Control File System',
                    enabled_status='static',
                ),
                'sys-kernel-config': UnitEntry(
                    name='sys-kernel-config',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='Configuration File System',
                    enabled_status='static',
                ),
                'sys-kernel-debug': UnitEntry(
                    name='sys-kernel-debug',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='Debug File System',
                    enabled_status='static',
                ),
                'tmp': UnitEntry(
                    name='tmp',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Temporary Directory',
                    enabled_status='disabled',
                ),
                'usr': UnitEntry(
                    name='usr',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='/usr',
                    enabled_status='unknown',
                ),
                'usr-sap': UnitEntry(
                    name='usr-sap',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='/usr/sap',
                    enabled_status='unknown',
                ),
                'var-lib-nfs-rpc_pipefs': UnitEntry(
                    name='var-lib-nfs-rpc_pipefs',
                    unit_type='mount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='mounted',
                    description='RPC Pipe File System',
                    enabled_status='static',
                )
            },
            'path': {
                'brandbot': UnitEntry(
                    name='brandbot',
                    unit_type='path',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='waiting',
                    description='Flexible branding',
                    enabled_status='enabled',
                ),
                'systemd-ask-password-console': UnitEntry(
                    name='systemd-ask-password-console',
                    unit_type='path',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Dispatch Password Requests to Console Directory Watch',
                    enabled_status='static',
                ),
                'systemd-ask-password-plymouth': UnitEntry(
                    name='systemd-ask-password-plymouth',
                    unit_type='path',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='waiting',
                    description='Forward Password Requests to Plymouth Directory Watch',
                    enabled_status='static',
                ),
                'systemd-ask-password-wall': UnitEntry(
                    name='systemd-ask-password-wall',
                    unit_type='path',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='waiting',
                    description='Forward Password Requests to Wall Directory Watch',
                    enabled_status='static',
                )
            },
            'service': {
                'NetworkManager': UnitEntry(
                    name='NetworkManager',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='Network Manager',
                    enabled_status='enabled',
                ),
                'NetworkManager-wait-online': UnitEntry(
                    name='NetworkManager-wait-online',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='exited',
                    description='Network Manager Wait Online',
                    enabled_status='enabled',
                ),
                'abrtd': UnitEntry(
                    name='abrtd',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='ABRT Automated Bug Reporting Tool',
                    enabled_status='enabled',
                ),
                'atd': UnitEntry(
                    name='atd',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='Job spooling tools',
                    enabled_status='enabled',
                ),
                'atop': UnitEntry(
                    name='atop',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='Atop advanced performance monitor',
                    enabled_status='enabled',
                ),
                'blk-availability': UnitEntry(
                    name='blk-availability',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='exited',
                    description='Availability of block devices',
                    enabled_status='disabled',
                ),
                'brandbot': UnitEntry(
                    name='brandbot',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Flexible Branding Service',
                    enabled_status='static',
                ),
                'check-mk-agent@40273-10.223.16.185:6556-10.20.114.58:57796': UnitEntry(
                    name='check-mk-agent@40273-10.223.16.185:6556-10.20.114.58:57796',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='activating',
                    current_state='start',
                    description='start CheckMK (10.20.114.58:57796)',
                    enabled_status='static',
                ),
                'corosync': UnitEntry(
                    name='corosync',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='Corosync Cluster Engine',
                    enabled_status='disabled',
                ),
                'corosync-qdevice': UnitEntry(
                    name='corosync-qdevice',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='Corosync Qdevice daemon',
                    enabled_status='disabled',
                ),
                'cpupower': UnitEntry(
                    name='cpupower',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Configure CPU power related settings',
                    enabled_status='disabled',
                ),
                'crond': UnitEntry(
                    name='crond',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='Command Scheduler',
                    enabled_status='enabled',
                ),
                'dbus': UnitEntry(
                    name='dbus',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='D-Bus System Message Bus',
                    enabled_status='static',
                ),
                'display-manager': UnitEntry(
                    name='display-manager',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='display-manager.service',
                    enabled_status='unknown',
                ),
                'dm-event': UnitEntry(
                    name='dm-event',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Device-mapper event daemon',
                    enabled_status='static',
                ),
                'dmraid-activation': UnitEntry(
                    name='dmraid-activation',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Activation of DM RAID sets',
                    enabled_status='enabled',
                ),
                'dracut-shutdown': UnitEntry(
                    name='dracut-shutdown',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Restore /run/initramfs',
                    enabled_status='static',
                ),
                'dsmcad_SCHED_PHT_BACKUP_DC2': UnitEntry(
                    name='dsmcad_SCHED_PHT_BACKUP_DC2',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='"IBM Spectrum Protect Client dsmcad systemd-style service."',
                    enabled_status='enabled',
                ),
                'emergency': UnitEntry(
                    name='emergency',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Emergency Shell',
                    enabled_status='static',
                ),
                'fcoe': UnitEntry(
                    name='fcoe',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Open-FCoE Inititator.',
                    enabled_status='disabled',
                ),
                'iscsi': UnitEntry(
                    name='iscsi',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Login and scanning of iSCSI devices',
                    enabled_status='enabled',
                ),
                'iscsid': UnitEntry(
                    name='iscsid',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Open-iSCSI',
                    enabled_status='disabled',
                ),
                'iscsiuio': UnitEntry(
                    name='iscsiuio',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='iSCSI UserSpace I/O driver',
                    enabled_status='disabled',
                ),
                'kdump': UnitEntry(
                    name='kdump',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='exited',
                    description='Crash recovery kernel arming',
                    enabled_status='enabled',
                ),
                'kmod-static-nodes': UnitEntry(
                    name='kmod-static-nodes',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='exited',
                    description='Create list of required static device nodes for the current kernel',
                    enabled_status='static',
                ),
                'libstoragemgmt': UnitEntry(
                    name='libstoragemgmt',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='libstoragemgmt plug-in server daemon',
                    enabled_status='enabled',
                ),
                'livesys': UnitEntry(
                    name='livesys',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='livesys.service',
                    enabled_status='unknown',
                ),
                'lldpad': UnitEntry(
                    name='lldpad',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Link Layer Discovery Protocol Agent Daemon.',
                    enabled_status='disabled',
                ),
                'lm_sensors': UnitEntry(
                    name='lm_sensors',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='failed',
                    current_state='failed',
                    description='Initialize hardware monitoring sensors',
                    enabled_status='enabled',
                ),
                'lvm2-activation': UnitEntry(
                    name='lvm2-activation',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='lvm2-activation.service',
                    enabled_status='unknown',
                ),
                'lvm2-activation-early': UnitEntry(
                    name='lvm2-activation-early',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='lvm2-activation-early.service',
                    enabled_status='unknown',
                ),
                'lvm2-lvmetad': UnitEntry(
                    name='lvm2-lvmetad',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='LVM2 metadata daemon',
                    enabled_status='static',
                ),
                'lvm2-lvmpolld': UnitEntry(
                    name='lvm2-lvmpolld',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='LVM2 poll daemon',
                    enabled_status='static',
                ),
                'lvm2-monitor': UnitEntry(
                    name='lvm2-monitor',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='exited',
                    description=
                    'Monitoring of LVM2 mirrors, snapshots etc. using dmeventd or progress polling',
                    enabled_status='enabled',
                ),
                'network': UnitEntry(
                    name='network',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='exited',
                    description='LSB: Bring up/down networking',
                    enabled_status='unknown',
                ),
                'nfs-config': UnitEntry(
                    name='nfs-config',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Preprocess NFS configuration',
                    enabled_status='static',
                ),
                'nfs-idmapd': UnitEntry(
                    name='nfs-idmapd',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='NFSv4 ID-name mapping service',
                    enabled_status='static',
                ),
                'nfs-mountd': UnitEntry(
                    name='nfs-mountd',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='NFS Mount Daemon',
                    enabled_status='static',
                ),
                'nfs-secure-server': UnitEntry(
                    name='nfs-secure-server',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='nfs-secure-server.service',
                    enabled_status='unknown',
                ),
                'nfs-server': UnitEntry(
                    name='nfs-server',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='NFS server and services',
                    enabled_status='disabled',
                ),
                'nfs-utils': UnitEntry(
                    name='nfs-utils',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='NFS server and client services',
                    enabled_status='static',
                ),
                'ntpd': UnitEntry(
                    name='ntpd',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='Network Time Service',
                    enabled_status='enabled',
                ),
                'ntpdate': UnitEntry(
                    name='ntpdate',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Set time via NTP',
                    enabled_status='disabled',
                ),
                'puppet': UnitEntry(
                    name='puppet',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='Puppet agent',
                    enabled_status='enabled',
                ),
                'puppetmaster': UnitEntry(
                    name='puppetmaster',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='puppetmaster.service',
                    enabled_status='unknown',
                ),
                'rbdmap': UnitEntry(
                    name='rbdmap',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='rbdmap.service',
                    enabled_status='unknown',
                ),
                'rc-local': UnitEntry(
                    name='rc-local',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='/etc/rc.d/rc.local Compatibility',
                    enabled_status='static',
                ),
                'rescue': UnitEntry(
                    name='rescue',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='inactive',
                    current_state='dead',
                    description='Rescue Shell',
                    enabled_status='static',
                ),
                'ypbind': UnitEntry(
                    name='ypbind',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='ypbind.service',
                    enabled_status='unknown',
                ),
                'yppasswdd': UnitEntry(
                    name='yppasswdd',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='yppasswdd.service',
                    enabled_status='unknown',
                ),
                'ypserv': UnitEntry(
                    name='ypserv',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='ypserv.service',
                    enabled_status='unknown',
                ),
                'ypxfrd': UnitEntry(
                    name='ypxfrd',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='ypxfrd.service',
                    enabled_status='unknown',
                ),
            },
            'slice': {
                '-': UnitEntry(
                    name='-',
                    unit_type='slice',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='active',
                    description='Root Slice',
                    enabled_status='static',
                )
            },
            'target': {
                'slices': UnitEntry(
                    name='slices',
                    unit_type='target',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='active',
                    description='Slices',
                    enabled_status='static',
                ),
                'sockets': UnitEntry(
                    name='sockets',
                    unit_type='target',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='active',
                    description='Sockets',
                    enabled_status='static',
                ),
                'swap': UnitEntry(
                    name='swap',
                    unit_type='target',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='active',
                    description='Swap',
                    enabled_status='static',
                ),
                'sysinit': UnitEntry(
                    name='sysinit',
                    unit_type='target',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='active',
                    description='System Initialization',
                    enabled_status='static',
                ),
                'syslog': UnitEntry(
                    name='syslog',
                    unit_type='target',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='syslog.target',
                    enabled_status='unknown',
                ),
            },
        },
        id="* for broken units",
    ),
    pytest.param(
        [
            ['[list-unit-files]'],
            ['UNIT', 'FILE', 'STATE', 'VENDOR', 'PRESET'],
            ['proc-sys-fs-binfmt_misc.automount', 'static', 'enabled'],
            ['-.mount', 'generated', 'enabled'],
            ['boot-efi.mount', 'generated', 'enabled'],
            ['clean-mount-point@.service', 'static', 'enabled'],
            ['ippusbxd@.service', 'static', 'enabled'],
            ['irqbalance.service', 'enabled', 'enabled'],
            ['kerneloops.service', 'enabled', 'enabled'],
            ['snapd.service', 'enabled', 'enabled'],
            ['snapd.snap-repair.service', 'static', 'enabled'],
            ['snapd.system-shutdown.service', 'enabled', 'enabled'],
            ['speech-dispatcher.service', 'disabled', 'enabled'],
            ['408', 'unit', 'files', 'listed.'],
            ['[all]'],
            ['UNIT', 'LOAD', 'ACTIVE', 'SUB', 'JOB', 'DESCRIPTION'],
            [
                'proc-sys-fs-binfmt_misc.automount', 'loaded', 'active', 'running', 'Arbitrary',
                'Executable', 'File', 'Formats', 'File', 'System', 'Automount', 'Point'
            ],
            ['●', 'iscsi.service', 'not-found', 'inactive', 'dead', 'iscsi.service'],
            ['●', 'iscsid.service', 'not-found', 'inactive', 'dead', 'iscsid.service'],
            ['●', 'kbd.service', 'not-found', 'inactive', 'dead', 'kbd.service'],
            [
                'kerneloops.service', 'loaded', 'active', 'running', 'Tool', 'to', 'automatically',
                'collect', 'and', 'submit', 'kernel', 'crash', 'signatures'
            ],
        ],
        {
            'automount': {
                'proc-sys-fs-binfmt_misc': UnitEntry(
                    name='proc-sys-fs-binfmt_misc',
                    unit_type='automount',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='Arbitrary Executable File Formats File System Automount Point',
                    enabled_status='static',
                ),
            },
            'service': {
                'iscsi': UnitEntry(
                    name='iscsi',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='iscsi.service',
                    enabled_status='unknown',
                ),
                'iscsid': UnitEntry(
                    name='iscsid',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='iscsid.service',
                    enabled_status='unknown',
                ),
                'kbd': UnitEntry(
                    name='kbd',
                    unit_type='service',
                    loaded_status='not-found',
                    active_status='inactive',
                    current_state='dead',
                    description='kbd.service',
                    enabled_status='unknown',
                ),
                'kerneloops': UnitEntry(
                    name='kerneloops',
                    unit_type='service',
                    loaded_status='loaded',
                    active_status='active',
                    current_state='running',
                    description='Tool to automatically collect and submit kernel crash signatures',
                    enabled_status='enabled',
                ),
            },
        },
        id="C.UTF-8 locale (● instead of * for broken units)",
    ),
])
def test_parse_systemd_units(
    string_table: Iterable[List[str]],
    section: Mapping[str, UnitEntry],
) -> None:
    check = Check('systemd_units')
    assert check.run_parse(string_table) == section


SECTION = {
    'service': {
        'virtualbox': UnitEntry(name='virtualbox',
                                unit_type='service',
                                loaded_status='loaded',
                                active_status='active',
                                current_state='exited',
                                description='LSB: VirtualBox Linux kernel module',
                                enabled_status='unknown'),
        'bar': UnitEntry(name='bar',
                         unit_type='service',
                         loaded_status='loaded',
                         active_status='failed',
                         current_state='failed',
                         description='a bar service',
                         enabled_status='unknown'),
        'foo': UnitEntry(
            name='foo',
            unit_type='service',
            loaded_status='loaded',
            active_status='failed',
            current_state='failed',
            description='Arbitrary Executable File Formats File System Automount Point',
            enabled_status='unknown'),
        'check-mk-agent@738-127.0.0.1:6556-127.0.0.1:51542': UnitEntry(
            name='check-mk-agent@738-127.0.0.1:6556-127.0.0.1:51542',
            unit_type='service',
            loaded_status='loaded',
            active_status='active',
            current_state='running',
            description='Checkmk agent (127.0.0.1:51542)',
            enabled_status='static'),
        'check-mk-enterprise-2021.09.07': UnitEntry(name='check-mk-enterprise-2021.09.07',
                                                    unit_type='service',
                                                    loaded_status='loaded',
                                                    active_status='active',
                                                    current_state='exited',
                                                    description='LSB: OMD sites',
                                                    enabled_status='generated'),
    },
    'device': {
        'dev-disk-by\\x2did-ata\\x2dAPPLE_SSD_SM0256G_S29CNYDG865465': UnitEntry(
            name='dev-disk-by\\x2did-ata\\x2dAPPLE_SSD_SM0256G_S29CNYDG865465',
            unit_type='device',
            loaded_status='loaded',
            active_status='active',
            current_state='plugged',
            description='APPLE_SSD_SM0256G',
            enabled_status='unknown')
    },
    'path': {
        'cups': UnitEntry(name='cups',
                          unit_type='path',
                          loaded_status='loaded',
                          active_status='active',
                          current_state='running',
                          description='CUPS Scheduler',
                          enabled_status='unknown')
    },
    'scope': {
        'init': UnitEntry(name='init',
                          unit_type='scope',
                          loaded_status='loaded',
                          active_status='active',
                          current_state='running',
                          description='System and Service Manager',
                          enabled_status='unknown')
    },
    'slice': {
        'system-getty': UnitEntry(name='system-getty',
                                  unit_type='slice',
                                  loaded_status='loaded',
                                  active_status='active',
                                  current_state='active',
                                  description='system-getty.slice',
                                  enabled_status='unknown')
    },
    'socket': {
        'systemd-journald': UnitEntry(name='systemd-journald',
                                      unit_type='socket',
                                      loaded_status='loaded',
                                      active_status='active',
                                      current_state='running',
                                      description='Journal Socket',
                                      enabled_status='unknown')
    },
    'swap': {
        'swapfile': UnitEntry(name='swapfile',
                              unit_type='swap',
                              loaded_status='loaded',
                              active_status='failed',
                              current_state='failed',
                              description='/swapfile',
                              enabled_status='unknown')
    },
    'timer': {
        'apt-daily-upgrade': UnitEntry(name='apt-daily-upgrade',
                                       unit_type='timer',
                                       loaded_status='loaded',
                                       active_status='active',
                                       current_state='waiting',
                                       description='Daily apt upgrade and clean activities',
                                       enabled_status='unknown')
    },
    'automount': {
        'proc-sys-fs-.service.binfmt_misc': UnitEntry(
            name='proc-sys-fs-.service.binfmt_misc',
            unit_type='automount',
            loaded_status='loaded',
            active_status='active',
            current_state='running',
            description='Arbitrary Executable File Formats File System Automount Point',
            enabled_status='unknown')
    },
}


@pytest.mark.parametrize('section, discovery_params, discovered_services', [
    (
        SECTION,
        [
            {
                "names": ["~virtualbox.*"]
            },
        ],
        [('virtualbox', {})],
    ),
    (
        SECTION,
        [],
        [],
    ),
    (
        {},
        [
            {
                "names": ["~virtualbox.*"]
            },
        ],
        [],
    ),
    (
        SECTION,
        [
            {
                "names": ["~aardvark.*"]
            },
        ],
        [],
    ),
    (
        SECTION,
        [
            {
                "names": ["~.*"]
            },
        ],
        [
            ('virtualbox', {}),
            ('bar', {}),
            ('foo', {}),
            ('check-mk-enterprise-2021.09.07', {}),
        ],
    ),
])
def test_discover_systemd_units_services(section, discovery_params, discovered_services):
    check = Check('systemd_units.services')

    def mocked_host_conf(_hostname, ruleset):
        if ruleset is check.context.get('discovery_systemd_units_services_rules'):
            return discovery_params
        raise AssertionError('Unknown ruleset in mock host_extra_conf')

    with MockHostExtraConf(check, mocked_host_conf, 'host_extra_conf'):
        assert list(check.run_discovery(section)) == discovered_services


@pytest.mark.parametrize('section, discovered_services', [
    (
        SECTION,
        [('Summary', {})],
    ),
    (
        {},
        [],
    ),
])
def test_discover_systemd_units_services_summary(section, discovered_services):
    check = Check('systemd_units.services_summary')
    assert list(check.run_discovery(section)) == discovered_services


@pytest.mark.parametrize('item, params, section, check_results', [
    (
        'virtualbox',
        {
            'else': 2,
            'states': {
                'active': 0,
                'failed': 2,
                'inactive': 0
            },
            'states_default': 2,
        },
        SECTION,
        [
            (0, 'Status: active'),
            (0, 'LSB: VirtualBox Linux kernel module'),
        ],
    ),
    (
        'foo',
        {
            'else': 2,
            'states': {
                'active': 0,
                'failed': 2,
                'inactive': 0
            },
            'states_default': 2,
        },
        SECTION,
        [
            (2, 'Status: failed'),
            (0, 'Arbitrary Executable File Formats File System Automount Point'),
        ],
    ),
    (
        'something',
        {
            'else': 2,
            'states': {
                'active': 0,
                'failed': 2,
                'inactive': 0
            },
            'states_default': 2,
        },
        SECTION,
        [(2, 'Service not found')],
    ),
    (
        'something',
        {
            'else': 2,
            'states': {
                'active': 0,
                'failed': 2,
                'inactive': 0
            },
            'states_default': 2,
        },
        {},
        [(2, 'Service not found')],
    ),
])
def test_check_systemd_units_services(item, params, section, check_results):
    check = Check('systemd_units.services')
    assert list(check.run_check(item, params, section)) == check_results


@pytest.mark.parametrize(
    'params, section, check_results',
    [

        # "Normal" test case
        (
            {
                'else': 2,
                'states': {
                    'active': 0,
                    'failed': 2,
                    'inactive': 0
                },
                'states_default': 2,
            },
            SECTION,
            [
                (0, 'Total: 5'),
                (0, 'Disabled: 0'),
                (0, 'Failed: 2'),
                (2, '2 services failed (bar, foo)'),
            ],
        ),
        # Ignored (see 'blacklist')
        (
            {
                'ignored': 'virtual',
            },
            {
                'service': {
                    'virtualbox': UnitEntry(name='virtualbox',
                                            unit_type='service',
                                            loaded_status='loaded',
                                            active_status='active',
                                            current_state='exited',
                                            description='LSB: VirtualBox Linux kernel module',
                                            enabled_status='unknown'),
                },
            },
            [
                (0, 'Total: 1'),
                (0, 'Disabled: 0'),
                (0, 'Failed: 0'),
                (0, '\nIgnored: 1'),
            ],
        ),
        # Activating
        (
            {},
            {
                'service': {
                    'virtualbox': UnitEntry(name='virtualbox',
                                            unit_type='service',
                                            loaded_status='loaded',
                                            active_status='activating',
                                            current_state='exited',
                                            description='LSB: VirtualBox Linux kernel module',
                                            enabled_status='unknown'),
                },
            },
            [
                (0, 'Total: 1'),
                (0, 'Disabled: 0'),
                (0, 'Failed: 0'),
                (0, "Service 'virtualbox' activating for: 0.00 s", []),
            ],
        ),
        # Activating + reloading
        (
            {},
            {
                'service': {
                    'virtualbox': UnitEntry(name='virtualbox',
                                            unit_type='service',
                                            loaded_status='loaded',
                                            active_status='activating',
                                            current_state='exited',
                                            description='LSB: VirtualBox Linux kernel module',
                                            enabled_status='reloading'),
                },
            },
            [
                (0, 'Total: 1'),
                (0, 'Disabled: 0'),
                (0, 'Failed: 0'),
                (0, "Service 'virtualbox' activating for: 0.00 s", []),
            ],
        ),
        # Reloading
        (
            {},
            {
                'service': {
                    'virtualbox': UnitEntry(name='virtualbox',
                                            unit_type='service',
                                            loaded_status='loaded',
                                            active_status='active',
                                            current_state='exited',
                                            description='LSB: VirtualBox Linux kernel module',
                                            enabled_status='reloading'),
                },
            },
            [
                (0, 'Total: 1'),
                (0, 'Disabled: 0'),
                (0, 'Failed: 0'),
                (0, "Service 'virtualbox' reloading for: 0.00 s", []),
            ],
        ),
        # Indirect
        (
            {},
            {
                'service': {
                    'virtualbox': UnitEntry(name='virtualbox',
                                            unit_type='service',
                                            loaded_status='loaded',
                                            active_status='active',
                                            current_state='exited',
                                            description='LSB: VirtualBox Linux kernel module',
                                            enabled_status='indirect'),
                },
            },
            [
                (0, 'Total: 1'),
                (0, 'Disabled: 1'),
                (0, 'Failed: 0'),
            ],
        ),
        # Custom systemd state
        (
            {
                'else': 2,
                'states': {
                    'active': 0,
                    'failed': 2,
                    'inactive': 0
                },
                'states_default': 2,
            },
            {
                'service': {
                    'virtualbox': UnitEntry(name='virtualbox',
                                            unit_type='service',
                                            loaded_status='loaded',
                                            active_status='somesystemdstate',
                                            current_state='exited',
                                            description='LSB: VirtualBox Linux kernel module',
                                            enabled_status='unknown'),
                },
            },
            [
                (0, 'Total: 1'),
                (0, 'Disabled: 0'),
                (0, 'Failed: 0'),
                (2, '1 service somesystemdstate (virtualbox)'),
            ],
        ),
    ])
def test_check_systemd_units_services_summary(params, section, check_results):
    check = Check('systemd_units.services_summary')
    assert list(check.run_check('', params, section)) == check_results
