#!/usr/bin/env python3
# Copyright (C) 2025 Checkmk GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from collections.abc import Mapping, Sequence
from typing import Any

import pytest

from cmk.agent_based.v1.type_defs import StringTable
from cmk.base.legacy_checks.aws_wafv2_summary import (
    check_aws_wafv2_summary,
    discover_aws_wafv2_summary,
)
from cmk.plugins.aws.lib import parse_aws


@pytest.mark.parametrize(
    "info, expected_discoveries",
    [
        (
            [
                [
                    '[{"Name":',
                    '"joerg-herbel-acl-global",',
                    '"Id":',
                    '"3bdfbac2-026a-4afa-98b8-32dbf8dbdf1c",',
                    '"DefaultAction":',
                    '{"Allow":',
                    "{}},",
                    '"Description":',
                    '"",',
                    '"Rules":',
                    '[{"Name":',
                    '"rule-group-1",',
                    '"Priority":',
                    "0,",
                    '"Statement":',
                    '{"RuleGroupReferenceStatement":',
                    "{}},",
                    '"OverrideAction":',
                    '{"None":',
                    "{}},",
                    '"VisibilityConfig":',
                    '{"SampledRequestsEnabled":',
                    "true,",
                    '"CloudWatchMetricsEnabled":',
                    "true,",
                    '"MetricName":',
                    '"rule-group-1"}}],',
                    '"VisibilityConfig":',
                    '{"SampledRequestsEnabled":',
                    "true,",
                    '"CloudWatchMetricsEnabled":',
                    "true,",
                    '"MetricName":',
                    '"joerg-herbel-acl-global"},',
                    '"Capacity":',
                    "1,",
                    '"Region":',
                    '"CloudFront"}]',
                ],
                [
                    '[{"Name":',
                    '"joerg-herbel-acl",',
                    '"Id":',
                    '"36a44c6c-0ff1-4dbc-9cc5-6195f180e749",',
                    '"DefaultAction":',
                    '{"Allow":',
                    "{}},",
                    '"Description":',
                    '"",',
                    '"Rules":',
                    '[{"Name":',
                    '"rule-group",',
                    '"Priority":',
                    "0,",
                    '"Statement":',
                    '{"RuleGroupReferenceStatement":',
                    "{}},",
                    '"OverrideAction":',
                    '{"None":',
                    "{}},",
                    '"VisibilityConfig":',
                    '{"SampledRequestsEnabled":',
                    "true,",
                    '"CloudWatchMetricsEnabled":',
                    "true,",
                    '"MetricName":',
                    '"rule-group"}}],',
                    '"VisibilityConfig":',
                    '{"SampledRequestsEnabled":',
                    "true,",
                    '"CloudWatchMetricsEnabled":',
                    "true,",
                    '"MetricName":',
                    '"joerg-herbel-acl"},',
                    '"Capacity":',
                    "2,",
                    '"Region":',
                    '"eu-central-1"}]',
                ],
                [
                    '[{"Name":',
                    '"us-acl",',
                    '"Id":',
                    '"5d404b61-5552-4f1a-bea7-8c405a5deb66",',
                    '"DefaultAction":',
                    '{"Allow":',
                    "{}},",
                    '"Description":',
                    '"America",',
                    '"Rules":',
                    "[],",
                    '"VisibilityConfig":',
                    '{"SampledRequestsEnabled":',
                    "true,",
                    '"CloudWatchMetricsEnabled":',
                    "true,",
                    '"MetricName":',
                    '"us-acl"},',
                    '"Capacity":',
                    "0,",
                    '"Region":',
                    '"us-east-1"}]',
                ],
            ],
            [(None, {})],
        ),
    ],
)
def test_discover_aws_wafv2_summary(
    info: StringTable, expected_discoveries: Sequence[tuple[str | None, Mapping[str, Any]]]
) -> None:
    """Test discovery function for aws_wafv2_summary check."""

    result = list(discover_aws_wafv2_summary(info))
    assert sorted(result) == sorted(expected_discoveries)


@pytest.mark.parametrize(
    "item, params, info, expected_results",
    [
        (
            None,
            {},
            [
                [
                    '[{"Name":',
                    '"joerg-herbel-acl-global",',
                    '"Id":',
                    '"3bdfbac2-026a-4afa-98b8-32dbf8dbdf1c",',
                    '"DefaultAction":',
                    '{"Allow":',
                    "{}},",
                    '"Description":',
                    '"",',
                    '"Rules":',
                    '[{"Name":',
                    '"rule-group-1",',
                    '"Priority":',
                    "0,",
                    '"Statement":',
                    '{"RuleGroupReferenceStatement":',
                    "{}},",
                    '"OverrideAction":',
                    '{"None":',
                    "{}},",
                    '"VisibilityConfig":',
                    '{"SampledRequestsEnabled":',
                    "true,",
                    '"CloudWatchMetricsEnabled":',
                    "true,",
                    '"MetricName":',
                    '"rule-group-1"}}],',
                    '"VisibilityConfig":',
                    '{"SampledRequestsEnabled":',
                    "true,",
                    '"CloudWatchMetricsEnabled":',
                    "true,",
                    '"MetricName":',
                    '"joerg-herbel-acl-global"},',
                    '"Capacity":',
                    "1,",
                    '"Region":',
                    '"CloudFront"}]',
                ],
                [
                    '[{"Name":',
                    '"joerg-herbel-acl",',
                    '"Id":',
                    '"36a44c6c-0ff1-4dbc-9cc5-6195f180e749",',
                    '"DefaultAction":',
                    '{"Allow":',
                    "{}},",
                    '"Description":',
                    '"",',
                    '"Rules":',
                    '[{"Name":',
                    '"rule-group",',
                    '"Priority":',
                    "0,",
                    '"Statement":',
                    '{"RuleGroupReferenceStatement":',
                    "{}},",
                    '"OverrideAction":',
                    '{"None":',
                    "{}},",
                    '"VisibilityConfig":',
                    '{"SampledRequestsEnabled":',
                    "true,",
                    '"CloudWatchMetricsEnabled":',
                    "true,",
                    '"MetricName":',
                    '"rule-group"}}],',
                    '"VisibilityConfig":',
                    '{"SampledRequestsEnabled":',
                    "true,",
                    '"CloudWatchMetricsEnabled":',
                    "true,",
                    '"MetricName":',
                    '"joerg-herbel-acl"},',
                    '"Capacity":',
                    "2,",
                    '"Region":',
                    '"eu-central-1"}]',
                ],
                [
                    '[{"Name":',
                    '"us-acl",',
                    '"Id":',
                    '"5d404b61-5552-4f1a-bea7-8c405a5deb66",',
                    '"DefaultAction":',
                    '{"Allow":',
                    "{}},",
                    '"Description":',
                    '"America",',
                    '"Rules":',
                    "[],",
                    '"VisibilityConfig":',
                    '{"SampledRequestsEnabled":',
                    "true,",
                    '"CloudWatchMetricsEnabled":',
                    "true,",
                    '"MetricName":',
                    '"us-acl"},',
                    '"Capacity":',
                    "0,",
                    '"Region":',
                    '"us-east-1"}]',
                ],
            ],
            [
                (0, "Total number of Web ACLs: 3"),
                (0, "CloudFront: 1"),
                (0, "Europe (Frankfurt): 1"),
                (0, "US East (N. Virginia): 1"),
                (
                    0,
                    "\nCloudFront:\njoerg-herbel-acl-global -- Description: [no description], Number of rules and rule groups: 1\nEurope (Frankfurt):\njoerg-herbel-acl -- Description: [no description], Number of rules and rule groups: 1\nUS East (N. Virginia):\nus-acl -- Description: America, Number of rules and rule groups: 0",
                ),
            ],
        ),
    ],
)
def test_check_aws_wafv2_summary(
    item: str, params: Mapping[str, Any], info: StringTable, expected_results: Sequence[Any]
) -> None:
    """Test check function for aws_wafv2_summary check."""
    parsed = parse_aws(info)
    result = list(check_aws_wafv2_summary(item, params, parsed))
    assert result == expected_results
