#!/usr/bin/env python3
# Copyright (C) 2025 Checkmk GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# mypy: disable-error-code="misc"
# mypy: disable-error-code="no-untyped-call"

from typing import Any

import pytest

from cmk.agent_based.v1.type_defs import StringTable
from cmk.base.legacy_checks.wmi_webservices import check_wmi_webservices, discover_wmi_webservices
from cmk.plugins.windows.agent_based.libwmi import parse_wmi_table

# Test data from the dataset - abbreviated version showing the key structure
_INFO = [
    [
        "AnonymousUsersPersec",
        "BytesReceivedPersec",
        "BytesSentPersec",
        "BytesTotalPersec",
        "Caption",
        "CGIRequestsPersec",
        "ConnectionAttemptsPersec",
        "CopyRequestsPersec",
        "CurrentAnonymousUsers",
        "CurrentBlockedAsyncIORequests",
        "Currentblockedbandwidthbytes",
        "CurrentCALcountforauthenticatedusers",
        "CurrentCALcountforSSLconnections",
        "CurrentCGIRequests",
        "CurrentConnections",
        "CurrentISAPIExtensionRequests",
        "CurrentNonAnonymousUsers",
        "DeleteRequestsPersec",
        "Description",
        "FilesPersec",
        "FilesReceivedPersec",
        "FilesSentPersec",
        "Frequency_Object",
        "Frequency_PerfTime",
        "Frequency_Sys100NS",
        "GetRequestsPersec",
        "HeadRequestsPersec",
        "ISAPIExtensionRequestsPersec",
        "LockedErrorsPersec",
        "LockRequestsPersec",
        "LogonAttemptsPersec",
        "MaximumAnonymousUsers",
        "MaximumCALcountforauthenticatedusers",
        "MaximumCALcountforSSLconnections",
        "MaximumCGIRequests",
        "MaximumConnections",
        "MaximumISAPIExtensionRequests",
        "MaximumNonAnonymousUsers",
        "MeasuredAsyncIOBandwidthUsage",
        "MkcolRequestsPersec",
        "MoveRequestsPersec",
        "Name",
        "NonAnonymousUsersPersec",
        "NotFoundErrorsPersec",
        "OptionsRequestsPersec",
        "OtherRequestMethodsPersec",
        "PostRequestsPersec",
        "PropfindRequestsPersec",
        "ProppatchRequestsPersec",
        "PutRequestsPersec",
        "SearchRequestsPersec",
        "ServiceUptime",
        "Timestamp_Object",
        "Timestamp_PerfTime",
        "Timestamp_Sys100NS",
        "TotalAllowedAsyncIORequests",
        "TotalAnonymousUsers",
        "TotalBlockedAsyncIORequests",
        "Totalblockedbandwidthbytes",
        "TotalBytesReceived",
        "TotalBytesSent",
        "TotalBytesTransferred",
        "TotalCGIRequests",
        "TotalConnectionAttemptsallinstances",
        "TotalCopyRequests",
        "TotalcountoffailedCALrequestsforauthenticatedusers",
        "TotalcountoffailedCALrequestsforSSLconnections",
        "TotalDeleteRequests",
        "TotalFilesReceived",
        "TotalFilesSent",
        "TotalFilesTransferred",
        "TotalGetRequests",
        "TotalHeadRequests",
        "TotalISAPIExtensionRequests",
        "TotalLockedErrors",
        "TotalLockRequests",
        "TotalLogonAttempts",
        "TotalMethodRequests",
        "TotalMethodRequestsPersec",
        "TotalMkcolRequests",
        "TotalMoveRequests",
        "TotalNonAnonymousUsers",
        "TotalNotFoundErrors",
        "TotalOptionsRequests",
        "TotalOtherRequestMethods",
        "TotalPostRequests",
        "TotalPropfindRequests",
        "TotalProppatchRequests",
        "TotalPutRequests",
        "TotalRejectedAsyncIORequests",
        "TotalSearchRequests",
        "TotalTraceRequests",
        "TotalUnlockRequests",
        "TraceRequestsPersec",
        "UnlockRequestsPersec",
    ],
    # Data for "Default Web Site" (CurrentConnections = 0, position 14 in header)
    [
        "44682",
        "388339380",
        "3109860488",
        "3498199868",
        "",
        "0",
        "141001",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",  # CurrentConnections = 0
        "0",
        "0",
        "0",
        "",
        "3",
        "0",
        "3",
        "0",
        "1953125",
        "10000000",
        "137000",
        "0",
        "0",
        "0",
        "0",
        "226055",
        "5",
        "0",
        "0",
        "0",
        "17",
        "0",
        "14",
        "0",
        "0",
        "0",
        "Default Web Site",
        "133797",
        "8",
        "0",
        "28836",
        "60246",
        "0",
        "0",
        "0",
        "0",
        "2778588",
        "0",
        "6743176430643",
        "130951777566120000",
        "0",
        "44682",
        "0",
        "0",
        "388339380",
        "3109860488",
        "3498199868",
        "0",
        "141001",
        "0",
        "0",
        "0",
        "0",
        "0",
        "3",
        "3",
        "137000",
        "0",
        "0",
        "0",
        "0",
        "226055",
        "226086",
        "226086",
        "0",
        "0",
        "133797",
        "8",
        "0",
        "28836",
        "60246",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
    ],
    # Data for "Exchange Back End" (CurrentConnections = 11, position 14 in header)
    [
        "101709",
        "1646161369",
        "3274082244",
        "4920243613",
        "",
        "0",
        "680013",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "11",  # CurrentConnections = 11
        "8",
        "8",
        "0",
        "",
        "30",
        "0",
        "30",
        "0",
        "1953125",
        "10000000",
        "138760",
        "0",
        "231138",
        "0",
        "0",
        "1079722",
        "2",
        "0",
        "0",
        "0",
        "22",
        "16",
        "21",
        "0",
        "0",
        "0",
        "Exchange Back End",
        "443367",
        "0",
        "0",
        "462279",
        "718925",
        "0",
        "0",
        "0",
        "0",
        "2778588",
        "0",
        "6743176430643",
        "130951777566120000",
        "0",
        "101709",
        "0",
        "0",
        "1646161369",
        "3274082244",
        "4920243613",
        "0",
        "680013",
        "0",
        "0",
        "0",
        "0",
        "0",
        "30",
        "30",
        "138760",
        "0",
        "231138",
        "0",
        "0",
        "1079722",
        "1319970",
        "1319970",
        "0",
        "0",
        "443367",
        "0",
        "0",
        "462279",
        "718925",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
        "0",
    ],
]


@pytest.mark.parametrize(
    "info, expected_discoveries",
    [
        # Test discovery with the full dataset
        (_INFO, [("Default Web Site", {}), ("Exchange Back End", {})]),
        # Test discovery with single website
        (
            [
                _INFO[0],  # Header
                _INFO[1],  # Default Web Site data only
            ],
            [("Default Web Site", {})],
        ),
        # Test discovery with no data (empty)
        (
            [_INFO[0]],  # Header only
            [],
        ),
    ],
)
def test_discover_wmi_webservices(
    info: StringTable, expected_discoveries: list[tuple[str, dict[str, Any]]]
) -> None:
    """Test discovery function for wmi_webservices check."""
    parsed = parse_wmi_table(info)
    result = list(discover_wmi_webservices(parsed))
    assert sorted(result) == sorted(expected_discoveries)


@pytest.mark.parametrize(
    "item, params, info, expected_results",
    [
        # Test Default Web Site with 0 connections
        ("Default Web Site", {}, _INFO, [(0, "Connections: 0", [("connections", 0, None, None)])]),
        # Test Exchange Back End with 11 connections
        (
            "Exchange Back End",
            {},
            _INFO,
            [(0, "Connections: 11", [("connections", 11, None, None)])],
        ),
        # Test non-existent item
        ("Non-existent Site", {}, _INFO, []),
        # Test with different connection counts
        (
            "Default Web Site",
            {},
            [
                _INFO[0],  # Header
                [
                    "44682",
                    "388339380",
                    "3109860488",
                    "3498199868",
                    "",
                    "0",
                    "141001",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "25",  # CurrentConnections = 25
                    "0",
                    "0",
                    "0",
                    "",
                    "3",
                    "0",
                    "3",
                    "0",
                    "1953125",
                    "10000000",
                    "137000",
                    "0",
                    "0",
                    "0",
                    "0",
                    "226055",
                    "5",
                    "0",
                    "0",
                    "0",
                    "17",
                    "0",
                    "14",
                    "0",
                    "0",
                    "0",
                    "Default Web Site",
                    "133797",
                    "8",
                    "0",
                    "28836",
                    "60246",
                    "0",
                    "0",
                    "0",
                    "0",
                    "2778588",
                    "0",
                    "6743176430643",
                    "130951777566120000",
                    "0",
                    "44682",
                    "0",
                    "0",
                    "388339380",
                    "3109860488",
                    "3498199868",
                    "0",
                    "141001",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "3",
                    "3",
                    "137000",
                    "0",
                    "0",
                    "0",
                    "0",
                    "226055",
                    "226086",
                    "226086",
                    "0",
                    "0",
                    "133797",
                    "8",
                    "0",
                    "28836",
                    "60246",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                    "0",
                ],
            ],
            [(0, "Connections: 25", [("connections", 25, None, None)])],
        ),
    ],
)
def test_check_wmi_webservices(
    item: str,
    params: dict[str, Any],
    info: StringTable,
    expected_results: list[tuple[int, str, list[tuple[str, int, None, None]]]],
) -> None:
    """Test check function for wmi_webservices check."""
    parsed = parse_wmi_table(info)
    result = list(check_wmi_webservices(item, params, parsed))
    assert result == expected_results
