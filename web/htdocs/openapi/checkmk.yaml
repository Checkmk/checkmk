components:
  parameters:
    Accept:
      allowEmptyValue: false
      description: Media type(s) that is/are acceptable for the response.
      example: application/json
      in: header
      name: Accept
      required: false
      schema:
        type: string
  schemas:
    AcknowledgeHostProblem:
      properties:
        sticky:
          default: false
          description: 'If set, only a state-change of the host to an UP state will
            discard the acknowledgement.

            Otherwise it will be discarded on any state-change. Defaults to False.'
          example: false
          type: boolean
        persistent:
          default: false
          description: If set, the comment will persist a restart. Defaults to False.
          example: false
          type: boolean
        notify:
          default: false
          description: If set, notifications will be sent out to the configured contacts.
            Defaults to False.
          example: false
          type: boolean
        comment:
          default: Acknowledged
          description: If set, this comment will be stored alongside the acknowledgement.
          example: This was expected.
          type: string
      type: object
    AcknowledgeServiceProblem:
      properties:
        sticky:
          default: false
          description: 'If set, only a state-change of the service to an OK state
            will discard the

            acknowledgement. Otherwise it will be discarded on any state-change. Defaults
            to False.'
          example: false
          type: boolean
        persistent:
          default: false
          description: If set, the comment will persist a restart. Defaults to False.
          example: false
          type: boolean
        notify:
          default: false
          description: If set, notifications will be sent out to the configured contacts.
            Defaults to False.
          example: false
          type: boolean
        comment:
          default: Acknowledged
          description: If set, this comment will be stored alongside the acknowledgement.
          example: This was expected.
          type: string
      type: object
    ActionResultObject:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        resultType:
          default: object
        extensions:
          example: &id001
            some: values
          type: object
        result:
          $ref: '#/components/schemas/ActionResultObjectValue'
      required:
      - links
      type: object
    ActionResultObjectValue:
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        value:
          example:
            duration: 5 seconds.
          type: object
      required:
      - links
      - value
      type: object
    ActionResultScalar:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        resultType:
          default: scalar
        extensions:
          example: *id001
          type: object
        result:
          $ref: '#/components/schemas/ActionResultScalarValue'
      required:
      - links
      type: object
    ActionResultScalarValue:
      properties:
        links:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        value:
          example: Done.
          type: string
      required:
      - links
      - value
      type: object
    ActivateChanges:
      properties:
        redirect:
          default: false
          description: Redirect immediately to the 'Wait for completion' endpoint.
          example: false
          type: boolean
        sites:
          default: []
          description: On which sites the configuration shall be activated. An empty
            list means all sites which have pending changes.
          example:
          - production
          items:
            type: string
          type: array
      type: object
    AgentSign:
      properties:
        key_id:
          description: The id under that the desired agent signature key is stored
          example: 42
          format: int32
          type: integer
        passphrase:
          description: The password to unlock the agent signature key
          example: sw0rdfish
          type: string
      required:
      - key_id
      - passphrase
      type: object
    ApiError:
      properties:
        code:
          description: The HTTP status code.
          example: 404
          format: int32
          type: integer
        message:
          description: Detailed information on what exactly went wrong.
          example: The resource could not be found.
          type: string
        title:
          description: A summary of the problem.
          example: Not found
          type: string
        errors:
          description: Optionally a list of errors used for debugging.
          example: null
          items:
            type: string
          nullable: true
          type: array
      required:
      - code
      - message
      - title
      type: object
    BIAction:
      discriminator:
        mapping:
          call_a_rule: '#/components/schemas/BICallARuleAction'
          state_of_host: '#/components/schemas/BIStateOfHostAction'
          state_of_remaining_services: '#/components/schemas/BIStateOfRemainingServicesAction'
          state_of_service: '#/components/schemas/BIStateOfServiceAction'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/BICallARuleAction'
      - $ref: '#/components/schemas/BIStateOfHostAction'
      - $ref: '#/components/schemas/BIStateOfServiceAction'
      - $ref: '#/components/schemas/BIStateOfRemainingServicesAction'
      properties: {}
      type: object
    BIAggregationComputationOptions:
      properties:
        disabled:
          example: false
          type: boolean
        use_hard_states:
          example: false
          type: boolean
        escalate_downtimes_as_warn:
          example: false
          type: boolean
      required:
      - disabled
      - escalate_downtimes_as_warn
      - use_hard_states
      type: object
    BIAggregationEndpoint:
      properties:
        id:
          example: aggr1
          type: string
        customer:
          description: 'CME Edition only: The customer id for this aggregation.'
          example: customer1
          nullable: true
          type: string
        groups:
          allOf:
          - $ref: '#/components/schemas/BIAggregationGroups'
          example:
            names:
            - groupA
            - groupB
            paths:
            - - path
              - group
              - a
            - - path
              - group
              - b
        node:
          allOf:
          - $ref: '#/components/schemas/BINodeGenerator'
          example:
            action:
              host_regex: ''
              type: state_of_host
            search:
              type: empty
        aggregation_visualization:
          allOf:
          - $ref: '#/components/schemas/BIAggregationVisualization'
          example:
            ignore_rule_styles: false
            layout_id: builtin_default
            line_style: round
        computation_options:
          allOf:
          - $ref: '#/components/schemas/BIAggregationComputationOptions'
          example:
            disabled: false
            escalate_downtimes_as_warn: false
            use_hard_states: false
        pack_id:
          example: pack1
          type: string
      required:
      - aggregation_visualization
      - computation_options
      - groups
      - id
      - node
      - pack_id
      type: object
    BIAggregationFunction:
      discriminator:
        mapping:
          best: '#/components/schemas/BIAggregationFunctionBest'
          count_ok: '#/components/schemas/BIAggregationFunctionCountOK'
          worst: '#/components/schemas/BIAggregationFunctionWorst'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/BIAggregationFunctionBest'
      - $ref: '#/components/schemas/BIAggregationFunctionWorst'
      - $ref: '#/components/schemas/BIAggregationFunctionCountOK'
      properties: {}
      type: object
    BIAggregationFunctionBest:
      properties:
        type:
          default: best
        count:
          format: int32
          type: integer
        restrict_state:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
      required:
      - count
      - restrict_state
      - type
      type: object
    BIAggregationFunctionCountOK:
      properties:
        type:
          default: count_ok
        levels_ok:
          $ref: '#/components/schemas/BIAggregationFunctionCountSettings'
        levels_warn:
          $ref: '#/components/schemas/BIAggregationFunctionCountSettings'
      required:
      - levels_ok
      - levels_warn
      - type
      type: object
    BIAggregationFunctionCountSettings:
      properties:
        type:
          enum:
          - count
          - percentage
          type: string
        value:
          format: int32
          type: integer
      required:
      - type
      - value
      type: object
    BIAggregationFunctionWorst:
      properties:
        type:
          default: worst
        count:
          example: 2
          format: int32
          type: integer
        restrict_state:
          enum:
          - 0
          - 1
          - 2
          format: int32
          type: integer
      required:
      - count
      - restrict_state
      - type
      type: object
    BIAggregationGroups:
      properties:
        names:
          example:
          - group1
          - group2
          items:
            type: string
          type: array
        paths:
          example:
          - - path
            - of
            - group1
          items:
            items:
              type: string
            type: array
          type: array
      type: object
    BIAggregationVisualization:
      properties:
        ignore_rule_styles:
          example: false
          type: boolean
        layout_id:
          example: radial_layout2
          type: string
        line_style:
          example: round
          type: string
      required:
      - ignore_rule_styles
      - layout_id
      - line_style
      type: object
    BIAllHostsChoice:
      properties:
        type:
          default: all_hosts
      required:
      - type
      type: object
    BICallARuleAction:
      properties:
        type:
          default: call_a_rule
        rule_id:
          example: test_rule_1
          type: string
        params:
          allOf:
          - $ref: '#/components/schemas/BIParams'
          example:
            arguments: []
      required:
      - params
      - rule_id
      - type
      type: object
    BIEmptySearch:
      properties:
        type:
          default: empty
      required:
      - type
      type: object
    BIFixedArgumentsSearch:
      properties:
        type:
          default: fixed_arguments
        arguments:
          items:
            $ref: '#/components/schemas/BIFixedArgumentsSearchToken'
          type: array
      required:
      - arguments
      - type
      type: object
    BIFixedArgumentsSearchToken:
      properties:
        key:
          type: string
        values:
          items:
            type: string
          type: array
      required:
      - key
      - values
      type: object
    BIHostAliasRegexChoice:
      properties:
        type:
          default: host_alias_regex
        pattern:
          example: testali.*
          type: string
      required:
      - pattern
      - type
      type: object
    BIHostChoice:
      discriminator:
        mapping:
          all_hosts: '#/components/schemas/BIAllHostsChoice'
          host_alias_regex: '#/components/schemas/BIHostAliasRegexChoice'
          host_name_regex: '#/components/schemas/BIHostNameRegexChoice'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/BIAllHostsChoice'
      - $ref: '#/components/schemas/BIHostNameRegexChoice'
      - $ref: '#/components/schemas/BIHostAliasRegexChoice'
      properties: {}
      type: object
    BIHostNameRegexChoice:
      properties:
        type:
          default: host_name_regex
        pattern:
          example: testhostn.*
          type: string
      required:
      - pattern
      - type
      type: object
    BIHostSearch:
      properties:
        type:
          default: host_search
        conditions:
          $ref: '#/components/schemas/HostConditions'
        refer_to:
          enum:
          - host
          - child
          - parent
          type: string
      required:
      - conditions
      - refer_to
      - type
      type: object
    BINodeGenerator:
      properties:
        search:
          allOf:
          - $ref: '#/components/schemas/BISearch'
          example:
            type: empty
        action:
          allOf:
          - $ref: '#/components/schemas/BIAction'
          example:
            host_regex: ''
            type: state_of_host
      required:
      - action
      - search
      type: object
    BINodeVisBlockStyle:
      properties:
        type:
          default: block
        style_config:
          default: &id002 {}
      required:
      - style_config
      - type
      type: object
    BINodeVisForceStyle:
      properties:
        type:
          default: force
        style_config:
          default: {}
      required:
      - style_config
      - type
      type: object
    BINodeVisHierarchyStyle:
      properties:
        type:
          default: hierarchy
        style_config:
          $ref: '#/components/schemas/BINodeVisHierarchyStyleConfig'
      required:
      - style_config
      - type
      type: object
    BINodeVisHierarchyStyleConfig:
      properties:
        layer_height:
          example: 85
          format: int32
          type: integer
        node_size:
          example: 40
          format: int32
          type: integer
        rotation:
          example: 180
          format: int32
          type: integer
      required:
      - layer_height
      - node_size
      - rotation
      type: object
    BINodeVisLayoutStyle:
      discriminator:
        mapping:
          block: '#/components/schemas/BINodeVisBlockStyle'
          force: '#/components/schemas/BINodeVisForceStyle'
          hierarchy: '#/components/schemas/BINodeVisHierarchyStyle'
          none: '#/components/schemas/BINodeVisNoneStyle'
          radial: '#/components/schemas/BINodeVisRadialStyle'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/BINodeVisNoneStyle'
      - $ref: '#/components/schemas/BINodeVisBlockStyle'
      - $ref: '#/components/schemas/BINodeVisHierarchyStyle'
      - $ref: '#/components/schemas/BINodeVisRadialStyle'
      - $ref: '#/components/schemas/BINodeVisForceStyle'
      properties: {}
      type: object
    BINodeVisNoneStyle:
      properties:
        type:
          default: none
        style_config:
          default: {}
      required:
      - style_config
      - type
      type: object
    BINodeVisRadialStyle:
      properties:
        type:
          default: radial
        style_config:
          $ref: '#/components/schemas/BINodeVisRadialStyleConfig'
      required:
      - style_config
      - type
      type: object
    BINodeVisRadialStyleConfig:
      properties:
        degree:
          format: int32
          type: integer
        radius:
          format: int32
          type: integer
        rotation:
          format: int32
          type: integer
      required:
      - degree
      - radius
      - rotation
      type: object
    BIParams:
      properties:
        arguments:
          example:
          - testhostParams
          items:
            type: string
          type: array
      required:
      - arguments
      type: object
    BIRuleComputationOptions:
      properties:
        disabled:
          example: false
          type: boolean
      required:
      - disabled
      type: object
    BIRuleEndpoint:
      properties:
        id:
          example: rule1
          type: string
        nodes:
          example: []
          items:
            $ref: '#/components/schemas/BINodeGenerator'
          type: array
        params:
          allOf:
          - $ref: '#/components/schemas/BIParams'
          example:
          - arguments:
            - foo
            - bar
        node_visualization:
          allOf:
          - $ref: '#/components/schemas/BINodeVisLayoutStyle'
          example:
            style_config: *id002
            type: block
        properties:
          allOf:
          - $ref: '#/components/schemas/BIRuleProperties'
          example:
            comment: ''
            docu_url: ''
            icon: ''
            state_messages: {}
            title: ''
        aggregation_function:
          allOf:
          - $ref: '#/components/schemas/BIAggregationFunction'
          example:
            count: 1
            restrict_state: 2
            type: best
        computation_options:
          allOf:
          - $ref: '#/components/schemas/BIRuleComputationOptions'
          example:
            disabled: false
        pack_id:
          example: pack1
          type: string
      required:
      - aggregation_function
      - computation_options
      - id
      - node_visualization
      - nodes
      - pack_id
      - params
      - properties
      type: object
    BIRuleProperties:
      properties:
        title:
          example: Rule title
          type: string
        comment:
          example: Rule comment
          type: string
        docu_url:
          example: Rule documentation
          type: string
        icon:
          example: icon1.png
          type: string
        state_messages:
          example: {}
          type: object
      required:
      - comment
      - docu_url
      - icon
      - state_messages
      - title
      type: object
    BISearch:
      discriminator:
        mapping:
          empty: '#/components/schemas/BIEmptySearch'
          fixed_arguments: '#/components/schemas/BIFixedArgumentsSearch'
          host_search: '#/components/schemas/BIHostSearch'
          service_search: '#/components/schemas/BIServiceSearch'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/BIEmptySearch'
      - $ref: '#/components/schemas/BIHostSearch'
      - $ref: '#/components/schemas/BIServiceSearch'
      - $ref: '#/components/schemas/BIFixedArgumentsSearch'
      properties: {}
      type: object
    BIServiceSearch:
      properties:
        type:
          default: service_search
        conditions:
          $ref: '#/components/schemas/ServiceConditions'
      required:
      - conditions
      - type
      type: object
    BIStateOfHostAction:
      properties:
        type:
          default: state_of_host
        host_regex:
          example: testhost
          type: string
      required:
      - host_regex
      - type
      type: object
    BIStateOfRemainingServicesAction:
      properties:
        type:
          default: state_of_remaining_services
        host_regex:
          example: testhost
          type: string
      required:
      - host_regex
      - type
      type: object
    BIStateOfServiceAction:
      properties:
        type:
          default: state_of_service
        host_regex:
          example: testhost
          type: string
        service_regex:
          example: testservice
          type: string
      required:
      - host_regex
      - service_regex
      - type
      type: object
    BinaryExpr:
      properties:
        op:
          description: The operator.
          type: string
        left:
          description: The LiveStatus table and column in the form `$TABLE_NAME.$COLUMN_NAME`,
            e.g. `hosts.name`.
          example: hosts.name
          pattern: '[a-z]+\.[_a-z]+'
          type: string
        right:
          description: The value to compare the column to.
          type: string
      type: object
    BulkAcknowledgeHostProblem:
      properties:
        sticky:
          default: false
          description: 'If set, only a state-change of the host to an UP state will
            discard the acknowledgement.

            Otherwise it will be discarded on any state-change. Defaults to False.'
          example: false
          type: boolean
        persistent:
          default: false
          description: If set, the comment will persist a restart. Defaults to False.
          example: false
          type: boolean
        notify:
          default: false
          description: If set, notifications will be sent out to the configured contacts.
            Defaults to False.
          example: false
          type: boolean
        comment:
          default: Acknowledged
          description: If set, this comment will be stored alongside the acknowledgement.
          example: This was expected.
          type: string
        entries:
          example:
          - example.com
          - sample.com
          items:
            description: The hostname or IP address itself.
            example: example.com
            pattern: '[-0-9a-zA-Z_.]+'
            type: string
          type: array
      required:
      - entries
      type: object
    BulkAcknowledgeServiceProblem:
      properties:
        sticky:
          default: false
          description: 'If set, only a state-change of the service to an OK state
            will discard the

            acknowledgement. Otherwise it will be discarded on any state-change. Defaults
            to False.'
          example: false
          type: boolean
        persistent:
          default: false
          description: If set, the comment will persist a restart. Defaults to False.
          example: false
          type: boolean
        notify:
          default: false
          description: If set, notifications will be sent out to the configured contacts.
            Defaults to False.
          example: false
          type: boolean
        comment:
          default: Acknowledged
          description: If set, this comment will be stored alongside the acknowledgement.
          example: This was expected.
          type: string
        host_name:
          description: The hostname or IP address itself.
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
        entries:
          example:
          - CPU utilization
          - Memory
          items:
            example: CPU utilization
            type: string
          type: array
      required:
      - entries
      - host_name
      type: object
    BulkCreateHost:
      properties:
        entries:
          example:
          - attributes: {}
            folder: root
            host_name: example.com
          items:
            $ref: '#/components/schemas/CreateHost'
          type: array
          uniqueItems: true
      type: object
    BulkDeleteContactGroup:
      properties:
        entries:
          example:
          - windows
          - panels
          items:
            description: The name of the contact group config
            example: windows
            type: string
          type: array
      required:
      - entries
      type: object
    BulkDeleteDowntime:
      properties:
        host_name:
          description: The hostname or IP address itself.
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
        entries:
          example:
          - 1120
          - 1121
          items:
            description: The id for either a host downtime or service downtime
            example: 1120
            format: int32
            type: integer
          type: array
      required:
      - entries
      - host_name
      type: object
    BulkDeleteHost:
      properties:
        entries:
          example:
          - example
          - sample
          items:
            description: The hostname or IP address itself.
            example: example.com
            pattern: '[-0-9a-zA-Z_.]+'
            type: string
          type: array
      required:
      - entries
      type: object
    BulkDeleteHostGroup:
      properties:
        entries:
          example:
          - windows
          - panels
          items:
            description: The name of the host group config
            example: windows
            type: string
          type: array
      required:
      - entries
      type: object
    BulkDeleteServiceGroup:
      properties:
        entries:
          example:
          - windows
          - panels
          items:
            description: The name of the service group config
            example: windows
            type: string
          type: array
      required:
      - entries
      type: object
    BulkInputContactGroup:
      properties:
        entries:
          example:
          - alias: Not on Sundays
            name: OnCall
          items:
            $ref: '#/components/schemas/InputContactGroup'
          type: array
          uniqueItems: true
      type: object
    BulkInputHostGroup:
      properties:
        entries:
          example:
          - alias: Windows Servers
            name: windows
          items:
            $ref: '#/components/schemas/InputHostGroup'
          type: array
          uniqueItems: true
      type: object
    BulkInputServiceGroup:
      properties:
        entries:
          example:
          - alias: Environment Sensors
            name: environment
          items:
            $ref: '#/components/schemas/InputServiceGroup'
          type: array
          uniqueItems: true
      type: object
    BulkUpdateContactGroup:
      properties:
        entries:
          example:
          - attributes:
              alias: Not on Sundays
              name: OnCall updated
            name: OnCall
          items:
            $ref: '#/components/schemas/UpdateContactGroup'
          type: array
      type: object
    BulkUpdateFolder:
      properties:
        entries:
          example:
          - attributes:
              key: foo
            ident: root
            title: Virtual Servers
          items:
            $ref: '#/components/schemas/UpdateFolderEntry'
          type: array
      type: object
    BulkUpdateHost:
      properties:
        entries:
          example:
          - attributes: {}
            host_name: example.com
          items:
            $ref: '#/components/schemas/UpdateHostEntry'
          type: array
      type: object
    BulkUpdateHostGroup:
      properties:
        entries:
          example:
          - attributes:
              alias: Windows Servers
              name: windows updated
            name: windows
          items:
            $ref: '#/components/schemas/UpdateHostGroup'
          type: array
      type: object
    BulkUpdateServiceGroup:
      properties:
        entries:
          example:
          - attributes:
              alias: Windows Servers
              name: windows updated
            name: windows
          items:
            $ref: '#/components/schemas/UpdateServiceGroup'
          type: array
      type: object
    CollectionItem:
      discriminator:
        mapping:
          link: '#/components/schemas/Link'
        propertyName: domainType
      oneOf:
      - $ref: '#/components/schemas/Link'
      properties: {}
      type: object
    ConcreteFolder:
      discriminator:
        mapping:
          folder_config: '#/components/schemas/Folder'
          link: '#/components/schemas/Link'
        propertyName: domainType
      oneOf:
      - $ref: '#/components/schemas/Folder'
      - $ref: '#/components/schemas/Link'
      properties: {}
      type: object
    ConcreteHostTagGroup:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        domainType:
          default: host_tag_group
        id:
          type: string
        title:
          type: string
        members:
          $ref: '#/components/schemas/ObjectMemberDict'
        extensions:
          type: object
      required:
      - domainType
      - links
      type: object
    ConcretePassword:
      properties:
        ident:
          description: The unique identifier for the password
          example: pass
          type: string
        title:
          description: The title for the password
          example: Kubernetes login
          type: string
        comment:
          description: A comment for the password
          example: Kommentar
          type: string
        documentation_url:
          description: The URL pointing to documentation or any other page.
          example: localhost
          type: string
        password:
          description: The password string
          example: password
          type: string
        owner:
          description: The owner of the password who is able to edit, delete and use
            existing passwords.
          example: admin
          type: string
        shared:
          description: The list of members the password is shared with
          example:
          - all
          items:
            description: The member the password is shared with
            example: all
            type: string
          type: array
      required:
      - password
      type: object
    ConcreteTimePeriod:
      properties:
        alias:
          description: The alias of the time period
          example: alias
          type: string
        active_time_ranges:
          description: The days for which time ranges were specified
          example:
            day: all
            time_ranges:
            - end: '14:00'
              start: '12:00'
          items:
            $ref: '#/components/schemas/ConcreteTimeRangeActive'
          type: array
        exceptions:
          description: Specific day exclusions with their list of time ranges
          example:
          - date: '2020-01-01'
            time_ranges:
            - end: '18:00'
              start: '14:00'
          items:
            $ref: '#/components/schemas/ConcreteTimePeriodException'
          type: array
        exclude:
          description: The collection of time period aliases whose periods are excluded
          items:
            description: Name of excluding time period
            example: holidays
            type: string
          type: array
      type: object
    ConcreteTimePeriodException:
      properties:
        date:
          description: The date of the time period exception.8601 profile
          example: '2020-01-01'
          format: date
          type: string
        time_ranges:
          example: '[{''start'': ''14:00'', ''end'': ''18:00''}]'
          items:
            $ref: '#/components/schemas/ConcreteTimeRange'
          type: array
      type: object
    ConcreteTimeRange:
      properties:
        start:
          description: The hour of the time period.
          example: '14:00'
          type: string
        end:
          description: The hour of the time period.
          example: '14:00'
          type: string
      type: object
    ConcreteTimeRangeActive:
      properties:
        day:
          description: The day for which the time ranges are specified
          pattern: monday|tuesday|wednesday|thursday|friday|saturday|sunday
          type: string
        time_ranges:
          items:
            $ref: '#/components/schemas/ConcreteTimeRange'
          type: array
      type: object
    ContactGroup:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        domainType:
          default: contact_group
        id:
          type: string
        title:
          type: string
        members:
          $ref: '#/components/schemas/ObjectMemberDict'
        extensions:
          type: object
      required:
      - domainType
      - links
      type: object
    CreateClusterHost:
      properties:
        folder:
          description: The folder-id of the folder under which this folder shall be
            created. May be 'root' for the root-folder.
          example: /
          pattern: /|(/[ -_a-zA-Z0-9]+)+|[a-fA-F0-9]{32}
          type: string
        host_name:
          description: The hostname of the cluster host.
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
        attributes:
          description: Attributes to set on the newly created host.
          example:
            ipaddress: 192.168.0.123
          type: object
        nodes:
          description: Nodes where the newly created host should be the cluster-container
            of.
          example:
          - host1
          - host2
          - host3
          items:
            description: The hostname or IP address itself.
            example: example.com
            pattern: '[-0-9a-zA-Z_.]+'
            type: string
          type: array
      required:
      - folder
      - host_name
      - nodes
      type: object
    CreateDowntime:
      discriminator:
        mapping:
          host: '#/components/schemas/CreateHostDowntime'
          hostgroup: '#/components/schemas/CreateHostGroupDowntime'
          service: '#/components/schemas/CreateServiceDowntime'
          servicegroup: '#/components/schemas/CreateServiceGroupDowntime'
        propertyName: downtime_type
      oneOf:
      - $ref: '#/components/schemas/CreateHostDowntime'
      - $ref: '#/components/schemas/CreateHostGroupDowntime'
      - $ref: '#/components/schemas/CreateServiceDowntime'
      - $ref: '#/components/schemas/CreateServiceGroupDowntime'
      properties: {}
      type: object
    CreateFolder:
      properties:
        name:
          description: The filesystem directory name (not path!) of the folder. No
            slashes are allowed.
          example: production
          pattern: '[^/]+'
          type: string
        title:
          description: The folder title as displayed in the user interface.
          example: Production Hosts
          type: string
        parent:
          description: The folder in which the new folder shall be placed in. The
            root-folder is specified by '/'.
          example: /
          pattern: /|(/[ -_a-zA-Z0-9]+)+|[a-fA-F0-9]{32}
          type: string
        attributes:
          description: Specific attributes to apply for all hosts in this folder (among
            other things).
          example: {}
          type: object
      required:
      - name
      - parent
      - title
      type: object
    CreateHost:
      properties:
        folder:
          description: The folder-id of the folder under which this folder shall be
            created. May be 'root' for the root-folder.
          example: /
          pattern: /|(/[ -_a-zA-Z0-9]+)+|[a-fA-F0-9]{32}
          type: string
        host_name:
          description: The hostname or IP address of the host to be created.
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
        attributes:
          description: Attributes to set on the newly created host.
          example:
            ipaddress: 192.168.0.123
          type: object
      required:
      - folder
      - host_name
      type: object
    CreateHostDowntime:
      properties:
        downtime_type:
          description: The type of downtime to create.
          enum: &id003
          - host
          - service
          - hostgroup
          - servicegroup
          example: host
          type: string
        start_time:
          description: The start datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
          format: date-time
          type: string
        end_time:
          description: The end datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
          format: date-time
          type: string
        recur:
          default: fixed
          description: "The recurring mode of the new downtime. Available modes are:\n\
            \    * fixed\n    * hour\n    * day\n    * week\n    * second_week\n \
            \   * fourth_week\n    * weekday_start\n    * weekday_end\n    * day_of_month\n\
            \nThis only works when using the Enterprise Editions. Defaults to 'fixed'."
          enum: &id004
          - fixed
          - hour
          - day
          - week
          - second_week
          - fourth_week
          - weekday_start
          - weekday_end
          - day_of_month
          example: hour
          type: string
        duration:
          default: 0
          description: 'Duration in seconds. When set, the downtime does not begin
            automatically at a nominated

            time, but when a real problem status appears for the host. Consequencely,
            the

            start_time/end_time is only the time window in which the scheduled downtime
            can begin.'
          example: 3600
          format: int32
          type: integer
        comment:
          example: Security updates
          type: string
        host_name:
          description: The hostname or IP address itself.
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      required:
      - downtime_type
      - end_time
      - host_name
      - start_time
      type: object
    CreateHostGroupDowntime:
      properties:
        downtime_type:
          description: The type of downtime to create.
          enum: *id003
          example: host
          type: string
        start_time:
          description: The start datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
          format: date-time
          type: string
        end_time:
          description: The end datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
          format: date-time
          type: string
        recur:
          default: fixed
          description: "The recurring mode of the new downtime. Available modes are:\n\
            \    * fixed\n    * hour\n    * day\n    * week\n    * second_week\n \
            \   * fourth_week\n    * weekday_start\n    * weekday_end\n    * day_of_month\n\
            \nThis only works when using the Enterprise Editions. Defaults to 'fixed'."
          enum: *id004
          example: hour
          type: string
        duration:
          default: 0
          description: 'Duration in seconds. When set, the downtime does not begin
            automatically at a nominated

            time, but when a real problem status appears for the host. Consequencely,
            the

            start_time/end_time is only the time window in which the scheduled downtime
            can begin.'
          example: 3600
          format: int32
          type: integer
        comment:
          example: Security updates
          type: string
        hostgroup_name:
          description: The name of the hostgroup. A downtime will be scheduled for
            all hosts in this hostgroup.
          example: Servers
          type: string
      required:
      - downtime_type
      - end_time
      - hostgroup_name
      - start_time
      type: object
    CreateServiceDowntime:
      properties:
        downtime_type:
          description: The type of downtime to create.
          enum: *id003
          example: host
          type: string
        start_time:
          description: The start datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
          format: date-time
          type: string
        end_time:
          description: The end datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
          format: date-time
          type: string
        recur:
          default: fixed
          description: "The recurring mode of the new downtime. Available modes are:\n\
            \    * fixed\n    * hour\n    * day\n    * week\n    * second_week\n \
            \   * fourth_week\n    * weekday_start\n    * weekday_end\n    * day_of_month\n\
            \nThis only works when using the Enterprise Editions. Defaults to 'fixed'."
          enum: *id004
          example: hour
          type: string
        duration:
          default: 0
          description: 'Duration in seconds. When set, the downtime does not begin
            automatically at a nominated

            time, but when a real problem status appears for the service. Consequencely,
            the

            start_time/end_time is only the time window in which the scheduled downtime
            can begin.'
          example: 3600
          format: int32
          type: integer
        comment:
          example: Security updates
          type: string
        host_name:
          description: The hostname or IP address itself.
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
        service_descriptions:
          description: The service description of the service, whose problems shall
            be acknowledged.
          example:
          - CPU utilization
          - Memory
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - downtime_type
      - end_time
      - host_name
      - service_descriptions
      - start_time
      type: object
    CreateServiceGroupDowntime:
      properties:
        downtime_type:
          description: The type of downtime to create.
          enum: *id003
          example: host
          type: string
        start_time:
          description: The start datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
          format: date-time
          type: string
        end_time:
          description: The end datetime of the new downtime. The format has to conform
            to the ISO 8601 profile
          example: '2017-07-21T17:32:28Z'
          format: date-time
          type: string
        recur:
          default: fixed
          description: "The recurring mode of the new downtime. Available modes are:\n\
            \    * fixed\n    * hour\n    * day\n    * week\n    * second_week\n \
            \   * fourth_week\n    * weekday_start\n    * weekday_end\n    * day_of_month\n\
            \nThis only works when using the Enterprise Editions. Defaults to 'fixed'."
          enum: *id004
          example: hour
          type: string
        duration:
          default: 0
          description: 'Duration in seconds. When set, the downtime does not begin
            automatically at a nominated

            time, but when a real problem status appears for the host. Consequencely,
            the

            start_time/end_time is only the time window in which the scheduled downtime
            can begin.'
          example: 3600
          format: int32
          type: integer
        comment:
          example: Security updates
          type: string
        servicegroup_name:
          description: 'The name of the service group. Any host having a service in
            this group will be

            A downtime will be scheduled for all hosts in this group.'
          example: Webservers
          type: string
      required:
      - downtime_type
      - end_time
      - servicegroup_name
      - start_time
      type: object
    DeleteHostTagGroup:
      properties:
        repair:
          default: false
          description: The host tag group can still be in use. Setting repair to True
            gives permission to automatically remove the tag from the affected hosts.
          example: false
          type: boolean
      type: object
    DomainObject:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        domainType:
          type: string
        id:
          type: string
        title:
          type: string
        members:
          $ref: '#/components/schemas/ObjectMemberDict'
        extensions:
          type: object
      required:
      - domainType
      - links
      type: object
    DomainObjectCollection:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        id:
          type: string
        domainType:
          type: string
        value:
          items:
            $ref: '#/components/schemas/CollectionItem'
          type: array
        extensions:
          type: object
      required:
      - links
      type: object
    Expr:
      discriminator:
        mapping:
          '!=': '#/components/schemas/BinaryExpr'
          <: '#/components/schemas/BinaryExpr'
          <=: '#/components/schemas/BinaryExpr'
          '=': '#/components/schemas/BinaryExpr'
          '>': '#/components/schemas/BinaryExpr'
          '>=': '#/components/schemas/BinaryExpr'
          and: '#/components/schemas/LogicalExpr'
          not: '#/components/schemas/NotExpr'
          or: '#/components/schemas/LogicalExpr'
          '~': '#/components/schemas/BinaryExpr'
        propertyName: op
      oneOf:
      - $ref: '#/components/schemas/LogicalExpr'
      - $ref: '#/components/schemas/LogicalExpr'
      - $ref: '#/components/schemas/NotExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      - $ref: '#/components/schemas/BinaryExpr'
      properties: {}
      type: object
    Folder:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        domainType:
          default: folder_config
        id:
          type: string
        title:
          type: string
        members:
          $ref: '#/components/schemas/FolderMembers'
        extensions:
          type: object
      required:
      - links
      type: object
    FolderCollection:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        id:
          type: string
        domainType:
          default: folder_config
        value:
          items:
            $ref: '#/components/schemas/ConcreteFolder'
          type: array
        extensions:
          type: object
      required:
      - links
      type: object
    FolderMembers:
      properties:
        hosts:
          allOf:
          - $ref: '#/components/schemas/ObjectCollectionMember'
          description: A list of links pointing to the actual host-resources.
        move:
          allOf:
          - $ref: '#/components/schemas/ObjectActionMember'
          description: An action which triggers the move of this folder to another
            folder.
      type: object
    HostConditions:
      properties:
        host_folder:
          example: servers/groupA
          type: string
        host_labels:
          example: &id005
            db: mssql
          type: object
        host_tags:
          example: &id006 {}
          type: object
        host_choice:
          allOf:
          - $ref: '#/components/schemas/BIHostChoice'
          example: &id007
            type: all_hosts
      required:
      - host_choice
      - host_folder
      - host_labels
      - host_tags
      type: object
    HostGroup:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        domainType:
          default: host_group
        id:
          type: string
        title:
          type: string
        members:
          $ref: '#/components/schemas/ObjectMemberDict'
        extensions:
          type: object
      required:
      - domainType
      - links
      type: object
    HostTag:
      properties:
        ident:
          default: null
          description: An unique id for the tag
          example: tag_id
          nullable: true
          type: string
        title:
          description: The title of the tag
          example: Tag
          type: string
        aux_tags:
          default: []
          description: The list of auxiliary tag ids. Built-in tags (ip-v4, ip-v6,
            snmp, tcp, ping) and custom defined tags are allowed.
          example:
          - ip-v4, ip-v6
          items:
            description: An auxiliary tag id
            example: ip-v4
            type: string
          type: array
      required:
      - title
      type: object
    InputContactGroup:
      properties:
        name:
          example: OnCall
          type: string
        alias:
          example: Not on Sundays.
          type: string
      required:
      - name
      type: object
    InputHostGroup:
      properties:
        name:
          description: A name used as identifier
          example: windows
          type: string
        alias:
          example: Windows Servers
          type: string
      required:
      - name
      type: object
    InputHostTagGroup:
      properties:
        ident:
          description: An id for the host tag group
          example: group_id
          type: string
        title:
          description: A title for the host tag
          example: Kubernetes
          type: string
        topic:
          description: Different tags can be grouped in a topic
          example: Data Sources
          type: string
        help:
          default: ''
          description: A help description for the tag group
          example: Kubernetes Pods
          type: string
        tags:
          description: A list of host tags belonging to the host tag group
          example:
          - ident: pod
            title: Pod
          items:
            $ref: '#/components/schemas/HostTag'
          type: array
      required:
      - tags
      - title
      - topic
      type: object
    InputPassword:
      properties:
        ident:
          description: An unique identifier for the password
          example: pass
          type: string
        title:
          description: A title for the password
          example: Kubernetes login
          type: string
        comment:
          default: ''
          description: A comment for the password
          example: Kommentar
          type: string
        documentation_url:
          default: ''
          description: An optional URL pointing to documentation or any other page.
            You can use either global URLs (beginning with http://), absolute local
            urls (beginning with /) or relative URLs (that are relative to check_mk/).
          example: localhost
          type: string
        password:
          description: The password string
          example: password
          type: string
        owner:
          description: Each password is owned by a group of users which are able to
            edit, delete and use existing passwords.
          example: admin
          type: string
        shared:
          default: []
          description: The list of members to share the password with
          example:
          - all
          items:
            description: By default only the members of the owner contact group are
              permitted to use a a configured password. It is possible to share a
              password with other groups of users to make them able to use a password
              in checks.
            example: all
            type: string
          type: array
      required:
      - ident
      - owner
      - password
      - title
      type: object
    InputServiceGroup:
      properties:
        name:
          description: A name used as identifier
          example: windows
          type: string
        alias:
          example: Environment Sensors
          type: string
      required:
      - name
      type: object
    InputTimePeriod:
      properties:
        name:
          description: A unique name for the time period.
          example: first
          type: string
        alias:
          description: An alias for the time period.
          example: alias
          type: string
        active_time_ranges:
          description: The list of active time ranges.
          example:
          - day: monday
            time_ranges:
            - end: '14:00'
              start: '12:00'
          items:
            $ref: '#/components/schemas/TimeRangeActive'
          type: array
        exceptions:
          example:
          - date: '2020-01-01'
            time_ranges:
            - end: '18:00'
              start: '14:00'
          items:
            $ref: '#/components/schemas/TimePeriodException'
          type: array
        exclude:
          description: The collection of time period aliases whose periods are excluded
          example:
          - alias
          items:
            description: The alias for a time period.
            example: alias
            type: string
          type: array
      required:
      - active_time_ranges
      - alias
      - name
      type: object
    InstalledVersions:
      properties:
        site:
          description: The site where this API call was made on.
          example: production
          type: string
        group:
          description: The Apache WSGI application group this call was made on.
          example: de
          type: string
        rest_api:
          description: The REST-API version
          example:
            revision: 1.0.0
          type: object
        versions:
          description: Some version numbers
          example:
            checkmk: 1.8.0p1
          type: object
        edition:
          description: The Checkmk edition.
          example: raw
          type: string
        demo:
          description: Whether this is a demo version or not.
          example: false
          type: boolean
      type: object
    Link:
      properties:
        domainType:
          default: link
        rel:
          description: Indicates the nature of the relationship of the related resource
            to the resource that generated this representation
          example: self
          type: string
        href:
          description: The (absolute) address of the related resource. Any characters
            that are invalid in URLs must be URL encoded.
          example: https://.../api_resource
          type: string
        method:
          description: The HTTP method to use to traverse the link (get, post, put
            or delete)
          example: GET
          pattern: GET|PUT|POST|DELETE
          type: string
        type:
          description: The media type that the linked resource will return
          example: application/json
          type: string
        title:
          description: string that the consuming application may use to render the
            link without having to traverse the link in advance
          example: The object itself
          nullable: true
          type: string
        arguments:
          description: map that may be used as the basis for any data (arguments or
            properties) required to follow the link.
          nullable: true
          type: object
      required:
      - domainType
      - href
      - method
      - rel
      - type
      type: object
    LogicalExpr:
      properties:
        op:
          description: The operator.
          type: string
        expr:
          items:
            allOf:
            - $ref: '#/components/schemas/Expr'
            description: A list of query expressions to combine.
          type: array
      type: object
    MoveFolder:
      properties:
        destination:
          description: Where the folder has to be moved to.
          example: '%2Fmy%2Ffine%2Ffolder'
          pattern: /|(/[ -_a-zA-Z0-9]+)+|[a-fA-F0-9]{32}
          type: string
      required:
      - destination
      type: object
    NotExpr:
      properties:
        op:
          description: The operator. In this case `not`.
          type: string
        expr:
          allOf:
          - $ref: '#/components/schemas/Expr'
          description: The query expression to negate.
      type: object
    ObjectActionMember:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        id:
          type: string
        disabledReason:
          description: Provides the reason (or the literal "disabled") why an object
            property or collection is un-modifiable, or, in the case of an action,
            unusable (and hence no links to mutate that member's state, or invoke
            the action, are provided).
          nullable: true
          type: string
        invalidReason:
          description: Provides the reason (or the literal "invalid") why a proposed
            value for a property, collection or action argument is invalid. Appears
            within an argument representation 2.9 returned as a response.
          example: invalid
          nullable: true
          type: string
        x_ro_invalidReason:
          description: Provides the reason why a SET OF proposed values for properties
            or arguments is invalid.
          nullable: true
          type: string
        memberType:
          default: action
        parameters:
          type: object
        name:
          example: frobnicate_foo
          type: string
      required:
      - id
      - links
      type: object
    ObjectCollectionMember:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        id:
          type: string
        disabledReason:
          description: Provides the reason (or the literal "disabled") why an object
            property or collection is un-modifiable, or, in the case of an action,
            unusable (and hence no links to mutate that member's state, or invoke
            the action, are provided).
          nullable: true
          type: string
        invalidReason:
          description: Provides the reason (or the literal "invalid") why a proposed
            value for a property, collection or action argument is invalid. Appears
            within an argument representation 2.9 returned as a response.
          example: invalid
          nullable: true
          type: string
        x_ro_invalidReason:
          description: Provides the reason why a SET OF proposed values for properties
            or arguments is invalid.
          nullable: true
          type: string
        memberType:
          default: collection
        value:
          items:
            $ref: '#/components/schemas/Link'
          type: array
        name:
          example: important_values
          type: string
      required:
      - id
      - links
      type: object
    ObjectMember:
      discriminator:
        mapping:
          action: '#/components/schemas/ObjectActionMember'
          collection: '#/components/schemas/ObjectCollectionMember'
          property: '#/components/schemas/ObjectPropertyMember'
        propertyName: memberType
      oneOf:
      - $ref: '#/components/schemas/ObjectActionMember'
      - $ref: '#/components/schemas/ObjectPropertyMember'
      - $ref: '#/components/schemas/ObjectCollectionMember'
      properties: {}
      type: object
    ObjectMemberDict:
      additionalProperties:
        $ref: '#/components/schemas/ObjectMember'
      properties: {}
      type: object
    ObjectProperty:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        id:
          type: string
        value:
          items:
            type: string
          type: array
        extensions:
          type: object
      required:
      - links
      type: object
    ObjectPropertyMember:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        id:
          type: string
        disabledReason:
          description: Provides the reason (or the literal "disabled") why an object
            property or collection is un-modifiable, or, in the case of an action,
            unusable (and hence no links to mutate that member's state, or invoke
            the action, are provided).
          nullable: true
          type: string
        invalidReason:
          description: Provides the reason (or the literal "invalid") why a proposed
            value for a property, collection or action argument is invalid. Appears
            within an argument representation 2.9 returned as a response.
          example: invalid
          nullable: true
          type: string
        x_ro_invalidReason:
          description: Provides the reason why a SET OF proposed values for properties
            or arguments is invalid.
          nullable: true
          type: string
        memberType:
          default: property
        name:
          example: important_value
          type: string
      required:
      - id
      - links
      type: object
    ServiceConditions:
      properties:
        host_folder:
          example: servers/groupA
          type: string
        host_labels:
          example: *id005
          type: object
        host_tags:
          example: *id006
          type: object
        host_choice:
          allOf:
          - $ref: '#/components/schemas/BIHostChoice'
          example: *id007
        service_regex:
          example: Filesystem.*
          type: string
        service_labels:
          example:
            db: mssql
          type: object
      required:
      - host_choice
      - host_folder
      - host_labels
      - host_tags
      - service_labels
      - service_regex
      type: object
    ServiceGroup:
      properties:
        links:
          description: list of links to other resources.
          items:
            $ref: '#/components/schemas/Link'
          type: array
        domainType:
          default: service_group
        id:
          type: string
        title:
          type: string
        members:
          $ref: '#/components/schemas/ObjectMemberDict'
        extensions:
          type: object
      required:
      - domainType
      - links
      type: object
    TimePeriodException:
      properties:
        date:
          description: The date of the time period exception.8601 profile
          example: '2020-01-01'
          format: date
          type: string
        time_ranges:
          example:
          - end: '18:00'
            start: '14:00'
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
      required:
      - date
      type: object
    TimeRange:
      properties:
        start:
          description: The start time of the period's time range
          example: '14:00'
          type: string
        end:
          description: The end time of the period's time range
          example: '16:00'
          type: string
      required:
      - end
      - start
      type: object
    TimeRangeActive:
      properties:
        day:
          description: The day for which time ranges are to be specified. The 'all'
            option allows to specify time ranges for all days.
          pattern: all|monday|tuesday|wednesday|thursday|friday|saturday|sunday
          type: string
        time_ranges:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
      type: object
    UpdateContactGroup:
      properties:
        name:
          description: The name of the contact group.
          example: OnCall
          type: string
        attributes:
          $ref: '#/components/schemas/InputContactGroup'
      required:
      - name
      type: object
    UpdateFolder:
      properties:
        title:
          example: Virtual Servers.
          type: string
        attributes:
          description: Replace all attributes with the ones given in this field. Already
            setattributes, not given here, will be removed.
          example: {}
          type: object
        update_attributes:
          description: Only set the attributes which are given in this field. Already
            set attributes will not be touched.
          example: {}
          type: object
      required:
      - title
      type: object
    UpdateFolderEntry:
      properties:
        title:
          example: Virtual Servers
          type: string
        attributes:
          description: Replace all attributes with the ones given in this field. Already
            setattributes, not given here, will be removed.
          example: {}
          type: object
        update_attributes:
          description: Only set the attributes which are given in this field. Already
            set attributes will not be touched.
          example: {}
          type: object
        folder:
          description: The folder-id of the folder under which this folder shall be
            created. May be 'root' for the root-folder.
          example: /
          pattern: /|(/[ -_a-zA-Z0-9]+)+|[a-fA-F0-9]{32}
          type: string
      required:
      - folder
      - title
      type: object
    UpdateHost:
      properties:
        attributes:
          description: Replace all currently set attributes on the host, with these
            attributes. Any previously set attributes which are not given here will
            be removed.
          example: &id008
            ipaddress: 192.168.0.123
          type: object
        update_attributes:
          description: Just update the hosts attributes with these attributes. The
            previously set attributes will not be touched.
          example: &id009
            ipaddress: 192.168.0.123
          type: object
        remove_attributes:
          default: []
          description: A list of attributes which should be removed.
          example: &id010
          - tag_foobar
          items:
            type: string
          type: array
      type: object
    UpdateHostEntry:
      properties:
        attributes:
          description: Replace all currently set attributes on the host, with these
            attributes. Any previously set attributes which are not given here will
            be removed.
          example: *id008
          type: object
        update_attributes:
          description: Just update the hosts attributes with these attributes. The
            previously set attributes will not be touched.
          example: *id009
          type: object
        remove_attributes:
          default: []
          description: A list of attributes which should be removed.
          example: *id010
          items:
            type: string
          type: array
        host_name:
          description: The hostname or IP address itself.
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      required:
      - host_name
      type: object
    UpdateHostGroup:
      properties:
        name:
          description: The name of the host group.
          example: windows
          type: string
        attributes:
          $ref: '#/components/schemas/InputHostGroup'
      required:
      - name
      type: object
    UpdateHostTagGroup:
      properties:
        title:
          description: A title for the host tag
          example: Kubernetes
          type: string
        topic:
          description: Different tags can be grouped in a topic
          example: Data Sources
          type: string
        help:
          description: A help description for the tag group
          example: Kubernetes Pods
          type: string
        tags:
          description: A list of host tags belonging to the host tag group
          example:
          - ident: pod
            title: Pod
          items:
            $ref: '#/components/schemas/HostTag'
          type: array
        repair:
          default: false
          description: The host tag group can be in use by other hosts. Setting repair
            to True gives permission to automatically update the tag from the affected
            hosts.
          example: false
          type: boolean
      type: object
    UpdateNodes:
      properties:
        nodes:
          description: Nodes where the newly created host should be the cluster-container
            of.
          example:
          - host1
          - host2
          - host3
          items:
            description: The hostname or IP address itself.
            example: example.com
            pattern: '[-0-9a-zA-Z_.]+'
            type: string
          type: array
      required:
      - nodes
      type: object
    UpdatePassword:
      properties:
        title:
          description: A title for the password
          example: Kubernetes login
          type: string
        comment:
          description: A comment for the password
          example: Kommentar
          type: string
        documentation_url:
          description: An optional URL pointing to documentation or any other page.
            You can use either global URLs (beginning with http://), absolute local
            urls (beginning with /) or relative URLs (that are relative to check_mk/).
          example: localhost
          type: string
        password:
          description: The password string
          example: password
          type: string
        owner:
          description: Each password is owned by a group of users which are able to
            edit, delete and use existing passwords.
          example: admin
          type: string
        shared:
          description: The list of members to share the password with
          example:
          - all
          items:
            description: By default only the members of the owner contact group are
              permitted to use a a configured password. It is possible to share a
              password with other groups of users to make them able to use a password
              in checks.
            example: all
            type: string
          type: array
      type: object
    UpdateServiceGroup:
      properties:
        name:
          description: The name of the service group.
          example: windows
          type: string
        attributes:
          $ref: '#/components/schemas/InputServiceGroup'
      required:
      - name
      type: object
    UpdateTimePeriod:
      properties:
        alias:
          description: An alias for the time period
          example: alias
          type: string
        active_time_ranges:
          description: The list of active time ranges which replaces the existing
            list of time ranges
          example:
            end: '14:00'
            start: '12:00'
          items:
            $ref: '#/components/schemas/TimeRangeActive'
          type: array
        exceptions:
          example:
          - date: '2020-01-01'
            time_ranges:
            - end: '18:00'
              start: '14:00'
          items:
            $ref: '#/components/schemas/TimePeriodException'
          type: array
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: username password
      description: 'The format of the header-value is "Bearer $automation_user $automation_user_password"


        Example: `Bearer hansdampf miezekatze123`'
      in: header
      scheme: bearer
      type: http
      x-bearerInfoFunc: cmk.gui.wsgi.auth.bearer_auth
externalDocs:
  description: The Checkmk Handbook
  url: https://checkmk.com/cms.html
info:
  contact:
    email: feedback@checkmk.com
    name: Contact the Checkmk Team
    url: https://checkmk.com/contact.php
  description: '# Introduction


    With the Checkmk REST-API you can transfer and execute the tasks you normally
    perform

    manually in Checkmk''s GUI to the Checkmk server via command or script.


    REST stands for REpresentational State Transfer and describes an architecture
    for the exchange of

    data on distributed systems - especially for Web services. The implementation
    of this REST-API is

    done via the HTTP/1.1 protocol, where resources are addressed via URIs and accessed
    with HTTP

    methods (GET, POST, PUT, DELETE).


    The API is documented in a machine-readable schema and a human-readable format
    in English, with all

    resources, their input and output parameters and the associated value ranges.
    The API is created

    with the OpenAPI specification 3.x, an API description format especially for REST
    APIs.


    The API documentation created with this specification is displayed to you with
    ReDoc, a responsive

    Web design for OpenAPI documents.



    # Prerequisites


    * You are experienced in using an API, preferably a REST-API.

    * You are familiar with at least one of the applications for which sample code
    is available.

    * You know Checkmk and its principles of setup and configuration.



    # Using the API documentation


    The API documentation''s Web design provides 3 panes.


    The left navigation pane is used for orientation, search and quick jump to the
    exact description of

    the entries in the middle content pane. The table of contents contains one entry
    for each API endpoint.

    An endpoint uses a URL to refer to the resource that the API provides (e.g., to
    collect hosts),

    along with the method used to access the resource (e.g., GET to display a host).

    The endpoints are organized in several folders.


    The middle content pane contains all information about the definition of a request
    (with parameters,

    value ranges, default values and descriptions) and the corresponding answers (also
    with all details).

    The possible answers are displayed in different colors, depending on whether the
    returned HTTP status

    code signals success or an error.


    The right example pane shows the method and URL for the endpoint selected in the
    content pane,

    followed by several examples of requests: the payload in JSON format (if relevant
    to the endpoint) and

    code examples, such as cURL, HTTPie, Python Requests, or Python Urllib. Then follow
    the responses

    according to the HTTP status. All code examples can be copied to the clipboard
    with the Copy button.



    # Responses


    As specified by the `Content-Type` of `application/json`, the response payload
    is serialized with

    JSON and encoded in UTF-8.


    All responses are well-formed according to the

    [Restful-Objects standard](https://en.wikipedia.org/wiki/Restful_Objects).

    There are a limited number of key concepts in the standard (e.g. object, action,
    collection, etc.)

    which enables the use of this API without having to understand the details of
    the implementation of

    each endpoint.


    Every response comes with a collection of `links` to inform the API client on
    possible

    follow-up actions. For example, a folder response can have links to resources
    for updating,

    deleting and moving the folder. The client does not have to know about the URL
    structure, it

    just needs to follow the link. In this sense, the API is quasi self-documenting.

    This provision of additional information as a REST-API principle is also called

    [HATEOAS](https://en.wikipedia.org/wiki/HATEOAS).



    # Authentication


    To use this API from a client, an *automation* user must be set up in Checkmk.
    Only this user is

    authorized to perform actions via the API. For a newly created site the automation
    user is

    already created. You can find it, like other users, in Checkmk at *Setup* > *Users*.


    Username and password of the automation user must be transmitted in the HTTP header
    in the

    `Bearer` format in every request to the Checkmk server.


    <SecurityDefinitions />



    # Client compatibility issues


    ## Overriding request methods


    If you have a client which cannot do the HTTP PUT or DELETE methods, you can use
    the

    `X-HTTP-Method-Override` HTTP header to force the server into believing the client
    actually sent

    such a method. In these cases the HTTP method to use has to be POST. You cannot
    override from GET.


    ## Backwards compatibility


    Future versions of this API may add additional fields in the responses. Clients
    must be written

    in a way to NOT expect the absence of a field, as we don''t guarantee that.

    For backwards compatibility reasons we only keep the fields that have already
    been there in older

    versions. You can consult the documentation to see what changed in each API revision.'
  license:
    name: GNU General Public License version 2
    url: https://checkmk.com/gpl.html
  title: Checkmk REST-API
  version: 0.3.2
openapi: 3.0.2
paths:
  /objects/host/{host_name}/actions/acknowledge/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.acknowledgement.set_acknowledgement_on_host
      parameters:
      - description: A hostname.
        in: path
        name: host_name
        required: true
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeHostProblem'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Acknowledge for a specific host
      tags:
      - cmk.gui.plugins.openapi.endpoints.acknowledgement
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/objects/host/example.com/actions/acknowledge/invoke\"\
          ,\n    json={\n        'sticky': False,\n        'persistent': False,\n\
          \        'notify': False,\n        'comment': 'This was expected.'\n   \
          \ },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host/example.com/actions/acknowledge/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'sticky': False,\n        'persistent':\
          \ False,\n        'notify': False,\n        'comment': 'This was expected.'\n\
          \    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"comment\": \"This was expected.\",\n\
          \          \"notify\": false,\n          \"persistent\": false,\n      \
          \    \"sticky\": false\n        }' \\\n    \"$API_URL/objects/host/example.com/actions/acknowledge/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/objects/host/example.com/actions/acknowledge/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    sticky='False' \\\n    persistent='False' \\\
          \n    notify='False' \\\n    comment='This was expected.' \\\n    --json"
  /objects/hostgroup/{hostgroup_name}/actions/acknowledge/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.acknowledgement.set_acknowledgement_on_hostgroup
      parameters:
      - description: The name of the host group
        in: path
        name: hostgroup_name
        required: true
        schema:
          example: samples
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeHostProblem'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Acknowledge for hosts of a host group
      tags:
      - cmk.gui.plugins.openapi.endpoints.acknowledgement
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/objects/hostgroup/samples/actions/acknowledge/invoke\"\
          ,\n    json={\n        'sticky': False,\n        'persistent': False,\n\
          \        'notify': False,\n        'comment': 'This was expected.'\n   \
          \ },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/hostgroup/samples/actions/acknowledge/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'sticky': False,\n        'persistent':\
          \ False,\n        'notify': False,\n        'comment': 'This was expected.'\n\
          \    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"comment\": \"This was expected.\",\n\
          \          \"notify\": false,\n          \"persistent\": false,\n      \
          \    \"sticky\": false\n        }' \\\n    \"$API_URL/objects/hostgroup/samples/actions/acknowledge/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/objects/hostgroup/samples/actions/acknowledge/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    sticky='False' \\\n    persistent='False' \\\
          \n    notify='False' \\\n    comment='This was expected.' \\\n    --json"
  /domain-types/host/actions/bulk-acknowledge/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.acknowledgement.bulk_set_acknowledgement_on_hosts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAcknowledgeHostProblem'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Bulk acknowledge for hosts
      tags:
      - cmk.gui.plugins.openapi.endpoints.acknowledgement
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/host/actions/bulk-acknowledge/invoke\"\
          ,\n    json={\n        'sticky': False,\n        'persistent': False,\n\
          \        'notify': False,\n        'comment': 'This was expected.',\n  \
          \      'entries': ['example.com', 'sample.com']\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host/actions/bulk-acknowledge/invoke\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'sticky': False,\n        'persistent':\
          \ False,\n        'notify': False,\n        'comment': 'This was expected.',\n\
          \        'entries': ['example.com', 'sample.com']\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"comment\": \"This was expected.\",\n\
          \          \"entries\": [\n            \"example.com\",\n            \"\
          sample.com\"\n          ],\n          \"notify\": false,\n          \"persistent\"\
          : false,\n          \"sticky\": false\n        }' \\\n    \"$API_URL/domain-types/host/actions/bulk-acknowledge/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/host/actions/bulk-acknowledge/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    sticky='False' \\\n    persistent='False' \\\
          \n    notify='False' \\\n    comment='This was expected.' \\\n    entries='['example.com',\
          \ 'sample.com']' \\\n    --json"
  /domain-types/service/{service_description}/actions/acknowledge/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.acknowledgement.set_acknowledgement_for_service
      parameters:
      - description: The service description.
        in: path
        name: service_description
        required: true
        schema:
          example: Memory
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeServiceProblem'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Acknowledge for a service globally
      tags:
      - cmk.gui.plugins.openapi.endpoints.acknowledgement
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/service/Memory/actions/acknowledge/invoke\"\
          ,\n    json={\n        'sticky': False,\n        'persistent': False,\n\
          \        'notify': False,\n        'comment': 'This was expected.'\n   \
          \ },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service/Memory/actions/acknowledge/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'sticky': False,\n        'persistent':\
          \ False,\n        'notify': False,\n        'comment': 'This was expected.'\n\
          \    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"comment\": \"This was expected.\",\n\
          \          \"notify\": false,\n          \"persistent\": false,\n      \
          \    \"sticky\": false\n        }' \\\n    \"$API_URL/domain-types/service/Memory/actions/acknowledge/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/service/Memory/actions/acknowledge/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    sticky='False' \\\n    persistent='False' \\\
          \n    notify='False' \\\n    comment='This was expected.' \\\n    --json"
  /objects/host/{host_name}/objects/service/{service_description}/actions/acknowledge/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.acknowledgement.set_acknowledgement_on_host_service
      parameters:
      - description: A hostname.
        in: path
        name: host_name
        required: true
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      - description: The service description.
        in: path
        name: service_description
        required: true
        schema:
          example: Memory
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeServiceProblem'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Acknowledge for services on a host
      tags:
      - cmk.gui.plugins.openapi.endpoints.acknowledgement
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/objects/host/example.com/objects/service/Memory/actions/acknowledge/invoke\"\
          ,\n    json={\n        'sticky': False,\n        'persistent': False,\n\
          \        'notify': False,\n        'comment': 'This was expected.'\n   \
          \ },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host/example.com/objects/service/Memory/actions/acknowledge/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'sticky': False,\n        'persistent':\
          \ False,\n        'notify': False,\n        'comment': 'This was expected.'\n\
          \    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"comment\": \"This was expected.\",\n\
          \          \"notify\": false,\n          \"persistent\": false,\n      \
          \    \"sticky\": false\n        }' \\\n    \"$API_URL/objects/host/example.com/objects/service/Memory/actions/acknowledge/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/objects/host/example.com/objects/service/Memory/actions/acknowledge/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    sticky='False' \\\n    persistent='False' \\\
          \n    notify='False' \\\n    comment='This was expected.' \\\n    --json"
  /domain-types/service/actions/bulk-acknowledge/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.acknowledgement.bulk_set_acknowledgement_on_host_service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAcknowledgeServiceProblem'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Bulk Acknowledge specific services on specific host
      tags:
      - cmk.gui.plugins.openapi.endpoints.acknowledgement
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/service/actions/bulk-acknowledge/invoke\"\
          ,\n    json={\n        'sticky': False,\n        'persistent': False,\n\
          \        'notify': False,\n        'comment': 'This was expected.',\n  \
          \      'host_name': 'example.com',\n        'entries': ['CPU utilization',\
          \ 'Memory']\n    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service/actions/bulk-acknowledge/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'sticky': False,\n        'persistent':\
          \ False,\n        'notify': False,\n        'comment': 'This was expected.',\n\
          \        'host_name': 'example.com',\n        'entries': ['CPU utilization',\
          \ 'Memory']\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"comment\": \"This was expected.\",\n\
          \          \"entries\": [\n            \"CPU utilization\",\n          \
          \  \"Memory\"\n          ],\n          \"host_name\": \"example.com\",\n\
          \          \"notify\": false,\n          \"persistent\": false,\n      \
          \    \"sticky\": false\n        }' \\\n    \"$API_URL/domain-types/service/actions/bulk-acknowledge/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/service/actions/bulk-acknowledge/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    sticky='False' \\\n    persistent='False' \\\
          \n    notify='False' \\\n    comment='This was expected.' \\\n    host_name='example.com'\
          \ \\\n    entries='['CPU utilization', 'Memory']' \\\n    --json"
  /objects/servicegroup/{servicegroup_name}/actions/acknowledge/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.acknowledgement.set_acknowledgement_on_servicegroup
      parameters:
      - description: The name of the service group
        in: path
        name: servicegroup_name
        required: true
        schema:
          example: windows
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeServiceProblem'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Acknowledge for services of a service group
      tags:
      - cmk.gui.plugins.openapi.endpoints.acknowledgement
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/objects/servicegroup/windows/actions/acknowledge/invoke\"\
          ,\n    json={\n        'sticky': False,\n        'persistent': False,\n\
          \        'notify': False,\n        'comment': 'This was expected.'\n   \
          \ },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/servicegroup/windows/actions/acknowledge/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'sticky': False,\n        'persistent':\
          \ False,\n        'notify': False,\n        'comment': 'This was expected.'\n\
          \    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"comment\": \"This was expected.\",\n\
          \          \"notify\": false,\n          \"persistent\": false,\n      \
          \    \"sticky\": false\n        }' \\\n    \"$API_URL/objects/servicegroup/windows/actions/acknowledge/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/objects/servicegroup/windows/actions/acknowledge/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    sticky='False' \\\n    persistent='False' \\\
          \n    notify='False' \\\n    comment='This was expected.' \\\n    --json"
  /domain-types/activation_run/actions/activate-changes/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.activate_changes.activate_changes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivateChanges'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          description: The activation has already been completed.
          headers: {}
        '302':
          description: The activation is still running. Redirecting to the 'Wait for
            completion' endpoint.
      summary: Activate pending changes
      tags:
      - cmk.gui.plugins.openapi.endpoints.activate_changes
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/activation_run/actions/activate-changes/invoke\"\
          ,\n    json={'redirect': False, 'sites': ['production']},\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/activation_run/actions/activate-changes/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({'redirect': False, 'sites': ['production']}).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"redirect\": false,\n          \"sites\"\
          : [\n            \"production\"\n          ]\n        }' \\\n    \"$API_URL/domain-types/activation_run/actions/activate-changes/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/activation_run/actions/activate-changes/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    redirect='False' \\\n    sites='['production']'\
          \ \\\n    --json"
  /objects/activation_run/{activation_id}/actions/wait-for-completion/invoke:
    get:
      description: This endpoint will periodically redirect on itself to prevent timeouts.
      operationId: cmk.gui.plugins.openapi.endpoints.activate_changes.activate_changes_state
      parameters:
      - description: The activation-id.
        in: path
        name: activation_id
        required: true
        schema:
          example: d3b07384d113e0ec49eaa6238ad5ff00
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '302':
          description: Either the resource has moved or has not yet completed. Please
            see this resource for further information.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Wait for an activation-run to complete.
      tags:
      - cmk.gui.plugins.openapi.endpoints.activate_changes
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00/actions/wait-for-completion/invoke\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00/actions/wait-for-completion/invoke\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00/actions/wait-for-completion/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00/actions/wait-for-completion/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
  /objects/activation_run/{activation_id}:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.activate_changes.show_activation
      parameters:
      - description: The activation-id.
        in: path
        name: activation_id
        required: true
        schema:
          example: d3b07384d113e0ec49eaa6238ad5ff00
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          description: ''
          headers: {}
      summary: Show the status of a particular activation-run.
      tags:
      - cmk.gui.plugins.openapi.endpoints.activate_changes
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/activation_run/d3b07384d113e0ec49eaa6238ad5ff00\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
  /domain-types/activation_run/collections/running:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.activate_changes.list_activations
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: ''
          headers: {}
      summary: Show all currently running activations
      tags:
      - cmk.gui.plugins.openapi.endpoints.activate_changes
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/activation_run/collections/running\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/activation_run/collections/running\",\n \
          \   method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/domain-types/activation_run/collections/running\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/activation_run/collections/running\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
  /objects/bi_rule/{rule_id}:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.bi.delete_bi_rule
      parameters:
      - in: path
        name: rule_id
        required: true
        schema:
          example: rule1
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Delete BI Rule
      tags:
      - cmk.gui.plugins.openapi.endpoints.bi
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/bi_rule/rule1\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_rule/rule1\",\n    method=\"DELETE\",\n   \
          \ headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/bi_rule/rule1\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/objects/bi_rule/rule1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.bi.get_bi_rule
      parameters:
      - in: path
        name: rule_id
        required: true
        schema:
          example: rule1
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIRuleEndpoint'
          description: ''
          headers: {}
      summary: Get BI Rule
      tags:
      - cmk.gui.plugins.openapi.endpoints.bi
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/bi_rule/rule1\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_rule/rule1\",\n    method=\"GET\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/bi_rule/rule1\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/bi_rule/rule1\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    --json"
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.bi.put_bi_rule
      parameters:
      - in: path
        name: rule_id
        required: true
        schema:
          example: rule1
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BIRuleEndpoint'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIRuleEndpoint'
          description: The operation was done successfully.
          headers: {}
      summary: Save BI Rule
      tags:
      - cmk.gui.plugins.openapi.endpoints.bi
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/bi_rule/rule1\"\
          ,\n    json={\n        'id': 'rule1',\n        'nodes': [],\n        'params':\
          \ [{\n            'arguments': ['foo', 'bar']\n        }],\n        'node_visualization':\
          \ {\n            'type': 'block',\n            'style_config': {}\n    \
          \    },\n        'properties': {\n            'title': '',\n           \
          \ 'comment': '',\n            'docu_url': '',\n            'icon': '',\n\
          \            'state_messages': {}\n        },\n        'aggregation_function':\
          \ {\n            'type': 'best',\n            'count': 1,\n            'restrict_state':\
          \ 2\n        },\n        'computation_options': {\n            'disabled':\
          \ False\n        },\n        'pack_id': 'pack1'\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_rule/rule1\",\n    method=\"PUT\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n    },\n    data=json.dumps({\n   \
          \     'id': 'rule1',\n        'nodes': [],\n        'params': [{\n     \
          \       'arguments': ['foo', 'bar']\n        }],\n        'node_visualization':\
          \ {\n            'type': 'block',\n            'style_config': {}\n    \
          \    },\n        'properties': {\n            'title': '',\n           \
          \ 'comment': '',\n            'docu_url': '',\n            'icon': '',\n\
          \            'state_messages': {}\n        },\n        'aggregation_function':\
          \ {\n            'type': 'best',\n            'count': 1,\n            'restrict_state':\
          \ 2\n        },\n        'computation_options': {\n            'disabled':\
          \ False\n        },\n        'pack_id': 'pack1'\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"aggregation_function\": {\n        \
          \    \"count\": 1,\n            \"restrict_state\": 2,\n            \"type\"\
          : \"best\"\n          },\n          \"computation_options\": {\n       \
          \     \"disabled\": false\n          },\n          \"id\": \"rule1\",\n\
          \          \"node_visualization\": {\n            \"style_config\": {},\n\
          \            \"type\": \"block\"\n          },\n          \"nodes\": [],\n\
          \          \"pack_id\": \"pack1\",\n          \"params\": [\n          \
          \  {\n              \"arguments\": [\n                \"foo\",\n       \
          \         \"bar\"\n              ]\n            }\n          ],\n      \
          \    \"properties\": {\n            \"comment\": \"\",\n            \"docu_url\"\
          : \"\",\n            \"icon\": \"\",\n            \"state_messages\": {},\n\
          \            \"title\": \"\"\n          }\n        }' \\\n    \"$API_URL/objects/bi_rule/rule1\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/bi_rule/rule1\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    id='rule1' \\\n    nodes='[]' \\\n    params='[{'arguments': ['foo',\
          \ 'bar']}]' \\\n    node_visualization='{'type': 'block', 'style_config':\
          \ {}}' \\\n    properties='{'title': '', 'comment': '', 'docu_url': '',\
          \ 'icon': '', 'state_messages': {}}' \\\n    aggregation_function='{'type':\
          \ 'best', 'count': 1, 'restrict_state': 2}' \\\n    computation_options='{'disabled':\
          \ False}' \\\n    pack_id='pack1' \\\n    --json"
  /objects/bi_aggregation/{aggregation_id}:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.bi.delete_bi_aggregation
      parameters:
      - in: path
        name: aggregation_id
        required: true
        schema:
          example: aggregation1
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Delete BI Aggregation
      tags:
      - cmk.gui.plugins.openapi.endpoints.bi
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/bi_aggregation/aggregation1\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_aggregation/aggregation1\",\n    method=\"\
          DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n    },\n)\n\
          response = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/bi_aggregation/aggregation1\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/objects/bi_aggregation/aggregation1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.bi.get_bi_aggregation
      parameters:
      - in: path
        name: aggregation_id
        required: true
        schema:
          example: aggregation1
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIAggregationEndpoint'
          description: ''
          headers: {}
      summary: Get BI Aggregation
      tags:
      - cmk.gui.plugins.openapi.endpoints.bi
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/bi_aggregation/aggregation1\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_aggregation/aggregation1\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/bi_aggregation/aggregation1\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/bi_aggregation/aggregation1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.bi.put_bi_aggregation
      parameters:
      - in: path
        name: aggregation_id
        required: true
        schema:
          example: aggregation1
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BIAggregationEndpoint'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BIAggregationEndpoint'
          description: The operation was done successfully.
          headers: {}
      summary: Save BI Aggregation
      tags:
      - cmk.gui.plugins.openapi.endpoints.bi
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/bi_aggregation/aggregation1\"\
          ,\n    json={\n        'id': 'aggr1',\n        'customer': 'customer1',\n\
          \        'groups': {\n            'names': ['groupA', 'groupB'],\n     \
          \       'paths': [['path', 'group', 'a'],\n                      ['path',\
          \ 'group', 'b']]\n        },\n        'node': {\n            'search': {\n\
          \                'type': 'empty'\n            },\n            'action':\
          \ {\n                'type': 'state_of_host',\n                'host_regex':\
          \ ''\n            }\n        },\n        'aggregation_visualization': {\n\
          \            'ignore_rule_styles': False,\n            'layout_id': 'builtin_default',\n\
          \            'line_style': 'round'\n        },\n        'computation_options':\
          \ {\n            'disabled': False,\n            'use_hard_states': False,\n\
          \            'escalate_downtimes_as_warn': False\n        },\n        'pack_id':\
          \ 'pack1'\n    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_aggregation/aggregation1\",\n    method=\"\
          PUT\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n    data=json.dumps({\n\
          \        'id': 'aggr1',\n        'customer': 'customer1',\n        'groups':\
          \ {\n            'names': ['groupA', 'groupB'],\n            'paths': [['path',\
          \ 'group', 'a'],\n                      ['path', 'group', 'b']]\n      \
          \  },\n        'node': {\n            'search': {\n                'type':\
          \ 'empty'\n            },\n            'action': {\n                'type':\
          \ 'state_of_host',\n                'host_regex': ''\n            }\n  \
          \      },\n        'aggregation_visualization': {\n            'ignore_rule_styles':\
          \ False,\n            'layout_id': 'builtin_default',\n            'line_style':\
          \ 'round'\n        },\n        'computation_options': {\n            'disabled':\
          \ False,\n            'use_hard_states': False,\n            'escalate_downtimes_as_warn':\
          \ False\n        },\n        'pack_id': 'pack1'\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"aggregation_visualization\": {\n   \
          \         \"ignore_rule_styles\": false,\n            \"layout_id\": \"\
          builtin_default\",\n            \"line_style\": \"round\"\n          },\n\
          \          \"computation_options\": {\n            \"disabled\": false,\n\
          \            \"escalate_downtimes_as_warn\": false,\n            \"use_hard_states\"\
          : false\n          },\n          \"customer\": \"customer1\",\n        \
          \  \"groups\": {\n            \"names\": [\n              \"groupA\",\n\
          \              \"groupB\"\n            ],\n            \"paths\": [\n  \
          \            [\n                \"path\",\n                \"group\",\n\
          \                \"a\"\n              ],\n              [\n            \
          \    \"path\",\n                \"group\",\n                \"b\"\n    \
          \          ]\n            ]\n          },\n          \"id\": \"aggr1\",\n\
          \          \"node\": {\n            \"action\": {\n              \"host_regex\"\
          : \"\",\n              \"type\": \"state_of_host\"\n            },\n   \
          \         \"search\": {\n              \"type\": \"empty\"\n           \
          \ }\n          },\n          \"pack_id\": \"pack1\"\n        }' \\\n   \
          \ \"$API_URL/objects/bi_aggregation/aggregation1\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/bi_aggregation/aggregation1\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    id='aggr1' \\\n    customer='customer1' \\\n\
          \    groups='{'names': ['groupA', 'groupB'], 'paths': [['path', 'group',\
          \ 'a'], ['path', 'group', 'b']]}' \\\n    node='{'search': {'type': 'empty'},\
          \ 'action': {'type': 'state_of_host', 'host_regex': ''}}' \\\n    aggregation_visualization='{'ignore_rule_styles':\
          \ False, 'layout_id': 'builtin_default', 'line_style': 'round'}' \\\n  \
          \  computation_options='{'disabled': False, 'use_hard_states': False, 'escalate_downtimes_as_warn':\
          \ False}' \\\n    pack_id='pack1' \\\n    --json"
  /domain-types/bi_pack/collections/all:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.bi.get_bi_packs
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: ''
          headers: {}
      summary: Show all BI Packs
      tags:
      - cmk.gui.plugins.openapi.endpoints.bi
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/bi_pack/collections/all\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/bi_pack/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/domain-types/bi_pack/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/bi_pack/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
  /objects/bi_pack/{pack_id}:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.bi.get_bi_pack
      parameters:
      - in: path
        name: pack_id
        required: true
        schema:
          example: pack1
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          description: ''
          headers: {}
      summary: Get BI Pack
      tags:
      - cmk.gui.plugins.openapi.endpoints.bi
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/bi_pack/pack1\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/bi_pack/pack1\",\n    method=\"GET\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/bi_pack/pack1\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/bi_pack/pack1\" \\\
          \n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    --json"
  /domain-types/contact_group_config/collections/all:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.contact_group_config.list_group
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: ''
          headers: {}
      summary: Show all contact groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.contact_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/contact_group_config/collections/all\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/contact_group_config/collections/all\",\n\
          \    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/domain-types/contact_group_config/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/contact_group_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.contact_group_config.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputContactGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Create a contact group
      tags:
      - cmk.gui.plugins.openapi.endpoints.contact_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/contact_group_config/collections/all\"\
          ,\n    json={'name': 'OnCall', 'alias': 'Not on Sundays.'},\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/contact_group_config/collections/all\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({'name': 'OnCall', 'alias': 'Not on Sundays.'}).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"alias\": \"Not on Sundays.\",\n    \
          \      \"name\": \"OnCall\"\n        }' \\\n    \"$API_URL/domain-types/contact_group_config/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/contact_group_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    name='OnCall' \\\n    alias='Not on Sundays.'\
          \ \\\n    --json"
  /domain-types/contact_group_config/actions/bulk-create/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.contact_group_config.bulk_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkInputContactGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: The operation was done successfully.
          headers: {}
      summary: Bulk create host groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.contact_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-create/invoke\"\
          ,\n    json={\n        'entries': [{\n            'name': 'OnCall',\n  \
          \          'alias': 'Not on Sundays'\n        }]\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-create/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'entries': [{\n            'name':\
          \ 'OnCall',\n            'alias': 'Not on Sundays'\n        }]\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            {\n      \
          \        \"alias\": \"Not on Sundays\",\n              \"name\": \"OnCall\"\
          \n            }\n          ]\n        }' \\\n    \"$API_URL/domain-types/contact_group_config/actions/bulk-create/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/contact_group_config/actions/bulk-create/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='[{'name': 'OnCall', 'alias': 'Not\
          \ on Sundays'}]' \\\n    --json"
  /objects/contact_group_config/{name}:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.contact_group_config.delete
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Delete a contact group
      tags:
      - cmk.gui.plugins.openapi.endpoints.contact_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/contact_group_config/pathname\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/contact_group_config/pathname\",\n    method=\"\
          DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \"If-Match\"\
          : \"a20ceacf346041dc\",  # (required) The ETag of the object to be modified.\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\\n    \"$API_URL/objects/contact_group_config/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/objects/contact_group_config/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    --json"
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.contact_group_config.show
      parameters:
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroup'
          description: ''
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Show a contact group
      tags:
      - cmk.gui.plugins.openapi.endpoints.contact_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/contact_group_config/pathname\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/contact_group_config/pathname\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/contact_group_config/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/contact_group_config/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.contact_group_config.update
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputContactGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactGroup'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Update a contact group
      tags:
      - cmk.gui.plugins.openapi.endpoints.contact_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/contact_group_config/pathname\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n    json={'name': 'OnCall',\
          \ 'alias': 'Not on Sundays.'},\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/contact_group_config/pathname\",\n    method=\"\
          PUT\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \"If-Match\": \"a20ceacf346041dc\"\
          ,  # (required) The ETag of the object to be modified.\n    },\n    data=json.dumps({'name':\
          \ 'OnCall', 'alias': 'Not on Sundays.'}).encode('utf-8'),\n)\nresponse =\
          \ urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\ \\\n    --data '{\n\
          \          \"alias\": \"Not on Sundays.\",\n          \"name\": \"OnCall\"\
          \n        }' \\\n    \"$API_URL/objects/contact_group_config/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/contact_group_config/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    name='OnCall'\
          \ \\\n    alias='Not on Sundays.' \\\n    --json"
  /domain-types/contact_group_config/actions/bulk-delete/invoke:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.contact_group_config.bulk_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteContactGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Bulk delete contact groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.contact_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-delete/invoke\"\
          ,\n    json={'entries': ['windows', 'panels']},\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-delete/invoke\"\
          ,\n    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"\
          Bearer {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\"\
          ,\n    },\n    data=json.dumps({'entries': ['windows', 'panels']}).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            \"windows\"\
          ,\n            \"panels\"\n          ]\n        }' \\\n    \"$API_URL/domain-types/contact_group_config/actions/bulk-delete/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/domain-types/contact_group_config/actions/bulk-delete/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='['windows', 'panels']' \\\n    --json"
  /domain-types/contact_group_config/actions/bulk-update/invoke:
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.contact_group_config.bulk_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateContactGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: The operation was done successfully.
          headers: {}
      summary: Bulk update contact groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.contact_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-update/invoke\"\
          ,\n    json={\n        'entries': [{\n            'name': 'OnCall',\n  \
          \          'attributes': {\n                'name': 'OnCall updated',\n\
          \                'alias': 'Not on Sundays'\n            }\n        }]\n\
          \    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/contact_group_config/actions/bulk-update/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'entries': [{\n            'name':\
          \ 'OnCall',\n            'attributes': {\n                'name': 'OnCall\
          \ updated',\n                'alias': 'Not on Sundays'\n            }\n\
          \        }]\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            {\n      \
          \        \"attributes\": {\n                \"alias\": \"Not on Sundays\"\
          ,\n                \"name\": \"OnCall updated\"\n              },\n    \
          \          \"name\": \"OnCall\"\n            }\n          ]\n        }'\
          \ \\\n    \"$API_URL/domain-types/contact_group_config/actions/bulk-update/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/domain-types/contact_group_config/actions/bulk-update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='[{'name': 'OnCall', 'attributes':\
          \ {'name': 'OnCall updated', 'alias': 'Not on Sundays'}}]' \\\n    --json"
  /domain-types/downtime/collections/all:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.downtime.list_service_downtimes
      parameters:
      - description: A hostname.
        in: query
        name: host_name
        required: false
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      - description: The service description.
        in: query
        name: service_description
        required: false
        schema:
          example: Memory
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: ''
          headers: {}
      summary: Show all scheduled downtimes
      tags:
      - cmk.gui.plugins.openapi.endpoints.downtime
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/downtime/collections/all\"\
          ,\n    params={  # goes into query string\n        \"host_name\": \"example.com\"\
          ,  # A hostname.\n        \"service_description\": \"Memory\",  # The service\
          \ description.\n    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.parse\nimport\
          \ urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL\
          \ = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\n\nUSERNAME = \"\
          automation\"\nPASSWORD = \"test123\"\n\nquery_string = urllib.parse.urlencode({\n\
          \    \"host_name\": \"example.com\",  # A hostname.\n    \"service_description\"\
          : \"Memory\",  # The service description.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/downtime/collections/all?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    -G  \\\n    --data-urlencode \"host_name=example.com\" \\\n  \
          \  --data-urlencode \"service_description=Memory\"\n    \"$API_URL/domain-types/downtime/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/downtime/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    host_name==\"example.com\" \\\n    service_description==\"\
          Memory\" \\\n    --json"
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.downtime.create_downtime
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDowntime'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Create a scheduled downtime
      tags:
      - cmk.gui.plugins.openapi.endpoints.downtime
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/downtime/collections/all\"\
          ,\n    # This schema has multiple variations. Please refer to\n    # the\
          \ 'Payload' section for details.\n    json={\n        'downtime_type': 'host',\n\
          \        'start_time': '2017-07-21T17:32:28Z',\n        'end_time': '2017-07-21T17:32:28Z',\n\
          \        'recur': 'hour',\n        'duration': 3600,\n        'comment':\
          \ 'Security updates',\n        'host_name': 'example.com'\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/downtime/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n    },\n   \
          \ # This schema has multiple variations. Please refer to\n    # the 'Payload'\
          \ section for details.\n    data=json.dumps({\n        'downtime_type':\
          \ 'host',\n        'start_time': '2017-07-21T17:32:28Z',\n        'end_time':\
          \ '2017-07-21T17:32:28Z',\n        'recur': 'hour',\n        'duration':\
          \ 3600,\n        'comment': 'Security updates',\n        'host_name': 'example.com'\n\
          \    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\n# This schema has multiple variations. Please\
          \ refer to the\n# 'Payload' section for details.\ncurl \\\n    -X POST \\\
          \n    --header \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    --header\
          \ \"Accept: application/json\" \\ \\\n    --data '{\n          \"comment\"\
          : \"Security updates\",\n          \"downtime_type\": \"host\",\n      \
          \    \"duration\": 3600,\n          \"end_time\": \"2017-07-21T17:32:28Z\"\
          ,\n          \"host_name\": \"example.com\",\n          \"recur\": \"hour\"\
          ,\n          \"start_time\": \"2017-07-21T17:32:28Z\"\n        }' \\\n \
          \   \"$API_URL/domain-types/downtime/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\n# This schema has multiple variations. Please\
          \ refer to the\n# 'Payload' section for details.\nhttp POST \"$API_URL/domain-types/downtime/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    downtime_type='host' \\\n    start_time='2017-07-21T17:32:28Z'\
          \ \\\n    end_time='2017-07-21T17:32:28Z' \\\n    recur='hour' \\\n    duration='3600'\
          \ \\\n    comment='Security updates' \\\n    host_name='example.com' \\\n\
          \    --json"
  /objects/host/{host_name}/objects/downtime/{downtime_id}:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.downtime.delete_downtime
      parameters:
      - description: A hostname.
        in: path
        name: host_name
        required: true
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      - description: The id of the downtime
        in: path
        name: downtime_id
        required: true
        schema:
          example: '54'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Delete a scheduled downtime
      tags:
      - cmk.gui.plugins.openapi.endpoints.downtime
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/host/example.com/objects/downtime/54\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host/example.com/objects/downtime/54\",\n    method=\"\
          DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n    },\n)\n\
          response = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/host/example.com/objects/downtime/54\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/objects/host/example.com/objects/downtime/54\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
  /domain-types/downtime/actions/bulk-delete/invoke:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.downtime.bulk_delete_downtimes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteDowntime'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Bulk delete downtimes
      tags:
      - cmk.gui.plugins.openapi.endpoints.downtime
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/domain-types/downtime/actions/bulk-delete/invoke\"\
          ,\n    json={\n        'host_name': 'example.com',\n        'entries': [1120,\
          \ 1121]\n    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/downtime/actions/bulk-delete/invoke\",\n\
          \    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'host_name': 'example.com',\n  \
          \      'entries': [1120, 1121]\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            1120,\n  \
          \          1121\n          ],\n          \"host_name\": \"example.com\"\n\
          \        }' \\\n    \"$API_URL/domain-types/downtime/actions/bulk-delete/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/domain-types/downtime/actions/bulk-delete/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    host_name='example.com' \\\n    entries='[1120,\
          \ 1121]' \\\n    --json"
  /domain-types/folder_config/collections/all:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.folder_config.list_folders
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderCollection'
          description: ''
          headers: {}
      summary: Show all folders
      tags:
      - cmk.gui.plugins.openapi.endpoints.folder_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/folder_config/collections/all\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/folder_config/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/domain-types/folder_config/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/folder_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.folder_config.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolder'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteFolder'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Create a folder
      tags:
      - cmk.gui.plugins.openapi.endpoints.folder_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/folder_config/collections/all\"\
          ,\n    json={\n        'name': 'production',\n        'title': 'Production\
          \ Hosts',\n        'parent': '/',\n        'attributes': {}\n    },\n)\n\
          resp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/folder_config/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n    },\n   \
          \ data=json.dumps({\n        'name': 'production',\n        'title': 'Production\
          \ Hosts',\n        'parent': '/',\n        'attributes': {}\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"attributes\": {},\n          \"name\"\
          : \"production\",\n          \"parent\": \"\\/\",\n          \"title\":\
          \ \"Production Hosts\"\n        }' \\\n    \"$API_URL/domain-types/folder_config/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/folder_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    name='production' \\\n    title='Production\
          \ Hosts' \\\n    parent='/' \\\n    attributes='{}' \\\n    --json"
  /objects/folder_config/{folder}:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.folder_config.delete
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: The folder identifier. This can be a path name or the folder-specific
          128 bit identifier. This identifier is unique to the folder and stays the
          same, even if the folder has been moved. The special value 'root' represents
          the root-folder. The same root folder can also be accessed via '/'. The
          folder value has to urlencoded.
        in: path
        name: folder
        required: true
        schema:
          example: '%2Fmy%2Ffine%2Ffolder'
          pattern: /|(/[ -_a-zA-Z0-9]+)+|[a-fA-F0-9]{32}
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Delete a folder
      tags:
      - cmk.gui.plugins.openapi.endpoints.folder_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/folder_config/%2Fmy%2Ffine%2Ffolder\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/folder_config/%2Fmy%2Ffine%2Ffolder\",\n    method=\"\
          DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \"If-Match\"\
          : \"a20ceacf346041dc\",  # (required) The ETag of the object to be modified.\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\\n    \"$API_URL/objects/folder_config/%2Fmy%2Ffine%2Ffolder\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/objects/folder_config/%2Fmy%2Ffine%2Ffolder\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    --json"
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.folder_config.show_folder
      parameters:
      - description: The folder identifier. This can be a path name or the folder-specific
          128 bit identifier. This identifier is unique to the folder and stays the
          same, even if the folder has been moved. The special value 'root' represents
          the root-folder. The same root folder can also be accessed via '/'. The
          folder value has to urlencoded.
        in: path
        name: folder
        required: true
        schema:
          example: '%2Fmy%2Ffine%2Ffolder'
          pattern: /|(/[ -_a-zA-Z0-9]+)+|[a-fA-F0-9]{32}
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteFolder'
          description: ''
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Show a folder
      tags:
      - cmk.gui.plugins.openapi.endpoints.folder_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/folder_config/%2Fmy%2Ffine%2Ffolder\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/folder_config/%2Fmy%2Ffine%2Ffolder\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/folder_config/%2Fmy%2Ffine%2Ffolder\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/folder_config/%2Fmy%2Ffine%2Ffolder\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.folder_config.update
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: The folder identifier. This can be a path name or the folder-specific
          128 bit identifier. This identifier is unique to the folder and stays the
          same, even if the folder has been moved. The special value 'root' represents
          the root-folder. The same root folder can also be accessed via '/'. The
          folder value has to urlencoded.
        in: path
        name: folder
        required: true
        schema:
          example: '%2Fmy%2Ffine%2Ffolder'
          pattern: /|(/[ -_a-zA-Z0-9]+)+|[a-fA-F0-9]{32}
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolder'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteFolder'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Update a folder
      tags:
      - cmk.gui.plugins.openapi.endpoints.folder_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/folder_config/%2Fmy%2Ffine%2Ffolder\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n    json={\n        'title':\
          \ 'Virtual Servers.',\n        'attributes': {},\n        'update_attributes':\
          \ {}\n    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/folder_config/%2Fmy%2Ffine%2Ffolder\",\n    method=\"\
          PUT\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \"If-Match\": \"a20ceacf346041dc\"\
          ,  # (required) The ETag of the object to be modified.\n    },\n    data=json.dumps({\n\
          \        'title': 'Virtual Servers.',\n        'attributes': {},\n     \
          \   'update_attributes': {}\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\ \\\n    --data '{\n\
          \          \"attributes\": {},\n          \"title\": \"Virtual Servers.\"\
          ,\n          \"update_attributes\": {}\n        }' \\\n    \"$API_URL/objects/folder_config/%2Fmy%2Ffine%2Ffolder\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/folder_config/%2Fmy%2Ffine%2Ffolder\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    title='Virtual\
          \ Servers.' \\\n    attributes='{}' \\\n    update_attributes='{}' \\\n\
          \    --json"
  /domain-types/folder_config/actions/bulk-update/invoke:
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.folder_config.bulk_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateFolder'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FolderCollection'
          description: The operation was done successfully.
          headers: {}
      summary: Bulk update folders
      tags:
      - cmk.gui.plugins.openapi.endpoints.folder_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/folder_config/actions/bulk-update/invoke\"\
          ,\n    json={\n        'entries': [{\n            'ident': 'root',\n   \
          \         'title': 'Virtual Servers',\n            'attributes': {\n   \
          \             'key': 'foo'\n            }\n        }]\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/folder_config/actions/bulk-update/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'entries': [{\n            'ident':\
          \ 'root',\n            'title': 'Virtual Servers',\n            'attributes':\
          \ {\n                'key': 'foo'\n            }\n        }]\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            {\n      \
          \        \"attributes\": {\n                \"key\": \"foo\"\n         \
          \     },\n              \"ident\": \"root\",\n              \"title\": \"\
          Virtual Servers\"\n            }\n          ]\n        }' \\\n    \"$API_URL/domain-types/folder_config/actions/bulk-update/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/domain-types/folder_config/actions/bulk-update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='[{'ident': 'root', 'title': 'Virtual\
          \ Servers', 'attributes': {'key': 'foo'}}]' \\\n    --json"
  /objects/folder_config/{folder}/actions/move/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.folder_config.move
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: The folder identifier. This can be a path name or the folder-specific
          128 bit identifier. This identifier is unique to the folder and stays the
          same, even if the folder has been moved. The special value 'root' represents
          the root-folder. The same root folder can also be accessed via '/'. The
          folder value has to urlencoded.
        in: path
        name: folder
        required: true
        schema:
          example: '%2Fmy%2Ffine%2Ffolder'
          pattern: /|(/[ -_a-zA-Z0-9]+)+|[a-fA-F0-9]{32}
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveFolder'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteFolder'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Move a folder
      tags:
      - cmk.gui.plugins.openapi.endpoints.folder_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/objects/folder_config/%2Fmy%2Ffine%2Ffolder/actions/move/invoke\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n    json={'destination':\
          \ '%2Fmy%2Ffine%2Ffolder'},\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/folder_config/%2Fmy%2Ffine%2Ffolder/actions/move/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \"If-Match\": \"a20ceacf346041dc\",  # (required) The ETag of the\
          \ object to be modified.\n    },\n    data=json.dumps({'destination': '%2Fmy%2Ffine%2Ffolder'}).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\ \\\n    --data '{\n\
          \          \"destination\": \"%2Fmy%2Ffine%2Ffolder\"\n        }' \\\n \
          \   \"$API_URL/objects/folder_config/%2Fmy%2Ffine%2Ffolder/actions/move/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/objects/folder_config/%2Fmy%2Ffine%2Ffolder/actions/move/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    destination='%2Fmy%2Ffine%2Ffolder'\
          \ \\\n    --json"
  /domain-types/host/collections/all:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host.list_hosts
      parameters:
      - description: Restrict the query to this particular site.
        explode: true
        in: query
        name: sites
        required: false
        schema:
          default: []
          items:
            type: string
          type: array
        style: form
      - description: An query expression in nested dictionary form. If you want to
          use multiple expressions, nest them with the AND/OR operators.
        in: query
        name: query
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Expr'
          example: '{"op": "not", "expr": {"op": "=", "left": "hosts.name", "right":
            "example.com"}}'
      - description: The desired columns of the hosts table. If left empty, a default
          set of columns is used.
        explode: true
        in: query
        name: columns
        required: false
        schema:
          default:
          - name
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: ''
          headers: {}
      summary: Show hosts of specific condition
      tags:
      - cmk.gui.plugins.openapi.endpoints.host
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/host/collections/all\"\
          ,\n    params={  # goes into query string\n        \"query\": \"{\"op\"\
          : \"not\", \"expr\": {\"op\": \"=\", \"left\": \"hosts.name\", \"right\"\
          : \"example.com\"}}\",  # An query expression in nested dictionary form.\n\
          \    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.parse\nimport\
          \ urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL\
          \ = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\n\nUSERNAME = \"\
          automation\"\nPASSWORD = \"test123\"\n\nquery_string = urllib.parse.urlencode({\n\
          \    \"query\": \"{\"op\": \"not\", \"expr\": {\"op\": \"=\", \"left\":\
          \ \"hosts.name\", \"right\": \"example.com\"}}\",  # An query expression\
          \ in nested dictionary form.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host/collections/all?{query_string}\",\n\
          \    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    -G  \\\n    --data-urlencode \"query={\"op\": \"not\", \"expr\"\
          : {\"op\": \"=\", \"left\": \"hosts.name\", \"right\": \"example.com\"}}\"\
          \ \\\n    \"$API_URL/domain-types/host/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/host/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    query==\"{\"op\": \"not\", \"expr\": {\"op\"\
          : \"=\", \"left\": \"hosts.name\", \"right\": \"example.com\"}}\" \\\n \
          \   --json"
  /domain-types/host_config/collections/all:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_config.list_hosts
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: ''
          headers: {}
      summary: Show all hosts
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/host_config/collections/all\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_config/collections/all\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/domain-types/host_config/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/host_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_config.create_host
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateHost'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Create a host
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/host_config/collections/all\"\
          ,\n    json={\n        'folder': '/',\n        'host_name': 'example.com',\n\
          \        'attributes': {\n            'ipaddress': '192.168.0.123'\n   \
          \     }\n    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_config/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n    },\n   \
          \ data=json.dumps({\n        'folder': '/',\n        'host_name': 'example.com',\n\
          \        'attributes': {\n            'ipaddress': '192.168.0.123'\n   \
          \     }\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"attributes\": {\n            \"ipaddress\"\
          : \"192.168.0.123\"\n          },\n          \"folder\": \"\\/\",\n    \
          \      \"host_name\": \"example.com\"\n        }' \\\n    \"$API_URL/domain-types/host_config/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/host_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    folder='/' \\\n    host_name='example.com'\
          \ \\\n    attributes='{'ipaddress': '192.168.0.123'}' \\\n    --json"
  /domain-types/host_config/collections/clusters:
    post:
      description: 'A cluster host groups many hosts (called nodes in this context)
        into a conceptual cluster.

        All the services of the individual nodes will be collated on the cluster host.'
      operationId: cmk.gui.plugins.openapi.endpoints.host_config.create_cluster_host
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterHost'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Create a cluster host
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/host_config/collections/clusters\"\
          ,\n    json={\n        'folder': '/',\n        'host_name': 'example.com',\n\
          \        'attributes': {\n            'ipaddress': '192.168.0.123'\n   \
          \     },\n        'nodes': ['host1', 'host2', 'host3']\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_config/collections/clusters\",\n   \
          \ method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'folder': '/',\n        'host_name':\
          \ 'example.com',\n        'attributes': {\n            'ipaddress': '192.168.0.123'\n\
          \        },\n        'nodes': ['host1', 'host2', 'host3']\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"attributes\": {\n            \"ipaddress\"\
          : \"192.168.0.123\"\n          },\n          \"folder\": \"\\/\",\n    \
          \      \"host_name\": \"example.com\",\n          \"nodes\": [\n       \
          \     \"host1\",\n            \"host2\",\n            \"host3\"\n      \
          \    ]\n        }' \\\n    \"$API_URL/domain-types/host_config/collections/clusters\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/host_config/collections/clusters\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    folder='/' \\\n    host_name='example.com'\
          \ \\\n    attributes='{'ipaddress': '192.168.0.123'}' \\\n    nodes='['host1',\
          \ 'host2', 'host3']' \\\n    --json"
  /domain-types/host_config/actions/bulk-create/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_config.bulk_create_hosts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCreateHost'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: The operation was done successfully.
          headers: {}
      summary: Bulk create hosts
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/host_config/actions/bulk-create/invoke\"\
          ,\n    json={\n        'entries': [{\n            'host_name': 'example.com',\n\
          \            'folder': 'root',\n            'attributes': {}\n        }]\n\
          \    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_config/actions/bulk-create/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'entries': [{\n            'host_name':\
          \ 'example.com',\n            'folder': 'root',\n            'attributes':\
          \ {}\n        }]\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            {\n      \
          \        \"attributes\": {},\n              \"folder\": \"root\",\n    \
          \          \"host_name\": \"example.com\"\n            }\n          ]\n\
          \        }' \\\n    \"$API_URL/domain-types/host_config/actions/bulk-create/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/host_config/actions/bulk-create/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='[{'host_name': 'example.com', 'folder':\
          \ 'root', 'attributes': {}}]' \\\n    --json"
  /objects/host_config/{host_name}/properties/nodes:
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_config.update_nodes
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: A hostname.
        in: path
        name: host_name
        required: true
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNodes'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectProperty'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Update the nodes of a cluster host
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host_config/example.com/properties/nodes\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n    json={'nodes': ['host1',\
          \ 'host2', 'host3']},\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config/example.com/properties/nodes\",\n\
          \    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \        \"If-Match\": \"a20ceacf346041dc\",  # (required) The ETag of the\
          \ object to be modified.\n    },\n    data=json.dumps({'nodes': ['host1',\
          \ 'host2', 'host3']}).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\ \\\n    --data '{\n\
          \          \"nodes\": [\n            \"host1\",\n            \"host2\",\n\
          \            \"host3\"\n          ]\n        }' \\\n    \"$API_URL/objects/host_config/example.com/properties/nodes\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/host_config/example.com/properties/nodes\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    nodes='['host1',\
          \ 'host2', 'host3']' \\\n    --json"
  /objects/host_config/{host_name}:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_config.delete
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: A hostname.
        in: path
        name: host_name
        required: true
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Delete a host
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/host_config/example.com\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config/example.com\",\n    method=\"DELETE\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \"If-Match\": \"a20ceacf346041dc\"\
          ,  # (required) The ETag of the object to be modified.\n    },\n)\nresponse\
          \ = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\\n    \"$API_URL/objects/host_config/example.com\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/objects/host_config/example.com\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    --json"
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_config.show_host
      parameters:
      - description: A hostname.
        in: path
        name: host_name
        required: true
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          description: ''
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Show a host
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/host_config/example.com\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config/example.com\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/host_config/example.com\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/host_config/example.com\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_config.update_host
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: A hostname.
        in: path
        name: host_name
        required: true
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHost'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Update a host
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host_config/example.com\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n    json={\n        'attributes':\
          \ {\n            'ipaddress': '192.168.0.123'\n        },\n        'update_attributes':\
          \ {\n            'ipaddress': '192.168.0.123'\n        },\n        'remove_attributes':\
          \ ['tag_foobar']\n    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_config/example.com\",\n    method=\"PUT\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \"If-Match\": \"a20ceacf346041dc\"\
          ,  # (required) The ETag of the object to be modified.\n    },\n    data=json.dumps({\n\
          \        'attributes': {\n            'ipaddress': '192.168.0.123'\n   \
          \     },\n        'update_attributes': {\n            'ipaddress': '192.168.0.123'\n\
          \        },\n        'remove_attributes': ['tag_foobar']\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\ \\\n    --data '{\n\
          \          \"attributes\": {\n            \"ipaddress\": \"192.168.0.123\"\
          \n          },\n          \"remove_attributes\": [\n            \"tag_foobar\"\
          \n          ],\n          \"update_attributes\": {\n            \"ipaddress\"\
          : \"192.168.0.123\"\n          }\n        }' \\\n    \"$API_URL/objects/host_config/example.com\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/host_config/example.com\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    attributes='{'ipaddress':\
          \ '192.168.0.123'}' \\\n    update_attributes='{'ipaddress': '192.168.0.123'}'\
          \ \\\n    remove_attributes='['tag_foobar']' \\\n    --json"
  /domain-types/host_config/actions/bulk-update/invoke:
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_config.bulk_update_hosts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateHost'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: The operation was done successfully.
          headers: {}
      summary: Bulk update hosts
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/host_config/actions/bulk-update/invoke\"\
          ,\n    json={\n        'entries': [{\n            'host_name': 'example.com',\n\
          \            'attributes': {}\n        }]\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_config/actions/bulk-update/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'entries': [{\n            'host_name':\
          \ 'example.com',\n            'attributes': {}\n        }]\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            {\n      \
          \        \"attributes\": {},\n              \"host_name\": \"example.com\"\
          \n            }\n          ]\n        }' \\\n    \"$API_URL/domain-types/host_config/actions/bulk-update/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/domain-types/host_config/actions/bulk-update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='[{'host_name': 'example.com', 'attributes':\
          \ {}}]' \\\n    --json"
  /domain-types/host_config/actions/bulk-delete/invoke:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_config.bulk_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteHost'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Bulk delete hosts
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/domain-types/host_config/actions/bulk-delete/invoke\"\
          ,\n    json={'entries': ['example', 'sample']},\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_config/actions/bulk-delete/invoke\"\
          ,\n    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"\
          Bearer {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\"\
          ,\n    },\n    data=json.dumps({'entries': ['example', 'sample']}).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            \"example\"\
          ,\n            \"sample\"\n          ]\n        }' \\\n    \"$API_URL/domain-types/host_config/actions/bulk-delete/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/domain-types/host_config/actions/bulk-delete/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='['example', 'sample']' \\\n    --json"
  /domain-types/host_group_config/collections/all:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_group_config.list_groups
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: ''
          headers: {}
      summary: Show all host groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/host_group_config/collections/all\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_group_config/collections/all\",\n  \
          \  method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/domain-types/host_group_config/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/host_group_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_group_config.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputHostGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroup'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Create a host group
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/host_group_config/collections/all\"\
          ,\n    json={'name': 'windows', 'alias': 'Windows Servers'},\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_group_config/collections/all\",\n  \
          \  method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({'name': 'windows', 'alias': 'Windows Servers'}).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"alias\": \"Windows Servers\",\n    \
          \      \"name\": \"windows\"\n        }' \\\n    \"$API_URL/domain-types/host_group_config/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/host_group_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    name='windows' \\\n    alias='Windows Servers'\
          \ \\\n    --json"
  /domain-types/host_group_config/actions/bulk-create/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_group_config.bulk_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkInputHostGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: The operation was done successfully.
          headers: {}
      summary: Bulk create host groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/host_group_config/actions/bulk-create/invoke\"\
          ,\n    json={\n        'entries': [{\n            'name': 'windows',\n \
          \           'alias': 'Windows Servers'\n        }]\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_group_config/actions/bulk-create/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'entries': [{\n            'name':\
          \ 'windows',\n            'alias': 'Windows Servers'\n        }]\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            {\n      \
          \        \"alias\": \"Windows Servers\",\n              \"name\": \"windows\"\
          \n            }\n          ]\n        }' \\\n    \"$API_URL/domain-types/host_group_config/actions/bulk-create/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/host_group_config/actions/bulk-create/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='[{'name': 'windows', 'alias': 'Windows\
          \ Servers'}]' \\\n    --json"
  /objects/host_group_config/{name}:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_group_config.delete
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Delete a host group
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/host_group_config/pathname\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_group_config/pathname\",\n    method=\"DELETE\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \"If-Match\": \"a20ceacf346041dc\"\
          ,  # (required) The ETag of the object to be modified.\n    },\n)\nresponse\
          \ = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\\n    \"$API_URL/objects/host_group_config/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/objects/host_group_config/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    --json"
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_group_config.get
      parameters:
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroup'
          description: ''
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Show a host group
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/host_group_config/pathname\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_group_config/pathname\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/host_group_config/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/host_group_config/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_group_config.update
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputHostGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostGroup'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Update a host group
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host_group_config/pathname\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n    json={'name': 'windows',\
          \ 'alias': 'Windows Servers'},\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_group_config/pathname\",\n    method=\"PUT\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \"If-Match\": \"a20ceacf346041dc\"\
          ,  # (required) The ETag of the object to be modified.\n    },\n    data=json.dumps({'name':\
          \ 'windows', 'alias': 'Windows Servers'}).encode('utf-8'),\n)\nresponse\
          \ = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\ \\\n    --data '{\n\
          \          \"alias\": \"Windows Servers\",\n          \"name\": \"windows\"\
          \n        }' \\\n    \"$API_URL/objects/host_group_config/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/host_group_config/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    name='windows'\
          \ \\\n    alias='Windows Servers' \\\n    --json"
  /domain-types/host_group_config/actions/bulk-delete/invoke:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_group_config.bulk_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteHostGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Bulk delete host groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/domain-types/host_group_config/actions/bulk-delete/invoke\"\
          ,\n    json={'entries': ['windows', 'panels']},\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_group_config/actions/bulk-delete/invoke\"\
          ,\n    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"\
          Bearer {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\"\
          ,\n    },\n    data=json.dumps({'entries': ['windows', 'panels']}).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            \"windows\"\
          ,\n            \"panels\"\n          ]\n        }' \\\n    \"$API_URL/domain-types/host_group_config/actions/bulk-delete/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/domain-types/host_group_config/actions/bulk-delete/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='['windows', 'panels']' \\\n    --json"
  /domain-types/host_group_config/actions/bulk-update/invoke:
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_group_config.bulk_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateHostGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: The operation was done successfully.
          headers: {}
      summary: Bulk update host groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/host_group_config/actions/bulk-update/invoke\"\
          ,\n    json={\n        'entries': [{\n            'name': 'windows',\n \
          \           'attributes': {\n                'name': 'windows updated',\n\
          \                'alias': 'Windows Servers'\n            }\n        }]\n\
          \    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_group_config/actions/bulk-update/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'entries': [{\n            'name':\
          \ 'windows',\n            'attributes': {\n                'name': 'windows\
          \ updated',\n                'alias': 'Windows Servers'\n            }\n\
          \        }]\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            {\n      \
          \        \"attributes\": {\n                \"alias\": \"Windows Servers\"\
          ,\n                \"name\": \"windows updated\"\n              },\n   \
          \           \"name\": \"windows\"\n            }\n          ]\n        }'\
          \ \\\n    \"$API_URL/domain-types/host_group_config/actions/bulk-update/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/domain-types/host_group_config/actions/bulk-update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='[{'name': 'windows', 'attributes':\
          \ {'name': 'windows updated', 'alias': 'Windows Servers'}}]' \\\n    --json"
  /domain-types/host_tag_group/collections/all:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_tag.create_host_tag_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputHostTagGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Create a host tag group
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_tag
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/host_tag_group/collections/all\"\
          ,\n    json={\n        'ident': 'group_id',\n        'title': 'Kubernetes',\n\
          \        'topic': 'Data Sources',\n        'help': 'Kubernetes Pods',\n\
          \        'tags': [{\n            'ident': 'pod',\n            'title': 'Pod'\n\
          \        }]\n    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/host_tag_group/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n    },\n   \
          \ data=json.dumps({\n        'ident': 'group_id',\n        'title': 'Kubernetes',\n\
          \        'topic': 'Data Sources',\n        'help': 'Kubernetes Pods',\n\
          \        'tags': [{\n            'ident': 'pod',\n            'title': 'Pod'\n\
          \        }]\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"help\": \"Kubernetes Pods\",\n     \
          \     \"ident\": \"group_id\",\n          \"tags\": [\n            {\n \
          \             \"ident\": \"pod\",\n              \"title\": \"Pod\"\n  \
          \          }\n          ],\n          \"title\": \"Kubernetes\",\n     \
          \     \"topic\": \"Data Sources\"\n        }' \\\n    \"$API_URL/domain-types/host_tag_group/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/host_tag_group/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    ident='group_id' \\\n    title='Kubernetes'\
          \ \\\n    topic='Data Sources' \\\n    help='Kubernetes Pods' \\\n    tags='[{'ident':\
          \ 'pod', 'title': 'Pod'}]' \\\n    --json"
  /objects/host_tag_group/{name}:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_tag.delete_host_tag_group
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: The name of the host tag group
        in: path
        name: name
        required: true
        schema:
          example: datasource
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHostTagGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Delete a host tag group
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_tag
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/host_tag_group/datasource\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n    json={'repair': False},\n\
          )\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_tag_group/datasource\",\n    method=\"DELETE\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \"If-Match\": \"a20ceacf346041dc\"\
          ,  # (required) The ETag of the object to be modified.\n    },\n    data=json.dumps({'repair':\
          \ False}).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\ \\\n    --data '{\n\
          \          \"repair\": false\n        }' \\\n    \"$API_URL/objects/host_tag_group/datasource\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/objects/host_tag_group/datasource\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    repair='False'\
          \ \\\n    --json"
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_tag.show_host_tag_group
      parameters:
      - description: The name of the host tag group
        in: path
        name: name
        required: true
        schema:
          example: datasource
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteHostTagGroup'
          description: ''
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Show host tag group
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_tag
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/host_tag_group/datasource\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_tag_group/datasource\",\n    method=\"GET\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/host_tag_group/datasource\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/host_tag_group/datasource\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.host_tag.update_host_tag_group
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: The name of the host tag group
        in: path
        name: name
        required: true
        schema:
          example: datasource
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHostTagGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteHostTagGroup'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Update a host tag group
      tags:
      - cmk.gui.plugins.openapi.endpoints.host_tag
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host_tag_group/datasource\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n    json={\n        'title':\
          \ 'Kubernetes',\n        'topic': 'Data Sources',\n        'help': 'Kubernetes\
          \ Pods',\n        'tags': [{\n            'ident': 'pod',\n            'title':\
          \ 'Pod'\n        }],\n        'repair': False\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host_tag_group/datasource\",\n    method=\"PUT\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \"If-Match\": \"a20ceacf346041dc\"\
          ,  # (required) The ETag of the object to be modified.\n    },\n    data=json.dumps({\n\
          \        'title': 'Kubernetes',\n        'topic': 'Data Sources',\n    \
          \    'help': 'Kubernetes Pods',\n        'tags': [{\n            'ident':\
          \ 'pod',\n            'title': 'Pod'\n        }],\n        'repair': False\n\
          \    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\ \\\n    --data '{\n\
          \          \"help\": \"Kubernetes Pods\",\n          \"repair\": false,\n\
          \          \"tags\": [\n            {\n              \"ident\": \"pod\"\
          ,\n              \"title\": \"Pod\"\n            }\n          ],\n     \
          \     \"title\": \"Kubernetes\",\n          \"topic\": \"Data Sources\"\n\
          \        }' \\\n    \"$API_URL/objects/host_tag_group/datasource\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/host_tag_group/datasource\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    title='Kubernetes'\
          \ \\\n    topic='Data Sources' \\\n    help='Kubernetes Pods' \\\n    tags='[{'ident':\
          \ 'pod', 'title': 'Pod'}]' \\\n    repair='False' \\\n    --json"
  /domain-types/password/collections/all:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.password.create_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputPassword'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Create a password
      tags:
      - cmk.gui.plugins.openapi.endpoints.password
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/password/collections/all\"\
          ,\n    json={\n        'ident': 'pass',\n        'title': 'Kubernetes login',\n\
          \        'comment': 'Kommentar',\n        'documentation_url': 'localhost',\n\
          \        'password': 'password',\n        'owner': 'admin',\n        'shared':\
          \ ['all']\n    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/password/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n    },\n   \
          \ data=json.dumps({\n        'ident': 'pass',\n        'title': 'Kubernetes\
          \ login',\n        'comment': 'Kommentar',\n        'documentation_url':\
          \ 'localhost',\n        'password': 'password',\n        'owner': 'admin',\n\
          \        'shared': ['all']\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"comment\": \"Kommentar\",\n        \
          \  \"documentation_url\": \"localhost\",\n          \"ident\": \"pass\"\
          ,\n          \"owner\": \"admin\",\n          \"password\": \"password\"\
          ,\n          \"shared\": [\n            \"all\"\n          ],\n        \
          \  \"title\": \"Kubernetes login\"\n        }' \\\n    \"$API_URL/domain-types/password/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/password/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    ident='pass' \\\n    title='Kubernetes login'\
          \ \\\n    comment='Kommentar' \\\n    documentation_url='localhost' \\\n\
          \    password='password' \\\n    owner='admin' \\\n    shared='['all']'\
          \ \\\n    --json"
  /objects/password/{name}:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.password.delete_password
      parameters:
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Delete a password
      tags:
      - cmk.gui.plugins.openapi.endpoints.password
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/password/pathname\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/password/pathname\",\n    method=\"DELETE\",\n\
          \    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/password/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/objects/password/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.password.show_password
      parameters:
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcretePassword'
          description: ''
          headers: {}
      summary: Show a password
      tags:
      - cmk.gui.plugins.openapi.endpoints.password
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/password/pathname\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/password/pathname\",\n    method=\"GET\",\n  \
          \  headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/password/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/password/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.password.update_password
      parameters:
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassword'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Update a password
      tags:
      - cmk.gui.plugins.openapi.endpoints.password
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/password/pathname\"\
          ,\n    json={\n        'title': 'Kubernetes login',\n        'comment':\
          \ 'Kommentar',\n        'documentation_url': 'localhost',\n        'password':\
          \ 'password',\n        'owner': 'admin',\n        'shared': ['all']\n  \
          \  },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/password/pathname\",\n    method=\"PUT\",\n  \
          \  headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n    data=json.dumps({\n\
          \        'title': 'Kubernetes login',\n        'comment': 'Kommentar',\n\
          \        'documentation_url': 'localhost',\n        'password': 'password',\n\
          \        'owner': 'admin',\n        'shared': ['all']\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"comment\": \"Kommentar\",\n        \
          \  \"documentation_url\": \"localhost\",\n          \"owner\": \"admin\"\
          ,\n          \"password\": \"password\",\n          \"shared\": [\n    \
          \        \"all\"\n          ],\n          \"title\": \"Kubernetes login\"\
          \n        }' \\\n    \"$API_URL/objects/password/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/password/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    title='Kubernetes login' \\\n    comment='Kommentar'\
          \ \\\n    documentation_url='localhost' \\\n    password='password' \\\n\
          \    owner='admin' \\\n    shared='['all']' \\\n    --json"
  /objects/host/{host_name}/collections/services:
    get:
      description: This list is filterable by various parameters.
      operationId: cmk.gui.plugins.openapi.endpoints.service._list_host_services
      parameters:
      - description: Restrict the query to this particular site.
        in: query
        name: site
        required: false
        schema:
          type: string
      - description: An query expression in nested dictionary form. If you want to
          use multiple expressions, nest them with the AND/OR operators.
        in: query
        name: query
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Expr'
          example: '{"op": "not", "expr": {"op": "=", "left": "hosts.name", "right":
            "example.com"}}'
      - description: The desired columns of the services table. If left empty, a default
          set of columns is used.
        explode: true
        in: query
        name: columns
        required: false
        schema:
          default:
          - host_name
          - description
          items:
            type: string
          type: array
        style: form
      - description: A hostname.
        in: path
        name: host_name
        required: true
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: ''
          headers: {}
      summary: List a host's monitored services.
      tags:
      - cmk.gui.plugins.openapi.endpoints.service
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/host/example.com/collections/services\"\
          ,\n    params={  # goes into query string\n        \"query\": \"{\"op\"\
          : \"not\", \"expr\": {\"op\": \"=\", \"left\": \"hosts.name\", \"right\"\
          : \"example.com\"}}\",  # An query expression in nested dictionary form.\n\
          \    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.parse\nimport\
          \ urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL\
          \ = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\n\nUSERNAME = \"\
          automation\"\nPASSWORD = \"test123\"\n\nquery_string = urllib.parse.urlencode({\n\
          \    \"query\": \"{\"op\": \"not\", \"expr\": {\"op\": \"=\", \"left\":\
          \ \"hosts.name\", \"right\": \"example.com\"}}\",  # An query expression\
          \ in nested dictionary form.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host/example.com/collections/services?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    -G  \\\n    --data-urlencode \"query={\"op\": \"not\", \"expr\"\
          : {\"op\": \"=\", \"left\": \"hosts.name\", \"right\": \"example.com\"}}\"\
          \ \\\n    \"$API_URL/objects/host/example.com/collections/services\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/host/example.com/collections/services\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    query==\"{\"op\": \"not\", \"expr\": {\"op\"\
          : \"=\", \"left\": \"hosts.name\", \"right\": \"example.com\"}}\" \\\n \
          \   --json"
  /domain-types/service/collections/all:
    get:
      description: This list is filterable by various parameters.
      operationId: cmk.gui.plugins.openapi.endpoints.service._list_all_services
      parameters:
      - description: A hostname.
        in: query
        name: host_name
        required: false
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      - description: Restrict the query to this particular site.
        in: query
        name: site
        required: false
        schema:
          type: string
      - description: An query expression in nested dictionary form. If you want to
          use multiple expressions, nest them with the AND/OR operators.
        in: query
        name: query
        required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/Expr'
          example: '{"op": "not", "expr": {"op": "=", "left": "hosts.name", "right":
            "example.com"}}'
      - description: The desired columns of the services table. If left empty, a default
          set of columns is used.
        explode: true
        in: query
        name: columns
        required: false
        schema:
          default:
          - host_name
          - description
          items:
            type: string
          type: array
        style: form
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: ''
          headers: {}
      summary: List all monitored services.
      tags:
      - cmk.gui.plugins.openapi.endpoints.service
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/service/collections/all\"\
          ,\n    params={  # goes into query string\n        \"host_name\": \"example.com\"\
          ,  # A hostname.\n        \"query\": \"{\"op\": \"not\", \"expr\": {\"op\"\
          : \"=\", \"left\": \"hosts.name\", \"right\": \"example.com\"}}\",  # An\
          \ query expression in nested dictionary form.\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.parse\nimport\
          \ urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL\
          \ = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\n\nUSERNAME = \"\
          automation\"\nPASSWORD = \"test123\"\n\nquery_string = urllib.parse.urlencode({\n\
          \    \"host_name\": \"example.com\",  # A hostname.\n    \"query\": \"{\"\
          op\": \"not\", \"expr\": {\"op\": \"=\", \"left\": \"hosts.name\", \"right\"\
          : \"example.com\"}}\",  # An query expression in nested dictionary form.\n\
          })\n\nrequest = urllib.request.Request(\n    f\"{API_URL}/domain-types/service/collections/all?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    -G  \\\n    --data-urlencode \"host_name=example.com\" \\\n  \
          \  --data-urlencode \"query={\"op\": \"not\", \"expr\": {\"op\": \"=\",\
          \ \"left\": \"hosts.name\", \"right\": \"example.com\"}}\" \\\n    \"$API_URL/domain-types/service/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/service/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    host_name==\"example.com\" \\\n    query==\"\
          {\"op\": \"not\", \"expr\": {\"op\": \"=\", \"left\": \"hosts.name\", \"\
          right\": \"example.com\"}}\" \\\n    --json"
  /domain-types/service/collections/services:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.service_discovery.show_services
      parameters:
      - description: Optionally the hostname for which a certain agent has been configured.
          If omitted you may only download this agent if you have the rights for all
          agents.
        in: query
        name: host_name
        required: true
        schema:
          example: example.com
          pattern: '[a-zA-Z][a-zA-Z0-9_-]+'
          type: string
      - description: 'The discovery state of the services. May be one of the following:
          active, active_ignored, clustered_ignored, clustered_monitored, clustered_undecided,
          clustered_vanished, custom, custom_ignored, ignored, legacy, legacy_ignored,
          manual, monitored, removed, undecided, vanished'
        in: query
        name: discovery_state
        required: true
        schema:
          example: monitored
          pattern: active|active_ignored|clustered_ignored|clustered_monitored|clustered_undecided|clustered_vanished|custom|custom_ignored|ignored|legacy|legacy_ignored|manual|monitored|removed|undecided|vanished
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          description: ''
          headers: {}
      summary: Show all services of specific state
      tags:
      - cmk.gui.plugins.openapi.endpoints.service_discovery
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/service/collections/services\"\
          ,\n    params={  # goes into query string\n        \"host_name\": \"example.com\"\
          ,  # (required) Optionally the hostname for which a certain agent has been\
          \ configured.\n        \"discovery_state\": \"monitored\",  # (required)\
          \ The discovery state of the services.\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.parse\nimport\
          \ urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL\
          \ = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\n\nUSERNAME = \"\
          automation\"\nPASSWORD = \"test123\"\n\nquery_string = urllib.parse.urlencode({\n\
          \    \"host_name\": \"example.com\",  # (required) Optionally the hostname\
          \ for which a certain agent has been configured.\n    \"discovery_state\"\
          : \"monitored\",  # (required) The discovery state of the services.\n})\n\
          \nrequest = urllib.request.Request(\n    f\"{API_URL}/domain-types/service/collections/services?{query_string}\"\
          ,\n    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    -G  \\\n    --data-urlencode \"host_name=example.com\" \\\n  \
          \  --data-urlencode \"discovery_state=monitored\"\n    \"$API_URL/domain-types/service/collections/services\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/service/collections/services\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    host_name==\"example.com\" \\\n    discovery_state==\"\
          monitored\" \\\n    --json"
  /objects/host/{host_name}/service/{service_hash}/action/move/{target_state}:
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.service_discovery.move_service
      parameters:
      - description: A hostname.
        in: path
        name: host_name
        required: true
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      - description: A name used as an identifier. Can be of arbitrary length
        in: path
        name: service_hash
        required: true
        schema:
          example: asoidjfo2jifa09
          pattern: '[a-zA-Z][a-zA-Z0-9_-]+'
          type: string
      - description: 'The discovery state of the services. May be one of the following:
          active, active_ignored, clustered_ignored, clustered_monitored, clustered_undecided,
          clustered_vanished, custom, custom_ignored, ignored, legacy, legacy_ignored,
          manual, monitored, removed, undecided, vanished'
        in: path
        name: target_state
        required: true
        schema:
          example: monitored
          pattern: active|active_ignored|clustered_ignored|clustered_monitored|clustered_undecided|clustered_vanished|custom|custom_ignored|ignored|legacy|legacy_ignored|manual|monitored|removed|undecided|vanished
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Update the phase of a service
      tags:
      - cmk.gui.plugins.openapi.endpoints.service_discovery
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/host/example.com/service/asoidjfo2jifa09/action/move/monitored\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host/example.com/service/asoidjfo2jifa09/action/move/monitored\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/host/example.com/service/asoidjfo2jifa09/action/move/monitored\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/host/example.com/service/asoidjfo2jifa09/action/move/monitored\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
  /objects/host/{host_name}/actions/discover-services/mode/{discover_mode}:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.service_discovery.execute
      parameters:
      - description: A hostname.
        in: path
        name: host_name
        required: true
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      - description: 'The mode of the discovery action. May be one of the following:
          tabula-rasa'
        in: path
        name: discover_mode
        required: true
        schema:
          example: tabula-rasa
          pattern: tabula-rasa
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Execute a service discovery of a host
      tags:
      - cmk.gui.plugins.openapi.endpoints.service_discovery
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/objects/host/example.com/actions/discover-services/mode/tabula-rasa\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/host/example.com/actions/discover-services/mode/tabula-rasa\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/host/example.com/actions/discover-services/mode/tabula-rasa\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/objects/host/example.com/actions/discover-services/mode/tabula-rasa\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
  /domain-types/service_group_config/collections/all:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.service_group_config.list_groups
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: ''
          headers: {}
      summary: Show all service groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.service_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/service_group_config/collections/all\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service_group_config/collections/all\",\n\
          \    method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/domain-types/service_group_config/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/service_group_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.service_group_config.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputServiceGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObject'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Create a service group
      tags:
      - cmk.gui.plugins.openapi.endpoints.service_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/service_group_config/collections/all\"\
          ,\n    json={\n        'name': 'windows',\n        'alias': 'Environment\
          \ Sensors'\n    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service_group_config/collections/all\",\n\
          \    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'name': 'windows',\n        'alias':\
          \ 'Environment Sensors'\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"alias\": \"Environment Sensors\",\n\
          \          \"name\": \"windows\"\n        }' \\\n    \"$API_URL/domain-types/service_group_config/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/service_group_config/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    name='windows' \\\n    alias='Environment Sensors'\
          \ \\\n    --json"
  /domain-types/service_group_config/actions/bulk-create/invoke:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.service_group_config.bulk_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkInputServiceGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: The operation was done successfully.
          headers: {}
      summary: Bulk create service groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.service_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/service_group_config/actions/bulk-create/invoke\"\
          ,\n    json={\n        'entries': [{\n            'name': 'environment',\n\
          \            'alias': 'Environment Sensors'\n        }]\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service_group_config/actions/bulk-create/invoke\"\
          ,\n    method=\"POST\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'entries': [{\n            'name':\
          \ 'environment',\n            'alias': 'Environment Sensors'\n        }]\n\
          \    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            {\n      \
          \        \"alias\": \"Environment Sensors\",\n              \"name\": \"\
          environment\"\n            }\n          ]\n        }' \\\n    \"$API_URL/domain-types/service_group_config/actions/bulk-create/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/service_group_config/actions/bulk-create/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='[{'name': 'environment', 'alias':\
          \ 'Environment Sensors'}]' \\\n    --json"
  /objects/service_group_config/{name}:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.service_group_config.delete
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Delete a service group
      tags:
      - cmk.gui.plugins.openapi.endpoints.service_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/service_group_config/pathname\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/service_group_config/pathname\",\n    method=\"\
          DELETE\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n        \"If-Match\"\
          : \"a20ceacf346041dc\",  # (required) The ETag of the object to be modified.\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\\n    \"$API_URL/objects/service_group_config/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/objects/service_group_config/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    --json"
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.service_group_config.show_group
      parameters:
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGroup'
          description: ''
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Show a service group
      tags:
      - cmk.gui.plugins.openapi.endpoints.service_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/service_group_config/pathname\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/service_group_config/pathname\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/service_group_config/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/service_group_config/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.service_group_config.update
      parameters:
      - description: The ETag of the object to be modified. This value comes from
          the ETag HTTP header whenever the object is displayed. To update this object
          the currently stored ETag needs to be the same as the one sent.
        in: header
        name: If-Match
        required: true
        schema:
          example: a20ceacf346041dc
          type: string
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputServiceGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGroup'
          description: The operation was done successfully.
          headers:
            ETag:
              allowEmptyValue: false
              description: The HTTP ETag header for this resource. It identifies the
                current state of the object and needs to be sent along in the "If-Match"
                request-header for subsequent modifications.
              example: a20ceacf346041dc
              required: false
              schema:
                pattern: '[0-9a-fA-F]{32}'
                type: string
      summary: Update a service group
      tags:
      - cmk.gui.plugins.openapi.endpoints.service_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/service_group_config/pathname\"\
          ,\n    headers={\n        \"If-Match\": \"a20ceacf346041dc\",  # (required)\
          \ The ETag of the object to be modified.\n    },\n    json={\n        'name':\
          \ 'windows',\n        'alias': 'Environment Sensors'\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/service_group_config/pathname\",\n    method=\"\
          PUT\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n        \"If-Match\": \"a20ceacf346041dc\"\
          ,  # (required) The ETag of the object to be modified.\n    },\n    data=json.dumps({\n\
          \        'name': 'windows',\n        'alias': 'Environment Sensors'\n  \
          \  }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    --header \"If-Match: a20ceacf346041dc\" \\ \\\n    --data '{\n\
          \          \"alias\": \"Environment Sensors\",\n          \"name\": \"windows\"\
          \n        }' \\\n    \"$API_URL/objects/service_group_config/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/service_group_config/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    'If-Match:a20ceacf346041dc' \\\n\n    name='windows'\
          \ \\\n    alias='Environment Sensors' \\\n    --json"
  /domain-types/service_group_config/actions/bulk-delete/invoke:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.service_group_config.bulk_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDeleteServiceGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Bulk delete service groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.service_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/domain-types/service_group_config/actions/bulk-delete/invoke\"\
          ,\n    json={'entries': ['windows', 'panels']},\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service_group_config/actions/bulk-delete/invoke\"\
          ,\n    method=\"DELETE\",\n    headers={\n        \"Authorization\": f\"\
          Bearer {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\"\
          ,\n    },\n    data=json.dumps({'entries': ['windows', 'panels']}).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            \"windows\"\
          ,\n            \"panels\"\n          ]\n        }' \\\n    \"$API_URL/domain-types/service_group_config/actions/bulk-delete/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/domain-types/service_group_config/actions/bulk-delete/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='['windows', 'panels']' \\\n    --json"
  /domain-types/service_group_config/actions/bulk-update/invoke:
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.service_group_config.bulk_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkUpdateServiceGroup'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: The operation was done successfully.
          headers: {}
      summary: Bulk update service groups
      tags:
      - cmk.gui.plugins.openapi.endpoints.service_group_config
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/domain-types/service_group_config/actions/bulk-update/invoke\"\
          ,\n    json={\n        'entries': [{\n            'name': 'windows',\n \
          \           'attributes': {\n                'name': 'windows updated',\n\
          \                'alias': 'Windows Servers'\n            }\n        }]\n\
          \    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/service_group_config/actions/bulk-update/invoke\"\
          ,\n    method=\"PUT\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n    data=json.dumps({\n        'entries': [{\n            'name':\
          \ 'windows',\n            'attributes': {\n                'name': 'windows\
          \ updated',\n                'alias': 'Windows Servers'\n            }\n\
          \        }]\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"entries\": [\n            {\n      \
          \        \"attributes\": {\n                \"alias\": \"Windows Servers\"\
          ,\n                \"name\": \"windows updated\"\n              },\n   \
          \           \"name\": \"windows\"\n            }\n          ]\n        }'\
          \ \\\n    \"$API_URL/domain-types/service_group_config/actions/bulk-update/invoke\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/domain-types/service_group_config/actions/bulk-update/invoke\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    entries='[{'name': 'windows', 'attributes':\
          \ {'name': 'windows updated', 'alias': 'Windows Servers'}}]' \\\n    --json"
  /domain-types/time_period/collections/all:
    post:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.time_period.create_timeperiod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTimePeriod'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Create a time period
      tags:
      - cmk.gui.plugins.openapi.endpoints.time_period
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/time_period/collections/all\"\
          ,\n    json={\n        'name': 'first',\n        'alias': 'alias',\n   \
          \     'active_time_ranges': [{\n            'day': 'monday',\n         \
          \   'time_ranges': [{\n                'start': '12:00',\n             \
          \   'end': '14:00'\n            }]\n        }],\n        'exceptions': [{\n\
          \            'date': '2020-01-01',\n            'time_ranges': [{\n    \
          \            'start': '14:00',\n                'end': '18:00'\n       \
          \     }]\n        }],\n        'exclude': ['alias']\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/time_period/collections/all\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n    },\n   \
          \ data=json.dumps({\n        'name': 'first',\n        'alias': 'alias',\n\
          \        'active_time_ranges': [{\n            'day': 'monday',\n      \
          \      'time_ranges': [{\n                'start': '12:00',\n          \
          \      'end': '14:00'\n            }]\n        }],\n        'exceptions':\
          \ [{\n            'date': '2020-01-01',\n            'time_ranges': [{\n\
          \                'start': '14:00',\n                'end': '18:00'\n   \
          \         }]\n        }],\n        'exclude': ['alias']\n    }).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"active_time_ranges\": [\n          \
          \  {\n              \"day\": \"monday\",\n              \"time_ranges\"\
          : [\n                {\n                  \"end\": \"14:00\",\n        \
          \          \"start\": \"12:00\"\n                }\n              ]\n  \
          \          }\n          ],\n          \"alias\": \"alias\",\n          \"\
          exceptions\": [\n            {\n              \"date\": \"2020-01-01\",\n\
          \              \"time_ranges\": [\n                {\n                 \
          \ \"end\": \"18:00\",\n                  \"start\": \"14:00\"\n        \
          \        }\n              ]\n            }\n          ],\n          \"exclude\"\
          : [\n            \"alias\"\n          ],\n          \"name\": \"first\"\n\
          \        }' \\\n    \"$API_URL/domain-types/time_period/collections/all\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/time_period/collections/all\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    name='first' \\\n    alias='alias' \\\n   \
          \ active_time_ranges='[{'day': 'monday', 'time_ranges': [{'start': '12:00',\
          \ 'end': '14:00'}]}]' \\\n    exceptions='[{'date': '2020-01-01', 'time_ranges':\
          \ [{'start': '14:00', 'end': '18:00'}]}]' \\\n    exclude='['alias']' \\\
          \n    --json"
  /objects/time_period/{name}:
    delete:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.time_period.delete
      parameters:
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Delete a time period
      tags:
      - cmk.gui.plugins.openapi.endpoints.time_period
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.delete(\n    f\"{API_URL}/objects/time_period/pathname\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/time_period/pathname\",\n    method=\"DELETE\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X DELETE \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/time_period/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp DELETE \"$API_URL/objects/time_period/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.time_period.show_time_period
      parameters:
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConcreteTimePeriod'
          description: ''
          headers: {}
      summary: Show a time period
      tags:
      - cmk.gui.plugins.openapi.endpoints.time_period
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/time_period/pathname\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/time_period/pathname\",\n    method=\"GET\",\n\
          \    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/objects/time_period/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/time_period/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
    put:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.time_period.update_timeperiod
      parameters:
      - description: A name used as an identifier. Can be of arbitrary (sensible)
          length.
        in: path
        name: name
        required: true
        schema:
          example: pathname
          pattern: '[a-zA-Z0-9][a-zA-Z0-9_-]+'
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimePeriod'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Update a time period
      tags:
      - cmk.gui.plugins.openapi.endpoints.time_period
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.put(\n    f\"{API_URL}/objects/time_period/pathname\"\
          ,\n    json={\n        'alias': 'alias',\n        'active_time_ranges':\
          \ {\n            'start': '12:00',\n            'end': '14:00'\n       \
          \ },\n        'exceptions': [{\n            'date': '2020-01-01',\n    \
          \        'time_ranges': [{\n                'start': '14:00',\n        \
          \        'end': '18:00'\n            }]\n        }]\n    },\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/time_period/pathname\",\n    method=\"PUT\",\n\
          \    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n    data=json.dumps({\n\
          \        'alias': 'alias',\n        'active_time_ranges': {\n          \
          \  'start': '12:00',\n            'end': '14:00'\n        },\n        'exceptions':\
          \ [{\n            'date': '2020-01-01',\n            'time_ranges': [{\n\
          \                'start': '14:00',\n                'end': '18:00'\n   \
          \         }]\n        }]\n    }).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X PUT \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"active_time_ranges\": {\n          \
          \  \"end\": \"14:00\",\n            \"start\": \"12:00\"\n          },\n\
          \          \"alias\": \"alias\",\n          \"exceptions\": [\n        \
          \    {\n              \"date\": \"2020-01-01\",\n              \"time_ranges\"\
          : [\n                {\n                  \"end\": \"18:00\",\n        \
          \          \"start\": \"14:00\"\n                }\n              ]\n  \
          \          }\n          ]\n        }' \\\n    \"$API_URL/objects/time_period/pathname\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp PUT \"$API_URL/objects/time_period/pathname\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    alias='alias' \\\n    active_time_ranges='{'start':\
          \ '12:00', 'end': '14:00'}' \\\n    exceptions='[{'date': '2020-01-01',\
          \ 'time_ranges': [{'start': '14:00', 'end': '18:00'}]}]' \\\n    --json"
  /version:
    get:
      description: ''
      operationId: cmk.gui.plugins.openapi.endpoints.version.search
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstalledVersions'
          description: ''
          headers: {}
      summary: Display some version information
      tags:
      - cmk.gui.plugins.openapi.endpoints.version
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/version\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/version\",\n    method=\"GET\",\n    headers={\n     \
          \   \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n        \"Accept\"\
          : \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/version\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/version\" \\\n    \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\" \\\n\
          \    --json"
  /domain-types/agent/actions/sign:
    post:
      description: ''
      operationId: cmk.gui.cee.plugins.openapi.endpoints.agent.sign_agents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentSign'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Sign all agents
      tags:
      - cmk.gui.cee.plugins.openapi.endpoints.agent
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/agent/actions/sign\"\
          ,\n    json={'key_id': 42, 'passphrase': 'sw0rdfish'},\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/sign\",\n    method=\"POST\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n    data=json.dumps({'key_id':\
          \ 42, 'passphrase': 'sw0rdfish'}).encode('utf-8'),\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"key_id\": 42,\n          \"passphrase\"\
          : \"sw0rdfish\"\n        }' \\\n    \"$API_URL/domain-types/agent/actions/sign\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/agent/actions/sign\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    key_id='42' \\\n    passphrase='sw0rdfish'\
          \ \\\n    --json"
  /collections/agent:
    get:
      description: ''
      operationId: cmk.gui.cee.plugins.openapi.endpoints.agent.list_agents
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainObjectCollection'
          description: ''
          headers: {}
      summary: Show all agents
      tags:
      - cmk.gui.cee.plugins.openapi.endpoints.agent
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/collections/agent\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/collections/agent\",\n    method=\"GET\",\n    headers={\n\
          \        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\",\n       \
          \ \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/collections/agent\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/collections/agent\" \\\n \
          \   \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept: application/json\"\
          \ \\\n    --json"
  /domain-types/agent/actions/bake:
    post:
      description: ''
      operationId: cmk.gui.cee.plugins.openapi.endpoints.agent.bake_all_agents
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResultScalar'
          description: The operation was done successfully.
          headers: {}
      summary: Bake all agents
      tags:
      - cmk.gui.cee.plugins.openapi.endpoints.agent
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/agent/actions/bake\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/bake\",\n    method=\"POST\"\
          ,\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/domain-types/agent/actions/bake\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/agent/actions/bake\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
  /domain-types/agent/actions/bake_and_sign:
    post:
      description: ''
      operationId: cmk.gui.cee.plugins.openapi.endpoints.agent.bake_and_sign_all_agents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentSign'
        required: true
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResultScalar'
          description: The operation was done successfully.
          headers: {}
      summary: Bake and sign all agents
      tags:
      - cmk.gui.cee.plugins.openapi.endpoints.agent
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.post(\n    f\"{API_URL}/domain-types/agent/actions/bake_and_sign\"\
          ,\n    json={'key_id': 42, 'passphrase': 'sw0rdfish'},\n)\nresp.raise_for_status()\n\
          data = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/bake_and_sign\",\n    method=\"\
          POST\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n    },\n   \
          \ data=json.dumps({'key_id': 42, 'passphrase': 'sw0rdfish'}).encode('utf-8'),\n\
          )\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X POST \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\ \\\n    --data '{\n          \"key_id\": 42,\n          \"passphrase\"\
          : \"sw0rdfish\"\n        }' \\\n    \"$API_URL/domain-types/agent/actions/bake_and_sign\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp POST \"$API_URL/domain-types/agent/actions/bake_and_sign\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    key_id='42' \\\n    passphrase='sw0rdfish'\
          \ \\\n    --json"
  /domain-types/agent/actions/automatic-deployment:
    get:
      description: ''
      operationId: cmk.gui.cee.plugins.openapi.endpoints.agent.automatic_deployment_status
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResultObject'
          description: ''
          headers: {}
      summary: Show the status of the automatic deployment system
      tags:
      - cmk.gui.cee.plugins.openapi.endpoints.agent
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/agent/actions/automatic-deployment\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/automatic-deployment\",\n \
          \   method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer\
          \ {USERNAME} {PASSWORD}\",\n        \"Accept\": \"application/json\",\n\
          \    },\n)\nresponse = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/domain-types/agent/actions/automatic-deployment\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/agent/actions/automatic-deployment\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
  /domain-types/agent/actions/baking_status:
    get:
      description: ''
      operationId: cmk.gui.cee.plugins.openapi.endpoints.agent.baking_status
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResultObject'
          description: ''
          headers: {}
      summary: Show the baking status
      tags:
      - cmk.gui.cee.plugins.openapi.endpoints.agent
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/domain-types/agent/actions/baking_status\"\
          ,\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.request\n\nHOST_NAME\
          \ = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/domain-types/agent/actions/baking_status\",\n    method=\"\
          GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME} {PASSWORD}\"\
          ,\n        \"Accept\": \"application/json\",\n    },\n)\nresponse = urllib.request.urlopen(request)\n\
          data = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    \"$API_URL/domain-types/agent/actions/baking_status\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/domain-types/agent/actions/baking_status\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    --json"
  /objects/agent/{agent_hash}:
    get:
      description: 'This may be done via the host or by the agent''s hash. In any
        case the operating system

        needs to be specified.'
      operationId: cmk.gui.cee.plugins.openapi.endpoints.agent.download_agent
      parameters:
      - description: A hostname.
        in: query
        name: host_name
        required: false
        schema:
          example: example.com
          pattern: '[-0-9a-zA-Z_.]+'
          type: string
      - description: The type of the operating system. May be one of aix_tgz, linux_deb,
          linux_rpm, linux_tgz, solaris_pkg, solaris_tgz, windows_msi
        in: query
        name: os_type
        required: false
        schema:
          example: linux_tgz
          pattern: aix_tgz|linux_deb|linux_rpm|linux_tgz|solaris_pkg|solaris_tgz|windows_msi
          type: string
      - description: The configuration hash representing an agent.
        in: path
        name: agent_hash
        required: true
        schema:
          example: 80e99ba3a66d4880
          pattern: '[a-fA-F0-9]{16}'
          type: string
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Any unsuccessful or unexpected result.
        '204':
          description: Operation done successfully. No further output.
          headers: {}
      summary: Download a single agent
      tags:
      - cmk.gui.cee.plugins.openapi.endpoints.agent
      x-codeSamples:
      - label: requests
        lang: python
        source: "#!/usr/bin/env python3\nimport requests\n\nHOST_NAME = \"localhost\"\
          \nSITE_NAME = \"heute\"\nAPI_URL = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\
          \n\nUSERNAME = \"automation\"\nPASSWORD = \"test123\"\n\nsession = requests.session()\n\
          session.headers['Authorization'] = f\"Bearer {USERNAME} {PASSWORD}\"\nsession.headers['Accept']\
          \ = 'application/json'\n\nresp = session.get(\n    f\"{API_URL}/objects/agent/80e99ba3a66d4880\"\
          ,\n    params={  # goes into query string\n        \"os_type\": \"linux_tgz\"\
          ,  # The type of the operating system.\n        \"host_name\": \"example.com\"\
          ,  # A hostname.\n    },\n)\nresp.raise_for_status()\ndata = resp.json()"
      - label: urllib
        lang: python
        source: "#!/usr/bin/env python3\nimport json\nimport urllib.parse\nimport\
          \ urllib.request\n\nHOST_NAME = \"localhost\"\nSITE_NAME = \"heute\"\nAPI_URL\
          \ = f\"http://{HOST_NAME}/{SITE_NAME}/check_mk/api/v0\"\n\nUSERNAME = \"\
          automation\"\nPASSWORD = \"test123\"\n\nquery_string = urllib.parse.urlencode({\n\
          \    \"os_type\": \"linux_tgz\",  # The type of the operating system.\n\
          \    \"host_name\": \"example.com\",  # A hostname.\n})\n\nrequest = urllib.request.Request(\n\
          \    f\"{API_URL}/objects/agent/80e99ba3a66d4880?{query_string}\",\n   \
          \ method=\"GET\",\n    headers={\n        \"Authorization\": f\"Bearer {USERNAME}\
          \ {PASSWORD}\",\n        \"Accept\": \"application/json\",\n    },\n)\n\
          response = urllib.request.urlopen(request)\ndata = json.loads(response.read())"
      - label: curl
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\ncurl \\\n    -X GET \\\n    --header \"Authorization:\
          \ Bearer $USERNAME $PASSWORD\" \\\n    --header \"Accept: application/json\"\
          \ \\\n    -G  \\\n    --data-urlencode \"os_type=linux_tgz\" \\\n    --data-urlencode\
          \ \"host_name=example.com\"\n    \"$API_URL/objects/agent/80e99ba3a66d4880\""
      - label: httpie
        lang: bash
        source: "#!/bin/bash\nHOST_NAME=\"localhost\"\nSITE_NAME=\"heute\"\nAPI_URL=\"\
          http://$HOST_NAME/$SITE_NAME/check_mk/api/v0\"\n\nUSERNAME=\"automation\"\
          \nPASSWORD=\"test123\"\n\nhttp GET \"$API_URL/objects/agent/80e99ba3a66d4880\"\
          \ \\\n    \"Authorization: Bearer $USERNAME $PASSWORD\" \\\n    \"Accept:\
          \ application/json\" \\\n    os_type==\"linux_tgz\" \\\n    host_name==\"\
          example.com\" \\\n    --json"
security:
- BearerAuth: []
tags:
- description: 'A problem occurs if a host is not UP or a service ist not OK.

    The acknowledgement of the problem is the indication that the reported issue is
    known and that

    somebody is attending to it.


    You can find an introduction to the acknowledgement of problems in the

    [Checkmk guide](https://checkmk.com/cms_basics_ackn.html).'
  name: cmk.gui.plugins.openapi.endpoints.acknowledgement
  x-displayName: Acknowledge problems
- description: 'When changes are activated, Checkmk transfers the current configuration
    status to the ongoing

    monitoring.


    Checkmk differentiates between the configuration environment in which you manage
    the hosts,

    services and settings, and the actual monitoring environment.


    Changes in the configuration - adding a new host, for example - will initially
    have no effect

    on the monitoring. Changes must first be activated, which will bring all changes
    that you have

    accumulated since the last activation as a "bundle" into the operational monitoring.


    You can find an introduction to the configuration of Checkmk including activation
    of changes in the

    [Checkmk guide](https://checkmk.com/cms_wato.html).'
  name: cmk.gui.plugins.openapi.endpoints.activate_changes
  x-displayName: Activate changes
- description: 'BI is used in Checkmk to setup a tree based on the status of hosts
    and services as branches and to

    extend with higher level nodes summarizing (or aggregating) the status of the
    contained objects.

    A BI pack defines the complete tree, consisting of BI aggregations.

    Within a BI aggregation a BI rule is used to define the node and its status.


    You can find an introduction to BI in the

    [Checkmk guide](https://checkmk.com/cms_bi.html).'
  name: cmk.gui.plugins.openapi.endpoints.bi
  x-displayName: Business intelligence (BI)
- description: 'Contact groups are the link between hosts and services on one side
    and users on the other.

    Every contact group represents a responsibility for a specific area in the IT
    landscape.


    You can find an introduction to user management including contact groups in the

    [Checkmk guide](https://checkmk.com/cms_wato_user.html).'
  name: cmk.gui.plugins.openapi.endpoints.contact_group_config
  x-displayName: Contact groups
- description: 'A (scheduled) downtime is a planned maintenance period.

    Hosts and services are handled differently by Checkmk during a downtime, for example,

    notifications are disabled.


    You can find an introduction to downtimes in the

    [Checkmk guide](https://checkmk.com/cms_basics_downtimes.html).'
  name: cmk.gui.plugins.openapi.endpoints.downtime
  x-displayName: Downtimes
- description: 'Folders are used in Checkmk to organize the hosts in a tree structure.

    The root (or main) folder is always existing, other folders can be created manually.

    If you build the tree cleverly you can use it to pass on attributes in a meaningful
    manner.


    You can find an introduction to hosts including folders in the

    [Checkmk guide](https://checkmk.com/cms_wato_hosts.html).'
  name: cmk.gui.plugins.openapi.endpoints.folder_config
  x-displayName: Folders
- description: 'The host status provides the host''s "health" information.


    You can find an introduction to basic monitoring principles including host status
    in the

    [Checkmk guide](https://checkmk.com/cms_monitoring_basics.html).'
  name: cmk.gui.plugins.openapi.endpoints.host
  x-displayName: Host status
- description: 'A host is typically a server, a virtual machine (VM), a network device,
    a measuring device with

    an IP connection (thermometer, hygrometer) or anything else with an IP address
    which is

    being monitored by Checkmk.

    However, there are also hosts without an IP address, such as Docker containers.


    A host belongs to a certain folder.


    You can find an introduction to hosts in the

    [Checkmk guide](https://checkmk.com/cms_wato_hosts.html).'
  name: cmk.gui.plugins.openapi.endpoints.host_config
  x-displayName: Hosts
- description: 'Host groups are, besides the folder structure, another way to organize
    hosts in Checkmk.

    By using a host group you can generate, among others, suitable views.


    You can find an introduction to hosts including host groups in the

    [Checkmk guide](https://checkmk.com/cms_wato_hosts.html).'
  name: cmk.gui.plugins.openapi.endpoints.host_group_config
  x-displayName: Host groups
- name: cmk.gui.plugins.openapi.endpoints.host_tag
  x-displayName: Host Tag Groups
- description: 'The passwords in question here are those that are stored in the CMK
    password store and are needed

    to authenticate certain checks, for example, when accessing certain databases.'
  name: cmk.gui.plugins.openapi.endpoints.password
  x-displayName: Passwords
- description: 'A service is a property of a certain host that is monitored by Checkmk.

    A service can be almost anything - for example, a file system, a process, a hardware
    sensor,

    a switchport - but it can also just be a specific metric like CPU usage or RAM
    usage.


    The service status provides the service''s "health" information.


    You can find an introduction to services in the

    [Checkmk guide](https://checkmk.com/cms_wato_services.html).'
  name: cmk.gui.plugins.openapi.endpoints.service
  x-displayName: Service status
- description: 'A service discovery is the automatic and reliable detection of all
    services to be monitored on

    a host.


    You can find an introduction to services including service discovery in the

    [Checkmk guide](https://checkmk.com/cms_wato_services.html).'
  name: cmk.gui.plugins.openapi.endpoints.service_discovery
  x-displayName: Service discovery
- description: 'Service groups are a way to organize services in Checkmk and to bring
    order to monitoring.

    By using a service group you can generate, among others, suitable views.

    For example, if you want to view all file system services or update services together,
    you can

    simply assemble service groups in a similar way as you can with host groups.


    You can find an introduction to services including service groups in the

    [Checkmk guide](https://checkmk.com/cms_wato_services.html).'
  name: cmk.gui.plugins.openapi.endpoints.service_group_config
  x-displayName: Service groups
- description: 'With time periods the monitoring with Checkmk can be adapted to recurring
    conditions, for

    example, to the working rhythms of humans.

    Rules can be defined in dependency of time periods, for example, to avoid senseless
    notifications.


    You can find an introduction to time periods in the

    [Checkmk guide](https://checkmk.com/cms_timeperiods.html).'
  name: cmk.gui.plugins.openapi.endpoints.time_period
  x-displayName: Time periods
- description: This folder collects individual endpoints not fitting into the other
    endpoint folders.
  name: cmk.gui.plugins.openapi.endpoints.version
  x-displayName: Miscellaneous
- description: 'An agent is a small program that is installed on a host in order for
    Checkmk to be able query

    data from the host.


    Servers running Windows, Linux or Unix can only be monitored by Checkmk if you
    install one

    of the Checkmk agents.


    Checkmk can update its agent automatically. In this way you can take advantage
    of the Agent

    Bakery function to apply individual configurations to hosts.


    You can find an introduction to agent deployment in the

    [Checkmk guide](https://checkmk.com/cms_agent_deployment.html).'
  name: cmk.gui.cee.plugins.openapi.endpoints.agent
  x-displayName: Agents
x-ignoredHeaderParameters:
- User-Agent
- X-Test-Header
x-logo:
  altText: Checkmk
  url: https://checkmk.com/bilder/brand-assets/checkmk_logo_main.png
x-tagGroups:
- name: Monitoring
  tags:
  - cmk.gui.plugins.openapi.endpoints.acknowledgement
  - cmk.gui.plugins.openapi.endpoints.downtime
  - cmk.gui.plugins.openapi.endpoints.host
  - cmk.gui.plugins.openapi.endpoints.service
- name: Setup
  tags:
  - cmk.gui.plugins.openapi.endpoints.activate_changes
  - cmk.gui.plugins.openapi.endpoints.bi
  - cmk.gui.plugins.openapi.endpoints.contact_group_config
  - cmk.gui.plugins.openapi.endpoints.folder_config
  - cmk.gui.plugins.openapi.endpoints.host_config
  - cmk.gui.plugins.openapi.endpoints.host_group_config
  - cmk.gui.plugins.openapi.endpoints.host_tag
  - cmk.gui.plugins.openapi.endpoints.password
  - cmk.gui.plugins.openapi.endpoints.service_discovery
  - cmk.gui.plugins.openapi.endpoints.service_group_config
  - cmk.gui.plugins.openapi.endpoints.time_period
  - cmk.gui.plugins.openapi.endpoints.version
  - cmk.gui.cee.plugins.openapi.endpoints.agent
- name: Endpoints
  tags: []
